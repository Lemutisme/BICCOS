Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  verify_onnxruntime_output: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  prepare_only: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: ablation_results/cifar_cnn_a_mix/biccos_only_cs.out
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: false
  output_file: out.pkl
  return_optimized_model: false
model:
  name: cnn_4layer
  path: models/sdp/cifar_cnn_a_mix.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: []
  onnx_vnnlib_joint_optimization_flags: none
  check_optimized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 0
  end: 10000
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 4096
  auto_enlarge_batch_size: true
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
    compare_crown_with_ibp: false
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
    max_time: 1.0
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.03
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    max_dim: 10000
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    unstable_neuron_threshold: 0
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
    topk_filter: 1.0
    sliding_window: -1
    extra_constraint: false
    refine_neuron_timeout_increasement: 0
    timeout_neuron_percentage: 0.3
    remaining_timeout_threshold: 1
    remove_unstable_neurons: false
    lp_solver: mip
    output_cut: false
bab:
  initial_max_domains: 1
  backing_up_max_domain: null
  max_domains: .inf
  decision_thresh: 0
  timeout: 200
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: false
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  tree_traversal: breadth_first
  cut:
    enabled: true
    cuts_path: /tmp/abcrown_cuts_21091
    implication: false
    bab_cut: true
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 0.99
    iteration: 200
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.05
    number_cuts: 500
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
    biccos:
      enabled: true
      auto_param: true
      constraint_strengthening: true
      recursively_strengthening: false
      merge_cut_enabled: false
      fast_inference_enabled: false
      drop_ratio: 0.5
      max_infer_iter: 40
      heuristic: neuron_influence_score
      save_cuts: false
      multi_tree_branching:
        enabled: false
        restore_best_tree: false
        keep_n_best_domains: 50
        target_batch_size: 200
        iterations: 5
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_clamp: false
      filter_batch_size: 10000
      filter_iterations: 25
      relu_only: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
      branching_point_node: ''
      branching_point_db: []
    input_split:
      enable_clip_domains: false
      split_hint: null
      reorder_bab: false
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      sb_primary_spec: null
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
      presplit_domains: null
      skip_getting_worst_domain: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: middle
  pgd_steps: 100
  pgd_restarts: 50
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  pgd_restart_when_stuck: false
  enable_mip_attack: false
  adv_saver: default_adv_saver
  adv_verifier: default_adv_verifier
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    enabled: auto
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false
  biccos_mip_sanity_check: false
  sanity_check: 0
  z_split_enabled: false

Experiments at Wed Oct 30 06:12:48 2024 on w23g0008.hpc.itc.rwth-aachen.de
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten(start_dim=1, end_dim=-1)
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
Parameters:
  0.weight: shape torch.Size([16, 3, 4, 4])
  0.bias: shape torch.Size([16])
  2.weight: shape torch.Size([32, 16, 4, 4])
  2.bias: shape torch.Size([32])
  5.weight: shape torch.Size([100, 2048])
  5.bias: shape torch.Size([100])
  7.weight: shape torch.Size([10, 100])
  7.bias: shape torch.Size([10])
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308715)
############################
Internal results will be saved to ablation_results/cifar_cnn_a_mix/biccos_only_cs.out.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.11777687, -20.78927612, -18.02422905, -16.54709816, -17.32392120,
         -17.34149742, -18.79637527, -18.06145287, -21.04090500, -20.22361183]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [627]; unstable size 627; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 186, 1, 627] with unstable size 185 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 627] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 627] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [185]; unstable size 185; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 185] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 185] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.61026287,  2.62210464,  0.73563445, -0.13727379,  0.45798957,
          1.21993041,  0.79421139,  3.18740439,  2.08740473]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.11777687, -20.78927612, -18.02422905, -16.54709816, -17.32392120,
         -17.34149742, -18.79637527, -18.06145287, -21.04090500, -20.22361183]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  2.57it/s]100%|██████████| 1/1 [00:00<00:00,  2.57it/s]
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/cuts/infered_cuts.py:406: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.tensor(history[3]),
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.07865334, -20.83610153, -17.93922615, -16.67629433, -16.99928856,
          -17.44987297, -18.79758453, -18.02240181, -20.89393997, -20.31464767]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.32299423]]], device='cuda:0')
number of violation:  0
Attack finished in 0.4021 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.908693313598633
alpha/beta optimization time: 3.7367146015167236
initial alpha-crown bounds: tensor([[ 1.64112234,  2.68515301,  0.75789940, -0.10659671,  0.47345608,
          1.26773882,  0.82366610,  3.22252393,  2.14372969]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.10659670829772949
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 194.60674166679382
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 194.60668969154358
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 194.6064851284027
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 194.60644030570984
Verifying property 3 with 1 instances.
##### Instance 0 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.10659671]], device='cuda:0') need to verify.
Model prediction is: tensor([-19.11777687, -20.78927612, -18.02422905, -16.54709816, -17.32392120,
        -17.34149742, -18.79637527, -18.06145287, -21.04090500, -20.22361183],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.10659671]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 627
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 182
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 835
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00013685226440429688
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10659646987915039
10 lb beta sum: 0.0, worst -0.10660076141357422
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.5655    transfer 0.0001    finalize 0.0012    func 0.5671    
Accumulated time: func 0.5671    prepare 0.0002    bound 0.5655    transfer 0.0001    finalize 0.0012    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 71] 
split level 3: [/input-12, 77] 
split level 4: [/input-12, 56] 
split level 5: [/input-12, 78] 
split level 6: [/input-12, 90] 
split level 7: [/input-12, 80] 
split level 8: [/input-8, 413] 
split level 9: [/input-8, 107] 
split level 10: [/input-8, 933] 
split level 11: [/input, 3195] 
split level 12: [/input-8, 41] 
split level 13: [/input-8, 1809] 
split level 14: [/input-8, 159] 
split level 15: [/input, 2932] 
split level 16: [/input-8, 39] 
split level 17: [/input-8, 151] 
split level 18: [/input, 2965] 
split level 19: [/input-8, 45] 
split level 20: [/input-8, 16] 
split level 21: [/input-8, 1231] 
split level 22: [/input-8, 1395] 
split level 23: [/input-8, 1386] 
split level 24: [/input-8, 1704] 
split level 25: [/input-8, 42] 
split level 26: [/input-8, 2008] 
split level 27: [/input-8, 46] 
split level 28: [/input-8, 364] 
split level 29: [/input-8, 776] 
split level 30: [/input-8, 49] 
split level 31: [/input-8, 1004] 
split level 32: [/input-8, 2034] 
split level 33: [/input, 3242] 
split level 34: [/input-8, 9] 
split level 35: [/input-8, 82] 
split level 36: [/input, 1198] 
split level 37: [/input-8, 1313] 
split level 38: [/input, 2909] 
split level 39: [/input-8, 1353] 
split level 40: [/input, 3205] 
split level 41: [/input, 92] 
split level 42: [/input-8, 1362] 
split level 43: [/input, 2274] 
split level 44: [/input-8, 1516] 
split level 45: [/input, 2915] 
split level 46: [/input-8, 678] 
split level 47: [/input-8, 926] 
split level 48: [/input, 1210] 
split level 49: [/input-8, 427] 
split level 50: [/input, 1102] 
split level 51: [/input-8, 1241] 
split level 52: [/input, 3187] 
split level 53: [/input, 2981] 
split level 54: [/input, 1710] 
split level 55: [/input, 3004] 
split level 56: [/input, 3226] 
split level 57: [/input, 1106] 
split level 58: [/input, 2785] 
split level 59: [/input-8, 1706] 
split level 60: [/input, 1173] 
split level 61: [/input, 2949] 
split level 62: [/input, 76] 
split level 63: [/input, 1123] 
split level 64: [/input, 1090] 
split level 65: [/input, 741] 
split level 66: [/input, 1157] 
split level 67: [/input-8, 14] 
split level 68: [/input-8, 1012] 
split level 69: [/input-8, 1220] 
split level 70: [/input, 3290] 
split level 71: [/input, 2380] 
split level 72: [/input-8, 1221] 
split level 73: [/input, 60] 
split level 74: [/input, 3934] 
split level 75: [/input-8, 1219] 
split level 76: [/input, 706] 
split level 77: [/input, 106] 
split level 78: [/input-8, 1223] 
split level 79: [/input, 1089] 
split level 80: [/input, 2758] 
split level 81: [/input, 2364] 
split level 82: [/input, 91] 
split level 83: [/input, 1179] 
split level 84: [/input, 1214] 
split level 85: [/input, 75] 
split level 86: [/input-8, 143] 
split level 87: [/input, 1181] 
split level 88: [/input-8, 1] 
split level 89: [/input-8, 27] 
split level 90: [/input-8, 1222] 
split level 91: [/input, 77] 
split level 92: [/input, 197] 
split level 93: [/input, 1461] 
split level 94: [/input, 61] 
split level 95: [/input-8, 1696] 
split level 96: [/input, 78] 
split level 97: [/input-8, 1524] 
split level 98: [/input-8, 19] 
split level 99: [/input, 3661] 
split level 100: [/input, 398] 
split level 101: [/input-8, 6] 
split level 102: [/input, 198] 
split level 103: [/input, 2258] 
split level 104: [/input, 3650] 
split level 105: [/input, 2940] 
split level 106: [/input-8, 1218] 
split level 107: [/input, 3218] 
split level 108: [/input-8, 15] 
split level 109: [/input, 980] 
split level 110: [/input-8, 641] 
split level 111: [/input, 724] 
split level 112: [/input, 59] 
split level 113: [/input, 62] 
split level 114: [/input-8, 1358] 
split level 115: [/input, 1227] 
split level 116: [/input, 1662] 
split level 117: [/input, 46] 
split level 118: [/input, 1204] 
split level 119: [/input, 50] 
split level 120: [/input, 2684] 
split level 121: [/input-8, 21] 
split level 122: [/input, 2429] 
split level 123: [/input, 156] 
split level 124: [/input, 451] 
split level 125: [/input, 1676] 
split level 126: [/input, 107] 
split level 127: [/input, 605] 
split level 128: [/input, 175] 
split level 129: [/input-8, 18] 
split level 130: [/input-8, 10] 
split level 131: [/input, 1741] 
split level 132: [/input-8, 1387] 
split level 133: [/input, 54] 
split level 134: [/input, 993] 
split level 135: [/input, 191] 
split level 136: [/input, 142] 
split level 137: [/input-8, 676] 
split level 138: [/input, 844] 
split level 139: [/input, 1967] 
split level 140: [/input, 44] 
split level 141: [/input, 2943] 
split level 142: [/input-8, 20] 
split level 143: [/input, 143] 
split level 144: [/input, 2893] 
split level 145: [/input-8, 430] 
split level 146: [/input, 996] 
split level 147: [/input, 1677] 
split level 148: [/input-8, 816] 
split level 149: [/input-8, 1399] 
split level 150: [/input, 150] 
split level 151: [/input, 123] 
split level 152: [/input, 1105] 
split level 153: [/input, 33] 
split level 154: [/input, 1230] 
split level 155: [/input-8, 13] 
split level 156: [/input-8, 327] 
split level 157: [/input, 2338] 
split level 158: [/input-8, 406] 
split level 159: [/input-8, 11] 
split level 160: [/input, 2668] 
split level 161: [/input-8, 1217] 
split level 162: [/input, 1107] 
split level 163: [/input, 2774] 
split level 164: [/input, 1135] 
split level 165: [/input, 828] 
split level 166: [/input, 30] 
split level 167: [/input-8, 928] 
split level 168: [/input, 1998] 
split level 169: [/input, 18] 
split level 170: [/input, 45] 
split level 171: [/input-8, 12] 
split level 172: [/input, 812] 
split level 173: [/input, 2528] 
split level 174: [/input-8, 28] 
split level 175: [/input-8, 996] 
split level 176: [/input, 1165] 
split level 177: [/input, 2349] 
split level 178: [/input, 141] 
split level 179: [/input, 3667] 
split level 180: [/input-12, 76] 
split level 181: [/input, 1404] 
split level 182: [/input, 557] 
split level 183: [/input, 1088] 
split level 184: [/input, 3906] 
split level 185: [/input, 1723] 
split level 186: [/input, 2894] 
split level 187: [/input, 3005] 
split level 188: [/input, 196] 
split level 189: [/input, 2957] 
split level 190: [/input, 2382] 
split level 191: [/input-8, 2006] 
split level 192: [/input, 2927] 
split level 193: [/input, 2354] 
split level 194: [/input, 2013] 
split level 195: [/input, 1668] 
split level 196: [/input, 3153] 
split level 197: [/input, 1120] 
split level 198: [/input, 574] 
split level 199: [/input, 1057] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10650897026062012
10 lb beta sum: 0.0, worst -0.10651326179504395
Time: prepare 0.0114    bound 0.1400    transfer 0.0034    finalize 0.0030    func 0.1603    
Accumulated time: func 0.7275    prepare 0.0219    bound 0.7055    transfer 0.0035    finalize 0.0042    
all_split False
======================Cut inference begins======================
max lb tensor(0.21214128) min lb tensor(-0.10650897)
Number of Verified Splits: 6 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.011784553527832031 
BICCOS Cumulative time: 0.011784553527832031
Preprocessing time: 0.01000070571899414 Inference time: 0.0012829303741455078 Add cuts time: 0.0001270771026611328 Cut analysis time: 0.00037384033203125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10045 (1), -0.10025 (1), -0.10016 (1), -0.10005 (1), -0.10003 (1), -0.09999 (1), -0.09989 (1), -0.09983 (1), -0.09962 (1), -0.09959 (1), -0.09948 (1), -0.09920 (1), -0.09912 (1), -0.09900 (1), -0.09891 (1), -0.09828 (1), -0.09740 (1), -0.09684 (1), -0.09682 (1), -0.09670 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5534    set_bounds 0.0083    solve 0.1604    add 0.0674    
Accumulated time: pickout 0.0004    decision 0.5534    set_bounds 0.0083    solve 0.1604    add 0.0674    
Current (lb-rhs): -0.10044598579406738
50 domains visited
Cumulative time: 1.4007179737091064

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 8] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-12, 8] [/input-12, 8] [/input-12, 71] [/input-12, 71] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 2: [/input-12, 77] [/input-12, 71] [/input-12, 77] [/input-12, 77] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
split level 3: [/input-12, 78] [/input-12, 77] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07849621772766113

all verified at 2th iter
Time: prepare 0.0075    bound 0.6892    transfer 0.0018    finalize 0.0025    func 0.7059    
Accumulated time: func 1.4333    prepare 0.0297    bound 1.3947    transfer 0.0052    finalize 0.0068    
all_split False
======================Cut inference begins======================
max lb tensor(0.15890741) min lb tensor(0.00238085)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.034700632095336914 
BICCOS Cumulative time: 0.046485185623168945
Preprocessing time: 0.011717081069946289 Inference time: 0.013873577117919922 Add cuts time: 0.008804082870483398 Cut analysis time: 0.0003058910369873047
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0220    set_bounds 0.0114    solve 0.7061    add 0.0158    
Accumulated time: pickout 0.0014    decision 0.5754    set_bounds 0.0197    solve 0.8665    add 0.0832    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 71] 
split level 3: [/input-12, 77] 
split level 4: [/input-12, 56] 
split level 5: [/input-12, 78] 
split level 6: [/input-12, 80] 
split level 7: [/input-8, 1521] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.13806772232055664

all verified at 0th iter
Time: prepare 0.0050    bound 0.0068    transfer 0.0009    finalize 0.0013    func 0.0156    
Accumulated time: func 1.4489    prepare 0.0351    bound 1.4015    transfer 0.0061    finalize 0.0081    
all_split False
======================Cut inference begins======================
max lb tensor(0.58238167) min lb tensor(0.13806772)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.007304191589355469 
BICCOS Cumulative time: 0.053789377212524414
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0201    solve 0.0156    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.5984    set_bounds 0.0398    solve 0.8822    add 0.0833    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 2.2693891525268555


Properties batch 4, size 1
Remaining timeout: 192.05150032043457
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 192.0514223575592
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 192.0513973236084
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 192.05122923851013
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 192.05120420455933
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 7.9489 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 1, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-44.31235123, -40.68947220, -48.64503479, -46.90632629, -49.08317184,
         -47.69258881, -48.09592056, -48.32584763, -47.35177994, -40.05373764]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [741]; unstable size 741; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 741] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 741] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 741] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 275] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.96754146, -2.43426371,  5.44694901,  3.77028179,  5.63727283,
          4.30855370,  4.34131289,  4.88805771,  4.53709602]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-44.31235123, -40.68947220, -48.64503479, -46.90632629, -49.08317184,
         -47.69258881, -48.09592056, -48.32584763, -47.35177994, -40.05373764]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-45.85587692, -41.07093430, -50.18118286, -48.44522476, -50.56359100,
          -49.27280426, -49.52397919, -49.99615860, -48.59192276, -41.68262482]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.61169052]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0913 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 2, vnnlib ID: 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-42.67306137, -41.18323898, -47.79383850, -46.54971695, -45.03081512,
         -47.60764313, -45.88621521, -47.68845749, -43.04441452, -44.22755051]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [952]; unstable size 952; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 377, 1, 952] with unstable size 376 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 40, 1, 952] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 952] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [376]; unstable size 376; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 40, 1, 376] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 376] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [39]; unstable size 39; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.79784393,  1.29578638,  0.24307394, -1.24824762,  0.95861626,
         -0.04439688,  0.56289339, -2.24027157, -0.23421645]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-42.67306137, -41.18323898, -47.79383850, -46.54971695, -45.03081512,
         -47.60764313, -45.88621521, -47.68845749, -43.04441452, -44.22755051]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.18it/s]100%|██████████| 1/1 [00:00<00:00,  8.17it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-41.66632080, -41.53499985, -46.78985977, -45.59428024, -44.04584885,
          -46.57774353, -45.10232544, -46.60207367, -42.47303391, -43.88616562],
         [-41.66632080, -41.53499985, -46.78985977, -45.59428024, -44.04584885,
          -46.57774353, -45.10232544, -46.60207367, -42.47303391, -43.88616562]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.13132095, 2.51084900, 3.56732559, 0.93803406, 2.35116577]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.1292 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: -1.2364649772644043
alpha/beta optimization time: 1.2886910438537598
initial alpha-crown bounds: tensor([[-2.55497026,  1.57856989,  0.48789454, -0.97686481,  1.22032356,
          0.18121815,  0.87324142, -2.00905132, -0.03682625]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 4 ; Worst class: (+ rhs) -2.5549702644348145
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.51193499565125
Verifying property 0 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.55497026]], device='cuda:0') need to verify.
Model prediction is: tensor([-42.67306137, -41.18323898, -47.79383850, -46.54971695, -45.03081512,
        -47.60764313, -45.88621521, -47.68845749, -43.04441452, -44.22755051],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.55497026]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 952
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 372
Node /15 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 1361
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010633468627929688
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 60] 
split level 1: [/input-12, 28] 
split level 2: [/input-12, 61] 
split level 3: [/input-12, 51] 
split level 4: [/input-12, 30] 
split level 5: [/input-12, 7] 
split level 6: [/input-12, 67] 
split level 7: [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3589396476745605
10 lb beta sum: 0.0, worst -1.3570489883422852
Time: prepare 0.0018    bound 0.1143    transfer 0.0006    finalize 0.0021    func 0.1205    
Accumulated time: func 0.1205    prepare 0.0022    bound 0.1143    transfer 0.0006    finalize 0.0021    
all_split False
======================Cut inference begins======================
max lb tensor(1.03241014) min lb tensor(-1.35614347)
Number of Verified Splits: 139 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.9244980812072754
10 lb beta sum: 0.0, worst -1.7633543014526367
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 4-6: 11
#cuts 7-9: 15
#cuts >= 20: 0
BICCOS time: 0.17610502243041992 
BICCOS Cumulative time: 0.17610502243041992
Preprocessing time: 0.007235527038574219 Inference time: 0.16350603103637695 Add cuts time: 0.003976106643676758 Cut analysis time: 0.0013873577117919922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.35614 (8), -1.34179 (8), -1.26250 (8), -1.26019 (8), -1.25103 (8), -1.22580 (8), -1.12615 (8), -1.11742 (8), -1.11139 (8), -1.08270 (8), -1.05589 (8), -1.01046 (8), -0.99691 (8), -0.98856 (8), -0.97176 (8), -0.97061 (8), -0.95859 (8), -0.93445 (8), -0.92283 (8), -0.89914 (8), 
Length of domains: 117
Time: pickout 0.0004    decision 0.0224    set_bounds 0.0162    solve 0.1207    add 0.0544    
Accumulated time: pickout 0.0004    decision 0.0224    set_bounds 0.0162    solve 0.1207    add 0.0544    
Current (lb-rhs): -1.3561434745788574
117 domains visited
Cumulative time: 0.3970000743865967

BaB round 2
batch: 117
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3151869773864746
10 lb beta sum: 0.0, worst -1.3144259452819824
Time: prepare 0.0035    bound 0.5807    transfer 0.0009    finalize 0.0014    func 0.5880    
Accumulated time: func 0.7086    prepare 0.0059    bound 0.6951    transfer 0.0014    finalize 0.0035    
all_split False
======================Cut inference begins======================
max lb tensor(0.60827065) min lb tensor(-1.31407547)
Number of Verified Splits: 114 of 234
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.5457744598388672
10 lb beta sum: 0.10992304235696793, worst -0.7227463722229004
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 71.
#cuts 4-6: 20
#cuts 7-9: 49
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.20587897300720215 
BICCOS Cumulative time: 0.38198399543762207
Preprocessing time: 0.0069696903228759766 Inference time: 0.18448734283447266 Add cuts time: 0.01067352294921875 Cut analysis time: 0.0037484169006347656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.31408 (9), -1.29990 (9), -1.22107 (9), -1.21859 (9), -1.20816 (9), -1.18326 (9), -1.08273 (9), -1.07381 (9), -1.06729 (9), -1.03967 (9), -1.01278 (9), -0.96933 (9), -0.95556 (9), -0.94523 (9), -0.93084 (9), -0.92882 (9), -0.91502 (9), -0.89283 (9), -0.88094 (9), -0.85416 (9), 
Length of domains: 120
Time: pickout 0.0019    decision 0.0188    set_bounds 0.0070    solve 0.5881    add 0.0012    
Accumulated time: pickout 0.0023    decision 0.0412    set_bounds 0.0231    solve 0.7088    add 0.0556    
Current (lb-rhs): -1.3140754699707031
237 domains visited
Cumulative time: 1.2212507724761963

BaB round 3
batch: 120
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.254000186920166
10 lb beta sum: 0.0, worst -1.2532382011413574
Time: prepare 0.0036    bound 0.1374    transfer 0.0008    finalize 0.0014    func 0.1448    
Accumulated time: func 0.8534    prepare 0.0096    bound 0.8325    transfer 0.0023    finalize 0.0049    
all_split False
======================Cut inference begins======================
max lb tensor(0.42666435) min lb tensor(-1.25297451)
Number of Verified Splits: 91 of 240
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.5787506103515625
10 lb beta sum: 0.17669953405857086, worst -0.8296222686767578
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 93.
#cuts 4-6: 20
#cuts 7-9: 67
#cuts 10-12: 6
#cuts >= 20: 0
BICCOS time: 0.19975543022155762 
BICCOS Cumulative time: 0.5817394256591797
Preprocessing time: 0.00719141960144043 Inference time: 0.17728614807128906 Add cuts time: 0.010222434997558594 Cut analysis time: 0.005055427551269531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.25297 (10), -1.23825 (10), -1.15852 (10), -1.15494 (10), -1.14554 (10), -1.12230 (10), -1.02032 (10), -1.01133 (10), -1.00311 (10), -0.97449 (10), -0.94859 (10), -0.90435 (10), -0.88962 (10), -0.88208 (10), -0.86326 (10), -0.86178 (10), -0.84809 (10), -0.82988 (10), -0.82795 (10), -0.81552 (10), 
Length of domains: 149
Time: pickout 0.0019    decision 0.0177    set_bounds 0.0070    solve 0.1449    add 0.0013    
Accumulated time: pickout 0.0042    decision 0.0589    set_bounds 0.0301    solve 0.8537    add 0.0568    
Current (lb-rhs): -1.252974510192871
386 domains visited
Cumulative time: 1.5948245525360107

BaB round 4
batch: 149
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.147618293762207
10 lb beta sum: 0.0, worst -1.1469097137451172
Time: prepare 0.0044    bound 0.1216    transfer 0.0010    finalize 0.0016    func 0.1306    
Accumulated time: func 0.9841    prepare 0.0142    bound 0.9542    transfer 0.0033    finalize 0.0065    
all_split False
======================Cut inference begins======================
max lb tensor(0.12250662) min lb tensor(-1.14667273)
Number of Verified Splits: 51 of 298
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 68.
#cuts 1-3: 2
#cuts 4-6: 38
#cuts 7-9: 26
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.024473190307617188 
BICCOS Cumulative time: 0.6062126159667969
Preprocessing time: 0.008821964263916016 Inference time: 0.005105733871459961 Add cuts time: 0.007437467575073242 Cut analysis time: 0.0031080245971679688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.14667 (11), -1.13194 (11), -1.13066 (11), -1.12028 (11), -1.05420 (11), -1.04830 (11), -1.03926 (11), -1.03347 (11), -1.02993 (11), -1.02349 (11), -1.01506 (11), -0.99725 (11), -0.91825 (11), -0.90800 (11), -0.89169 (11), -0.88499 (11), -0.88175 (11), -0.87859 (11), -0.86214 (11), -0.85402 (11), 
Length of domains: 247
Time: pickout 0.0020    decision 0.1553    set_bounds 0.0091    solve 0.1307    add 0.0019    
Accumulated time: pickout 0.0062    decision 0.2142    set_bounds 0.0392    solve 0.9844    add 0.0587    
Current (lb-rhs): -1.1466727256774902
633 domains visited
Cumulative time: 1.91908860206604

BaB round 5
batch: 247
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 70] [/input-12, 50] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 50] [/input-12, 70] [/input-12, 50] [/input-12, 70] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.099881649017334
10 lb beta sum: 0.0, worst -1.0994553565979004
Time: prepare 0.0070    bound 0.1340    transfer 0.0027    finalize 0.0025    func 0.1494    
Accumulated time: func 1.1334    prepare 0.0214    bound 1.0881    transfer 0.0060    finalize 0.0090    
all_split False
======================Cut inference begins======================
max lb tensor(0.10131836) min lb tensor(-1.09931040)
Number of Verified Splits: 103 of 494
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 74.
#cuts 1-3: 5
#cuts 4-6: 49
#cuts 7-9: 19
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.03569769859313965 
BICCOS Cumulative time: 0.6419103145599365
Preprocessing time: 0.014319181442260742 Inference time: 0.010776519775390625 Add cuts time: 0.007567882537841797 Cut analysis time: 0.0030341148376464844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.09931 (12), -1.08552 (12), -1.08401 (12), -1.07457 (12), -1.01591 (12), -0.99876 (12), -0.99808 (12), -0.99108 (12), -0.98300 (12), -0.98233 (12), -0.98016 (12), -0.97757 (12), -0.97629 (12), -0.96904 (12), -0.96042 (12), -0.95166 (12), -0.94135 (12), -0.92171 (12), -0.90955 (12), -0.89437 (12), 
Length of domains: 391
Time: pickout 0.0028    decision 0.0244    set_bounds 0.0140    solve 0.1495    add 0.0022    
Accumulated time: pickout 0.0090    decision 0.2386    set_bounds 0.0532    solve 1.1339    add 0.0609    
Current (lb-rhs): -1.0993103981018066
1024 domains visited
Cumulative time: 2.1494741439819336

BaB round 6
batch: 391
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0688133239746094
10 lb beta sum: 0.0028586979024112225, worst -1.0685839653015137
Time: prepare 0.0110    bound 0.1351    transfer 0.0041    finalize 0.0037    func 0.1596    
Accumulated time: func 1.2931    prepare 0.0327    bound 1.2232    transfer 0.0101    finalize 0.0127    
all_split False
======================Cut inference begins======================
max lb tensor(0.52951717) min lb tensor(-1.06850481)
Number of Verified Splits: 412 of 782
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 11
#cuts 4-6: 26
#cuts >= 20: 0
BICCOS time: 0.08103084564208984 
BICCOS Cumulative time: 0.7229411602020264
Preprocessing time: 0.02232980728149414 Inference time: 0.046404123306274414 Add cuts time: 0.010755062103271484 Cut analysis time: 0.0015418529510498047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.06850 (13), -1.05521 (13), -1.05322 (13), -1.04390 (13), -0.98176 (13), -0.96632 (13), -0.96596 (13), -0.96041 (13), -0.95017 (13), -0.94810 (13), -0.94764 (13), -0.94505 (13), -0.94212 (13), -0.93659 (13), -0.92623 (13), -0.92002 (13), -0.90599 (13), -0.88479 (13), -0.87279 (13), -0.85843 (13), 
Length of domains: 370
Time: pickout 0.0058    decision 0.0340    set_bounds 0.0221    solve 0.1598    add 0.0024    
Accumulated time: pickout 0.0148    decision 0.2725    set_bounds 0.0753    solve 1.2937    add 0.0633    
Current (lb-rhs): -1.068504810333252
1394 domains visited
Cumulative time: 2.4585773944854736

BaB round 7
batch: 370
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 50] [/input-12, 1] [/input-12, 50] [/input-12, 50] [/input-12, 1] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 1] [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0159921646118164
10 lb beta sum: 0.10462132096290588, worst -1.0156326293945312
Time: prepare 0.0104    bound 0.1373    transfer 0.0035    finalize 0.0037    func 0.1605    
Accumulated time: func 1.4536    prepare 0.0433    bound 1.3605    transfer 0.0136    finalize 0.0164    
all_split False
======================Cut inference begins======================
max lb tensor(0.49259681) min lb tensor(-1.01555300)
Number of Verified Splits: 339 of 740
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 12
#cuts 4-6: 20
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.06883788108825684 
BICCOS Cumulative time: 0.7917790412902832
Preprocessing time: 0.021218061447143555 Inference time: 0.04054522514343262 Add cuts time: 0.005802631378173828 Cut analysis time: 0.001271963119506836
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.01555 (14), -1.00192 (14), -1.00144 (14), -0.99060 (14), -0.95794 (14), -0.95052 (14), -0.94161 (14), -0.93288 (14), -0.92946 (14), -0.92819 (14), -0.92402 (14), -0.91291 (14), -0.91005 (14), -0.90655 (14), -0.89148 (14), -0.88923 (14), -0.88877 (14), -0.88499 (14), -0.88469 (14), -0.87438 (14), 
Length of domains: 401
Time: pickout 0.0049    decision 0.0321    set_bounds 0.0211    solve 0.1606    add 0.0021    
Accumulated time: pickout 0.0196    decision 0.3046    set_bounds 0.0964    solve 1.4543    add 0.0654    
Current (lb-rhs): -1.0155529975891113
1795 domains visited
Cumulative time: 2.751096248626709

BaB round 8
batch: 401
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 70] [/input-12, 1] [/input-12, 50] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 50] [/input-12, 1] [/input-12, 50] [/input-12, 74] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9894585609436035
10 lb beta sum: 0.07121553272008896, worst -0.9892482757568359
Time: prepare 0.0118    bound 0.1366    transfer 0.0028    finalize 0.0040    func 0.1605    
Accumulated time: func 1.6140    prepare 0.0552    bound 1.4971    transfer 0.0164    finalize 0.0204    
all_split False
======================Cut inference begins======================
max lb tensor(0.92810178) min lb tensor(-0.98921156)
Number of Verified Splits: 466 of 802
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 20
#cuts 4-6: 25
#cuts >= 20: 0
BICCOS time: 0.09125852584838867 
BICCOS Cumulative time: 0.8830375671386719
Preprocessing time: 0.02315831184387207 Inference time: 0.05873918533325195 Add cuts time: 0.008016347885131836 Cut analysis time: 0.0013446807861328125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.98921 (15), -0.97552 (15), -0.97495 (15), -0.96399 (15), -0.93005 (15), -0.92228 (15), -0.91338 (15), -0.90464 (15), -0.90147 (15), -0.90005 (15), -0.89636 (15), -0.88446 (15), -0.88155 (15), -0.88035 (15), -0.86488 (15), -0.86063 (15), -0.86002 (15), -0.85851 (15), -0.85611 (15), -0.84426 (15), 
Length of domains: 336
Time: pickout 0.0044    decision 0.0318    set_bounds 0.1529    solve 0.1606    add 0.0022    
Accumulated time: pickout 0.0241    decision 0.3364    set_bounds 0.2493    solve 1.6149    add 0.0676    
Current (lb-rhs): -0.9892115592956543
2131 domains visited
Cumulative time: 3.1979997158050537

BaB round 9
batch: 336
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 74] [/input-12, 94] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 1] [/input-12, 1] [/input-12, 50] [/input-12, 1] [/input-12, 70] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9522347450256348
10 lb beta sum: 0.08595544844865799, worst -0.951967716217041
Time: prepare 0.0096    bound 0.1354    transfer 0.0022    finalize 0.0042    func 0.1558    
Accumulated time: func 1.7698    prepare 0.0650    bound 1.6325    transfer 0.0186    finalize 0.0246    
all_split False
======================Cut inference begins======================
max lb tensor(0.35019845) min lb tensor(-0.95191431)
Number of Verified Splits: 140 of 672
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 14
#cuts 4-6: 23
#cuts >= 20: 0
BICCOS time: 0.04549694061279297 
BICCOS Cumulative time: 0.9285345077514648
Preprocessing time: 0.01978778839111328 Inference time: 0.02043890953063965 Add cuts time: 0.0040051937103271484 Cut analysis time: 0.0012650489807128906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.95191 (16), -0.93800 (16), -0.93700 (16), -0.92617 (16), -0.89131 (16), -0.88379 (16), -0.87463 (16), -0.86554 (16), -0.85699 (16), -0.85102 (16), -0.84557 (16), -0.84274 (16), -0.82900 (16), -0.82710 (16), -0.82615 (16), -0.82174 (16), -0.81981 (16), -0.81532 (16), -0.80896 (16), -0.80848 (16), 
Length of domains: 532
Time: pickout 0.0059    decision 0.0284    set_bounds 0.0199    solve 0.1559    add 0.0020    
Accumulated time: pickout 0.0299    decision 0.3648    set_bounds 0.2692    solve 1.7708    add 0.0697    
Current (lb-rhs): -0.9519143104553223
2663 domains visited
Cumulative time: 3.457181930541992

BaB round 10
batch: 532
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9062657356262207
10 lb beta sum: 0.04638467729091644, worst -0.9056892395019531
Time: prepare 0.0149    bound 0.1367    transfer 0.0037    finalize 0.0052    func 0.1675    
Accumulated time: func 1.9373    prepare 0.0801    bound 1.7692    transfer 0.0224    finalize 0.0298    
all_split False
======================Cut inference begins======================
max lb tensor(0.29911804) min lb tensor(-0.90560246)
Number of Verified Splits: 160 of 1064
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 7
#cuts 4-6: 14
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.05818629264831543 
BICCOS Cumulative time: 0.9867208003997803
Preprocessing time: 0.03180193901062012 Inference time: 0.02212977409362793 Add cuts time: 0.0033180713653564453 Cut analysis time: 0.0009365081787109375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.90560 (17), -0.89228 (17), -0.89115 (17), -0.88044 (17), -0.86341 (17), -0.84699 (17), -0.84590 (17), -0.84095 (17), -0.83778 (17), -0.82961 (17), -0.82890 (17), -0.82015 (17), -0.80977 (17), -0.80727 (17), -0.80247 (17), -0.79738 (17), -0.79237 (17), -0.78542 (17), -0.78505 (17), -0.78286 (17), 
Length of domains: 904
Time: pickout 0.0058    decision 0.0384    set_bounds 0.0312    solve 0.1683    add 0.0041    
Accumulated time: pickout 0.0357    decision 0.4032    set_bounds 0.3004    solve 1.9392    add 0.0737    
Current (lb-rhs): -0.9056024551391602
3567 domains visited
Cumulative time: 3.765458106994629

BaB round 11
batch: 904
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 75] [/input-8, 562] [/input-12, 75] [/input-12, 75] [/input-8, 562] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-8, 1499] [/input-12, 75] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8688812255859375
10 lb beta sum: 0.05811705067753792, worst -0.8686504364013672
Time: prepare 0.0303    bound 0.1556    transfer 0.0090    finalize 0.0107    func 0.2172    
Accumulated time: func 2.1544    prepare 0.1106    bound 1.9248    transfer 0.0313    finalize 0.0405    
all_split False
======================Cut inference begins======================
max lb tensor(0.34025955) min lb tensor(-0.86861706)
Number of Verified Splits: 309 of 1808
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 7
#cuts 4-6: 16
#cuts 7-9: 11
#cuts >= 20: 0
BICCOS time: 0.2185533046722412 
BICCOS Cumulative time: 1.2052741050720215
Preprocessing time: 0.05508232116699219 Inference time: 0.1562504768371582 Add cuts time: 0.005644559860229492 Cut analysis time: 0.0015759468078613281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.86862 (18), -0.86816 (18), -0.85555 (18), -0.85484 (18), -0.85459 (18), -0.85293 (18), -0.84322 (18), -0.84322 (18), -0.82574 (18), -0.82473 (18), -0.81157 (18), -0.81126 (18), -0.80968 (18), -0.80866 (18), -0.80347 (18), -0.80260 (18), -0.80176 (18), -0.80170 (18), -0.79124 (18), -0.79097 (18), 
Length of domains: 1499
Time: pickout 0.0129    decision 0.0598    set_bounds 0.0438    solve 0.2180    add 0.0197    
Accumulated time: pickout 0.0486    decision 0.4630    set_bounds 0.3442    solve 2.1572    add 0.0935    
Current (lb-rhs): -0.868617057800293
5066 domains visited
Cumulative time: 4.34332275390625

BaB round 12
batch: 1499
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1949] [/input-8, 1499] [/input-8, 562] [/input-8, 562] [/input-8, 562] [/input-12, 75] [/input-8, 1949] [/input-8, 1499] [/input-8, 562] [/input-12, 75] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8538632392883301
10 lb beta sum: 0.010621964931488037, worst -0.853550910949707
Time: prepare 0.0601    bound 0.2036    transfer 0.0187    finalize 0.0210    func 0.3235    
Accumulated time: func 2.4780    prepare 0.1709    bound 2.1284    transfer 0.0501    finalize 0.0614    
all_split False
======================Cut inference begins======================
max lb tensor(0.09141016) min lb tensor(-0.85344076)
Number of Verified Splits: 140 of 2998
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 47.
#cuts 1-3: 7
#cuts 4-6: 16
#cuts 7-9: 24
#cuts >= 20: 0
BICCOS time: 0.12519335746765137 
BICCOS Cumulative time: 1.3304674625396729
Preprocessing time: 0.09585046768188477 Inference time: 0.02193427085876465 Add cuts time: 0.005042314529418945 Cut analysis time: 0.002366304397583008
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.85344 (19), -0.85336 (19), -0.84532 (19), -0.84419 (19), -0.83963 (19), -0.83754 (19), -0.83308 (19), -0.83296 (19), -0.83069 (19), -0.82969 (19), -0.81631 (19), -0.81472 (19), -0.80655 (19), -0.80562 (19), -0.80285 (19), -0.80207 (19), -0.79855 (19), -0.79757 (19), -0.79429 (19), -0.79175 (19), 
Length of domains: 2858
Time: pickout 0.0189    decision 0.0907    set_bounds 0.0586    solve 0.3240    add 0.0785    
Accumulated time: pickout 0.0675    decision 0.5538    set_bounds 0.4028    solve 2.4812    add 0.1720    
Current (lb-rhs): -0.8534407615661621
7924 domains visited
Cumulative time: 5.052218675613403

BaB round 13
batch: 2858
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 562] [/input-8, 562] [/input-8, 1949] [/input-12, 75] [/input-8, 1949] [/input-8, 563] [/input-8, 1298] [/input-8, 1949] [/input-8, 1499] [/input-8, 562] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8336906433105469
10 lb beta sum: 0.00680554611608386, worst -0.8331046104431152
Time: prepare 0.1203    bound 1.6321    transfer 0.0289    finalize 0.0356    func 1.8538    
Accumulated time: func 4.3318    prepare 0.2915    bound 3.7605    transfer 0.0790    finalize 0.0970    
all_split False
======================Cut inference begins======================
max lb tensor(0.11054605) min lb tensor(-0.83274746)
Number of Verified Splits: 299 of 5716
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 81.
#cuts 1-3: 7
#cuts 4-6: 25
#cuts 7-9: 49
#cuts >= 20: 0
BICCOS time: 0.46552610397338867 
BICCOS Cumulative time: 1.7959935665130615
Preprocessing time: 0.17406415939331055 Inference time: 0.0506439208984375 Add cuts time: 0.23630571365356445 Cut analysis time: 0.004512310028076172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.83275 (20), -0.83253 (20), -0.83116 (20), -0.83017 (20), -0.83009 (20), -0.82859 (20), -0.81939 (20), -0.81906 (20), -0.81856 (20), -0.81786 (20), -0.80882 (20), -0.80813 (20), -0.80742 (20), -0.80633 (20), -0.80523 (20), -0.80510 (20), -0.79554 (20), -0.79536 (20), -0.79479 (20), -0.79440 (20), 
Length of domains: 5417
Time: pickout 0.0530    decision 0.1656    set_bounds 0.2740    solve 1.8557    add 0.0900    
Accumulated time: pickout 0.1206    decision 0.7194    set_bounds 0.6768    solve 4.3369    add 0.2620    
Current (lb-rhs): -0.8327474594116211
13341 domains visited
Cumulative time: 7.964468717575073

BaB round 14
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 975] [/input-8, 1949] [/input-8, 1499] [/input-8, 1949] [/input-8, 1885] [/input-8, 1949] [/input-8, 562] [/input-8, 1298] [/input-8, 1949] [/input-8, 1949] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8229084014892578
10 lb beta sum: 0.004007165785878897, worst -0.8227138519287109
Time: prepare 0.1675    bound 0.5269    transfer 0.0461    finalize 0.1929    func 0.9876    
Accumulated time: func 5.3194    prepare 0.4593    bound 4.2874    transfer 0.1251    finalize 0.2898    
all_split False
======================Cut inference begins======================
max lb tensor(0.10524727) min lb tensor(-0.82265043)
Number of Verified Splits: 484 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 139.
#cuts 1-3: 7
#cuts 4-6: 31
#cuts 7-9: 85
#cuts 10-12: 16
#cuts >= 20: 0
BICCOS time: 0.3849458694458008 
BICCOS Cumulative time: 2.1809394359588623
Preprocessing time: 0.2598683834075928 Inference time: 0.0884084701538086 Add cuts time: 0.029203414916992188 Cut analysis time: 0.0074656009674072266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.82265 (21), -0.82264 (21), -0.81939 (20), -0.81906 (20), -0.81515 (21), -0.81356 (21), -0.80969 (21), -0.80885 (21), -0.80371 (21), -0.80343 (21), -0.79725 (21), -0.79654 (21), -0.79372 (21), -0.79324 (21), -0.79242 (21), -0.79179 (21), -0.79142 (21), -0.79095 (20), -0.79027 (20), -0.79016 (21), 
Length of domains: 9029
Time: pickout 0.0564    decision 0.2297    set_bounds 0.2208    solve 0.9890    add 0.2859    
Accumulated time: pickout 0.1770    decision 0.9490    set_bounds 0.8976    solve 5.3259    add 0.5479    
Current (lb-rhs): -0.8226504325866699
21049 domains visited
current_vram/total_varm: 9.7GB/99.9GB, batch_size increase to 8192
Cumulative time: 10.150681495666504

BaB round 15
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1885] [/input-8, 563] [/input-8, 562] [/input-8, 1298] [/input-8, 563] [/input-8, 1949] [/input-8, 1315] [/input-8, 1949] [/input-8, 563] [/input-8, 1949] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8095054626464844
10 lb beta sum: 0.004096892662346363, worst -0.8094320297241211
Time: prepare 0.3441    bound 1.0094    transfer 0.0930    finalize 0.0947    func 1.6475    
Accumulated time: func 6.9669    prepare 0.8039    bound 5.2968    transfer 0.2181    finalize 0.3845    
all_split False
======================Cut inference begins======================
max lb tensor(0.24335161) min lb tensor(-0.80937576)
Number of Verified Splits: 988 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 224.
#cuts 1-3: 7
#cuts 4-6: 45
#cuts 7-9: 148
#cuts 10-12: 24
#cuts >= 20: 0
BICCOS time: 1.0207223892211914 
BICCOS Cumulative time: 3.2016618251800537
Preprocessing time: 0.7408981323242188 Inference time: 0.1873469352722168 Add cuts time: 0.07996344566345215 Cut analysis time: 0.012513875961303711
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.80938 (21), -0.80933 (21), -0.80873 (22), -0.80837 (22), -0.79654 (21), -0.79495 (22), -0.79474 (22), -0.79361 (22), -0.79179 (22), -0.78729 (22), -0.78725 (22), -0.78335 (22), -0.78281 (22), -0.78264 (22), -0.78180 (22), -0.78173 (22), -0.78141 (22), -0.78102 (21), -0.77939 (22), -0.77544 (21), 
Length of domains: 16233
Time: pickout 0.1126    decision 0.6543    set_bounds 0.6696    solve 1.6507    add 0.2173    
Accumulated time: pickout 0.2896    decision 1.6033    set_bounds 1.5672    solve 6.9765    add 0.7652    
Current (lb-rhs): -0.8093757629394531
36445 domains visited
current_vram/total_varm: 19.6GB/99.9GB, batch_size increase to 16384
Cumulative time: 14.514538049697876

BaB round 16
batch: 16233
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 562] [/input-8, 563] [/input-8, 563] [/input-8, 563] [/input-8, 1885] [/input-8, 1500] [/input-8, 1949] [/input-8, 563] [/input-8, 1498] [/input-8, 563] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8000688552856445
10 lb beta sum: 0.0053604901768267155, worst -0.7999320030212402
Time: prepare 0.6918    bound 2.0490    transfer 0.1877    finalize 0.4232    func 3.5566    
Accumulated time: func 10.5234    prepare 1.4961    bound 7.3458    transfer 0.4057    finalize 0.8078    
all_split False
======================Cut inference begins======================
max lb tensor(0.18255325) min lb tensor(-0.79981852)
Number of Verified Splits: 1997 of 32466
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 415.
#cuts 1-3: 7
#cuts 4-6: 65
#cuts 7-9: 248
#cuts 10-12: 95
#cuts >= 20: 0
BICCOS time: 1.8640363216400146 
BICCOS Cumulative time: 5.065698146820068
Preprocessing time: 1.2472217082977295 Inference time: 0.3728163242340088 Add cuts time: 0.21950960159301758 Cut analysis time: 0.02448868751525879
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.79982 (23), -0.79968 (23), -0.79548 (22), -0.79505 (22), -0.78626 (23), -0.78581 (23), -0.78383 (23), -0.78240 (22), -0.78235 (23), -0.78161 (23), -0.78116 (23), -0.77844 (23), -0.77828 (23), -0.77437 (23), -0.77405 (22), -0.77395 (22), -0.77338 (23), -0.77209 (23), -0.77182 (23), -0.76756 (23), 
Length of domains: 30469
Time: pickout 0.3903    decision 1.1675    set_bounds 1.1520    solve 3.5616    add 0.4218    
Accumulated time: pickout 0.6799    decision 2.7708    set_bounds 2.7192    solve 10.5381    add 1.1870    
Current (lb-rhs): -0.7998185157775879
66914 domains visited
Cumulative time: 23.12592649459839

BaB round 17
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 563] [/input-8, 1498] [/input-8, 1498] [/input-8, 1885] [/input-8, 1323] [/input-8, 1323] [/input-8, 1498] [/input-8, 563] [/input-8, 1596] [/input-8, 1950] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.788935661315918
10 lb beta sum: 0.005008678883314133, worst -0.7888751029968262
Time: prepare 0.6999    bound 2.3214    transfer 0.1900    finalize 0.1981    func 3.6218    
Accumulated time: func 14.1453    prepare 2.1963    bound 9.6671    transfer 0.5958    finalize 1.0059    
all_split False
======================Cut inference begins======================
max lb tensor(0.22254258) min lb tensor(-0.78885746)
Number of Verified Splits: 2106 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 579.
#cuts 1-3: 7
#cuts 4-6: 79
#cuts 7-9: 322
#cuts 10-12: 164
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 1.8334872722625732 
BICCOS Cumulative time: 6.899185419082642
Preprocessing time: 0.9860208034515381 Inference time: 0.4230382442474365 Add cuts time: 0.3888673782348633 Cut analysis time: 0.03556084632873535
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.78886 (24), -0.78871 (24), -0.78666 (23), -0.78161 (23), -0.78116 (23), -0.77893 (23), -0.77628 (24), -0.77574 (24), -0.77405 (22), -0.77382 (23), -0.77277 (24), -0.77260 (24), -0.77229 (24), -0.77123 (24), -0.76847 (23), -0.76773 (24), -0.76765 (23), -0.76756 (23), -0.76749 (24), -0.76657 (23), 
Length of domains: 44747
Time: pickout 0.2428    decision 1.7303    set_bounds 1.2731    solve 3.9876    add 0.6527    
Accumulated time: pickout 0.9227    decision 4.5011    set_bounds 3.9923    solve 14.5257    add 1.8397    
Current (lb-rhs): -0.7888574600219727
97576 domains visited
current_vram/total_varm: 38.2GB/99.9GB, batch_size increase to 32768
Cumulative time: 32.91215443611145

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1315] [/input-8, 1298] [/input-8, 563] [/input-8, 563] [/input-8, 1498] [/input-8, 1885] [/input-8, 427] [/input-8, 968] [/input-8, 1323] [/input-8, 1555] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7832036018371582
10 lb beta sum: 0.004980981349945068, worst -0.783055305480957
Time: prepare 1.3835    bound 10.0826    transfer 0.3745    finalize 0.9794    func 13.2418    
Accumulated time: func 27.3870    prepare 3.5803    bound 19.7497    transfer 0.9703    finalize 1.9853    
all_split False
======================Cut inference begins======================
max lb tensor(0.34232032) min lb tensor(-0.78299141)
Number of Verified Splits: 4201 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 579.
#cuts 1-3: 7
#cuts 4-6: 79
#cuts 7-9: 322
#cuts 10-12: 164
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 0.036744117736816406 
BICCOS Cumulative time: 6.935929536819458
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.78299 (25), -0.77917 (25), -0.77260 (24), -0.77092 (24), -0.77017 (24), -0.77008 (24), -0.76659 (25), -0.76637 (25), -0.76547 (25), -0.76512 (23), -0.76497 (25), -0.76429 (25), -0.76302 (24), -0.76145 (25), -0.76010 (24), -0.75921 (24), -0.75841 (25), -0.75767 (23), -0.75766 (25), -0.75766 (25), 
Length of domains: 73314
Time: pickout 0.5175    decision 3.7457    set_bounds 2.7670    solve 13.2511    add 20.4868    
Accumulated time: pickout 1.4402    decision 8.2468    set_bounds 6.7593    solve 27.7768    add 22.3265    
Current (lb-rhs): -0.7829914093017578
158911 domains visited
Cumulative time: 73.82190895080566

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 410] [/input-8, 1643] [/input-8, 1298] [/input-8, 1950] [/input-8, 411] [/input-8, 1643] [/input-8, 1498] [/input-8, 1950] [/input-8, 1555] [/input-8, 1548] 
cut re-enabled after branching node selection
0 lb beta sum: 0.002017861232161522, worst -0.7735328674316406
10 lb beta sum: 0.003360369009897113, worst -0.7733888626098633
Time: prepare 2.5017    bound 10.0948    transfer 0.3764    finalize 1.2200    func 14.6105    
Accumulated time: func 41.9975    prepare 6.0826    bound 29.8445    transfer 1.3467    finalize 3.2053    
all_split False
======================Cut inference begins======================
max lb tensor(0.24623287) min lb tensor(-0.77330399)
Number of Verified Splits: 3120 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 579.
#cuts 1-3: 7
#cuts 4-6: 79
#cuts 7-9: 322
#cuts 10-12: 164
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 0.04051947593688965 
BICCOS Cumulative time: 6.976449012756348
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.77917 (25), -0.77330 (26), -0.77092 (24), -0.77008 (24), -0.76659 (25), -0.76547 (25), -0.76497 (25), -0.76302 (24), -0.76241 (25), -0.76145 (25), -0.76001 (25), -0.75766 (25), -0.75766 (25), -0.75753 (24), -0.75623 (26), -0.75435 (24), -0.75392 (24), -0.75341 (25), -0.75276 (24), -0.75273 (26), 
Length of domains: 102962
Time: pickout 0.5119    decision 3.4588    set_bounds 2.6300    solve 14.6214    add 0.2947    
Accumulated time: pickout 1.9521    decision 11.7056    set_bounds 9.3893    solve 42.3982    add 22.6213    
Current (lb-rhs): -0.779172420501709
221327 domains visited
Cumulative time: 95.63548064231873

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1885] [/input-8, 1885] [/input-8, 1950] [/input-8, 1929] [/input-8, 1499] [/input-8, 1298] [/input-8, 1500] [/input-8, 1596] [/input-8, 563] [/input-8, 1581] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0027522570453584194, worst -0.7739920616149902
10 lb beta sum: 0.002958637196570635, worst -0.7738347053527832
Time: prepare 3.0411    bound 10.0873    transfer 0.3733    finalize 0.5930    func 14.5211    
Accumulated time: func 56.5186    prepare 9.1243    bound 39.9317    transfer 1.7200    finalize 3.7983    
all_split False
======================Cut inference begins======================
max lb tensor(0.12344911) min lb tensor(-0.77376795)
Number of Verified Splits: 3166 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 579.
#cuts 1-3: 7
#cuts 4-6: 79
#cuts 7-9: 322
#cuts 10-12: 164
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 0.03744959831237793 
BICCOS Cumulative time: 7.013898611068726
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.77377 (26), -0.77330 (26), -0.76428 (25), -0.76241 (25), -0.76109 (25), -0.76001 (25), -0.75909 (26), -0.75665 (26), -0.75665 (25), -0.75623 (26), -0.75435 (24), -0.75341 (25), -0.75276 (24), -0.75273 (26), -0.75196 (24), -0.75172 (26), -0.75167 (26), -0.75164 (26), -0.75074 (25), -0.75054 (25), 
Length of domains: 132564
Time: pickout 0.5775    decision 3.9128    set_bounds 2.9709    solve 14.5312    add 0.3322    
Accumulated time: pickout 2.5296    decision 15.6184    set_bounds 12.3602    solve 56.9294    add 22.9535    
Current (lb-rhs): -0.7737679481506348
283697 domains visited
Cumulative time: 118.12477278709412

BaB round 21
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1885] [/input-8, 1950] [/input-8, 1323] [/input-8, 403] [/input-8, 1500] [/input-8, 1323] [/input-8, 1499] [/input-8, 1596] [/input-8, 1885] [/input-8, 975] 
cut re-enabled after branching node selection
0 lb beta sum: 0.002560231601819396, worst -0.7465181350708008
10 lb beta sum: 0.0026753698475658894, worst -0.7460794448852539
Time: prepare 3.0668    bound 10.0930    transfer 0.4311    finalize 0.6026    func 14.6131    
Accumulated time: func 71.1317    prepare 12.1916    bound 50.0248    transfer 2.1512    finalize 4.4009    
all_split False
======================Cut inference begins======================
max lb tensor(0.13931793) min lb tensor(-0.74575996)
Number of Verified Splits: 3265 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 579.
#cuts 1-3: 7
#cuts 4-6: 79
#cuts 7-9: 322
#cuts 10-12: 164
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 0.03649020195007324 
BICCOS Cumulative time: 7.050388813018799
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.77377 (26), -0.77330 (26), -0.76428 (25), -0.76241 (25), -0.76109 (25), -0.76001 (25), -0.75909 (26), -0.75665 (26), -0.75665 (25), -0.75623 (26), -0.75273 (26), -0.75172 (26), -0.75167 (26), -0.75164 (26), -0.75006 (25), -0.74814 (26), -0.74757 (26), -0.74701 (26), -0.74677 (25), -0.74675 (25), 
Length of domains: 162067
Time: pickout 0.5123    decision 4.1956    set_bounds 3.0725    solve 14.6292    add 0.2345    
Accumulated time: pickout 3.0418    decision 19.8140    set_bounds 15.4327    solve 71.5587    add 23.1880    
Current (lb-rhs): -0.7737679481506348
345968 domains visited
Cumulative time: 140.99983620643616

BaB round 22
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 411] [/input-8, 1917] [/input-8, 968] [/input-8, 1323] [/input-8, 1315] [/input-8, 410] [/input-8, 532] [/input-8, 1315] [/input-8, 427] [/input-8, 1885] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0021493849344551563, worst -0.7575850486755371
10 lb beta sum: 0.00224126223474741, worst -0.7573118209838867
Time: prepare 3.0156    bound 10.0884    transfer 0.4804    finalize 0.6141    func 14.6283    
Accumulated time: func 85.7600    prepare 15.2076    bound 60.1131    transfer 2.6316    finalize 5.0150    
all_split False
======================Cut inference begins======================
max lb tensor(0.10750437) min lb tensor(-0.75716019)
Number of Verified Splits: 3546 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 579.
#cuts 1-3: 7
#cuts 4-6: 79
#cuts 7-9: 322
#cuts 10-12: 164
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 0.01187443733215332 
BICCOS Cumulative time: 7.062263250350952
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.77377 (26), -0.77330 (26), -0.76428 (25), -0.76109 (25), -0.75909 (26), -0.75716 (26), -0.75665 (26), -0.75665 (25), -0.75623 (26), -0.75419 (26), -0.75172 (26), -0.75164 (26), -0.74814 (26), -0.74757 (26), -0.74701 (26), -0.74677 (25), -0.74658 (26), -0.74620 (26), -0.74576 (25), -0.74472 (26), 
Length of domains: 191289
Time: pickout 0.5158    decision 4.3796    set_bounds 3.2877    solve 14.6502    add 0.2318    
Accumulated time: pickout 3.5576    decision 24.1936    set_bounds 18.7204    solve 86.2089    add 23.4198    
Current (lb-rhs): -0.7737679481506348
407958 domains visited
Cumulative time: 164.4004647731781

BaB round 23
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 410] [/input-8, 1298] [/input-8, 1950] [/input-8, 404] [/input-8, 1917] [/input-8, 968] [/input-8, 1500] [/input-8, 404] [/input-8, 1498] [/input-8, 1950] 
cut re-enabled after branching node selection
0 lb beta sum: 0.002227191813290119, worst -0.7568087577819824
10 lb beta sum: 0.002286787610501051, worst -0.7565255165100098
Time: prepare 3.0646    bound 10.0998    transfer 0.5275    finalize 0.6385    func 16.0230    
Accumulated time: func 101.7830    prepare 18.2733    bound 70.2129    transfer 3.1590    finalize 5.6535    
all_split False
======================Cut inference begins======================
max lb tensor(0.10047150) min lb tensor(-0.75646830)
Number of Verified Splits: 3497 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 579.
#cuts 1-3: 7
#cuts 4-6: 79
#cuts 7-9: 322
#cuts 10-12: 164
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 0.025844097137451172 
BICCOS Cumulative time: 7.088107347488403
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.76109 (25), -0.75716 (26), -0.75665 (26), -0.75647 (27), -0.75542 (27), -0.75445 (26), -0.75419 (26), -0.75172 (26), -0.75164 (26), -0.75159 (27), -0.74907 (27), -0.74827 (27), -0.74814 (26), -0.74757 (26), -0.74677 (25), -0.74633 (26), -0.74620 (26), -0.74576 (25), -0.74472 (26), -0.74453 (25), 
Length of domains: 220560
Time: pickout 0.5675    decision 4.4650    set_bounds 2.2781    solve 16.0472    add 0.5537    
Accumulated time: pickout 4.1251    decision 28.6586    set_bounds 20.9985    solve 102.2561    add 23.9735    
Current (lb-rhs): -0.7610931396484375
469997 domains visited
Cumulative time: 188.6552906036377

BaB round 24
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1950] [/input-8, 410] [/input-8, 433] [/input-8, 975] [/input-8, 1950] [/input-8, 979] [/input-8, 1950] [/input-8, 1323] [/input-8, 433] [/input-8, 274] 
cut re-enabled after branching node selection
0 lb beta sum: 0.001834282884374261, worst -0.7560205459594727
10 lb beta sum: 0.0018859568517655134, worst -0.7558717727661133
Time: prepare 3.0368    bound 10.0861    transfer 0.5849    finalize 0.6288    func 14.7580    
Accumulated time: func 116.5410    prepare 21.3110    bound 80.2990    transfer 3.7439    finalize 6.2823    
all_split False
======================Cut inference begins======================
max lb tensor(0.09736443) min lb tensor(-0.75574970)
Number of Verified Splits: 3741 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 579.
#cuts 1-3: 7
#cuts 4-6: 79
#cuts 7-9: 322
#cuts 10-12: 164
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 0.0338892936706543 
BICCOS Cumulative time: 7.121996641159058
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.75716 (26), -0.75647 (27), -0.75575 (26), -0.75542 (27), -0.75445 (26), -0.75419 (26), -0.75159 (27), -0.74907 (27), -0.74827 (27), -0.74633 (26), -0.74576 (25), -0.74472 (26), -0.74453 (25), -0.74360 (26), -0.74247 (25), -0.74245 (25), -0.74050 (26), -0.74038 (26), -0.73990 (26), -0.73987 (27), 
Length of domains: 249587
Time: pickout 0.6224    decision 3.5973    set_bounds 4.1812    solve 14.7734    add 0.6716    
Accumulated time: pickout 4.7475    decision 32.2559    set_bounds 25.1797    solve 117.0295    add 24.6451    
Current (lb-rhs): -0.7571601867675781
531792 domains visited
Time out!!!!!!!!
Result: unknown in 215.9523 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 3, vnnlib ID: 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-40.20902634, -42.08192444, -33.61428452, -34.78898621, -31.43919563,
         -33.71895599, -38.06064606, -31.01160622, -42.65842438, -40.92193222]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [681]; unstable size 681; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 270, 1, 681] with unstable size 269 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 33, 1, 681] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 681] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [269]; unstable size 269; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 33, 1, 269] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 269] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [32]; unstable size 32; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.37760305,  7.27868223, -0.27113080,  1.22979856,  0.03247023,
          4.06342411, -3.00179744,  8.30508804,  6.31938839]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-40.20902634, -42.08192444, -33.61428452, -34.78898621, -31.43919563,
         -33.71895599, -38.06064606, -31.01160622, -42.65842438, -40.92193222]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-40.20902634, -42.08192825, -33.61428452, -34.78899002, -31.43919563,
          -33.71895599, -38.06064987, -31.01160812, -42.65842819, -40.92193222],
         [-40.20902634, -42.08192825, -33.61428452, -34.78899002, -31.43919563,
          -33.71895599, -38.06064987, -31.01160812, -42.65842819, -40.92193222]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.17508888, -0.42758751]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]],


         [[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0854 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 4, vnnlib ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-37.87155151, -42.57205582, -34.48541641, -36.14360428, -34.99485016,
         -35.93713379, -35.86153412, -36.13122177, -41.40750504, -40.96428299]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [791]; unstable size 791; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 333, 1, 791] with unstable size 332 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 42, 1, 791] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 791] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [332]; unstable size 332; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 42, 1, 332] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 332] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [41]; unstable size 41; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.16964674,  2.90400314, -3.52606583, -1.44900036, -2.05810213,
         -2.36958194, -1.50774002,  2.73991728,  1.67474747]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-37.87155151, -42.57205582, -34.48541641, -36.14360428, -34.99485016,
         -35.93713379, -35.86153412, -36.13122177, -41.40750504, -40.96428299]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.87154770, -42.57205200, -34.48541641, -36.14360428, -34.99485016,
          -35.93713379, -35.86153412, -36.13122559, -41.40750122, -40.96428680],
         [-37.87154770, -42.57205200, -34.48541641, -36.14360428, -34.99485016,
          -35.93713379, -35.86153412, -36.13122559, -41.40750122, -40.96428680]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.87669754, -0.50943375,  1.14875412,  0.94228363,  0.86668396,
           1.13637543]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]],


         [[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]],


         [[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]],


         [[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]],


         [[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]],


         [[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1049 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 5, vnnlib ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.75101852, -26.45617485, -21.14494133, -19.46544647, -19.57247353,
         -19.67189217, -22.26992798, -22.66415977, -27.81179237, -26.08169556]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [871]; unstable size 871; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 325, 1, 871] with unstable size 324 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 45, 1, 871] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 871] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [324]; unstable size 324; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 45, 1, 324] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 324] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [44]; unstable size 44; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.22098160,  2.68742466, -1.80136228, -2.76245975, -2.88445711,
         -0.07729518,  0.06122780,  4.45166588,  2.54073286]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.75101852, -26.45617485, -21.14494133, -19.46544647, -19.57247353,
         -19.67189217, -22.26992798, -22.66415977, -27.81179237, -26.08169556]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.75101852, -26.45617485, -21.14494133, -19.46544456, -19.57247162,
          -19.67189217, -22.26992798, -22.66415977, -27.81179619, -26.08169174],
         [-21.75101852, -26.45617485, -21.14494133, -19.46544456, -19.57247162,
          -19.67189217, -22.26992798, -22.66415977, -27.81179619, -26.08169174]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.17854691,  1.57246971, -0.10702705,  0.09942055,  2.69745636]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]],


         [[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]],


         [[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]],


         [[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]],


         [[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1294 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 6, vnnlib ID: 6 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.46066666, -35.21967697, -41.59754944, -41.13504028, -42.29497147,
         -42.33016968, -43.02919769, -41.80327225, -36.79403687, -37.47748947]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [715]; unstable size 715; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 313, 1, 715] with unstable size 312 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 41, 1, 715] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 715] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [312]; unstable size 312; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 41, 1, 312] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 312] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [40]; unstable size 40; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.91827774,  2.60995936,  2.30767107,  3.38051987,  3.03193474,
          4.02420378,  1.53461671, -1.61302376, -0.97203338]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.46066666, -35.21967697, -41.59754944, -41.13504028, -42.29497147,
         -42.33016968, -43.02919769, -41.80327225, -36.79403687, -37.47748947]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.46067047, -35.21968079, -41.59754562, -41.13504791, -42.29497147,
          -42.33017349, -43.02919769, -41.80327606, -36.79403687, -37.47748947],
         [-35.46067047, -35.21968079, -41.59754562, -41.13504791, -42.29497147,
          -42.33017349, -43.02919769, -41.80327606, -36.79403687, -37.47748947]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.24098969,  1.33336639,  2.01681900]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.55079371,  0.96349210,  0.82063496,  ..., -0.19523799,
            -0.21111101, -0.16349196],
           [ 0.21746039,  0.55079371, -0.21111101,  ..., -0.29047608,
            -0.30634910, -0.29047608],
           [ 0.01111121, -0.36984116, -0.40158719,  ..., -0.49682540,
            -0.48095238, -0.43333322],
           ...,
           [-0.62380952, -0.63968253, -0.65555555,  ..., -0.56031746,
            -0.54444444, -0.41746020],
           [-0.60793650, -0.65555555, -0.63968253,  ..., -0.52857143,
            -0.48095238, -0.36984116],
           [-0.56031746, -0.60793650, -0.62380952,  ..., -0.65555555,
            -0.59206349, -0.52857143]],

          [[ 0.61191636,  1.07890511,  0.98228669,  ..., -0.01610294,
            -0.01610294,  0.03220624],
           [ 0.12882459,  0.56360716, -0.12882435,  ..., -0.40257636,
            -0.41867942, -0.40257636],
           [-0.27375188, -0.57971013, -0.54750401,  ..., -1.06280184,
            -1.04669881, -1.01449275],
           ...,
           [-0.46698871, -0.48309177, -0.49919480,  ..., -0.46698871,
            -0.49919480, -0.45088565],
           [-0.45088565, -0.49919480, -0.48309177,  ..., -0.41867942,
            -0.43478248, -0.40257636],
           [-0.43478248, -0.48309177, -0.49919480,  ..., -0.49919480,
            -0.46698871, -0.45088565]],

          [[ 0.87106466,  1.38081002,  1.27586246,  ...,  0.27136448,
             0.24137947,  0.28635699],
           [ 0.30134949,  0.78110963,  0.13643195,  ..., -0.23838064,
            -0.23838064, -0.22338814],
           [-0.17841063, -0.37331331, -0.34332830,  ..., -1.09295356,
            -1.04797614, -0.98800600],
           ...,
           [-1.16791618, -1.18290865, -1.19790113,  ..., -1.15292358,
            -1.18290865, -1.12293863],
           [-1.15292358, -1.19790113, -1.19790113,  ..., -1.13793111,
            -1.12293863, -1.07796109],
           [-1.15292358, -1.18290865, -1.19790113,  ..., -1.22788620,
            -1.19790113, -1.16791618]]],


         [[[ 0.55079371,  0.96349210,  0.82063496,  ..., -0.19523799,
            -0.21111101, -0.16349196],
           [ 0.21746039,  0.55079371, -0.21111101,  ..., -0.29047608,
            -0.30634910, -0.29047608],
           [ 0.01111121, -0.36984116, -0.40158719,  ..., -0.49682540,
            -0.48095238, -0.43333322],
           ...,
           [-0.62380952, -0.63968253, -0.65555555,  ..., -0.56031746,
            -0.54444444, -0.41746020],
           [-0.60793650, -0.65555555, -0.63968253,  ..., -0.52857143,
            -0.48095238, -0.36984116],
           [-0.56031746, -0.60793650, -0.62380952,  ..., -0.65555555,
            -0.59206349, -0.52857143]],

          [[ 0.61191636,  1.07890511,  0.98228669,  ..., -0.01610294,
            -0.01610294,  0.03220624],
           [ 0.12882459,  0.56360716, -0.12882435,  ..., -0.40257636,
            -0.41867942, -0.40257636],
           [-0.27375188, -0.57971013, -0.54750401,  ..., -1.06280184,
            -1.04669881, -1.01449275],
           ...,
           [-0.46698871, -0.48309177, -0.49919480,  ..., -0.46698871,
            -0.49919480, -0.45088565],
           [-0.45088565, -0.49919480, -0.48309177,  ..., -0.41867942,
            -0.43478248, -0.40257636],
           [-0.43478248, -0.48309177, -0.49919480,  ..., -0.49919480,
            -0.46698871, -0.45088565]],

          [[ 0.87106466,  1.38081002,  1.27586246,  ...,  0.27136448,
             0.24137947,  0.28635699],
           [ 0.30134949,  0.78110963,  0.13643195,  ..., -0.23838064,
            -0.23838064, -0.22338814],
           [-0.17841063, -0.37331331, -0.34332830,  ..., -1.09295356,
            -1.04797614, -0.98800600],
           ...,
           [-1.16791618, -1.18290865, -1.19790113,  ..., -1.15292358,
            -1.18290865, -1.12293863],
           [-1.15292358, -1.19790113, -1.19790113,  ..., -1.13793111,
            -1.12293863, -1.07796109],
           [-1.15292358, -1.18290865, -1.19790113,  ..., -1.22788620,
            -1.19790113, -1.16791618]]],


         [[[ 0.55079371,  0.96349210,  0.82063496,  ..., -0.19523799,
            -0.21111101, -0.16349196],
           [ 0.21746039,  0.55079371, -0.21111101,  ..., -0.29047608,
            -0.30634910, -0.29047608],
           [ 0.01111121, -0.36984116, -0.40158719,  ..., -0.49682540,
            -0.48095238, -0.43333322],
           ...,
           [-0.62380952, -0.63968253, -0.65555555,  ..., -0.56031746,
            -0.54444444, -0.41746020],
           [-0.60793650, -0.65555555, -0.63968253,  ..., -0.52857143,
            -0.48095238, -0.36984116],
           [-0.56031746, -0.60793650, -0.62380952,  ..., -0.65555555,
            -0.59206349, -0.52857143]],

          [[ 0.61191636,  1.07890511,  0.98228669,  ..., -0.01610294,
            -0.01610294,  0.03220624],
           [ 0.12882459,  0.56360716, -0.12882435,  ..., -0.40257636,
            -0.41867942, -0.40257636],
           [-0.27375188, -0.57971013, -0.54750401,  ..., -1.06280184,
            -1.04669881, -1.01449275],
           ...,
           [-0.46698871, -0.48309177, -0.49919480,  ..., -0.46698871,
            -0.49919480, -0.45088565],
           [-0.45088565, -0.49919480, -0.48309177,  ..., -0.41867942,
            -0.43478248, -0.40257636],
           [-0.43478248, -0.48309177, -0.49919480,  ..., -0.49919480,
            -0.46698871, -0.45088565]],

          [[ 0.87106466,  1.38081002,  1.27586246,  ...,  0.27136448,
             0.24137947,  0.28635699],
           [ 0.30134949,  0.78110963,  0.13643195,  ..., -0.23838064,
            -0.23838064, -0.22338814],
           [-0.17841063, -0.37331331, -0.34332830,  ..., -1.09295356,
            -1.04797614, -0.98800600],
           ...,
           [-1.16791618, -1.18290865, -1.19790113,  ..., -1.15292358,
            -1.18290865, -1.12293863],
           [-1.15292358, -1.19790113, -1.19790113,  ..., -1.13793111,
            -1.12293863, -1.07796109],
           [-1.15292358, -1.18290865, -1.19790113,  ..., -1.22788620,
            -1.19790113, -1.16791618]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0586 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 7, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.28493118, -37.40874863, -32.68411255, -32.73721313, -30.50329590,
         -33.81354523, -28.70816231, -34.64643478, -36.72904205, -37.17165756]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [685]; unstable size 685; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 372, 1, 685] with unstable size 371 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 51, 1, 685] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 685] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [371]; unstable size 371; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 51, 1, 371] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 371] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [50]; unstable size 50; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 50] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.85859203,  3.40287113, -0.23343039,  0.88925219, -1.56433153,
          1.30171084,  1.02152157,  3.18243837,  2.59064913]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.28493118, -37.40874863, -32.68411255, -32.73721313, -30.50329590,
         -33.81354523, -28.70816231, -34.64643478, -36.72904205, -37.17165756]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.31it/s]100%|██████████| 1/1 [00:00<00:00,  8.30it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.77662659, -37.28404999, -32.45604324, -32.52304459, -29.84637451,
          -33.46704865, -29.20481110, -33.77754211, -36.37368011, -36.87652206],
         [-35.77662659, -37.28404999, -32.45604324, -32.52304459, -29.84637451,
          -33.46704865, -29.20481110, -33.77754211, -36.37368011, -36.87652206]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[3.25123215, 0.64156342]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1236 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.755715370178223
alpha/beta optimization time: 1.2479732036590576
initial alpha-crown bounds: tensor([[ 3.11515999,  3.71506166,  0.02377319,  1.07765174, -1.35716677,
          1.56053293,  1.30444574,  3.45267248,  2.86358404]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -1.3571667671203613
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.5565094947815
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.55646896362305
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.55643820762634
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.55641555786133
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.55639624595642
Verifying property 4 with 1 instances.
##### Instance 7 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.35716677]], device='cuda:0') need to verify.
Model prediction is: tensor([-36.28493118, -37.40874863, -32.68411255, -32.73721313, -30.50329590,
        -33.81354523, -28.70816231, -34.64643478, -36.72904205, -37.17165756],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.35716677]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 685
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 367
Node /15 input 0: size torch.Size([100]) unstable 49
-----------------
# of unstable neurons: 1101
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00013518333435058594
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3571622371673584
10 lb beta sum: 0.0, worst -1.3571863174438477
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0541    transfer 0.0001    finalize 0.0001    func 0.0546    
Accumulated time: func 0.0546    prepare 0.0002    bound 0.0541    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] 
split level 1: [/input-12, 95] 
split level 2: [/input-12, 40] 
split level 3: [/input-12, 38] 
split level 4: [/input-12, 62] 
split level 5: [/input-12, 58] 
split level 6: [/input-12, 73] 
split level 7: [/input-12, 8] 
split level 8: [/input-12, 22] 
split level 9: [/input-12, 49] 
split level 10: [/input-12, 29] 
split level 11: [/input-12, 19] 
split level 12: [/input-12, 31] 
split level 13: [/input-12, 67] 
split level 14: [/input-12, 16] 
split level 15: [/input-12, 60] 
split level 16: [/input-12, 94] 
split level 17: [/input-8, 979] 
split level 18: [/input-12, 82] 
split level 19: [/input-8, 861] 
split level 20: [/input-12, 46] 
split level 21: [/input-12, 15] 
split level 22: [/input-8, 1507] 
split level 23: [/input-8, 1123] 
split level 24: [/input-8, 1492] 
split level 25: [/input-8, 1108] 
split level 26: [/input-8, 860] 
split level 27: [/input-8, 276] 
split level 28: [/input-12, 35] 
split level 29: [/input-8, 1491] 
split level 30: [/input, 4025] 
split level 31: [/input-8, 1619] 
split level 32: [/input-8, 285] 
split level 33: [/input-8, 268] 
split level 34: [/input-8, 1701] 
split level 35: [/input-8, 1481] 
split level 36: [/input, 4040] 
split level 37: [/input-8, 1530] 
split level 38: [/input-8, 1513] 
split level 39: [/input-8, 1512] 
split level 40: [/input-8, 541] 
split level 41: [/input-12, 92] 
split level 42: [/input-8, 1814] 
split level 43: [/input-8, 97] 
split level 44: [/input-8, 1498] 
split level 45: [/input-8, 842] 
split level 46: [/input-8, 1109] 
split level 47: [/input-8, 1524] 
split level 48: [/input-8, 461] 
split level 49: [/input-8, 1130] 
split level 50: [/input-8, 889] 
split level 51: [/input-8, 1525] 
split level 52: [/input-8, 1398] 
split level 53: [/input-8, 617] 
split level 54: [/input-8, 1393] 
split level 55: [/input-8, 420] 
split level 56: [/input-8, 542] 
split level 57: [/input-8, 1299] 
split level 58: [/input-8, 1730] 
split level 59: [/input-8, 1461] 
split level 60: [/input-8, 1252] 
split level 61: [/input-8, 1138] 
split level 62: [/input-12, 54] 
split level 63: [/input-8, 438] 
split level 64: [/input-8, 852] 
split level 65: [/input-8, 1501] 
split level 66: [/input, 2692] 
split level 67: [/input-12, 85] 
split level 68: [/input-8, 1753] 
split level 69: [/input-8, 977] 
split level 70: [/input-8, 1260] 
split level 71: [/input-8, 1236] 
split level 72: [/input-8, 1380] 
split level 73: [/input-8, 1746] 
split level 74: [/input-8, 532] 
split level 75: [/input-8, 1729] 
split level 76: [/input-8, 1517] 
split level 77: [/input, 2119] 
split level 78: [/input-8, 972] 
split level 79: [/input-8, 1875] 
split level 80: [/input-8, 1060] 
split level 81: [/input-8, 1932] 
split level 82: [/input-8, 982] 
split level 83: [/input-8, 1245] 
split level 84: [/input-8, 872] 
split level 85: [/input-8, 1532] 
split level 86: [/input-8, 358] 
split level 87: [/input-8, 1731] 
split level 88: [/input, 886] 
split level 89: [/input, 918] 
split level 90: [/input, 4041] 
split level 91: [/input-8, 1867] 
split level 92: [/input, 3161] 
split level 93: [/input-8, 1494] 
split level 94: [/input-8, 843] 
split level 95: [/input, 949] 
split level 96: [/input, 4071] 
split level 97: [/input-8, 609] 
split level 98: [/input-8, 1762] 
split level 99: [/input-8, 924] 
split level 100: [/input-8, 140] 
split level 101: [/input-8, 716] 
split level 102: [/input-8, 614] 
split level 103: [/input, 2918] 
split level 104: [/input, 726] 
split level 105: [/input-8, 1842] 
split level 106: [/input-8, 138] 
split level 107: [/input-8, 1994] 
split level 108: [/input-8, 971] 
split level 109: [/input-8, 1253] 
split level 110: [/input, 3162] 
split level 111: [/input, 727] 
split level 112: [/input-8, 470] 
split level 113: [/input-8, 891] 
split level 114: [/input-8, 1242] 
split level 115: [/input-8, 892] 
split level 116: [/input-8, 1763] 
split level 117: [/input, 3209] 
split level 118: [/input-8, 916] 
split level 119: [/input, 840] 
split level 120: [/input-8, 179] 
split level 121: [/input-8, 153] 
split level 122: [/input-8, 1773] 
split level 123: [/input, 711] 
split level 124: [/input-8, 890] 
split level 125: [/input-8, 1826] 
split level 126: [/input-8, 156] 
split level 127: [/input-8, 525] 
split level 128: [/input-8, 141] 
split level 129: [/input, 855] 
split level 130: [/input, 743] 
split level 131: [/input-8, 1618] 
split level 132: [/input-8, 1926] 
split level 133: [/input-8, 1635] 
split level 134: [/input, 681] 
split level 135: [/input-8, 169] 
split level 136: [/input-8, 606] 
split level 137: [/input-8, 180] 
split level 138: [/input, 682] 
split level 139: [/input-8, 1833] 
split level 140: [/input, 3206] 
split level 141: [/input-8, 291] 
split level 142: [/input-8, 1234] 
split level 143: [/input-8, 715] 
split level 144: [/input, 2678] 
split level 145: [/input, 1964] 
split level 146: [/input, 1963] 
split level 147: [/input, 4072] 
split level 148: [/input-8, 1628] 
split level 149: [/input-8, 1977] 
split level 150: [/input, 2152] 
split level 151: [/input-8, 953] 
split level 152: [/input-8, 1147] 
split level 153: [/input-8, 1938] 
split level 154: [/input, 916] 
split level 155: [/input, 660] 
split level 156: [/input, 3185] 
split level 157: [/input, 969] 
split level 158: [/input, 632] 
split level 159: [/input, 3195] 
split level 160: [/input, 3147] 
split level 161: [/input, 4037] 
split level 162: [/input-8, 112] 
split level 163: [/input-8, 467] 
split level 164: [/input, 3169] 
split level 165: [/input-8, 526] 
split level 166: [/input-8, 1934] 
split level 167: [/input-8, 524] 
split level 168: [/input, 1660] 
split level 169: [/input-8, 600] 
split level 170: [/input, 2091] 
split level 171: [/input-8, 1127] 
split level 172: [/input-8, 1518] 
split level 173: [/input-8, 93] 
split level 174: [/input-8, 1734] 
split level 175: [/input, 2610] 
split level 176: [/input, 4076] 
split level 177: [/input, 3753] 
split level 178: [/input, 2921] 
split level 179: [/input, 4029] 
split level 180: [/input-8, 1869] 
split level 181: [/input-8, 1486] 
split level 182: [/input-8, 1072] 
split level 183: [/input-8, 186] 
split level 184: [/input-8, 1056] 
split level 185: [/input-8, 416] 
split level 186: [/input, 2586] 
split level 187: [/input, 3004] 
split level 188: [/input-8, 1590] 
split level 189: [/input, 4019] 
split level 190: [/input, 676] 
split level 191: [/input, 2001] 
split level 192: [/input, 2650] 
split level 193: [/input-8, 912] 
split level 194: [/input, 1217] 
split level 195: [/input, 1676] 
split level 196: [/input-8, 645] 
split level 197: [/input, 3249] 
split level 198: [/input, 4077] 
split level 199: [/input, 3873] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.35685396194458
10 lb beta sum: 0.0, worst -1.3568456172943115
Time: prepare 0.0114    bound 0.0988    transfer 0.0030    finalize 0.0031    func 0.1189    
Accumulated time: func 0.1735    prepare 0.0225    bound 0.1530    transfer 0.0031    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(-0.39810658) min lb tensor(-1.35682225)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.01021265983581543 
BICCOS Cumulative time: 0.01021265983581543
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.31906 (1), -1.31873 (1), -1.31866 (1), -1.31770 (1), -1.31698 (1), -1.31662 (1), -1.31656 (1), -1.31490 (1), -1.31474 (1), -1.31263 (1), -1.31030 (1), -1.30867 (1), -1.30796 (1), -1.30639 (1), -1.29239 (1), -1.28813 (1), -1.28762 (1), -1.28122 (1), -1.28049 (1), -1.27967 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5225    set_bounds 0.0087    solve 0.1190    add 0.0902    
Accumulated time: pickout 0.0003    decision 0.5225    set_bounds 0.0087    solve 0.1190    add 0.0902    
Current (lb-rhs): -1.3190629482269287
50 domains visited
Cumulative time: 0.825446605682373

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 40] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
split level 1: [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 38] [/input-12, 40] [/input-12, 38] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] 
split level 2: [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 58] [/input-12, 38] [/input-12, 58] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 58] 
split level 3: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 8] [/input-12, 58] [/input-12, 8] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2309818267822266
10 lb beta sum: 0.0, worst -1.227018117904663
Time: prepare 0.0122    bound 0.0992    transfer 0.0013    finalize 0.0025    func 0.1178    
Accumulated time: func 0.2913    prepare 0.0350    bound 0.2522    transfer 0.0044    finalize 0.0057    
all_split False
======================Cut inference begins======================
max lb tensor(0.16003036) min lb tensor(-1.22670174)
Number of Verified Splits: 9 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.012698173522949219 
BICCOS Cumulative time: 0.02291083335876465
Preprocessing time: 0.011681556701660156 Inference time: 0.0004515647888183594 Add cuts time: 0.0001900196075439453 Cut analysis time: 0.0003750324249267578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.60886 (2), -0.60866 (2), -0.60479 (2), -0.60461 (2), -0.59870 (2), -0.59774 (2), -0.59020 (2), -0.58816 (2), -0.58638 (2), -0.57585 (2), -0.57355 (2), -0.57323 (2), -0.56493 (2), -0.56339 (2), -0.55918 (2), -0.55637 (2), -0.54954 (2), -0.54671 (2), -0.53210 (2), -0.52467 (2), 
Length of domains: 50
Time: pickout 0.0014    decision 0.0200    set_bounds 0.0160    solve 0.1179    add 0.0786    
Accumulated time: pickout 0.0017    decision 0.5426    set_bounds 0.0247    solve 0.2369    add 0.1688    
Current (lb-rhs): -0.6088614463806152
100 domains visited
Cumulative time: 1.0723323822021484

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] [/input-12, 88] [/input-12, 40] [/input-12, 88] [/input-12, 88] [/input-12, 40] [/input-12, 88] [/input-12, 40] [/input-12, 88] [/input-12, 88] 
split level 1: [/input-12, 38] [/input-12, 40] [/input-12, 38] [/input-12, 40] [/input-12, 40] [/input-12, 38] [/input-12, 40] [/input-12, 38] [/input-12, 38] [/input-12, 40] 
split level 2: [/input-12, 58] [/input-12, 38] [/input-12, 8] [/input-12, 58] [/input-12, 38] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 38] 
split level 3: [/input-12, 8] [/input-12, 8] [/input-12, 58] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5059077739715576
10 lb beta sum: 0.3502670228481293, worst -0.6679966449737549
Time: prepare 0.0056    bound 0.1167    transfer 0.0018    finalize 0.0023    func 0.1291    
Accumulated time: func 0.4204    prepare 0.0409    bound 0.3689    transfer 0.0062    finalize 0.0080    
all_split False
======================Cut inference begins======================
max lb tensor(0.45063686) min lb tensor(-0.40915555)
Number of Verified Splits: 167 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 11
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.024051189422607422 
BICCOS Cumulative time: 0.04696202278137207
Preprocessing time: 0.011584281921386719 Inference time: 0.008396625518798828 Add cuts time: 0.0034682750701904297 Cut analysis time: 0.0006020069122314453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17605 (3), -0.16890 (3), -0.16465 (3), -0.16261 (3), -0.14012 (3), -0.13470 (3), -0.12976 (3), -0.11814 (3), -0.10032 (3), -0.09938 (3), -0.09482 (3), -0.09422 (3), -0.09382 (3), -0.09180 (3), -0.09056 (3), -0.08486 (3), -0.08168 (3), -0.07904 (3), -0.07294 (3), -0.07179 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0195    set_bounds 0.0151    solve 0.1291    add 0.0947    
Accumulated time: pickout 0.0028    decision 0.5620    set_bounds 0.0398    solve 0.3660    add 0.2635    
Current (lb-rhs): -0.17604632675647736
150 domains visited
Cumulative time: 1.3560707569122314

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] [/input-12, 88] [/input-12, 40] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 95] [/input-12, 88] [/input-12, 95] [/input-12, 95] 
split level 1: [/input-12, 95] [/input-12, 40] [/input-12, 58] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 58] [/input-12, 40] [/input-12, 58] [/input-12, 58] 
split level 2: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 3: [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15937328338623047
10 lb beta sum: 0.32070377469062805, worst -0.29190289974212646
Time: prepare 0.0056    bound 0.1188    transfer 0.0013    finalize 0.0018    func 0.1301    
Accumulated time: func 0.5505    prepare 0.0468    bound 0.4878    transfer 0.0075    finalize 0.0099    
all_split False
======================Cut inference begins======================
max lb tensor(0.51198959) min lb tensor(-0.02284314)
Number of Verified Splits: 395 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 14
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.03982853889465332 
BICCOS Cumulative time: 0.08679056167602539
Preprocessing time: 0.011445045471191406 Inference time: 0.020313739776611328 Add cuts time: 0.007241010665893555 Cut analysis time: 0.0008287429809570312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02284 (4), -0.02182 (4), -0.00135 (4), -0.00128 (4), 
Length of domains: 4
Time: pickout 0.0009    decision 0.0195    set_bounds 0.0155    solve 0.1302    add 0.2977    
Accumulated time: pickout 0.0036    decision 0.5816    set_bounds 0.0554    solve 0.4962    add 0.5611    
Current (lb-rhs): -0.022843137383461
154 domains visited
Cumulative time: 1.8600192070007324

Shallow-BaB round 5
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] 
split level 1: [/input-12, 38] [/input-12, 38] [/input-12, 62] [/input-12, 38] 
split level 2: [/input-12, 62] [/input-12, 62] [/input-12, 58] [/input-12, 62] 
split level 3: [/input-12, 58] [/input-12, 8] [/input-12, 8] [/input-12, 58] 
split level 4: [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] 
split level 5: [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 8] 
split level 6: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 7: [/input-12, 19] [/input-12, 31] [/input-12, 31] [/input-12, 31] 
split level 8: [/input-12, 31] [/input-12, 19] [/input-12, 19] [/input-12, 19] 
split level 9: [/input-12, 67] [/input-12, 16] [/input-12, 16] [/input-12, 67] 
split level 10: [/input-12, 16] [/input-12, 67] [/input-12, 67] [/input-12, 16] 
split level 11: [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] 
split level 12: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
split level 13: [/input-8, 1492] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 14: [/input-12, 46] [/input-8, 1492] [/input-8, 1492] [/input-8, 1492] 
split level 15: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
split level 16: [/input-8, 1123] [/input-8, 1123] [/input-8, 1123] [/input-8, 1123] 
split level 17: [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-8, 1491] 
split level 18: [/input-8, 276] [/input-8, 97] [/input-8, 1491] [/input-12, 35] 
split level 19: [/input-8, 1491] [/input-8, 1461] [/input-8, 97] [/input-8, 276] 
split level 20: [/input-8, 97] [/input-8, 1491] [/input-8, 276] [/input-8, 97] 
split level 21: [/input-8, 1461] [/input-8, 276] [/input-8, 1461] [/input-8, 1461] 
split level 22: [/input-8, 268] [/input-8, 1498] [/input-8, 1498] [/input-8, 860] 
split level 23: [/input-8, 860] [/input-8, 1109] [/input-8, 268] [/input-8, 1498] 
split level 24: [/input-8, 541] [/input-8, 268] [/input-8, 541] [/input-8, 268] 
split level 25: [/input-8, 1498] [/input-12, 92] [/input-8, 1501] [/input-8, 1501] 
split level 26: [/input-8, 1109] [/input-8, 1501] [/input-8, 1109] [/input-8, 541] 
split level 27: [/input-8, 1501] [/input-8, 291] [/input-12, 92] [/input-12, 92] 
split level 28: [/input-12, 92] [/input-8, 1252] [/input-8, 1130] [/input-8, 542] 
split level 29: [/input-8, 542] [/input-8, 541] [/input-8, 542] [/input-8, 1109] 
split level 30: [/input-8, 179] [/input-8, 179] [/input-8, 1252] [/input-8, 1753] 
split level 31: [/input-8, 1932] [/input-8, 1932] [/input-8, 1932] [/input-8, 1932] 
split level 32: [/input-8, 1753] [/input-8, 1773] [/input-8, 1753] [/input-8, 1773] 
split level 33: [/input-8, 180] [/input-8, 180] [/input-8, 179] [/input-8, 291] 
split level 34: [/input-8, 291] [/input-8, 542] [/input-8, 291] [/input-8, 179] 
split level 35: [/input-8, 1773] [/input-8, 1753] [/input-8, 1773] [/input-8, 470] 
split level 36: [/input-8, 1100] [/input-8, 1763] [/input-8, 470] [/input-8, 1635] 
split level 37: [/input-8, 1763] [/input-8, 358] [/input-8, 1100] [/input-8, 358] 
split level 38: [/input-8, 1938] [/input-8, 470] [/input-8, 1763] [/input-8, 1938] 
split level 39: [/input-8, 358] [/input-8, 1635] [/input-8, 358] [/input-8, 1763] 
split level 40: [/input-8, 1833] [/input-8, 1100] [/input-8, 1635] [/input-8, 1100] 
split level 41: [/input-8, 1635] [/input-8, 1938] [/input-8, 1938] [/input-8, 1833] 
split level 42: [/input-8, 470] [/input-8, 1833] [/input-8, 1833] [/input-8, 188] 
split level 43: [/input-8, 188] [/input-8, 93] [/input-8, 188] [/input-8, 93] 
split level 44: [/input-8, 186] [/input-8, 188] [/input-8, 93] [/input-8, 78] 
split level 45: [/input-8, 93] [/input-8, 78] [/input-8, 78] [/input-8, 1810] 
split level 46: [/input-8, 78] [/input-8, 1016] [/input-8, 1810] [/input-8, 1333] 
split level 47: [/input-8, 1810] [/input-8, 1810] [/input-8, 1937] [/input-8, 761] 
split level 48: [/input-8, 761] [/input-8, 1937] [/input-8, 761] [/input-8, 1937] 
split level 49: [/input-8, 1937] [/input-8, 761] [/input-8, 1016] [/input-8, 1322] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14901256561279297
10 lb beta sum: 0.6355299949645996, worst -0.2879977822303772
Time: prepare 0.0071    bound 0.1196    transfer 0.0030    finalize 0.0021    func 0.1344    
Accumulated time: func 0.6849    prepare 0.0565    bound 0.6074    transfer 0.0105    finalize 0.0120    
all_split False
======================Cut inference begins======================
max lb tensor(0.61808395) min lb tensor(0.00225210)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 14
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.04392719268798828 
BICCOS Cumulative time: 0.13071775436401367
Preprocessing time: 0.011519193649291992 Inference time: 0.0202178955078125 Add cuts time: 0.011440277099609375 Cut analysis time: 0.0007498264312744141
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0009    decision 0.1439    set_bounds 0.0126    solve 0.1345    add 0.0321    
Accumulated time: pickout 0.0046    decision 0.7255    set_bounds 0.0680    solve 0.6307    add 0.5933    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
154 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] 
split level 1: [/input-12, 95] 
split level 2: [/input-12, 40] 
split level 3: [/input-12, 38] 
split level 4: [/input-12, 62] 
split level 5: [/input-12, 58] 
split level 6: [/input-12, 8] 
split level 7: [/input-12, 49] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3291585445404053
10 lb beta sum: 0.09512841701507568, worst -0.30632781982421875
Time: prepare 0.0036    bound 0.1146    transfer 0.0013    finalize 0.0013    func 0.1225    
Accumulated time: func 0.8074    prepare 0.0605    bound 0.7220    transfer 0.0118    finalize 0.0133    
all_split False
======================Cut inference begins======================
max lb tensor(0.96817756) min lb tensor(-0.30364776)
Number of Verified Splits: 232 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9121091365814209
10 lb beta sum: 0.8011226058006287, worst -0.8832470178604126
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 14
#cuts 4-6: 14
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.24245262145996094 
BICCOS Cumulative time: 0.3731703758239746
Preprocessing time: 0.006366729736328125 Inference time: 0.23288345336914062 Add cuts time: 0.0023169517517089844 Cut analysis time: 0.0008854866027832031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30365 (8), -0.30264 (8), -0.29503 (8), -0.28946 (8), -0.28781 (8), -0.28530 (8), -0.27996 (8), -0.27166 (8), -0.19095 (8), -0.18955 (8), -0.18020 (8), -0.17738 (8), -0.17638 (8), -0.17469 (8), -0.16806 (8), -0.16771 (8), -0.13400 (8), -0.12500 (8), -0.11715 (8), -0.11525 (8), 
Length of domains: 24
Time: pickout 0.0004    decision 0.0221    set_bounds 0.0169    solve 0.1225    add 0.0010    
Accumulated time: pickout 0.0049    decision 0.7476    set_bounds 0.0849    solve 0.7532    add 0.5943    
Current (lb-rhs): -0.3036477565765381
178 domains visited
Cumulative time: 2.637746572494507

BaB round 2
batch: 24
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 1: [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] 
split level 2: [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] 
split level 3: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17851638793945312
10 lb beta sum: 0.2867127060890198, worst -0.1588881015777588
Time: prepare 0.0053    bound 0.1206    transfer 0.0024    finalize 0.0020    func 0.1328    
Accumulated time: func 0.9401    prepare 0.0660    bound 0.8426    transfer 0.0141    finalize 0.0153    
all_split False
======================Cut inference begins======================
max lb tensor(0.21872705) min lb tensor(-0.15761566)
Number of Verified Splits: 312 of 384
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8501749038696289
10 lb beta sum: 0.7602066993713379, worst -0.7677686214447021
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 14
#cuts 4-6: 15
#cuts 7-9: 3
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.31319570541381836 
BICCOS Cumulative time: 0.686366081237793
Preprocessing time: 0.01108098030090332 Inference time: 0.29837536811828613 Add cuts time: 0.0026063919067382812 Cut analysis time: 0.001132965087890625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15762 (12), -0.15068 (12), -0.15056 (12), -0.14879 (12), -0.14676 (12), -0.14293 (12), -0.14129 (12), -0.13861 (12), -0.13582 (12), -0.13467 (12), -0.13397 (12), -0.13043 (12), -0.12868 (12), -0.12418 (12), -0.11917 (12), -0.11668 (12), -0.10772 (12), -0.10146 (12), -0.10093 (12), -0.09884 (12), 
Length of domains: 72
Time: pickout 0.0013    decision 0.0175    set_bounds 0.0221    solve 0.1329    add 0.0019    
Accumulated time: pickout 0.0062    decision 0.7651    set_bounds 0.1070    solve 0.8861    add 0.5962    
Current (lb-rhs): -0.15761566162109375
250 domains visited
Cumulative time: 3.1299004554748535

BaB round 3
batch: 72
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] 
split level 1: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13367271423339844
10 lb beta sum: 0.20826919376850128, worst -0.115142822265625
Time: prepare 0.0041    bound 0.1196    transfer 0.0017    finalize 0.0014    func 0.1289    
Accumulated time: func 1.0690    prepare 0.0704    bound 0.9622    transfer 0.0159    finalize 0.0168    
all_split False
======================Cut inference begins======================
max lb tensor(0.51232147) min lb tensor(-0.11435819)
Number of Verified Splits: 248 of 288
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 17
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.03766942024230957 
BICCOS Cumulative time: 0.7240355014801025
Preprocessing time: 0.00837254524230957 Inference time: 0.02621746063232422 Add cuts time: 0.002452373504638672 Cut analysis time: 0.0006270408630371094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11436 (14), -0.10857 (14), -0.10708 (14), -0.10634 (14), -0.10361 (14), -0.10077 (14), -0.09821 (14), -0.09290 (14), -0.09177 (14), -0.09162 (14), -0.09104 (14), -0.08780 (14), -0.08561 (14), -0.08181 (14), -0.07653 (14), -0.07416 (14), -0.06376 (14), -0.05568 (14), -0.05510 (14), -0.05445 (14), 
Length of domains: 40
Time: pickout 0.0021    decision 0.0175    set_bounds 0.0134    solve 0.1290    add 0.0017    
Accumulated time: pickout 0.0083    decision 0.7827    set_bounds 0.1204    solve 1.0151    add 0.5979    
Current (lb-rhs): -0.11435818672180176
290 domains visited
Cumulative time: 3.3326478004455566

BaB round 4
batch: 40
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 94] 
split level 1: [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-8, 979] 
split level 2: [/input-12, 15] [/input-8, 1491] [/input-12, 15] [/input-8, 1491] [/input-12, 15] [/input-8, 1491] [/input-12, 15] [/input-8, 1491] [/input-8, 979] [/input-8, 1491] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08212518692016602
10 lb beta sum: 0.11704716831445694, worst -0.07681870460510254
Time: prepare 0.0056    bound 0.1216    transfer 0.0021    finalize 0.0021    func 0.1336    
Accumulated time: func 1.2026    prepare 0.0763    bound 1.0838    transfer 0.0180    finalize 0.0189    
all_split False
======================Cut inference begins======================
max lb tensor(0.45667213) min lb tensor(-0.07653427)
Number of Verified Splits: 306 of 320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 19
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.04647469520568848 
BICCOS Cumulative time: 0.770510196685791
Preprocessing time: 0.00941610336303711 Inference time: 0.03508806228637695 Add cuts time: 0.0012156963348388672 Cut analysis time: 0.0007548332214355469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07653 (17), -0.06139 (17), -0.05904 (17), -0.05856 (17), -0.05741 (17), -0.05640 (17), -0.05410 (17), -0.05406 (17), -0.05068 (17), -0.04556 (17), -0.04548 (17), -0.03427 (17), -0.02969 (17), -0.01343 (17), 
Length of domains: 14
Time: pickout 0.0054    decision 0.0164    set_bounds 0.0193    solve 0.1337    add 0.0009    
Accumulated time: pickout 0.0137    decision 0.7991    set_bounds 0.1397    solve 1.1487    add 0.5988    
Current (lb-rhs): -0.07653427124023438
304 domains visited
Cumulative time: 3.557044267654419

BaB round 5
batch: 14
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] [/input-8, 979] [/input-8, 979] [/input-8, 979] [/input-8, 979] [/input-8, 979] [/input-12, 22] [/input-12, 46] [/input-8, 979] [/input-12, 46] 
split level 1: [/input-12, 15] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 15] [/input-12, 46] [/input-12, 15] 
split level 2: [/input-8, 1491] [/input-8, 1491] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-8, 1491] [/input-12, 15] [/input-8, 1701] 
split level 3: [/input-8, 1701] [/input-8, 1130] [/input-8, 1130] [/input-8, 1701] [/input-8, 1701] [/input-8, 1492] [/input-12, 35] [/input-8, 1701] [/input-8, 1130] [/input-8, 1491] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.01989293098449707
10 lb beta sum: 0.016735918819904327, worst -0.01434469223022461
Time: prepare 0.0045    bound 0.1358    transfer 0.0018    finalize 0.0013    func 0.1452    
Accumulated time: func 1.3478    prepare 0.0811    bound 1.2196    transfer 0.0198    finalize 0.0202    
all_split False
======================Cut inference begins======================
max lb tensor(0.28704643) min lb tensor(-0.01405621)
Number of Verified Splits: 216 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 20
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.03478503227233887 
BICCOS Cumulative time: 0.8052952289581299
Preprocessing time: 0.006628274917602539 Inference time: 0.025904417037963867 Add cuts time: 0.0003867149353027344 Cut analysis time: 0.0018656253814697266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01406 (21), -0.01403 (21), -0.00648 (21), -0.00634 (21), -0.00431 (21), -0.00419 (21), -0.00398 (21), -0.00075 (21), 
Length of domains: 8
Time: pickout 0.0015    decision 0.0164    set_bounds 0.0182    solve 0.1453    add 0.0115    
Accumulated time: pickout 0.0152    decision 0.8155    set_bounds 0.1579    solve 1.2940    add 0.6103    
Current (lb-rhs): -0.014056205749511719
312 domains visited
Cumulative time: 3.785856246948242

BaB round 6
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] 
split level 1: [/input-12, 35] [/input-8, 1123] [/input-8, 1123] [/input-12, 35] [/input-12, 35] [/input-8, 1492] [/input-8, 1492] [/input-12, 35] 
split level 2: [/input-8, 1109] [/input-8, 1492] [/input-8, 1492] [/input-8, 1109] [/input-8, 1109] [/input-8, 1130] [/input-8, 1130] [/input-8, 1109] 
split level 3: [/input-8, 1130] [/input-12, 35] [/input-12, 35] [/input-8, 1130] [/input-8, 1130] [/input-8, 1701] [/input-8, 1701] [/input-8, 1130] 
split level 4: [/input-8, 1498] [/input-8, 1498] [/input-8, 1498] [/input-8, 1498] [/input-8, 1498] [/input-8, 1498] [/input-8, 1498] [/input-8, 1498] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.04178261756896973

all verified at 0th iter
Time: prepare 0.0051    bound 0.0050    transfer 0.0008    finalize 0.0012    func 0.0138    
Accumulated time: func 1.3616    prepare 0.0865    bound 1.2246    transfer 0.0206    finalize 0.0214    
all_split False
======================Cut inference begins======================
max lb tensor(0.18320990) min lb tensor(0.04178262)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 26.
#cuts 1-3: 20
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.007432460784912109 
BICCOS Cumulative time: 0.812727689743042
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0181    set_bounds 0.0234    solve 0.0139    add 0.0003    
Accumulated time: pickout 0.0162    decision 0.8336    set_bounds 0.1813    solve 1.3079    add 0.6106    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
312 domains visited
Cumulative time: 3.850950241088867


Properties batch 5, size 1
Remaining timeout: 194.4703769683838
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 194.46976327896118
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 194.46973657608032
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 194.46971607208252
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 5.5304 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 8, vnnlib ID: 8 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-44.19808578, -49.61710739, -47.48715973, -49.99370575, -50.71630096,
         -52.35923767, -54.17656326, -52.92412186, -48.80819321, -50.48752975]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1297]; unstable size 1297; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 243, 1, 1297] with unstable size 242 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 1297] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1297] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [242]; unstable size 242; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 242] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 242] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.47399187, 1.64370978, 3.90862155, 4.08411598, 5.94001293, 7.73239803,
         6.07401848, 2.03283143, 4.47011280]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0672 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 9, vnnlib ID: 9 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.50173569, -39.60761261, -33.32324600, -31.69370461, -34.41902161,
         -32.10272217, -34.09428787, -36.32070541, -34.12242508, -38.46004105]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [737]; unstable size 737; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 313, 1, 737] with unstable size 312 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 38, 1, 737] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 737] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [312]; unstable size 312; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 38, 1, 312] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 312] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [37]; unstable size 37; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.29321313,  2.87929058, -2.07376337, -1.57842565, -0.21100593,
         -0.66596317,  1.48764420, -1.53901720,  1.60333848]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.50173569, -39.60761261, -33.32324600, -31.69370461, -34.41902161,
         -32.10272217, -34.09428787, -36.32070541, -34.12242508, -38.46004105]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-36.50173569, -39.60761261, -33.32324219, -31.69370079, -34.41902161,
          -32.10271835, -34.09428406, -36.32070160, -34.12242126, -38.46004105],
         [-36.50173569, -39.60761261, -33.32324219, -31.69370079, -34.41902161,
          -32.10271835, -34.09428406, -36.32070160, -34.12242126, -38.46004105]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.22052383, -0.40901756,  2.31630325,  1.99156570,  2.01970291]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0900 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 10, vnnlib ID: 10 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-41.74797821, -45.38421249, -39.23302460, -40.53434753, -43.54810715,
         -39.39486694, -45.12755966, -39.92399216, -43.81664658, -45.07825089]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [582]; unstable size 582; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 162, 1, 582] with unstable size 161 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 582] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 582] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [161]; unstable size 161; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 161] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 161] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.56224847,  4.32695770, -2.21478820, -0.59492898,  2.35187626,
         -1.89289832,  3.69853640,  2.45093560,  3.79837084]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-41.74797821, -45.38421249, -39.23302460, -40.53434753, -43.54810715,
         -39.39486694, -45.12755966, -39.92399216, -43.81664658, -45.07825089]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-41.74797440, -45.38420868, -39.23302841, -40.53434372, -43.54810333,
          -39.39486694, -45.12756348, -39.92399216, -43.81665039, -45.07824707],
         [-41.74797440, -45.38420868, -39.23302841, -40.53434372, -43.54810333,
          -39.39486694, -45.12756348, -39.92399216, -43.81665039, -45.07824707]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.69096375,  0.61035156, -0.52912521]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1016 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 11, vnnlib ID: 11 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.20912361, -33.06259918, -22.92160225, -27.84844017, -24.29616356,
         -28.63853264, -27.08451080, -27.91048813, -30.74532509, -31.43581009]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [816]; unstable size 816; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 313, 1, 816] with unstable size 312 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 46, 1, 816] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 816] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [312]; unstable size 312; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 46, 1, 312] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 312] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [45]; unstable size 45; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 45] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.72981596,  6.11392164,  2.05999184, -0.97437489,  2.76147938,
          0.68841791,  1.56425858,  3.62129164,  4.75195265]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.20912361, -33.06259918, -22.92160225, -27.84844017, -24.29616356,
         -28.63853264, -27.08451080, -27.91048813, -30.74532509, -31.43581009]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.01it/s]100%|██████████| 1/1 [00:00<00:00,  9.00it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.63352013, -32.18494034, -22.78745461, -26.83571053, -22.96574974,
          -27.64233017, -26.22459412, -26.89881897, -30.04117966, -30.41918945]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.17829514]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1139 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 24.9747314453125
alpha/beta optimization time: 1.2377305030822754
initial alpha-crown bounds: tensor([[ 2.86148262,  6.32742023,  2.21214819, -0.83530331,  2.95710278,
          0.89117080,  1.79161763,  3.80214024,  4.96695185]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.8353033065795898
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.56119847297668
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.56115674972534
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.5611288547516
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.5611071586609
Verifying property 3 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.83530331]], device='cuda:0') need to verify.
Model prediction is: tensor([-28.20912361, -33.06259918, -22.92160225, -27.84844017, -24.29616356,
        -28.63853264, -27.08451080, -27.91048813, -30.74532509, -31.43581009],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.83530331]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 816
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 308
Node /15 input 0: size torch.Size([100]) unstable 44
-----------------
# of unstable neurons: 1168
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010538101196289062
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8353013396263123
10 lb beta sum: 0.0, worst -0.8353210091590881
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0535    transfer 0.0001    finalize 0.0001    func 0.0539    
Accumulated time: func 0.0539    prepare 0.0002    bound 0.0535    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 29] 
split level 3: [/input-12, 54] 
split level 4: [/input-12, 36] 
split level 5: [/input-12, 80] 
split level 6: [/input-12, 53] 
split level 7: [/input-12, 73] 
split level 8: [/input-12, 82] 
split level 9: [/input-12, 24] 
split level 10: [/input-12, 94] 
split level 11: [/input-12, 8] 
split level 12: [/input-8, 353] 
split level 13: [/input-12, 60] 
split level 14: [/input, 2165] 
split level 15: [/input-12, 67] 
split level 16: [/input-8, 1965] 
split level 17: [/input-12, 19] 
split level 18: [/input, 2136] 
split level 19: [/input-8, 1521] 
split level 20: [/input-8, 351] 
split level 21: [/input-8, 1517] 
split level 22: [/input-8, 428] 
split level 23: [/input-8, 155] 
split level 24: [/input, 2236] 
split level 25: [/input-8, 210] 
split level 26: [/input-8, 343] 
split level 27: [/input-8, 1553] 
split level 28: [/input-8, 138] 
split level 29: [/input-8, 1724] 
split level 30: [/input-8, 1966] 
split level 31: [/input, 842] 
split level 32: [/input, 2684] 
split level 33: [/input-8, 114] 
split level 34: [/input-8, 1901] 
split level 35: [/input-8, 1452] 
split level 36: [/input, 2253] 
split level 37: [/input-8, 1902] 
split level 38: [/input-8, 856] 
split level 39: [/input-8, 1474] 
split level 40: [/input, 2716] 
split level 41: [/input-8, 1933] 
split level 42: [/input-8, 874] 
split level 43: [/input-8, 379] 
split level 44: [/input-8, 2027] 
split level 45: [/input-8, 282] 
split level 46: [/input-8, 146] 
split level 47: [/input-8, 872] 
split level 48: [/input-8, 1122] 
split level 49: [/input, 2171] 
split level 50: [/input-8, 1473] 
split level 51: [/input-8, 105] 
split level 52: [/input, 1142] 
split level 53: [/input, 2172] 
split level 54: [/input-8, 1830] 
split level 55: [/input, 2170] 
split level 56: [/input, 2715] 
split level 57: [/input, 2709] 
split level 58: [/input-12, 35] 
split level 59: [/input-8, 2009] 
split level 60: [/input, 2748] 
split level 61: [/input, 2711] 
split level 62: [/input-8, 1545] 
split level 63: [/input, 2665] 
split level 64: [/input-8, 1723] 
split level 65: [/input, 2733] 
split level 66: [/input, 2764] 
split level 67: [/input-8, 1908] 
split level 68: [/input-8, 273] 
split level 69: [/input, 2156] 
split level 70: [/input-8, 2045] 
split level 71: [/input, 2120] 
split level 72: [/input-8, 342] 
split level 73: [/input-8, 838] 
split level 74: [/input, 2422] 
split level 75: [/input-8, 1738] 
split level 76: [/input-8, 875] 
split level 77: [/input, 2649] 
split level 78: [/input, 858] 
split level 79: [/input, 568] 
split level 80: [/input, 2633] 
split level 81: [/input, 2724] 
split level 82: [/input, 2717] 
split level 83: [/input, 3177] 
split level 84: [/input-8, 930] 
split level 85: [/input-8, 1900] 
split level 86: [/input, 2138] 
split level 87: [/input-8, 1357] 
split level 88: [/input, 602] 
split level 89: [/input-12, 43] 
split level 90: [/input, 2693] 
split level 91: [/input, 2781] 
split level 92: [/input, 2792] 
split level 93: [/input-8, 418] 
split level 94: [/input, 857] 
split level 95: [/input, 875] 
split level 96: [/input-8, 484] 
split level 97: [/input, 74] 
split level 98: [/input, 2412] 
split level 99: [/input-8, 1077] 
split level 100: [/input-8, 1518] 
split level 101: [/input, 2364] 
split level 102: [/input, 2766] 
split level 103: [/input-8, 1327] 
split level 104: [/input, 75] 
split level 105: [/input-8, 493] 
split level 106: [/input-8, 1150] 
split level 107: [/input-8, 1324] 
split level 108: [/input-8, 1947] 
split level 109: [/input, 829] 
split level 110: [/input, 2699] 
split level 111: [/input, 682] 
split level 112: [/input, 2718] 
split level 113: [/input, 3219] 
split level 114: [/input, 826] 
split level 115: [/input, 618] 
split level 116: [/input, 804] 
split level 117: [/input-8, 137] 
split level 118: [/input, 859] 
split level 119: [/input-8, 1410] 
split level 120: [/input, 585] 
split level 121: [/input, 1436] 
split level 122: [/input, 569] 
split level 123: [/input, 2767] 
split level 124: [/input, 2218] 
split level 125: [/input, 2119] 
split level 126: [/input, 3202] 
split level 127: [/input, 3204] 
split level 128: [/input-8, 275] 
split level 129: [/input, 2685] 
split level 130: [/input, 969] 
split level 131: [/input, 586] 
split level 132: [/input, 2734] 
split level 133: [/input, 571] 
split level 134: [/input, 2648] 
split level 135: [/input-8, 1800] 
split level 136: [/input, 570] 
split level 137: [/input, 696] 
split level 138: [/input, 1148] 
split level 139: [/input, 808] 
split level 140: [/input, 3222] 
split level 141: [/input, 587] 
split level 142: [/input, 584] 
split level 143: [/input, 822] 
split level 144: [/input-8, 1417] 
split level 145: [/input, 2651] 
split level 146: [/input-8, 989] 
split level 147: [/input, 2636] 
split level 148: [/input, 76] 
split level 149: [/input, 619] 
split level 150: [/input-8, 878] 
split level 151: [/input-8, 990] 
split level 152: [/input, 2635] 
split level 153: [/input, 59] 
split level 154: [/input, 3159] 
split level 155: [/input, 604] 
split level 156: [/input, 2619] 
split level 157: [/input, 1114] 
split level 158: [/input, 2702] 
split level 159: [/input-8, 181] 
split level 160: [/input-8, 1359] 
split level 161: [/input, 603] 
split level 162: [/input, 2438] 
split level 163: [/input-8, 1070] 
split level 164: [/input-8, 879] 
split level 165: [/input, 845] 
split level 166: [/input, 1138] 
split level 167: [/input, 874] 
split level 168: [/input, 291] 
split level 169: [/input, 60] 
split level 170: [/input, 552] 
split level 171: [/input, 3915] 
split level 172: [/input, 2692] 
split level 173: [/input, 635] 
split level 174: [/input, 57] 
split level 175: [/input, 2404] 
split level 176: [/input, 2121] 
split level 177: [/input, 90] 
split level 178: [/input, 692] 
split level 179: [/input, 2721] 
split level 180: [/input, 2361] 
split level 181: [/input, 2669] 
split level 182: [/input, 2620] 
split level 183: [/input, 536] 
split level 184: [/input, 588] 
split level 185: [/input-8, 1792] 
split level 186: [/input, 891] 
split level 187: [/input, 2381] 
split level 188: [/input, 2347] 
split level 189: [/input, 2348] 
split level 190: [/input, 2918] 
split level 191: [/input, 728] 
split level 192: [/input, 326] 
split level 193: [/input, 43] 
split level 194: [/input, 621] 
split level 195: [/input, 40] 
split level 196: [/input, 2430] 
split level 197: [/input, 2446] 
split level 198: [/input, 2147] 
split level 199: [/input, 2901] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8352465033531189
10 lb beta sum: 0.0, worst -0.8352400064468384
Time: prepare 0.0114    bound 0.1006    transfer 0.0024    finalize 0.0029    func 0.1199    
Accumulated time: func 0.1738    prepare 0.0214    bound 0.1541    transfer 0.0025    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.01606274) min lb tensor(-0.83523297)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.01063847541809082 
BICCOS Cumulative time: 0.01063847541809082
Preprocessing time: 0.010315179824829102 Inference time: 7.462501525878906e-05 Add cuts time: 4.100799560546875e-05 Cut analysis time: 0.00020766258239746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.81501 (1), -0.81474 (1), -0.81438 (1), -0.81383 (1), -0.81329 (1), -0.81247 (1), -0.81226 (1), -0.81145 (1), -0.81109 (1), -0.81065 (1), -0.80846 (1), -0.80832 (1), -0.80812 (1), -0.80772 (1), -0.80772 (1), -0.80758 (1), -0.80665 (1), -0.80645 (1), -0.80576 (1), -0.80466 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5216    set_bounds 0.0091    solve 0.1200    add 0.1391    
Accumulated time: pickout 0.0004    decision 0.5216    set_bounds 0.0091    solve 0.1200    add 0.1391    
Current (lb-rhs): -0.8150056600570679
50 domains visited
Cumulative time: 0.8738188743591309

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 61] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
split level 1: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 80] [/input-12, 61] [/input-12, 61] [/input-12, 53] [/input-12, 61] 
split level 2: [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 73] [/input-12, 53] [/input-12, 53] [/input-12, 73] [/input-12, 73] 
split level 3: [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 24] [/input-12, 73] [/input-12, 73] [/input-12, 24] [/input-12, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7893182635307312
10 lb beta sum: 0.19138842821121216, worst -0.787697970867157
Time: prepare 0.0071    bound 0.1183    transfer 0.0013    finalize 0.0027    func 0.1319    
Accumulated time: func 0.3058    prepare 0.0287    bound 0.2724    transfer 0.0038    finalize 0.0057    
all_split False
======================Cut inference begins======================
max lb tensor(0.34721750) min lb tensor(-0.78745252)
Number of Verified Splits: 31 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.014930248260498047 
BICCOS Cumulative time: 0.025568723678588867
Preprocessing time: 0.01171875 Inference time: 0.001356363296508789 Add cuts time: 0.0007159709930419922 Cut analysis time: 0.0011391639709472656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23519 (2), -0.23506 (2), -0.23448 (2), -0.23433 (2), -0.23244 (2), -0.23221 (2), -0.23117 (2), -0.23095 (2), -0.22081 (2), -0.21917 (2), -0.21640 (2), -0.21621 (2), -0.21585 (2), -0.21211 (2), -0.19944 (2), -0.19891 (2), -0.19572 (2), -0.19281 (2), -0.19201 (2), -0.17338 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0231    set_bounds 0.0129    solve 0.1320    add 0.1335    
Accumulated time: pickout 0.0014    decision 0.5447    set_bounds 0.0220    solve 0.2520    add 0.2726    
Current (lb-rhs): -0.23519280552864075
100 domains visited
Cumulative time: 1.1915209293365479

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 61] [/input-12, 71] [/input-12, 61] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
split level 1: [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 61] [/input-12, 80] [/input-12, 80] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
split level 2: [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] 
split level 3: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-8, 1517] [/input-8, 351] [/input-8, 351] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22620084881782532
10 lb beta sum: 0.6039096117019653, worst -0.4070418179035187
Time: prepare 0.0065    bound 0.1214    transfer 0.0013    finalize 0.0026    func 0.1343    
Accumulated time: func 0.4400    prepare 0.0354    bound 0.3938    transfer 0.0050    finalize 0.0084    
all_split False
======================Cut inference begins======================
max lb tensor(1.01713204) min lb tensor(-0.12792407)
Number of Verified Splits: 302 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 11
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.03383183479309082 
BICCOS Cumulative time: 0.05940055847167969
Preprocessing time: 0.011760711669921875 Inference time: 0.013659477233886719 Add cuts time: 0.00801539421081543 Cut analysis time: 0.0003962516784667969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12202 (3), -0.09490 (3), -0.09403 (3), -0.09031 (3), 
Length of domains: 4
Time: pickout 0.0009    decision 0.0196    set_bounds 0.0151    solve 0.1344    add 0.1871    
Accumulated time: pickout 0.0024    decision 0.5643    set_bounds 0.0371    solve 0.3864    add 0.4596    
Current (lb-rhs): -0.12202288210391998
104 domains visited
Cumulative time: 1.58968186378479

Shallow-BaB round 4
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 54] 
split level 1: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 36] 
split level 2: [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 80] 
split level 3: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 53] 
split level 4: [/input-12, 73] [/input-12, 53] [/input-12, 53] [/input-12, 73] 
split level 5: [/input-12, 82] [/input-12, 73] [/input-12, 82] [/input-12, 82] 
split level 6: [/input-12, 24] [/input-12, 82] [/input-12, 24] [/input-12, 24] 
split level 7: [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] 
split level 8: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 9: [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] 
split level 10: [/input-8, 1521] [/input-8, 1521] [/input-8, 1521] [/input-8, 1521] 
split level 11: [/input-8, 1517] [/input-8, 1517] [/input-8, 1517] [/input-8, 1517] 
split level 12: [/input-8, 351] [/input-8, 351] [/input-8, 351] [/input-8, 351] 
split level 13: [/input-8, 210] [/input-8, 210] [/input-8, 210] [/input-8, 210] 
split level 14: [/input-8, 1452] [/input-8, 1452] [/input-8, 1452] [/input-8, 418] 
split level 15: [/input-8, 1933] [/input, 2253] [/input-8, 1933] [/input-8, 1933] 
split level 16: [/input, 2253] [/input-8, 418] [/input, 2253] [/input, 2253] 
split level 17: [/input, 2716] [/input-8, 105] [/input-8, 418] [/input-8, 1452] 
split level 18: [/input-8, 105] [/input, 2716] [/input, 2716] [/input, 2716] 
split level 19: [/input-8, 418] [/input, 2171] [/input-8, 105] [/input, 2171] 
split level 20: [/input, 2171] [/input-8, 2027] [/input, 2171] [/input-8, 105] 
split level 21: [/input-8, 2027] [/input, 2709] [/input-8, 2027] [/input-8, 2027] 
split level 22: [/input, 2715] [/input, 2715] [/input, 2715] [/input, 2715] 
split level 23: [/input-8, 1738] [/input-8, 1738] [/input-8, 1738] [/input, 2764] 
split level 24: [/input, 2170] [/input, 2764] [/input, 2764] [/input, 3177] 
split level 25: [/input, 2764] [/input, 2170] [/input, 2170] [/input-8, 484] 
split level 26: [/input, 2717] [/input, 2717] [/input, 2717] [/input, 2170] 
split level 27: [/input, 3177] [/input, 3177] [/input, 3177] [/input, 2717] 
split level 28: [/input, 2693] [/input, 2693] [/input, 2693] [/input, 2693] 
split level 29: [/input-8, 484] [/input-8, 484] [/input-8, 1518] [/input-8, 1738] 
split level 30: [/input-8, 1518] [/input-8, 1518] [/input-8, 484] [/input-8, 1518] 
split level 31: [/input-8, 137] [/input-8, 137] [/input-8, 137] [/input, 2138] 
split level 32: [/input, 2138] [/input, 2138] [/input, 2138] [/input-8, 137] 
split level 33: [/input-8, 1941] [/input-8, 1941] [/input-8, 1941] [/input, 918] 
split level 34: [/input-8, 1327] [/input-8, 1327] [/input-8, 1327] [/input-8, 989] 
split level 35: [/input-8, 1951] [/input-8, 989] [/input-8, 989] [/input-8, 1941] 
split level 36: [/input-8, 989] [/input, 3219] [/input, 918] [/input-8, 1327] 
split level 37: [/input, 3219] [/input, 2218] [/input, 3219] [/input, 2218] 
split level 38: [/input, 2218] [/input-8, 1951] [/input, 2699] [/input-8, 990] 
split level 39: [/input, 2699] [/input, 2699] [/input, 2218] [/input, 3219] 
split level 40: [/input, 918] [/input, 918] [/input-8, 1951] [/input-8, 1951] 
split level 41: [/input, 3202] [/input, 1138] [/input-8, 990] [/input, 2699] 
split level 42: [/input, 1138] [/input, 3202] [/input, 1138] [/input, 1138] 
split level 43: [/input-8, 990] [/input-8, 990] [/input, 3202] [/input-8, 365] 
split level 44: [/input, 893] [/input, 893] [/input, 893] [/input, 3202] 
split level 45: [/input-8, 991] [/input-8, 365] [/input-8, 991] [/input-8, 991] 
split level 46: [/input-8, 365] [/input-8, 991] [/input, 2147] [/input, 893] 
split level 47: [/input, 2147] [/input, 2147] [/input-8, 365] [/input, 2147] 
split level 48: [/input-8, 609] [/input-8, 492] [/input-8, 492] [/input-8, 609] 
split level 49: [/input-8, 492] [/input-8, 609] [/input-8, 609] [/input-8, 492] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19674444198608398
10 lb beta sum: 2.135373115539551, worst 0.001931220293045044

all verified at 10th iter
Time: prepare 0.0077    bound 0.0653    transfer 0.0012    finalize 0.0025    func 0.0793    
Accumulated time: func 0.5193    prepare 0.0457    bound 0.4591    transfer 0.0063    finalize 0.0108    
all_split False
======================Cut inference begins======================
max lb tensor(0.70674062) min lb tensor(0.01118831)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.04053473472595215 
BICCOS Cumulative time: 0.09993529319763184
Preprocessing time: 0.01145029067993164 Inference time: 0.017634153366088867 Add cuts time: 0.011123895645141602 Cut analysis time: 0.00032639503479003906
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.1402    set_bounds 0.0118    solve 0.0794    add 0.1752    
Accumulated time: pickout 0.0030    decision 0.7046    set_bounds 0.0489    solve 0.4657    add 0.6348    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
104 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 29] 
split level 3: [/input-12, 54] 
split level 4: [/input-12, 53] 
split level 5: [/input-12, 73] 
split level 6: [/input-12, 24] 
split level 7: [/input-12, 94] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4761161208152771
10 lb beta sum: 0.8325422406196594, worst -0.4404423236846924
Time: prepare 0.0037    bound 0.1153    transfer 0.0020    finalize 0.0014    func 0.1241    
Accumulated time: func 0.6434    prepare 0.0498    bound 0.5744    transfer 0.0082    finalize 0.0122    
all_split False
======================Cut inference begins======================
max lb tensor(1.70726943) min lb tensor(-0.44012827)
Number of Verified Splits: 236 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7559853196144104
10 lb beta sum: 1.7039800882339478, worst -0.6187875270843506
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 9
#cuts 4-6: 5
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.24940848350524902 
BICCOS Cumulative time: 0.34934377670288086
Preprocessing time: 0.006505489349365234 Inference time: 0.23617172241210938 Add cuts time: 0.006072521209716797 Cut analysis time: 0.0006587505340576172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.44013 (8), -0.36880 (8), -0.36132 (8), -0.27019 (8), -0.26409 (8), -0.25693 (8), -0.22816 (8), -0.21070 (8), -0.20301 (8), -0.19533 (8), -0.18174 (8), -0.14984 (8), -0.11604 (8), -0.10801 (8), -0.10207 (8), -0.05592 (8), -0.03136 (8), -0.02837 (8), -0.01956 (8), -0.01687 (8), 
Length of domains: 20
Time: pickout 0.0005    decision 0.0230    set_bounds 0.0169    solve 0.1242    add 0.0049    
Accumulated time: pickout 0.0035    decision 0.7276    set_bounds 0.0658    solve 0.5899    add 0.6397    
Current (lb-rhs): -0.44012826681137085
124 domains visited
Cumulative time: 2.465895652770996

BaB round 2
batch: 20
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] 
split level 1: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
split level 2: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-8, 1517] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 3: [/input-8, 1465] [/input-8, 1410] [/input-8, 1517] [/input-8, 1410] [/input-8, 1517] [/input-8, 1465] [/input-8, 874] [/input-8, 1517] [/input-8, 1517] [/input-8, 1465] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.42145535349845886
10 lb beta sum: 0.5396141409873962, worst -0.4111786484718323
Time: prepare 0.0062    bound 0.1152    transfer 0.0024    finalize 0.0022    func 0.1280    
Accumulated time: func 0.7714    prepare 0.0562    bound 0.6896    transfer 0.0106    finalize 0.0144    
all_split False
======================Cut inference begins======================
max lb tensor(1.69597363) min lb tensor(-0.41088802)
Number of Verified Splits: 266 of 320
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.638047456741333
10 lb beta sum: 1.562349796295166, worst -0.07520610094070435
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 9
#cuts 4-6: 5
#cuts 7-9: 12
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.30293989181518555 
BICCOS Cumulative time: 0.6522836685180664
Preprocessing time: 0.009227275848388672 Inference time: 0.2812643051147461 Add cuts time: 0.011142253875732422 Cut analysis time: 0.0013060569763183594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.41089 (12), -0.40660 (12), -0.37991 (12), -0.37636 (12), -0.33740 (12), -0.33644 (12), -0.33048 (12), -0.32347 (12), -0.29362 (12), -0.29333 (12), -0.27376 (12), -0.26378 (12), -0.24536 (12), -0.23695 (12), -0.23368 (12), -0.21807 (12), -0.21671 (12), -0.18735 (12), -0.18061 (12), -0.17767 (12), 
Length of domains: 54
Time: pickout 0.0012    decision 0.0173    set_bounds 0.0230    solve 0.1281    add 0.0019    
Accumulated time: pickout 0.0046    decision 0.7449    set_bounds 0.0888    solve 0.7180    add 0.6416    
Current (lb-rhs): -0.41088801622390747
178 domains visited
Cumulative time: 2.9430503845214844

BaB round 3
batch: 54
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1517] [/input-12, 82] [/input-12, 82] [/input-8, 1115] [/input-12, 82] [/input-12, 82] [/input-8, 1115] [/input-8, 1521] [/input-8, 1517] [/input-12, 82] 
split level 1: [/input-8, 1908] [/input-8, 874] [/input-8, 351] [/input-8, 493] [/input-8, 1473] [/input-8, 351] [/input-8, 493] [/input-8, 1517] [/input-8, 875] [/input-8, 351] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4058898389339447
10 lb beta sum: 0.692593514919281, worst -0.4029690623283386
Time: prepare 0.0046    bound 0.1347    transfer 0.0017    finalize 0.0014    func 0.1439    
Accumulated time: func 0.9153    prepare 0.0610    bound 0.8243    transfer 0.0124    finalize 0.0158    
all_split False
======================Cut inference begins======================
max lb tensor(0.67492861) min lb tensor(-0.40283203)
Number of Verified Splits: 77 of 216
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 11
#cuts 4-6: 6
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.017987728118896484 
BICCOS Cumulative time: 0.6702713966369629
Preprocessing time: 0.006472110748291016 Inference time: 0.007988214492797852 Add cuts time: 0.0026683807373046875 Cut analysis time: 0.0008590221405029297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40283 (14), -0.39844 (14), -0.39316 (14), -0.38900 (14), -0.37127 (14), -0.36760 (14), -0.35902 (14), -0.35556 (14), -0.32955 (14), -0.32869 (14), -0.32096 (14), -0.32006 (14), -0.31878 (14), -0.31207 (14), -0.31181 (14), -0.30529 (14), -0.27199 (14), -0.27181 (14), -0.26810 (14), -0.26774 (14), 
Length of domains: 139
Time: pickout 0.0017    decision 0.0160    set_bounds 0.0137    solve 0.1439    add 0.0035    
Accumulated time: pickout 0.0064    decision 0.7609    set_bounds 0.1024    solve 0.8619    add 0.6452    
Current (lb-rhs): -0.40283203125
317 domains visited
Cumulative time: 3.1405506134033203

BaB round 4
batch: 139
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1521] [/input-8, 1517] [/input-8, 210] [/input-8, 2027] [/input-8, 1517] [/input-8, 210] [/input-8, 351] [/input-8, 351] [/input-12, 67] [/input-8, 493] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.39866405725479126
10 lb beta sum: 0.6594901084899902, worst -0.3957594335079193
Time: prepare 0.0059    bound 0.1363    transfer 0.0017    finalize 0.0019    func 0.1475    
Accumulated time: func 1.0628    prepare 0.0672    bound 0.9606    transfer 0.0141    finalize 0.0177    
all_split False
======================Cut inference begins======================
max lb tensor(0.57336712) min lb tensor(-0.39562583)
Number of Verified Splits: 86 of 278
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 12
#cuts 4-6: 15
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.022543907165527344 
BICCOS Cumulative time: 0.6928153038024902
Preprocessing time: 0.008127927780151367 Inference time: 0.009528398513793945 Add cuts time: 0.003641366958618164 Cut analysis time: 0.0012462139129638672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39563 (15), -0.39126 (15), -0.38591 (15), -0.38179 (15), -0.36421 (15), -0.36056 (15), -0.35166 (15), -0.34823 (15), -0.31902 (15), -0.31806 (15), -0.31226 (15), -0.31111 (15), -0.31044 (15), -0.31012 (15), -0.30941 (15), -0.30523 (15), -0.30449 (15), -0.30225 (15), -0.30125 (15), -0.29773 (15), 
Length of domains: 192
Time: pickout 0.0030    decision 0.0185    set_bounds 0.0116    solve 0.1476    add 0.0016    
Accumulated time: pickout 0.0094    decision 0.7794    set_bounds 0.1140    solve 1.0096    add 0.6468    
Current (lb-rhs): -0.3956258296966553
509 domains visited
Cumulative time: 3.3463845252990723

BaB round 5
batch: 192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 351] [/input-8, 2027] [/input-12, 67] [/input, 2716] [/input-8, 1473] [/input-12, 82] [/input-12, 67] [/input-8, 1521] [/input-8, 2027] [/input-8, 1521] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.38880741596221924
10 lb beta sum: 0.6616649031639099, worst -0.3859853148460388
Time: prepare 0.0081    bound 0.1466    transfer 0.0023    finalize 0.0024    func 0.1619    
Accumulated time: func 1.2248    prepare 0.0755    bound 1.1072    transfer 0.0164    finalize 0.0201    
all_split False
======================Cut inference begins======================
max lb tensor(0.36424893) min lb tensor(-0.38592201)
Number of Verified Splits: 71 of 384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 12
#cuts 4-6: 17
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.0250089168548584 
BICCOS Cumulative time: 0.7178242206573486
Preprocessing time: 0.011160612106323242 Inference time: 0.008269071578979492 Add cuts time: 0.0035398006439208984 Cut analysis time: 0.0020394325256347656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38592 (16), -0.38155 (16), -0.37862 (16), -0.37623 (16), -0.37422 (16), -0.37211 (16), -0.36852 (16), -0.36435 (16), -0.35514 (16), -0.35141 (16), -0.34290 (16), -0.34255 (16), -0.33915 (16), -0.33894 (16), -0.32965 (16), -0.32615 (16), -0.31197 (16), -0.31106 (16), -0.30508 (16), -0.30391 (16), 
Length of domains: 313
Time: pickout 0.0030    decision 0.0215    set_bounds 0.0157    solve 0.1621    add 0.0027    
Accumulated time: pickout 0.0124    decision 0.8009    set_bounds 0.1297    solve 1.1716    add 0.6495    
Current (lb-rhs): -0.38592201471328735
822 domains visited
Cumulative time: 3.577282667160034

BaB round 6
batch: 313
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 82] [/input-12, 67] [/input-8, 1521] [/input-12, 67] [/input-12, 67] [/input-8, 210] [/input-12, 67] [/input-12, 67] [/input-8, 1521] [/input-8, 1324] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.38334959745407104
10 lb beta sum: 0.7138829827308655, worst -0.38053077459335327
Time: prepare 0.0131    bound 0.1553    transfer 0.0035    finalize 0.0062    func 0.1822    
Accumulated time: func 1.4070    prepare 0.0888    bound 1.2625    transfer 0.0199    finalize 0.0263    
all_split False
======================Cut inference begins======================
max lb tensor(0.45948118) min lb tensor(-0.38050079)
Number of Verified Splits: 195 of 626
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 13
#cuts 4-6: 20
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.04991436004638672 
BICCOS Cumulative time: 0.7677385807037354
Preprocessing time: 0.018340349197387695 Inference time: 0.02486586570739746 Add cuts time: 0.005219221115112305 Cut analysis time: 0.0014889240264892578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38050 (17), -0.37607 (17), -0.37297 (17), -0.37082 (17), -0.36858 (17), -0.36666 (17), -0.36453 (17), -0.36297 (17), -0.36005 (17), -0.35873 (17), -0.35707 (17), -0.35491 (17), -0.35266 (17), -0.35071 (17), -0.34981 (17), -0.34711 (17), -0.34596 (17), -0.34295 (17), -0.33716 (17), -0.33707 (17), 
Length of domains: 431
Time: pickout 0.0045    decision 0.0284    set_bounds 0.0261    solve 0.1824    add 0.0893    
Accumulated time: pickout 0.0169    decision 0.8293    set_bounds 0.1558    solve 1.3540    add 0.7388    
Current (lb-rhs): -0.38050079345703125
1253 domains visited
Cumulative time: 3.9594740867614746

BaB round 7
batch: 431
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-8, 1324] [/input, 2716] [/input-12, 67] [/input-12, 67] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.37974920868873596
10 lb beta sum: 0.6761341094970703, worst -0.37702542543411255
Time: prepare 0.0191    bound 0.1577    transfer 0.0048    finalize 0.0050    func 0.1921    
Accumulated time: func 1.5992    prepare 0.1081    bound 1.4202    transfer 0.0246    finalize 0.0314    
all_split False
======================Cut inference begins======================
max lb tensor(0.49165744) min lb tensor(-0.37700102)
Number of Verified Splits: 174 of 862
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 13
#cuts 4-6: 19
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.05588698387145996 
BICCOS Cumulative time: 0.8236255645751953
Preprocessing time: 0.02494049072265625 Inference time: 0.02430558204650879 Add cuts time: 0.005267143249511719 Cut analysis time: 0.0013737678527832031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.37700 (18), -0.37017 (18), -0.36943 (18), -0.36890 (18), -0.36711 (18), -0.36594 (18), -0.36259 (18), -0.36129 (18), -0.36073 (18), -0.36062 (18), -0.35941 (18), -0.35765 (18), -0.35692 (18), -0.35643 (18), -0.35382 (18), -0.35315 (18), -0.35259 (18), -0.35253 (18), -0.35203 (18), -0.35079 (18), 
Length of domains: 688
Time: pickout 0.0086    decision 0.0345    set_bounds 0.0348    solve 0.1924    add 0.0067    
Accumulated time: pickout 0.0255    decision 0.8637    set_bounds 0.1906    solve 1.5465    add 0.7455    
Current (lb-rhs): -0.377001017332077
1941 domains visited
Cumulative time: 4.2939019203186035

BaB round 8
batch: 688
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1452] [/input-12, 67] [/input, 2716] [/input-12, 67] [/input-8, 2027] [/input, 2253] [/input-8, 1473] [/input-8, 1313] [/input-8, 115] [/input-8, 379] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7947584390640259, worst -0.7167232036590576
10 lb beta sum: 0.7975376844406128, worst -0.37116697430610657
Time: prepare 0.0635    bound 0.1537    transfer 0.0074    finalize 0.0082    func 0.2424    
Accumulated time: func 1.8415    prepare 0.1719    bound 1.5738    transfer 0.0320    finalize 0.0395    
all_split False
======================Cut inference begins======================
max lb tensor(0.23730154) min lb tensor(-0.37115684)
Number of Verified Splits: 195 of 1376
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 14
#cuts 4-6: 25
#cuts >= 20: 0
BICCOS time: 0.07693147659301758 
BICCOS Cumulative time: 0.9005570411682129
Preprocessing time: 0.043740272521972656 Inference time: 0.026181697845458984 Add cuts time: 0.005711078643798828 Cut analysis time: 0.0012984275817871094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.37116 (19), -0.36694 (19), -0.36357 (19), -0.36298 (19), -0.36171 (19), -0.36120 (19), -0.36011 (19), -0.35877 (19), -0.35862 (19), -0.35742 (19), -0.35693 (19), -0.35579 (19), -0.35539 (19), -0.35456 (19), -0.35399 (19), -0.35347 (19), -0.35319 (19), -0.35242 (19), -0.35216 (19), -0.35061 (19), 
Length of domains: 1181
Time: pickout 0.0100    decision 0.0510    set_bounds 0.0553    solve 0.2428    add 0.0128    
Accumulated time: pickout 0.0355    decision 0.9148    set_bounds 0.2459    solve 1.7892    add 0.7583    
Current (lb-rhs): -0.37115684151649475
3122 domains visited
Cumulative time: 4.745283603668213

BaB round 9
batch: 1181
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 105] [/input-8, 105] [/input, 2716] [/input-8, 2027] [/input, 2171] [/input-12, 67] [/input-8, 114] [/input-8, 379] [/input-12, 67] [/input-8, 2027] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7794194221496582, worst -0.3639584481716156
10 lb beta sum: 1.0562610626220703, worst -0.3627256155014038
Time: prepare 0.1129    bound 0.2554    transfer 0.0101    finalize 0.0155    func 0.4101    
Accumulated time: func 2.2516    prepare 0.2850    bound 1.8292    transfer 0.0421    finalize 0.0550    
all_split False
======================Cut inference begins======================
max lb tensor(0.55529672) min lb tensor(-0.36269450)
Number of Verified Splits: 677 of 2362
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 51.
#cuts 1-3: 14
#cuts 4-6: 34
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.19064569473266602 
BICCOS Cumulative time: 1.091202735900879
Preprocessing time: 0.07398080825805664 Inference time: 0.09674263000488281 Add cuts time: 0.018003463745117188 Cut analysis time: 0.001918792724609375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36269 (20), -0.36130 (20), -0.35838 (20), -0.35823 (20), -0.35697 (20), -0.35655 (20), -0.35500 (20), -0.35451 (20), -0.35381 (20), -0.35371 (20), -0.35312 (20), -0.35264 (20), -0.35214 (20), -0.35136 (20), -0.35115 (20), -0.35055 (20), -0.35021 (20), -0.34999 (20), -0.34948 (20), -0.34886 (20), 
Length of domains: 1685
Time: pickout 0.0175    decision 0.2351    set_bounds 0.0969    solve 0.4106    add 0.0303    
Accumulated time: pickout 0.0530    decision 1.1498    set_bounds 0.3428    solve 2.1998    add 0.7886    
Current (lb-rhs): -0.36269450187683105
4807 domains visited
Cumulative time: 5.734121322631836

BaB round 10
batch: 1685
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1655] [/input-8, 379] [/input-8, 1553] [/input, 2253] [/input-8, 1313] [/input-8, 379] [/input, 2253] [/input-8, 1313] [/input-8, 1553] [/input-8, 379] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3604423999786377
10 lb beta sum: 0.6654563546180725, worst -0.35766130685806274
Time: prepare 0.0798    bound 0.3339    transfer 0.0181    finalize 0.0231    func 0.4766    
Accumulated time: func 2.7282    prepare 0.3651    bound 2.1632    transfer 0.0602    finalize 0.0782    
all_split False
======================Cut inference begins======================
max lb tensor(0.03290001) min lb tensor(-0.35762787)
Number of Verified Splits: 254 of 3370
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 67.
#cuts 1-3: 14
#cuts 4-6: 41
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 0.1573808193206787 
BICCOS Cumulative time: 1.2485835552215576
Preprocessing time: 0.10493302345275879 Inference time: 0.03991222381591797 Add cuts time: 0.009955167770385742 Cut analysis time: 0.002580404281616211
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35763 (21), -0.35629 (21), -0.35511 (21), -0.35325 (21), -0.35293 (21), -0.35138 (21), -0.35095 (21), -0.34987 (21), -0.34945 (21), -0.34909 (21), -0.34859 (21), -0.34851 (21), -0.34813 (21), -0.34761 (21), -0.34754 (21), -0.34696 (21), -0.34695 (21), -0.34659 (21), -0.34633 (21), -0.34629 (21), 
Length of domains: 3116
Time: pickout 0.0374    decision 0.1023    set_bounds 0.1426    solve 0.4776    add 0.0366    
Accumulated time: pickout 0.0905    decision 1.2521    set_bounds 0.4854    solve 2.6775    add 0.8253    
Current (lb-rhs): -0.35762786865234375
7923 domains visited
Cumulative time: 6.69392991065979

BaB round 11
batch: 3116
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2253] [/input-8, 155] [/input, 2716] [/input, 2171] [/input, 2253] [/input, 2716] [/input-8, 379] [/input-8, 155] [/input, 2171] [/input-8, 1473] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.35741856694221497
10 lb beta sum: 0.6591073274612427, worst -0.35461145639419556
Time: prepare 0.1598    bound 0.5628    transfer 0.0328    finalize 0.0427    func 0.8386    
Accumulated time: func 3.5669    prepare 0.5251    bound 2.7260    transfer 0.0930    finalize 0.1209    
all_split False
======================Cut inference begins======================
max lb tensor(0.44255751) min lb tensor(-0.35452193)
Number of Verified Splits: 464 of 6232
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 81.
#cuts 1-3: 14
#cuts 4-6: 56
#cuts 7-9: 11
#cuts >= 20: 0
BICCOS time: 0.48454785346984863 
BICCOS Cumulative time: 1.7331314086914062
Preprocessing time: 0.38454675674438477 Inference time: 0.07615423202514648 Add cuts time: 0.02073526382446289 Cut analysis time: 0.003111600875854492
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35452 (22), -0.35289 (22), -0.35005 (22), -0.34959 (22), -0.34847 (22), -0.34817 (22), -0.34712 (22), -0.34706 (22), -0.34636 (22), -0.34635 (22), -0.34602 (22), -0.34552 (22), -0.34523 (22), -0.34509 (22), -0.34471 (22), -0.34445 (22), -0.34376 (22), -0.34285 (22), -0.34280 (22), -0.34266 (22), 
Length of domains: 5768
Time: pickout 0.0489    decision 0.3520    set_bounds 0.2696    solve 0.8403    add 0.0394    
Accumulated time: pickout 0.1394    decision 1.6041    set_bounds 0.7550    solve 3.5178    add 0.8647    
Current (lb-rhs): -0.3545219302177429
13691 domains visited
Cumulative time: 8.74027132987976

BaB round 12
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2171] [/input-8, 1947] [/input-8, 1473] [/input, 2171] [/input-8, 1947] [/input, 2171] [/input, 2253] [/input, 2171] [/input, 2253] [/input, 2171] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.35372447967529297
10 lb beta sum: 0.6490824222564697, worst -0.3509596586227417
Time: prepare 0.2218    bound 0.7118    transfer 0.0400    finalize 0.2208    func 1.2479    
Accumulated time: func 4.8148    prepare 0.7471    bound 3.4377    transfer 0.1330    finalize 0.3417    
all_split False
======================Cut inference begins======================
max lb tensor(0.56022269) min lb tensor(-0.35091889)
Number of Verified Splits: 697 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 107.
#cuts 1-3: 14
#cuts 4-6: 69
#cuts 7-9: 23
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.4198136329650879 
BICCOS Cumulative time: 2.152945041656494
Preprocessing time: 0.2599935531616211 Inference time: 0.12562274932861328 Add cuts time: 0.029934167861938477 Cut analysis time: 0.004263162612915039
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35289 (22), -0.35092 (23), -0.34847 (22), -0.34817 (22), -0.34706 (22), -0.34646 (23), -0.34636 (22), -0.34608 (23), -0.34509 (22), -0.34471 (22), -0.34376 (22), -0.34338 (23), -0.34302 (23), -0.34285 (22), -0.34273 (23), -0.34248 (22), -0.34244 (23), -0.34212 (22), -0.34173 (22), -0.34168 (23), 
Length of domains: 9167
Time: pickout 0.0675    decision 0.2345    set_bounds 0.3530    solve 1.2500    add 0.0684    
Accumulated time: pickout 0.2069    decision 1.8385    set_bounds 1.1080    solve 4.7678    add 0.9330    
Current (lb-rhs): -0.3528858423233032
21186 domains visited
current_vram/total_varm: 12.0GB/99.9GB, batch_size increase to 8192
Cumulative time: 11.156677722930908

BaB round 13
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2716] [/input-8, 1521] [/input, 2171] [/input-8, 2027] [/input-8, 874] [/input-8, 1473] [/input-8, 1553] [/input-8, 1324] [/input, 2792] [/input-8, 1327] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3520953059196472
10 lb beta sum: 0.6623945236206055, worst -0.34939098358154297
Time: prepare 0.4617    bound 1.3663    transfer 0.0815    finalize 0.3523    func 2.3693    
Accumulated time: func 7.1841    prepare 1.2092    bound 4.8041    transfer 0.2144    finalize 0.6940    
all_split False
======================Cut inference begins======================
max lb tensor(0.33302444) min lb tensor(-0.34936339)
Number of Verified Splits: 1146 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 140.
#cuts 1-3: 14
#cuts 4-6: 81
#cuts 7-9: 43
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 1.0395965576171875 
BICCOS Cumulative time: 3.1925415992736816
Preprocessing time: 0.5252878665924072 Inference time: 0.453747034072876 Add cuts time: 0.054466962814331055 Cut analysis time: 0.006094694137573242
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34936 (23), -0.34735 (24), -0.34495 (23), -0.34472 (23), -0.34450 (23), -0.34334 (23), -0.34323 (23), -0.34251 (24), -0.34244 (23), -0.34175 (24), -0.34145 (23), -0.34137 (24), -0.34118 (23), -0.34032 (23), -0.33991 (23), -0.33968 (24), -0.33953 (24), -0.33941 (24), -0.33934 (23), -0.33918 (24), 
Length of domains: 16213
Time: pickout 0.1336    decision 0.6455    set_bounds 0.7227    solve 2.3726    add 0.0801    
Accumulated time: pickout 0.3405    decision 2.4840    set_bounds 1.8307    solve 7.1404    add 1.0131    
Current (lb-rhs): -0.34936338663101196
36424 domains visited
current_vram/total_varm: 23.8GB/99.9GB, batch_size increase to 16384
Cumulative time: 16.181962966918945

BaB round 14
batch: 16213
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1473] [/input, 2171] [/input-8, 1115] [/input, 2171] [/input, 2170] [/input, 2253] [/input-8, 1553] [/input, 2171] [/input-8, 379] [/input-8, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.350525438785553
10 lb beta sum: 0.6776947975158691, worst -0.3476730287075043
Time: prepare 0.9026    bound 2.7440    transfer 0.1972    finalize 0.2308    func 4.2927    
Accumulated time: func 11.4768    prepare 2.1122    bound 7.5480    transfer 0.4117    finalize 0.9248    
all_split False
======================Cut inference begins======================
max lb tensor(0.34617203) min lb tensor(-0.34760246)
Number of Verified Splits: 2129 of 32426
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 190.
#cuts 1-3: 15
#cuts 4-6: 66
#cuts 7-9: 105
#cuts 10-12: 4
#cuts >= 20: 0
BICCOS time: 1.9994909763336182 
BICCOS Cumulative time: 5.1920325756073
Preprocessing time: 1.4397449493408203 Inference time: 0.44584178924560547 Add cuts time: 0.10318350791931152 Cut analysis time: 0.01072072982788086
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34760 (24), -0.34321 (24), -0.34302 (24), -0.34254 (25), -0.34068 (24), -0.34010 (24), -0.33979 (24), -0.33973 (24), -0.33969 (24), -0.33942 (24), -0.33862 (24), -0.33848 (24), -0.33812 (25), -0.33765 (25), -0.33755 (24), -0.33631 (25), -0.33624 (24), -0.33612 (24), -0.33605 (24), -0.33584 (25), 
Length of domains: 30297
Time: pickout 0.3270    decision 0.9168    set_bounds 2.0046    solve 4.2987    add 0.2762    
Accumulated time: pickout 0.6675    decision 3.4008    set_bounds 3.8354    solve 11.4391    add 1.2894    
Current (lb-rhs): -0.3476024568080902
66721 domains visited
Cumulative time: 26.057320833206177

BaB round 15
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2253] [/input-8, 379] [/input-8, 874] [/input, 2170] [/input-8, 2009] [/input-8, 1324] [/input-8, 155] [/input, 2170] [/input-8, 1324] [/input-8, 379] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.347751647233963
10 lb beta sum: 0.6783691644668579, worst -0.34448128938674927
Time: prepare 0.9401    bound 2.8617    transfer 0.1843    finalize 0.2661    func 4.4679    
Accumulated time: func 15.9447    prepare 3.0527    bound 10.4097    transfer 0.5960    finalize 1.1909    
all_split False
======================Cut inference begins======================
max lb tensor(0.60249674) min lb tensor(-0.34417570)
Number of Verified Splits: 2672 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 275.
#cuts 1-3: 15
#cuts 4-6: 82
#cuts 7-9: 154
#cuts 10-12: 24
#cuts >= 20: 0
BICCOS time: 2.2978367805480957 
BICCOS Cumulative time: 7.4898693561553955
Preprocessing time: 1.0854296684265137 Inference time: 1.0310592651367188 Add cuts time: 0.16757464408874512 Cut analysis time: 0.013773202896118164
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34418 (25), -0.34254 (25), -0.34010 (24), -0.33979 (24), -0.33978 (25), -0.33973 (24), -0.33967 (25), -0.33848 (24), -0.33812 (25), -0.33770 (25), -0.33765 (25), -0.33720 (25), -0.33631 (25), -0.33623 (25), -0.33598 (25), -0.33584 (25), -0.33570 (24), -0.33550 (24), -0.33530 (25), -0.33515 (24), 
Length of domains: 44009
Time: pickout 0.3000    decision 1.7819    set_bounds 1.9690    solve 4.4748    add 0.1580    
Accumulated time: pickout 0.9675    decision 5.1827    set_bounds 5.8044    solve 15.9140    add 1.4474    
Current (lb-rhs): -0.34417569637298584
96817 domains visited
Cumulative time: 37.103429079055786

BaB round 16
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2716] [/input, 2711] [/input, 2171] [/input-8, 115] [/input-8, 856] [/input-8, 874] [/input-8, 2009] [/input-8, 342] [/input, 2170] [/input, 2171] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3415946960449219
10 lb beta sum: 0.7116509675979614, worst -0.33888155221939087
Time: prepare 0.9171    bound 3.0405    transfer 0.1893    finalize 0.2385    func 4.5998    
Accumulated time: func 20.5445    prepare 3.9702    bound 13.4503    transfer 0.7853    finalize 1.4294    
all_split False
======================Cut inference begins======================
max lb tensor(0.56277895) min lb tensor(-0.33884656)
Number of Verified Splits: 2799 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 301.
#cuts 1-3: 16
#cuts 4-6: 90
#cuts 7-9: 176
#cuts 10-12: 19
#cuts >= 20: 0
BICCOS time: 2.4841721057891846 
BICCOS Cumulative time: 9.97404146194458
Preprocessing time: 1.6860041618347168 Inference time: 0.5818769931793213 Add cuts time: 0.20133209228515625 Cut analysis time: 0.014958858489990234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34418 (25), -0.33978 (25), -0.33967 (25), -0.33885 (26), -0.33770 (25), -0.33720 (25), -0.33625 (25), -0.33623 (25), -0.33616 (25), -0.33598 (25), -0.33530 (25), -0.33487 (25), -0.33477 (25), -0.33442 (26), -0.33409 (25), -0.33395 (26), -0.33329 (25), -0.33313 (25), -0.33276 (25), -0.33275 (25), 
Length of domains: 57594
Time: pickout 0.3000    decision 1.6707    set_bounds 2.0885    solve 4.6069    add 0.1187    
Accumulated time: pickout 1.2674    decision 6.8534    set_bounds 7.8929    solve 20.5208    add 1.5661    
Current (lb-rhs): -0.34417569637298584
126786 domains visited
Cumulative time: 48.47982048988342

BaB round 17
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1474] [/input-8, 1474] [/input-8, 1933] [/input-8, 1474] [/input-8, 1474] [/input-8, 1933] [/input-8, 2009] [/input-8, 1474] [/input, 2628] [/input-8, 1315] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3367806375026703
10 lb beta sum: 0.7435568571090698, worst -0.3338301479816437
Time: prepare 0.9480    bound 3.0861    transfer 0.1902    finalize 0.2634    func 4.7042    
Accumulated time: func 25.2486    prepare 4.9186    bound 16.5363    transfer 0.9755    finalize 1.6928    
all_split False
======================Cut inference begins======================
max lb tensor(0.36265457) min lb tensor(-0.33364075)
Number of Verified Splits: 4123 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 370.
#cuts 1-3: 16
#cuts 4-6: 109
#cuts 7-9: 222
#cuts 10-12: 23
#cuts >= 20: 0
BICCOS time: 3.0561158657073975 
BICCOS Cumulative time: 13.030157327651978
Preprocessing time: 1.7964272499084473 Inference time: 0.8339364528656006 Add cuts time: 0.4068014621734619 Cut analysis time: 0.018950700759887695
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34418 (25), -0.33978 (25), -0.33967 (25), -0.33885 (26), -0.33625 (25), -0.33616 (25), -0.33598 (25), -0.33530 (25), -0.33487 (25), -0.33477 (25), -0.33442 (26), -0.33409 (25), -0.33395 (26), -0.33364 (26), -0.33319 (26), -0.33263 (25), -0.33230 (26), -0.33225 (26), -0.33186 (25), -0.33164 (25), 
Length of domains: 69855
Time: pickout 0.3024    decision 1.6675    set_bounds 2.1760    solve 4.7114    add 0.2342    
Accumulated time: pickout 1.5699    decision 8.5209    set_bounds 10.0689    solve 25.2322    add 1.8002    
Current (lb-rhs): -0.34417569637298584
155431 domains visited
Cumulative time: 60.71513390541077

BaB round 18
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2253] [/input-8, 930] [/input-8, 155] [/input-8, 1474] [/input-8, 930] [/input, 2716] [/input-8, 1474] [/input-8, 155] [/input-8, 930] [/input, 2253] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34324875473976135
10 lb beta sum: 0.7556705474853516, worst -0.3403247594833374
Time: prepare 0.9275    bound 3.2109    transfer 0.1871    finalize 0.2747    func 4.8180    
Accumulated time: func 30.0666    prepare 5.8465    bound 19.7472    transfer 1.1626    finalize 1.9675    
all_split False
======================Cut inference begins======================
max lb tensor(0.68098843) min lb tensor(-0.34020543)
Number of Verified Splits: 4116 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 379.
#cuts 1-3: 17
#cuts 4-6: 112
#cuts 7-9: 221
#cuts 10-12: 28
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 3.2382631301879883 
BICCOS Cumulative time: 16.268420457839966
Preprocessing time: 1.1517069339752197 Inference time: 1.6562891006469727 Add cuts time: 0.41066837310791016 Cut analysis time: 0.019598722457885742
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34021 (26), -0.33885 (26), -0.33625 (25), -0.33616 (25), -0.33581 (26), -0.33565 (26), -0.33487 (25), -0.33477 (25), -0.33442 (26), -0.33395 (26), -0.33364 (26), -0.33319 (26), -0.33225 (26), -0.33203 (26), -0.33203 (26), -0.33186 (25), -0.33164 (25), -0.33157 (26), -0.33154 (25), -0.33124 (26), 
Length of domains: 82123
Time: pickout 0.2979    decision 1.6662    set_bounds 2.3462    solve 4.8251    add 0.1360    
Accumulated time: pickout 1.8677    decision 10.1871    set_bounds 12.4151    solve 30.0573    add 1.9363    
Current (lb-rhs): -0.34020543098449707
184083 domains visited
Cumulative time: 73.31309580802917

BaB round 19
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1474] [/input-8, 2027] [/input-8, 1933] [/input-8, 1918] [/input, 2119] [/input, 2170] [/input-8, 1933] [/input-8, 1474] [/input, 2171] [/input-8, 1315] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.33684685826301575
10 lb beta sum: 0.7881870865821838, worst -0.3340919315814972
Time: prepare 0.9344    bound 3.2246    transfer 0.1874    finalize 1.1296    func 5.6928    
Accumulated time: func 35.7594    prepare 6.7813    bound 22.9719    transfer 1.3499    finalize 3.0971    
all_split False
======================Cut inference begins======================
max lb tensor(1.23112631) min lb tensor(-0.33404970)
Number of Verified Splits: 4740 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 401.
#cuts 1-3: 18
#cuts 4-6: 100
#cuts 7-9: 252
#cuts 10-12: 31
#cuts >= 20: 0
BICCOS time: 2.4985849857330322 
BICCOS Cumulative time: 18.767005443572998
Preprocessing time: 1.1328577995300293 Inference time: 0.9675626754760742 Add cuts time: 0.37719249725341797 Cut analysis time: 0.020972013473510742
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34021 (26), -0.33581 (26), -0.33565 (26), -0.33405 (27), -0.33364 (26), -0.33319 (26), -0.33244 (26), -0.33225 (26), -0.33203 (26), -0.33203 (26), -0.33124 (26), -0.33120 (26), -0.33060 (26), -0.33015 (26), -0.32985 (27), -0.32954 (26), -0.32922 (26), -0.32915 (27), -0.32913 (26), -0.32877 (26), 
Length of domains: 93767
Time: pickout 0.2980    decision 1.6736    set_bounds 1.6599    solve 5.7003    add 0.1994    
Accumulated time: pickout 2.1657    decision 11.8607    set_bounds 14.0750    solve 35.7576    add 2.1357    
Current (lb-rhs): -0.34020543098449707
212111 domains visited
Cumulative time: 85.444167137146

BaB round 20
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1947] [/input-8, 1115] [/input-8, 930] [/input-8, 105] [/input, 2253] [/input-8, 1324] [/input, 2792] [/input-8, 1521] [/input, 2792] [/input-8, 418] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.33164575695991516
10 lb beta sum: 0.8511499166488647, worst -0.32867196202278137
Time: prepare 0.9533    bound 3.3080    transfer 0.1952    finalize 0.3174    func 4.9940    
Accumulated time: func 40.7534    prepare 7.7350    bound 26.2799    transfer 1.5451    finalize 3.4145    
all_split False
======================Cut inference begins======================
max lb tensor(0.69932699) min lb tensor(-0.32850042)
Number of Verified Splits: 5000 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 483.
#cuts 1-3: 18
#cuts 4-6: 114
#cuts 7-9: 308
#cuts 10-12: 43
#cuts >= 20: 0
BICCOS time: 3.834401845932007 
BICCOS Cumulative time: 22.601407289505005
Preprocessing time: 1.165045976638794 Inference time: 2.0506317615509033 Add cuts time: 0.592766284942627 Cut analysis time: 0.025957822799682617
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34021 (26), -0.33581 (26), -0.33565 (26), -0.33405 (27), -0.33319 (26), -0.33244 (26), -0.33225 (26), -0.33203 (26), -0.33203 (26), -0.33124 (26), -0.33120 (26), -0.33015 (26), -0.32985 (27), -0.32954 (26), -0.32915 (27), -0.32877 (26), -0.32873 (26), -0.32862 (26), -0.32850 (26), -0.32850 (27), 
Length of domains: 105151
Time: pickout 0.3075    decision 2.5780    set_bounds 1.7031    solve 5.0008    add 0.1130    
Accumulated time: pickout 2.4732    decision 14.4386    set_bounds 15.7781    solve 40.7584    add 2.2486    
Current (lb-rhs): -0.34020543098449707
239879 domains visited
Cumulative time: 99.08641290664673

BaB round 21
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 518] [/input-8, 493] [/input, 2170] [/input, 2711] [/input, 518] [/input-8, 155] [/input, 2253] [/input-8, 493] [/input-8, 155] [/input, 2170] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3311329185962677
10 lb beta sum: 0.8750535845756531, worst -0.3274286985397339
Time: prepare 0.9483    bound 3.4425    transfer 0.1894    finalize 0.2383    func 5.0343    
Accumulated time: func 45.7877    prepare 8.6837    bound 29.7223    transfer 1.7345    finalize 3.6528    
all_split False
======================Cut inference begins======================
max lb tensor(0.94851363) min lb tensor(-0.32737768)
Number of Verified Splits: 4924 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 551.
#cuts 1-3: 19
#cuts 4-6: 134
#cuts 7-9: 353
#cuts 10-12: 45
#cuts >= 20: 0
BICCOS time: 2.9087014198303223 
BICCOS Cumulative time: 25.510108709335327
Preprocessing time: 1.1350793838500977 Inference time: 1.0387394428253174 Add cuts time: 0.7053632736206055 Cut analysis time: 0.029519319534301758
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34021 (26), -0.33581 (26), -0.33565 (26), -0.33405 (27), -0.33244 (26), -0.33203 (26), -0.33203 (26), -0.33124 (26), -0.33120 (26), -0.33015 (26), -0.32985 (27), -0.32954 (26), -0.32915 (27), -0.32873 (26), -0.32862 (26), -0.32850 (27), -0.32830 (26), -0.32826 (27), -0.32781 (26), -0.32764 (26), 
Length of domains: 116611
Time: pickout 0.3041    decision 1.6838    set_bounds 1.6826    solve 6.1550    add 0.1111    
Accumulated time: pickout 2.7772    decision 16.1225    set_bounds 17.4607    solve 46.9134    add 2.3597    
Current (lb-rhs): -0.34020543098449707
267723 domains visited
Cumulative time: 112.03475880622864

BaB round 22
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1655] [/input, 2170] [/input-8, 418] [/input-8, 379] [/input, 2724] [/input, 534] [/input-8, 1122] [/input-8, 1933] [/input, 2253] [/input-8, 1521] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.33822041749954224
10 lb beta sum: 0.8859545588493347, worst -0.33542534708976746
Time: prepare 0.9594    bound 3.6078    transfer 0.1899    finalize 1.5079    func 6.4806    
Accumulated time: func 52.2683    prepare 9.6435    bound 33.3302    transfer 1.9244    finalize 5.1607    
all_split False
======================Cut inference begins======================
max lb tensor(2.13135910) min lb tensor(-0.33536249)
Number of Verified Splits: 4800 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 551.
#cuts 1-3: 19
#cuts 4-6: 134
#cuts 7-9: 353
#cuts 10-12: 45
#cuts >= 20: 0
BICCOS time: 0.0011043548583984375 
BICCOS Cumulative time: 25.511213064193726
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33536 (27), -0.33405 (27), -0.33244 (26), -0.33203 (26), -0.33120 (26), -0.33119 (27), -0.33078 (27), -0.32985 (27), -0.32954 (26), -0.32954 (27), -0.32915 (27), -0.32873 (26), -0.32850 (27), -0.32830 (26), -0.32826 (27), -0.32781 (26), -0.32756 (26), -0.32748 (26), -0.32746 (26), -0.32738 (27), 
Length of domains: 128195
Time: pickout 0.3017    decision 1.6755    set_bounds 1.6660    solve 6.4888    add 0.1036    
Accumulated time: pickout 3.0789    decision 17.7980    set_bounds 19.1266    solve 53.4022    add 2.4633    
Current (lb-rhs): -0.3353624939918518
295691 domains visited
Cumulative time: 122.38543510437012

BaB round 23
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 105] [/input-8, 115] [/input-8, 2009] [/input-8, 930] [/input-8, 105] [/input-8, 856] [/input, 2119] [/input, 723] [/input-8, 379] [/input-8, 930] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32997018098831177
10 lb beta sum: 0.8873893022537231, worst -0.32674574851989746
Time: prepare 0.9568    bound 3.6066    transfer 0.1906    finalize 1.5067    func 6.4781    
Accumulated time: func 58.7464    prepare 10.6007    bound 36.9368    transfer 2.1150    finalize 6.6675    
all_split False
======================Cut inference begins======================
max lb tensor(1.80352783) min lb tensor(-0.32662368)
Number of Verified Splits: 4837 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 551.
#cuts 1-3: 19
#cuts 4-6: 134
#cuts 7-9: 353
#cuts 10-12: 45
#cuts >= 20: 0
BICCOS time: 0.0011069774627685547 
BICCOS Cumulative time: 25.512320041656494
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33536 (27), -0.33405 (27), -0.33244 (26), -0.33120 (26), -0.33119 (27), -0.33078 (27), -0.32985 (27), -0.32954 (26), -0.32954 (27), -0.32915 (27), -0.32873 (26), -0.32850 (27), -0.32830 (26), -0.32826 (27), -0.32781 (26), -0.32748 (26), -0.32738 (27), -0.32723 (27), -0.32719 (27), -0.32663 (27), 
Length of domains: 139742
Time: pickout 0.3066    decision 1.6828    set_bounds 1.6795    solve 6.4866    add 0.2454    
Accumulated time: pickout 3.3855    decision 19.4808    set_bounds 20.8061    solve 59.8888    add 2.7087    
Current (lb-rhs): -0.3353624939918518
323622 domains visited
Cumulative time: 132.914715051651

BaB round 24
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 493] [/input-8, 930] [/input, 534] [/input-8, 2009] [/input, 2253] [/input-8, 1327] [/input-8, 2009] [/input-8, 930] [/input-8, 1950] [/input-8, 105] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3302878141403198
10 lb beta sum: 0.8547951579093933, worst -0.32754844427108765
Time: prepare 0.9497    bound 3.6113    transfer 0.1906    finalize 0.2449    func 5.2200    
Accumulated time: func 63.9664    prepare 11.5508    bound 40.5481    transfer 2.3055    finalize 6.9123    
all_split False
======================Cut inference begins======================
max lb tensor(2.85571289) min lb tensor(-0.32750058)
Number of Verified Splits: 3965 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 551.
#cuts 1-3: 19
#cuts 4-6: 134
#cuts 7-9: 353
#cuts 10-12: 45
#cuts >= 20: 0
BICCOS time: 0.0011715888977050781 
BICCOS Cumulative time: 25.5134916305542
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33536 (27), -0.33405 (27), -0.33119 (27), -0.33078 (27), -0.32985 (27), -0.32954 (27), -0.32915 (27), -0.32850 (27), -0.32750 (27), -0.32738 (27), -0.32719 (27), -0.32662 (27), -0.32659 (27), -0.32624 (27), -0.32610 (27), -0.32605 (27), -0.32586 (27), -0.32583 (27), -0.32532 (27), -0.32526 (27), 
Length of domains: 152161
Time: pickout 0.3104    decision 1.6765    set_bounds 1.6009    solve 6.5879    add 0.0965    
Accumulated time: pickout 3.6959    decision 21.1573    set_bounds 22.4070    solve 66.4767    add 2.8052    
Current (lb-rhs): -0.3353624939918518
352425 domains visited
Cumulative time: 143.2815887928009

BaB round 25
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 379] [/input-8, 1474] [/input-8, 856] [/input-8, 1474] [/input-8, 1077] [/input, 822] [/input-8, 1315] [/input-8, 2027] [/input, 728] [/input, 2170] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.33034762740135193
10 lb beta sum: 0.8419716358184814, worst -0.32758229970932007
Time: prepare 0.9716    bound 3.6078    transfer 0.1930    finalize 0.2513    func 5.2386    
Accumulated time: func 69.2050    prepare 12.5228    bound 44.1558    transfer 2.4985    finalize 7.1637    
all_split False
======================Cut inference begins======================
max lb tensor(1.94230843) min lb tensor(-0.32753712)
Number of Verified Splits: 3777 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 551.
#cuts 1-3: 19
#cuts 4-6: 134
#cuts 7-9: 353
#cuts 10-12: 45
#cuts >= 20: 0
BICCOS time: 0.0014698505401611328 
BICCOS Cumulative time: 25.51496148109436
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33536 (27), -0.33119 (27), -0.33078 (27), -0.32954 (27), -0.32850 (27), -0.32754 (28), -0.32750 (27), -0.32738 (27), -0.32719 (27), -0.32671 (28), -0.32662 (27), -0.32659 (27), -0.32624 (27), -0.32583 (27), -0.32532 (27), -0.32526 (27), -0.32494 (27), -0.32468 (27), -0.32432 (27), -0.32401 (27), 
Length of domains: 164768
Time: pickout 0.3114    decision 1.6920    set_bounds 1.6823    solve 5.2462    add 0.1908    
Accumulated time: pickout 4.0073    decision 22.8493    set_bounds 24.0893    solve 71.7229    add 2.9960    
Current (lb-rhs): -0.3353624939918518
381416 domains visited
Cumulative time: 152.5014066696167

BaB round 26
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 379] [/input, 2170] [/input-8, 2009] [/input, 2170] [/input-8, 1077] [/input-8, 1315] [/input-8, 2009] [/input-8, 1918] [/input, 2170] [/input, 2165] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32512640953063965
10 lb beta sum: 0.8790789842605591, worst -0.32240721583366394
Time: prepare 1.0249    bound 3.6107    transfer 0.1915    finalize 0.2868    func 5.3248    
Accumulated time: func 74.5299    prepare 13.5482    bound 47.7665    transfer 2.6900    finalize 7.4505    
all_split False
======================Cut inference begins======================
max lb tensor(3.37179756) min lb tensor(-0.32235658)
Number of Verified Splits: 4194 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 551.
#cuts 1-3: 19
#cuts 4-6: 134
#cuts 7-9: 353
#cuts 10-12: 45
#cuts >= 20: 0
BICCOS time: 0.0016598701477050781 
BICCOS Cumulative time: 25.516621351242065
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33536 (27), -0.33119 (27), -0.33078 (27), -0.32954 (27), -0.32850 (27), -0.32754 (28), -0.32750 (27), -0.32738 (27), -0.32719 (27), -0.32671 (28), -0.32662 (27), -0.32659 (27), -0.32624 (27), -0.32583 (27), -0.32532 (27), -0.32494 (27), -0.32468 (27), -0.32432 (27), -0.32401 (27), -0.32386 (27), 
Length of domains: 176958
Time: pickout 0.3178    decision 2.9770    set_bounds 1.7652    solve 5.3340    add 0.2900    
Accumulated time: pickout 4.3251    decision 25.8264    set_bounds 25.8545    solve 77.0570    add 3.2860    
Current (lb-rhs): -0.3353624939918518
409990 domains visited
Cumulative time: 163.339271068573

BaB round 27
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1655] [/input-8, 1933] [/input-8, 105] [/input-8, 1315] [/input-8, 1933] [/input-8, 105] [/input-8, 1933] [/input-8, 1947] [/input-8, 1315] [/input-8, 1947] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32469260692596436
10 lb beta sum: 0.8990439176559448, worst -0.32178986072540283
Time: prepare 0.9942    bound 3.6100    transfer 0.1879    finalize 0.2655    func 5.2744    
Accumulated time: func 79.8043    prepare 14.5428    bound 51.3766    transfer 2.8779    finalize 7.7159    
all_split False
======================Cut inference begins======================
max lb tensor(2.48324394) min lb tensor(-0.32166797)
Number of Verified Splits: 4138 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 551.
#cuts 1-3: 19
#cuts 4-6: 134
#cuts 7-9: 353
#cuts 10-12: 45
#cuts >= 20: 0
BICCOS time: 0.0014083385467529297 
BICCOS Cumulative time: 25.51802968978882
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33536 (27), -0.33119 (27), -0.33078 (27), -0.32954 (27), -0.32754 (28), -0.32750 (27), -0.32738 (27), -0.32719 (27), -0.32671 (28), -0.32662 (27), -0.32659 (27), -0.32624 (27), -0.32583 (27), -0.32532 (27), -0.32494 (27), -0.32468 (27), -0.32386 (27), -0.32376 (27), -0.32344 (27), -0.32340 (28), 
Length of domains: 189204
Time: pickout 0.3286    decision 1.6881    set_bounds 3.5129    solve 5.2820    add 0.1466    
Accumulated time: pickout 4.6537    decision 27.5145    set_bounds 29.3674    solve 82.3390    add 3.4325    
Current (lb-rhs): -0.3353624939918518
438620 domains visited
Cumulative time: 174.40198183059692

BaB round 28
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 379] [/input-8, 155] [/input-8, 930] [/input-8, 1521] [/input-8, 930] [/input-8, 379] [/input-8, 1933] [/input-8, 930] [/input-8, 2009] [/input-8, 1830] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32805782556533813
10 lb beta sum: 0.8626477718353271, worst -0.32285478711128235
Time: prepare 0.9926    bound 3.6089    transfer 0.1922    finalize 0.3173    func 5.3234    
Accumulated time: func 85.1277    prepare 15.5359    bound 54.9854    transfer 3.0701    finalize 8.0333    
all_split False
======================Cut inference begins======================
max lb tensor(1.45932770) min lb tensor(-0.32283437)
Number of Verified Splits: 3954 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 551.
#cuts 1-3: 19
#cuts 4-6: 134
#cuts 7-9: 353
#cuts 10-12: 45
#cuts >= 20: 0
BICCOS time: 0.0016126632690429688 
BICCOS Cumulative time: 25.51964235305786
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33536 (27), -0.33119 (27), -0.33078 (27), -0.32954 (27), -0.32754 (28), -0.32750 (27), -0.32719 (27), -0.32671 (28), -0.32662 (27), -0.32659 (27), -0.32624 (27), -0.32532 (27), -0.32494 (27), -0.32468 (27), -0.32386 (27), -0.32376 (27), -0.32344 (27), -0.32340 (28), -0.32334 (28), -0.32300 (27), 
Length of domains: 201634
Time: pickout 0.3171    decision 1.6876    set_bounds 1.7358    solve 5.3407    add 0.1672    
Accumulated time: pickout 4.9708    decision 29.2021    set_bounds 31.1032    solve 87.6797    add 3.5997    
Current (lb-rhs): -0.3353624939918518
467434 domains visited
Cumulative time: 183.77752947807312

BaB round 29
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1315] [/input-8, 210] [/input-8, 1947] [/input, 2619] [/input-8, 1723] [/input-8, 1327] [/input-8, 1723] [/input-8, 1327] [/input-8, 418] [/input, 518] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8890014886856079, worst -0.3231320083141327
10 lb beta sum: 0.9912632703781128, worst -0.32294347882270813
Time: prepare 1.6913    bound 3.6097    transfer 0.1898    finalize 0.3080    func 6.0111    
Accumulated time: func 91.1388    prepare 17.2276    bound 58.5951    transfer 3.2599    finalize 8.3413    
all_split False
======================Cut inference begins======================
max lb tensor(0.84487200) min lb tensor(-0.32284293)
Number of Verified Splits: 3061 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 551.
#cuts 1-3: 19
#cuts 4-6: 134
#cuts 7-9: 353
#cuts 10-12: 45
#cuts >= 20: 0
BICCOS time: 0.0017359256744384766 
BICCOS Cumulative time: 25.5213782787323
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33536 (27), -0.33119 (27), -0.33078 (27), -0.32754 (28), -0.32750 (27), -0.32719 (27), -0.32671 (28), -0.32662 (27), -0.32659 (27), -0.32624 (27), -0.32532 (27), -0.32468 (27), -0.32386 (27), -0.32376 (27), -0.32344 (27), -0.32340 (28), -0.32334 (28), -0.32300 (27), -0.32289 (27), -0.32284 (28), 
Length of domains: 214957
Time: pickout 0.3305    decision 3.3634    set_bounds 1.8676    solve 6.0219    add 0.1134    
Accumulated time: pickout 5.3014    decision 32.5655    set_bounds 32.9708    solve 93.7016    add 3.7130    
Current (lb-rhs): -0.3353624939918518
497141 domains visited
Cumulative time: 195.62075972557068

BaB round 30
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1410] [/input-8, 1947] [/input-8, 1473] [/input-8, 1077] [/input, 2165] [/input-8, 930] [/input-8, 1947] [/input-8, 1933] [/input-8, 1521] [/input-8, 210] 
cut re-enabled after branching node selection
0 lb beta sum: 1.009505271911621, worst -0.3288434147834778
10 lb beta sum: 1.0144779682159424, worst -0.3287823796272278
Time: prepare 1.7722    bound 3.6173    transfer 0.1992    finalize 0.3591    func 6.1620    
Accumulated time: func 97.3008    prepare 19.0003    bound 62.2123    transfer 3.4591    finalize 8.7004    
all_split False
======================Cut inference begins======================
max lb tensor(0.47285652) min lb tensor(-0.32875055)
Number of Verified Splits: 3150 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 551.
#cuts 1-3: 19
#cuts 4-6: 134
#cuts 7-9: 353
#cuts 10-12: 45
#cuts >= 20: 0
BICCOS time: 0.0018024444580078125 
BICCOS Cumulative time: 25.523180723190308
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32875 (28), -0.32784 (28), -0.32754 (28), -0.32750 (27), -0.32671 (28), -0.32662 (27), -0.32624 (27), -0.32468 (27), -0.32457 (28), -0.32415 (28), -0.32386 (27), -0.32368 (28), -0.32344 (27), -0.32340 (28), -0.32334 (28), -0.32329 (28), -0.32289 (27), -0.32284 (28), -0.32283 (28), -0.32269 (28), 
Length of domains: 228191
Time: pickout 0.3237    decision 1.7005    set_bounds 3.6918    solve 6.1730    add 0.2820    
Accumulated time: pickout 5.6251    decision 34.2660    set_bounds 36.6626    solve 99.8746    add 3.9950    
Current (lb-rhs): -0.3287505507469177
526759 domains visited
Time out!!!!!!!!
Result: unknown in 211.9761 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 12, vnnlib ID: 12 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.68780136, -26.15962219, -23.40921974, -24.52124786, -26.42298889,
         -23.68336105, -28.95411110, -24.06157303, -25.09902763, -25.49360847]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [794]; unstable size 794; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 203, 1, 794] with unstable size 202 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 794] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 794] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [202]; unstable size 202; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 202] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 202] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.43833065, -1.58463216, -2.84343076, -1.48849297,  0.34068131,
         -2.53078699,  2.24324894, -1.76802540, -1.23622322]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.68780136, -26.15962219, -23.40921974, -24.52124786, -26.42298889,
         -23.68336105, -28.95411110, -24.06157303, -25.09902763, -25.49360847]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.68779755, -26.15962601, -23.40921974, -24.52124977, -26.42299271,
          -23.68336105, -28.95411110, -24.06157303, -25.09902573, -25.49361038],
         [-23.68779755, -26.15962601, -23.40921974, -24.52124977, -26.42299271,
          -23.68336105, -28.95411110, -24.06157303, -25.09902573, -25.49361038]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.37377548,  2.09805298, -0.65235329,  0.45967674, -0.37821198,
           1.03745270,  1.43203735]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]],


         [[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]],


         [[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]],


         ...,


         [[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]],


         [[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]],


         [[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]]]], device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1185 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 13, vnnlib ID: 13 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-40.34185791, -36.78374100, -44.66277695, -45.02162170, -46.82358551,
         -47.10256958, -45.26756668, -47.86167526, -42.02795029, -40.94594193]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [956]; unstable size 956; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 326, 1, 956] with unstable size 325 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 42, 1, 956] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 956] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [325]; unstable size 325; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 42, 1, 325] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 325] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [41]; unstable size 41; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.56371975,  2.50635910,  3.96184158,  4.14225769,  5.75749350,
          4.00275517,  5.10888290,  1.35956526,  1.22072887]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-40.34185791, -36.78374100, -44.66277695, -45.02162170, -46.82358551,
         -47.10256958, -45.26756668, -47.86167526, -42.02795029, -40.94594193]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.91it/s]100%|██████████| 1/1 [00:00<00:00,  8.90it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.12028885, -36.99781418, -43.38648224, -44.10950470, -45.50385666,
          -46.09274673, -44.43596268, -46.56410599, -41.31240845, -40.53982162]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.12247467]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1151 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 31.598003387451172
alpha/beta optimization time: 1.2428934574127197
initial alpha-crown bounds: tensor([[-0.20627403,  2.94420815,  4.44938469,  4.66287899,  6.24861336,
          4.55738878,  5.59626770,  1.70236301,  1.64317274]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.20627403259277344
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.56167268753052
Verifying property 0 with 1 instances.
##### Instance 13 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.20627403]], device='cuda:0') need to verify.
Model prediction is: tensor([-40.34185791, -36.78374100, -44.66277695, -45.02162170, -46.82358551,
        -47.10256958, -45.26756668, -47.86167526, -42.02795029, -40.94594193],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.20627403]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 956
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 316
Node /15 input 0: size torch.Size([100]) unstable 40
-----------------
# of unstable neurons: 1312
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011515617370605469
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2062702178955078
10 lb beta sum: 0.0, worst -0.2063131332397461
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0555    transfer 0.0001    finalize 0.0001    func 0.0560    
Accumulated time: func 0.0560    prepare 0.0002    bound 0.0555    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 72] 
split level 3: [/input-12, 49] 
split level 4: [/input-12, 51] 
split level 5: [/input-12, 22] 
split level 6: [/input-12, 62] 
split level 7: [/input-12, 58] 
split level 8: [/input-12, 48] 
split level 9: [/input-12, 67] 
split level 10: [/input-12, 94] 
split level 11: [/input-12, 81] 
split level 12: [/input-12, 14] 
split level 13: [/input-12, 97] 
split level 14: [/input-12, 29] 
split level 15: [/input-8, 555] 
split level 16: [/input-12, 50] 
split level 17: [/input-12, 84] 
split level 18: [/input-8, 1490] 
split level 19: [/input-12, 75] 
split level 20: [/input-8, 1498] 
split level 21: [/input-8, 989] 
split level 22: [/input-8, 1969] 
split level 23: [/input-8, 1501] 
split level 24: [/input-8, 1139] 
split level 25: [/input-8, 982] 
split level 26: [/input-8, 477] 
split level 27: [/input-8, 1934] 
split level 28: [/input-8, 1738] 
split level 29: [/input-8, 1891] 
split level 30: [/input, 3223] 
split level 31: [/input-8, 1493] 
split level 32: [/input-8, 1708] 
split level 33: [/input-8, 1143] 
split level 34: [/input-8, 1304] 
split level 35: [/input-8, 1971] 
split level 36: [/input-8, 1932] 
split level 37: [/input-8, 1643] 
split level 38: [/input-8, 476] 
split level 39: [/input-8, 226] 
split level 40: [/input-8, 956] 
split level 41: [/input, 2775] 
split level 42: [/input-8, 550] 
split level 43: [/input-8, 1970] 
split level 44: [/input-8, 1317] 
split level 45: [/input-8, 954] 
split level 46: [/input-12, 47] 
split level 47: [/input-8, 1502] 
split level 48: [/input-8, 541] 
split level 49: [/input-8, 1290] 
split level 50: [/input-8, 980] 
split level 51: [/input-8, 101] 
split level 52: [/input-8, 955] 
split level 53: [/input-8, 549] 
split level 54: [/input-8, 410] 
split level 55: [/input-8, 430] 
split level 56: [/input-12, 71] 
split level 57: [/input-8, 1915] 
split level 58: [/input-8, 202] 
split level 59: [/input-8, 1917] 
split level 60: [/input-8, 446] 
split level 61: [/input, 715] 
split level 62: [/input, 2776] 
split level 63: [/input-8, 551] 
split level 64: [/input-8, 1884] 
split level 65: [/input, 1001] 
split level 66: [/input, 3207] 
split level 67: [/input, 2757] 
split level 68: [/input-8, 163] 
split level 69: [/input-8, 803] 
split level 70: [/input, 971] 
split level 71: [/input, 2157] 
split level 72: [/input-8, 998] 
split level 73: [/input-8, 1916] 
split level 74: [/input-8, 1933] 
split level 75: [/input, 2981] 
split level 76: [/input-8, 1913] 
split level 77: [/input, 727] 
split level 78: [/input-8, 1908] 
split level 79: [/input-8, 432] 
split level 80: [/input-8, 1935] 
split level 81: [/input-8, 1875] 
split level 82: [/input-8, 973] 
split level 83: [/input-8, 1646] 
split level 84: [/input, 747] 
split level 85: [/input-8, 1753] 
split level 86: [/input, 1170] 
split level 87: [/input, 229] 
split level 88: [/input-8, 1881] 
split level 89: [/input, 2724] 
split level 90: [/input, 730] 
split level 91: [/input-8, 1065] 
split level 92: [/input-8, 1914] 
split level 93: [/input-8, 953] 
split level 94: [/input, 725] 
split level 95: [/input, 2739] 
split level 96: [/input-8, 1926] 
split level 97: [/input-8, 1651] 
split level 98: [/input, 2518] 
split level 99: [/input-8, 1484] 
split level 100: [/input, 2533] 
split level 101: [/input-8, 1427] 
split level 102: [/input, 717] 
split level 103: [/input-8, 1739] 
split level 104: [/input-8, 1296] 
split level 105: [/input, 1198] 
split level 106: [/input, 713] 
split level 107: [/input, 982] 
split level 108: [/input-8, 110] 
split level 109: [/input-8, 1546] 
split level 110: [/input, 746] 
split level 111: [/input, 1197] 
split level 112: [/input, 988] 
split level 113: [/input-8, 943] 
split level 114: [/input-8, 1745] 
split level 115: [/input, 2534] 
split level 116: [/input, 981] 
split level 117: [/input, 1253] 
split level 118: [/input, 2516] 
split level 119: [/input, 920] 
split level 120: [/input, 2522] 
split level 121: [/input-8, 1555] 
split level 122: [/input, 983] 
split level 123: [/input, 1199] 
split level 124: [/input, 2977] 
split level 125: [/input-8, 1428] 
split level 126: [/input, 2140] 
split level 127: [/input, 718] 
split level 128: [/input, 218] 
split level 129: [/input-8, 1554] 
split level 130: [/input, 726] 
split level 131: [/input, 1182] 
split level 132: [/input-8, 2008] 
split level 133: [/input, 2532] 
split level 134: [/input, 3250] 
split level 135: [/input, 716] 
split level 136: [/input, 202] 
split level 137: [/input, 1251] 
split level 138: [/input, 1236] 
split level 139: [/input, 4061] 
split level 140: [/input-8, 225] 
split level 141: [/input, 708] 
split level 142: [/input, 3973] 
split level 143: [/input, 884] 
split level 144: [/input-8, 674] 
split level 145: [/input, 233] 
split level 146: [/input-8, 1510] 
split level 147: [/input, 732] 
split level 148: [/input, 900] 
split level 149: [/input-8, 702] 
split level 150: [/input-8, 460] 
split level 151: [/input, 2950] 
split level 152: [/input, 2755] 
split level 153: [/input, 2519] 
split level 154: [/input, 3132] 
split level 155: [/input, 2515] 
split level 156: [/input, 1237] 
split level 157: [/input, 3133] 
split level 158: [/input, 4060] 
split level 159: [/input, 1968] 
split level 160: [/input, 4049] 
split level 161: [/input, 649] 
split level 162: [/input, 3006] 
split level 163: [/input, 743] 
split level 164: [/input, 235] 
split level 165: [/input-8, 1393] 
split level 166: [/input-8, 1893] 
split level 167: [/input-8, 217] 
split level 168: [/input, 137] 
split level 169: [/input, 2531] 
split level 170: [/input, 212] 
split level 171: [/input, 1254] 
split level 172: [/input, 2537] 
split level 173: [/input, 2538] 
split level 174: [/input, 4075] 
split level 175: [/input, 989] 
split level 176: [/input, 227] 
split level 177: [/input-8, 673] 
split level 178: [/input, 1133] 
split level 179: [/input, 2978] 
split level 180: [/input, 3907] 
split level 181: [/input-8, 359] 
split level 182: [/input, 724] 
split level 183: [/input, 664] 
split level 184: [/input, 2654] 
split level 185: [/input, 1246] 
split level 186: [/input, 1217] 
split level 187: [/input-8, 1947] 
split level 188: [/input, 234] 
split level 189: [/input, 1218] 
split level 190: [/input-8, 1865] 
split level 191: [/input, 999] 
split level 192: [/input, 211] 
split level 193: [/input, 748] 
split level 194: [/input, 3889] 
split level 195: [/input, 226] 
split level 196: [/input, 215] 
split level 197: [/input, 2792] 
split level 198: [/input, 1250] 
split level 199: [/input, 3228] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20570659637451172
10 lb beta sum: 0.0, worst -0.20571136474609375
Time: prepare 0.0115    bound 0.1110    transfer 0.0074    finalize 0.0034    func 0.1359    
Accumulated time: func 0.1920    prepare 0.0224    bound 0.1666    transfer 0.0075    finalize 0.0035    
all_split False
======================Cut inference begins======================
max lb tensor(0.57717705) min lb tensor(-0.20564747)
Number of Verified Splits: 11 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 11
#cuts >= 20: 0
BICCOS time: 0.011888265609741211 
BICCOS Cumulative time: 0.011888265609741211
Preprocessing time: 0.010958194732666016 Inference time: 0.0004553794860839844 Add cuts time: 0.00015091896057128906 Cut analysis time: 0.0003237724304199219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17638 (1), -0.17631 (1), -0.17533 (1), -0.17521 (1), -0.17474 (1), -0.17464 (1), -0.17449 (1), -0.17406 (1), -0.17386 (1), -0.17385 (1), -0.17261 (1), -0.17230 (1), -0.17071 (1), -0.16997 (1), -0.16745 (1), -0.16691 (1), -0.16497 (1), -0.16478 (1), -0.16097 (1), -0.16095 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5623    set_bounds 0.0118    solve 0.1361    add 0.2172    
Accumulated time: pickout 0.0003    decision 0.5623    set_bounds 0.0118    solve 0.1361    add 0.2172    
Current (lb-rhs): -0.17638015747070312
50 domains visited
Cumulative time: 1.0135939121246338

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 1: [/input-12, 51] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] 
split level 2: [/input-12, 22] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
split level 3: [/input-12, 58] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 58] [/input-12, 22] [/input-12, 22] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08916378021240234

all verified at 1th iter
Time: prepare 0.0071    bound 0.0127    transfer 0.0013    finalize 0.0027    func 0.0264    
Accumulated time: func 0.2184    prepare 0.0298    bound 0.1792    transfer 0.0088    finalize 0.0062    
all_split False
======================Cut inference begins======================
max lb tensor(0.43628883) min lb tensor(0.00333786)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.0386960506439209 
BICCOS Cumulative time: 0.05058431625366211
Preprocessing time: 0.012013435363769531 Inference time: 0.01672816276550293 Add cuts time: 0.009402990341186523 Cut analysis time: 0.0005514621734619141
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0016    decision 0.0206    set_bounds 0.0139    solve 0.0265    add 0.0160    
Accumulated time: pickout 0.0019    decision 0.5829    set_bounds 0.0256    solve 0.1625    add 0.2332    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 60] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 49] 
split level 3: [/input-12, 51] 
split level 4: [/input-12, 22] 
split level 5: [/input-12, 62] 
split level 6: [/input-12, 58] 
split level 7: [/input-12, 48] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.6636581420898438

all verified at 0th iter
Time: prepare 0.0037    bound 0.0049    transfer 0.0025    finalize 0.0016    func 0.0143    
Accumulated time: func 0.2326    prepare 0.0340    bound 0.1841    transfer 0.0113    finalize 0.0079    
all_split False
======================Cut inference begins======================
max lb tensor(2.26206636) min lb tensor(0.66365814)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006705760955810547 
BICCOS Cumulative time: 0.057290077209472656
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0013    decision 0.0244    set_bounds 0.0168    solve 0.0143    add 0.0001    
Accumulated time: pickout 0.0032    decision 0.6072    set_bounds 0.0424    solve 0.1769    add 0.2333    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.1991522312164307


Properties batch 1, size 1
Remaining timeout: 197.11995482444763
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 197.11986994743347
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 197.11984276771545
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.1198205947876
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.1198000907898
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.11978006362915
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.11975955963135
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.11973905563354
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.8803 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 14, vnnlib ID: 14 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-39.31512070, -36.00486374, -40.09265137, -39.30841064, -40.12274933,
         -40.50569916, -40.75704193, -40.43707275, -38.91948318, -32.73651123]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [687]; unstable size 687; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 284, 1, 687] with unstable size 283 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 40, 1, 687] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 687] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [283]; unstable size 283; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 40, 1, 283] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 283] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [39]; unstable size 39; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.02535868, 0.36727047, 3.69666028, 3.21157932, 3.21280527, 4.34720993,
         4.00435066, 3.64396763, 3.39740610]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0878 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 15, vnnlib ID: 15 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.60542107, -22.64872169, -17.96555138, -15.90467358, -16.47418404,
         -16.07877350, -18.54779243, -17.35577393, -22.03709793, -21.25620842]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [741]; unstable size 741; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 264, 1, 741] with unstable size 263 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 37, 1, 741] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 741] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [263]; unstable size 263; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 37, 1, 263] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 263] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [36]; unstable size 36; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.74012601,  3.59304166, -0.74398327, -1.57908940, -0.90932792,
          0.58877230, -1.01383197,  3.27916098,  2.14460444]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.60542107, -22.64872169, -17.96555138, -15.90467358, -16.47418404,
         -16.07877350, -18.54779243, -17.35577393, -22.03709793, -21.25620842]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.81422806, -23.06745338, -18.11808968, -16.49937248, -16.15883255,
          -16.71109962, -18.94317818, -17.48009300, -22.29871559, -21.67205429],
         [-20.81422806, -23.06745338, -18.11808968, -16.49937248, -16.15883255,
          -16.71109962, -18.94317818, -17.48009300, -22.29871559, -21.67205429]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.61871719, -0.34053993,  0.21172714,  0.98072052]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0167 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0779 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 16, vnnlib ID: 16 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-45.56899643, -48.36753464, -41.12248230, -40.69652557, -40.89186478,
         -41.20032120, -41.07677841, -43.72024918, -48.07925034, -48.24676895]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1024]; unstable size 1024; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 462, 1, 1024] with unstable size 461 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 50, 1, 1024] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1024] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [461]; unstable size 461; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 50, 1, 461] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 461] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [49]; unstable size 49; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 49] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.28891528,  1.92240810, -3.84409595, -3.49120736, -1.30877280,
         -3.04051828, -1.52045369,  1.77013016,  1.91385746]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-45.56899643, -48.36753464, -41.12248230, -40.69652557, -40.89186478,
         -41.20032120, -41.07677841, -43.72024918, -48.07925034, -48.24676895]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-45.28135681, -48.74975967, -40.35823059, -41.15579987, -40.70154572,
          -41.69010925, -41.09566116, -43.61277771, -48.17367554, -48.69392395],
         [-45.28135681, -48.74975967, -40.35823059, -41.15579987, -40.70154572,
          -41.69010925, -41.09566116, -43.61277771, -48.17367554, -48.69392395]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 4.12555695, -0.79756927, -0.45425415,  0.53430939, -0.06013870,
           2.45697784]]], device='cuda:0')
number of violation:  3
Attack finished in 0.0116 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0982 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 17, vnnlib ID: 17 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-45.83418655, -40.69628143, -50.66798401, -49.53777313, -49.79728699,
         -52.14452362, -50.08717346, -51.86963272, -45.47626877, -43.70071030]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [640]; unstable size 640; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 307, 1, 640] with unstable size 306 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 34, 1, 640] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 640] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [306]; unstable size 306; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 34, 1, 306] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 306] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.44929647, 5.71793127, 5.19737148, 5.14543819, 7.23885345, 5.72980165,
         6.85118771, 2.15747619, 0.76490045]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0866 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 18, vnnlib ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-40.12142563, -44.19668961, -34.08209991, -36.71353149, -34.07798767,
         -36.54196930, -31.82049751, -38.26199341, -42.62282944, -43.62260818]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [580]; unstable size 580; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 364, 1, 580] with unstable size 363 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 47, 1, 580] with unstable size 46 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 580] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [363]; unstable size 363; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 47, 1, 363] with unstable size 46 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 363] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [46]; unstable size 46; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 46] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.88499928,  7.10897255, -1.46649408,  1.92010260, -1.19054222,
          0.98264551,  1.80729866,  6.63543034,  6.82364559]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-40.12142563, -44.19668961, -34.08209991, -36.71353149, -34.07798767,
         -36.54196930, -31.82049751, -38.26199341, -42.62282944, -43.62260818]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.86it/s]100%|██████████| 1/1 [00:00<00:00,  8.85it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.86682892, -44.19508743, -34.08879471, -36.60882568, -33.36822891,
          -36.41748428, -32.47470856, -37.69519806, -42.50613785, -43.52939606],
         [-39.86682892, -44.19508743, -34.08879471, -36.60882568, -33.36822891,
          -36.41748428, -32.47470856, -37.69519806, -42.50613785, -43.52939606]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.61408615, 0.89352036]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1158 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 28.402740478515625
alpha/beta optimization time: 1.2377519607543945
initial alpha-crown bounds: tensor([[ 4.13616371,  7.34356499, -1.23391008,  2.08684874, -1.01582909,
          1.18213177,  2.06693244,  6.82820129,  7.00863838]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -1.233910083770752
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.5628650188446
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.56282210350037
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.56279301643372
Verifying property 2 with 1 instances.
##### Instance 18 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.23391008]], device='cuda:0') need to verify.
Model prediction is: tensor([-40.12142563, -44.19668961, -34.08209991, -36.71353149, -34.07798767,
        -36.54196930, -31.82049751, -38.26199341, -42.62282944, -43.62260818],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.23391008]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 580
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 359
Node /15 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 984
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010085105895996094
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.233903408050537
10 lb beta sum: 0.0, worst -1.2339129447937012
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0535    transfer 0.0001    finalize 0.0001    func 0.0540    
Accumulated time: func 0.0540    prepare 0.0002    bound 0.0535    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 30] 
split level 1: [/input-12, 7] 
split level 2: [/input-12, 40] 
split level 3: [/input-12, 66] 
split level 4: [/input-12, 49] 
split level 5: [/input-12, 50] 
split level 6: [/input-12, 28] 
split level 7: [/input-12, 83] 
split level 8: [/input-12, 61] 
split level 9: [/input-12, 8] 
split level 10: [/input-12, 71] 
split level 11: [/input-12, 46] 
split level 12: [/input-12, 95] 
split level 13: [/input-12, 10] 
split level 14: [/input-12, 16] 
split level 15: [/input-12, 14] 
split level 16: [/input-12, 85] 
split level 17: [/input-12, 33] 
split level 18: [/input-12, 73] 
split level 19: [/input-8, 988] 
split level 20: [/input-12, 19] 
split level 21: [/input-8, 1883] 
split level 22: [/input-12, 67] 
split level 23: [/input-12, 84] 
split level 24: [/input-8, 1876] 
split level 25: [/input-8, 1300] 
split level 26: [/input-8, 1125] 
split level 27: [/input-8, 547] 
split level 28: [/input-8, 867] 
split level 29: [/input-8, 989] 
split level 30: [/input-8, 1124] 
split level 31: [/input-8, 1780] 
split level 32: [/input-8, 1126] 
split level 33: [/input-8, 725] 
split level 34: [/input-8, 546] 
split level 35: [/input-8, 724] 
split level 36: [/input-8, 608] 
split level 37: [/input-12, 97] 
split level 38: [/input-8, 1483] 
split level 39: [/input-8, 617] 
split level 40: [/input-8, 436] 
split level 41: [/input-8, 1566] 
split level 42: [/input-8, 1475] 
split level 43: [/input-8, 1001] 
split level 44: [/input-8, 1875] 
split level 45: [/input-8, 418] 
split level 46: [/input-8, 1869] 
split level 47: [/input-12, 94] 
split level 48: [/input-8, 668] 
split level 49: [/input-8, 1061] 
split level 50: [/input-8, 1115] 
split level 51: [/input-8, 723] 
split level 52: [/input-8, 1500] 
split level 53: [/input-8, 732] 
split level 54: [/input-8, 716] 
split level 55: [/input-8, 600] 
split level 56: [/input-8, 1954] 
split level 57: [/input-8, 345] 
split level 58: [/input-12, 35] 
split level 59: [/input-8, 1867] 
split level 60: [/input-8, 1939] 
split level 61: [/input-8, 868] 
split level 62: [/input-8, 404] 
split level 63: [/input-8, 560] 
split level 64: [/input-8, 532] 
split level 65: [/input-8, 1860] 
split level 66: [/input-8, 1000] 
split level 67: [/input-8, 1789] 
split level 68: [/input-8, 1482] 
split level 69: [/input-8, 1122] 
split level 70: [/input-8, 667] 
split level 71: [/input, 3220] 
split level 72: [/input-8, 1489] 
split level 73: [/input-8, 427] 
split level 74: [/input-8, 1553] 
split level 75: [/input-8, 1469] 
split level 76: [/input-8, 505] 
split level 77: [/input-8, 930] 
split level 78: [/input-8, 999] 
split level 79: [/input-8, 1962] 
split level 80: [/input-8, 1498] 
split level 81: [/input-8, 1868] 
split level 82: [/input-8, 425] 
split level 83: [/input-8, 1044] 
split level 84: [/input-8, 616] 
split level 85: [/input-8, 437] 
split level 86: [/input-8, 1252] 
split level 87: [/input-8, 1752] 
split level 88: [/input-8, 614] 
split level 89: [/input-8, 1870] 
split level 90: [/input-8, 621] 
split level 91: [/input-8, 977] 
split level 92: [/input, 2425] 
split level 93: [/input, 3204] 
split level 94: [/input-8, 545] 
split level 95: [/input-8, 564] 
split level 96: [/input-8, 1424] 
split level 97: [/input-8, 506] 
split level 98: [/input-8, 329] 
split level 99: [/input-8, 1882] 
split level 100: [/input-8, 1857] 
split level 101: [/input-8, 1862] 
split level 102: [/input, 2164] 
split level 103: [/input-8, 1628] 
split level 104: [/input-8, 1147] 
split level 105: [/input, 2645] 
split level 106: [/input-8, 1138] 
split level 107: [/input-8, 923] 
split level 108: [/input-8, 1549] 
split level 109: [/input-12, 82] 
split level 110: [/input-8, 765] 
split level 111: [/input, 2771] 
split level 112: [/input-8, 916] 
split level 113: [/input-8, 1866] 
split level 114: [/input-8, 588] 
split level 115: [/input-8, 718] 
split level 116: [/input-8, 892] 
split level 117: [/input-8, 597] 
split level 118: [/input-8, 1145] 
split level 119: [/input-8, 1636] 
split level 120: [/input-8, 1067] 
split level 121: [/input-8, 1078] 
split level 122: [/input-8, 552] 
split level 123: [/input, 3219] 
split level 124: [/input-8, 1627] 
split level 125: [/input-8, 525] 
split level 126: [/input, 854] 
split level 127: [/input, 2678] 
split level 128: [/input-8, 1532] 
split level 129: [/input-8, 1261] 
split level 130: [/input-8, 929] 
split level 131: [/input-8, 580] 
split level 132: [/input-8, 1064] 
split level 133: [/input-8, 893] 
split level 134: [/input-8, 1016] 
split level 135: [/input-8, 1873] 
split level 136: [/input-8, 442] 
split level 137: [/input-8, 1041] 
split level 138: [/input-8, 590] 
split level 139: [/input, 2772] 
split level 140: [/input-8, 504] 
split level 141: [/input-8, 1070] 
split level 142: [/input-8, 703] 
split level 143: [/input-8, 1529] 
split level 144: [/input-8, 917] 
split level 145: [/input, 2951] 
split level 146: [/input-8, 844] 
split level 147: [/input-8, 434] 
split level 148: [/input-8, 2038] 
split level 149: [/input-8, 410] 
split level 150: [/input-8, 397] 
split level 151: [/input-8, 556] 
split level 152: [/input-8, 1427] 
split level 153: [/input, 2969] 
split level 154: [/input, 1624] 
split level 155: [/input-8, 598] 
split level 156: [/input-8, 1503] 
split level 157: [/input-8, 1393] 
split level 158: [/input-8, 1104] 
split level 159: [/input, 1214] 
split level 160: [/input, 2211] 
split level 161: [/input, 870] 
split level 162: [/input-8, 1750] 
split level 163: [/input-8, 481] 
split level 164: [/input, 2244] 
split level 165: [/input-8, 1435] 
split level 166: [/input-8, 1130] 
split level 167: [/input-8, 1494] 
split level 168: [/input-8, 1065] 
split level 169: [/input-8, 509] 
split level 170: [/input, 2953] 
split level 171: [/input, 1172] 
split level 172: [/input, 1177] 
split level 173: [/input, 2257] 
split level 174: [/input-8, 1765] 
split level 175: [/input, 478] 
split level 176: [/input, 2030] 
split level 177: [/input-8, 1077] 
split level 178: [/input, 1623] 
split level 179: [/input, 4092] 
split level 180: [/input, 1170] 
split level 181: [/input, 1819] 
split level 182: [/input-8, 1842] 
split level 183: [/input, 2664] 
split level 184: [/input-8, 1438] 
split level 185: [/input-8, 165] 
split level 186: [/input-8, 1763] 
split level 187: [/input, 2770] 
split level 188: [/input-8, 569] 
split level 189: [/input, 3239] 
split level 190: [/input-8, 1684] 
split level 191: [/input-8, 1017] 
split level 192: [/input-8, 619] 
split level 193: [/input, 436] 
split level 194: [/input, 2376] 
split level 195: [/input, 3130] 
split level 196: [/input, 2136] 
split level 197: [/input, 2209] 
split level 198: [/input, 2952] 
split level 199: [/input, 485] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2336950302124023
10 lb beta sum: 0.0, worst -1.2336220741271973
Time: prepare 0.0116    bound 0.1037    transfer 0.0044    finalize 0.0048    func 0.1272    
Accumulated time: func 0.1812    prepare 0.0218    bound 0.1572    transfer 0.0045    finalize 0.0049    
all_split False
======================Cut inference begins======================
max lb tensor(-0.02750587) min lb tensor(-1.23360157)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.011074066162109375 
BICCOS Cumulative time: 0.011074066162109375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.18801 (1), -1.18617 (1), -1.18541 (1), -1.18423 (1), -1.18412 (1), -1.18361 (1), -1.18360 (1), -1.18325 (1), -1.18093 (1), -1.18002 (1), -1.17842 (1), -1.17246 (1), -1.17050 (1), -1.16954 (1), -1.16799 (1), -1.16537 (1), -1.16472 (1), -1.16218 (1), -1.16167 (1), -1.16094 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5213    set_bounds 0.0089    solve 0.1273    add 0.2098    
Accumulated time: pickout 0.0003    decision 0.5213    set_bounds 0.0089    solve 0.1273    add 0.2098    
Current (lb-rhs): -1.1880102157592773
50 domains visited
Cumulative time: 0.9602572917938232

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 40] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
split level 1: [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 28] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] 
split level 2: [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 61] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] 
split level 3: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 8] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.101905345916748
10 lb beta sum: 0.0, worst -1.1014714241027832
Time: prepare 0.0119    bound 0.0989    transfer 0.0059    finalize 0.0025    func 0.1219    
Accumulated time: func 0.3031    prepare 0.0340    bound 0.2561    transfer 0.0105    finalize 0.0075    
all_split False
======================Cut inference begins======================
max lb tensor(0.38045120) min lb tensor(-1.10135937)
Number of Verified Splits: 25 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.01380777359008789 
BICCOS Cumulative time: 0.024881839752197266
Preprocessing time: 0.011844158172607422 Inference time: 0.001102447509765625 Add cuts time: 0.0004792213439941406 Cut analysis time: 0.0003819465637207031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.47384 (2), -0.47313 (2), -0.47283 (2), -0.47172 (2), -0.46677 (2), -0.46442 (2), -0.46088 (2), -0.45291 (2), -0.44984 (2), -0.44615 (2), -0.44545 (2), -0.43096 (2), -0.42843 (2), -0.42333 (2), -0.41939 (2), -0.38293 (2), -0.38253 (2), -0.37343 (2), -0.36651 (2), -0.35409 (2), 
Length of domains: 50
Time: pickout 0.0018    decision 0.0242    set_bounds 0.0145    solve 0.1219    add 0.0817    
Accumulated time: pickout 0.0021    decision 0.5455    set_bounds 0.0234    solve 0.2493    add 0.2915    
Current (lb-rhs): -0.47384071350097656
100 domains visited
Cumulative time: 1.218487024307251

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 40] [/input-12, 7] 
split level 1: [/input-12, 66] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 66] [/input-12, 28] [/input-12, 61] [/input-12, 66] [/input-12, 28] [/input-12, 66] 
split level 2: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 28] [/input-12, 61] [/input-12, 61] [/input-12, 28] 
split level 3: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.43889427185058594
10 lb beta sum: 0.5211723446846008, worst -0.533715546131134
Time: prepare 0.0060    bound 0.1189    transfer 0.0019    finalize 0.0027    func 0.1320    
Accumulated time: func 0.4351    prepare 0.0402    bound 0.3750    transfer 0.0123    finalize 0.0101    
all_split False
======================Cut inference begins======================
max lb tensor(0.83318233) min lb tensor(-0.35369658)
Number of Verified Splits: 225 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 13
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.027762174606323242 
BICCOS Cumulative time: 0.05264401435852051
Preprocessing time: 0.01175069808959961 Inference time: 0.010879755020141602 Add cuts time: 0.0045435428619384766 Cut analysis time: 0.0005881786346435547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15450 (3), -0.15424 (3), -0.14859 (3), -0.14744 (3), -0.14562 (3), -0.14012 (3), -0.13517 (3), -0.13212 (3), -0.12640 (3), -0.12449 (3), -0.12386 (3), -0.12038 (3), -0.11929 (3), -0.11917 (3), -0.11877 (3), -0.10430 (3), -0.10346 (3), -0.10062 (3), -0.09489 (3), -0.09367 (3), 
Length of domains: 50
Time: pickout 0.0009    decision 0.0192    set_bounds 0.0151    solve 0.1321    add 0.1058    
Accumulated time: pickout 0.0031    decision 0.5647    set_bounds 0.0385    solve 0.3814    add 0.3973    
Current (lb-rhs): -0.15450403094291687
150 domains visited
Cumulative time: 1.520662546157837

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 40] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] 
split level 1: [/input-12, 83] [/input-12, 28] [/input-12, 28] [/input-12, 61] [/input-12, 83] [/input-12, 61] [/input-12, 83] [/input-12, 83] [/input-12, 61] [/input-12, 61] 
split level 2: [/input-12, 61] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 61] [/input-12, 8] [/input-12, 8] 
split level 3: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 61] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2246990203857422
10 lb beta sum: 0.8059626817703247, worst -0.22946393489837646
Time: prepare 0.0061    bound 0.1198    transfer 0.0013    finalize 0.0025    func 0.1324    
Accumulated time: func 0.5675    prepare 0.0466    bound 0.4948    transfer 0.0136    finalize 0.0126    
all_split False
======================Cut inference begins======================
max lb tensor(0.40709078) min lb tensor(-0.08023453)
Number of Verified Splits: 395 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 7
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.04231142997741699 
BICCOS Cumulative time: 0.0949554443359375
Preprocessing time: 0.01143789291381836 Inference time: 0.020094633102416992 Add cuts time: 0.01031184196472168 Cut analysis time: 0.00046706199645996094
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0015    decision 0.0202    set_bounds 0.0157    solve 0.1325    add 0.1779    
Accumulated time: pickout 0.0045    decision 0.5848    set_bounds 0.0542    solve 0.5139    add 0.5752    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7] 
split level 1: [/input-12, 40] 
split level 2: [/input-12, 28] 
split level 3: [/input-12, 83] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 8] 
split level 6: [/input-12, 71] 
split level 7: [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4607062339782715
10 lb beta sum: 0.4833740293979645, worst -0.4047628343105316
Time: prepare 0.0037    bound 0.1152    transfer 0.0024    finalize 0.0013    func 0.1243    
Accumulated time: func 0.6918    prepare 0.0508    bound 0.6101    transfer 0.0160    finalize 0.0139    
all_split False
======================Cut inference begins======================
max lb tensor(0.79525661) min lb tensor(-0.40150172)
Number of Verified Splits: 218 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8457980155944824
10 lb beta sum: 1.3899991512298584, worst -0.6862800121307373
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 7
#cuts 4-6: 7
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.23808860778808594 
BICCOS Cumulative time: 0.33304405212402344
Preprocessing time: 0.00644373893737793 Inference time: 0.22722458839416504 Add cuts time: 0.0037338733673095703 Cut analysis time: 0.0006864070892333984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40150 (8), -0.36331 (8), -0.36113 (8), -0.32321 (8), -0.31622 (8), -0.30705 (8), -0.28031 (8), -0.26233 (8), -0.24592 (8), -0.23400 (8), -0.23002 (8), -0.22371 (8), -0.21845 (8), -0.19851 (8), -0.19755 (8), -0.18825 (8), -0.18248 (8), -0.16186 (8), -0.14474 (8), -0.14226 (8), 
Length of domains: 38
Time: pickout 0.0010    decision 0.0237    set_bounds 0.0167    solve 0.1243    add 0.0016    
Accumulated time: pickout 0.0055    decision 0.6085    set_bounds 0.0710    solve 0.6382    add 0.5768    
Current (lb-rhs): -0.40150171518325806
188 domains visited
Cumulative time: 2.3231987953186035

BaB round 2
batch: 38
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] 
split level 1: [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] 
split level 2: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09272575378417969
10 lb beta sum: 0.05912835896015167, worst -0.035412341356277466
Time: prepare 0.0043    bound 0.1205    transfer 0.0028    finalize 0.0021    func 0.1317    
Accumulated time: func 0.8234    prepare 0.0552    bound 0.7306    transfer 0.0188    finalize 0.0160    
all_split False
======================Cut inference begins======================
max lb tensor(0.43995857) min lb tensor(-0.03457355)
Number of Verified Splits: 301 of 304
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.683342456817627
10 lb beta sum: 1.2635542154312134, worst -0.5205352306365967
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 60.
#cuts 1-3: 7
#cuts 4-6: 11
#cuts 7-9: 41
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.31591153144836426 
BICCOS Cumulative time: 0.6489555835723877
Preprocessing time: 0.008898258209228516 Inference time: 0.2858407497406006 Add cuts time: 0.018250465393066406 Cut analysis time: 0.00292205810546875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03457 (11), -0.01139 (11), -0.00340 (11), 
Length of domains: 3
Time: pickout 0.0013    decision 0.0156    set_bounds 0.0156    solve 0.1318    add 0.0008    
Accumulated time: pickout 0.0068    decision 0.6241    set_bounds 0.0865    solve 0.7700    add 0.5776    
Current (lb-rhs): -0.03457355499267578
191 domains visited
Cumulative time: 2.8070068359375

BaB round 3
batch: 3
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 30] [/input-12, 30] [/input-12, 30] 
split level 1: [/input-12, 50] [/input-12, 50] [/input-12, 50] 
split level 2: [/input-12, 95] [/input-12, 95] [/input-12, 95] 
split level 3: [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 4: [/input-12, 19] [/input-12, 19] [/input-12, 19] 
split level 5: [/input-12, 67] [/input-12, 67] [/input-12, 67] 
split level 6: [/input-12, 84] [/input-12, 84] [/input-12, 84] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.13345956802368164

all verified at 0th iter
Time: prepare 0.0054    bound 0.0047    transfer 0.0012    finalize 0.0024    func 0.0161    
Accumulated time: func 0.8396    prepare 0.0610    bound 0.7352    transfer 0.0200    finalize 0.0184    
all_split False
======================Cut inference begins======================
max lb tensor(0.98454118) min lb tensor(0.13345957)
Number of Verified Splits: 384 of 384
No cut inferred: All or none verified.
Total number of valid cuts: 60.
#cuts 1-3: 7
#cuts 4-6: 11
#cuts 7-9: 41
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.011047124862670898 
BICCOS Cumulative time: 0.6600027084350586
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0249    set_bounds 0.0301    solve 0.0162    add 0.0001    
Accumulated time: pickout 0.0079    decision 0.6490    set_bounds 0.1166    solve 0.7863    add 0.5777    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
191 domains visited
Cumulative time: 2.891780376434326


Properties batch 3, size 1
Remaining timeout: 195.3746473789215
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 195.3745632171631
Verifying property 4 with 1 instances.
##### Instance 18 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.01582909]], device='cuda:0') need to verify.
Model prediction is: tensor([-40.12142563, -44.19668961, -34.08209991, -36.71353149, -34.07798767,
        -36.54196930, -31.82049751, -38.26199341, -42.62282944, -43.62260818],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.01582909]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 580
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 359
Node /15 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 984
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.846687316894531e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0158281326293945
10 lb beta sum: 0.0, worst -1.015852928161621
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0534    transfer 0.0001    finalize 0.0001    func 0.0538    
Accumulated time: func 0.0538    prepare 0.0002    bound 0.0534    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 95] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 71] 
split level 3: [/input-12, 40] 
split level 4: [/input-12, 58] 
split level 5: [/input-12, 49] 
split level 6: [/input-12, 73] 
split level 7: [/input-12, 8] 
split level 8: [/input-12, 78] 
split level 9: [/input-12, 50] 
split level 10: [/input-12, 94] 
split level 11: [/input-12, 29] 
split level 12: [/input-12, 67] 
split level 13: [/input-8, 988] 
split level 14: [/input-12, 19] 
split level 15: [/input-12, 82] 
split level 16: [/input-12, 16] 
split level 17: [/input-12, 46] 
split level 18: [/input-8, 989] 
split level 19: [/input-8, 1483] 
split level 20: [/input-12, 30] 
split level 21: [/input-8, 1498] 
split level 22: [/input-8, 1780] 
split level 23: [/input-8, 426] 
split level 24: [/input-8, 345] 
split level 25: [/input-8, 1475] 
split level 26: [/input-12, 36] 
split level 27: [/input-8, 436] 
split level 28: [/input-8, 1124] 
split level 29: [/input-8, 1125] 
split level 30: [/input-8, 418] 
split level 31: [/input-8, 1138] 
split level 32: [/input-8, 1482] 
split level 33: [/input-8, 1500] 
split level 34: [/input-12, 14] 
split level 35: [/input-12, 35] 
split level 36: [/input-8, 1115] 
split level 37: [/input-8, 1126] 
split level 38: [/input-8, 427] 
split level 39: [/input-8, 1489] 
split level 40: [/input-8, 1521] 
split level 41: [/input-8, 1506] 
split level 42: [/input-8, 1300] 
split level 43: [/input-8, 1130] 
split level 44: [/input-8, 617] 
split level 45: [/input-12, 85] 
split level 46: [/input-8, 1067] 
split level 47: [/input-8, 1962] 
split level 48: [/input-8, 1122] 
split level 49: [/input-8, 867] 
split level 50: [/input-12, 54] 
split level 51: [/input-8, 1524] 
split level 52: [/input-8, 1061] 
split level 53: [/input-8, 1636] 
split level 54: [/input-8, 1778] 
split level 55: [/input-8, 404] 
split level 56: [/input-8, 437] 
split level 57: [/input-8, 1393] 
split level 58: [/input-8, 1469] 
split level 59: [/input-8, 1505] 
split level 60: [/input-8, 1943] 
split level 61: [/input-8, 621] 
split level 62: [/input-8, 868] 
split level 63: [/input-8, 411] 
split level 64: [/input, 3977] 
split level 65: [/input-8, 1789] 
split level 66: [/input-8, 1001] 
split level 67: [/input-8, 434] 
split level 68: [/input-8, 1777] 
split level 69: [/input-8, 410] 
split level 70: [/input-8, 1460] 
split level 71: [/input-8, 614] 
split level 72: [/input-8, 471] 
split level 73: [/input-8, 1078] 
split level 74: [/input-8, 1147] 
split level 75: [/input-8, 442] 
split level 76: [/input-8, 1627] 
split level 77: [/input, 4030] 
split level 78: [/input-8, 1066] 
split level 79: [/input-8, 608] 
split level 80: [/input-8, 1628] 
split level 81: [/input-8, 1424] 
split level 82: [/input-8, 1529] 
split level 83: [/input-8, 425] 
split level 84: [/input-8, 1651] 
split level 85: [/input-8, 1532] 
split level 86: [/input-8, 413] 
split level 87: [/input-8, 1390] 
split level 88: [/input-8, 1939] 
split level 89: [/input-8, 1145] 
split level 90: [/input-8, 861] 
split level 91: [/input-8, 999] 
split level 92: [/input-8, 1954] 
split level 93: [/input-8, 668] 
split level 94: [/input-8, 1394] 
split level 95: [/input-8, 483] 
split level 96: [/input, 1624] 
split level 97: [/input-8, 600] 
split level 98: [/input-8, 923] 
split level 99: [/input-8, 1070] 
split level 100: [/input-8, 116] 
split level 101: [/input-8, 1104] 
split level 102: [/input-8, 214] 
split level 103: [/input-8, 893] 
split level 104: [/input, 1143] 
split level 105: [/input-8, 467] 
split level 106: [/input-8, 1261] 
split level 107: [/input-8, 167] 
split level 108: [/input-8, 890] 
split level 109: [/input-8, 616] 
split level 110: [/input, 3941] 
split level 111: [/input-8, 1065] 
split level 112: [/input, 2771] 
split level 113: [/input, 3925] 
split level 114: [/input, 2951] 
split level 115: [/input-8, 892] 
split level 116: [/input-8, 723] 
split level 117: [/input, 1982] 
split level 118: [/input-8, 936] 
split level 119: [/input, 1214] 
split level 120: [/input-8, 930] 
split level 121: [/input, 678] 
split level 122: [/input-8, 725] 
split level 123: [/input, 460] 
split level 124: [/input-8, 1512] 
split level 125: [/input-8, 1875] 
split level 126: [/input, 2969] 
split level 127: [/input, 715] 
split level 128: [/input, 885] 
split level 129: [/input-8, 724] 
split level 130: [/input-8, 732] 
split level 131: [/input, 651] 
split level 132: [/input, 2645] 
split level 133: [/input-8, 977] 
split level 134: [/input-8, 397] 
split level 135: [/input, 1623] 
split level 136: [/input-8, 654] 
split level 137: [/input-8, 1748] 
split level 138: [/input-8, 1077] 
split level 139: [/input-8, 1391] 
split level 140: [/input, 553] 
split level 141: [/input-8, 916] 
split level 142: [/input, 741] 
split level 143: [/input, 1213] 
split level 144: [/input-8, 1064] 
split level 145: [/input-8, 1075] 
split level 146: [/input, 644] 
split level 147: [/input-8, 1862] 
split level 148: [/input, 2104] 
split level 149: [/input, 2583] 
split level 150: [/input-8, 290] 
split level 151: [/input, 725] 
split level 152: [/input, 1947] 
split level 153: [/input, 854] 
split level 154: [/input-8, 92] 
split level 155: [/input, 2001] 
split level 156: [/input, 4019] 
split level 157: [/input-8, 1868] 
split level 158: [/input-8, 1867] 
split level 159: [/input, 2601] 
split level 160: [/input, 1944] 
split level 161: [/input, 3181] 
split level 162: [/input, 1625] 
split level 163: [/input, 675] 
split level 164: [/input, 674] 
split level 165: [/input, 2952] 
split level 166: [/input-8, 588] 
split level 167: [/input, 681] 
split level 168: [/input, 2968] 
split level 169: [/input, 1177] 
split level 170: [/input, 4001] 
split level 171: [/input-8, 929] 
split level 172: [/input-8, 953] 
split level 173: [/input-8, 1263] 
split level 174: [/input, 2092] 
split level 175: [/input, 538] 
split level 176: [/input, 635] 
split level 177: [/input, 2770] 
split level 178: [/input, 478] 
split level 179: [/input, 971] 
split level 180: [/input, 3557] 
split level 181: [/input-8, 580] 
split level 182: [/input-8, 532] 
split level 183: [/input, 870] 
split level 184: [/input, 2216] 
split level 185: [/input, 1172] 
split level 186: [/input, 1201] 
split level 187: [/input, 1639] 
split level 188: [/input, 1230] 
split level 189: [/input, 3239] 
split level 190: [/input-8, 847] 
split level 191: [/input, 2157] 
split level 192: [/input, 2671] 
split level 193: [/input, 1934] 
split level 194: [/input, 3100] 
split level 195: [/input, 1622] 
split level 196: [/input, 1954] 
split level 197: [/input, 1929] 
split level 198: [/input, 3936] 
split level 199: [/input, 2618] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.015580654144287
10 lb beta sum: 0.0, worst -1.0155839920043945
Time: prepare 0.0113    bound 0.0985    transfer 0.0036    finalize 0.0027    func 0.1188    
Accumulated time: func 0.1726    prepare 0.0215    bound 0.1518    transfer 0.0037    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(-0.01029778) min lb tensor(-1.01557064)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010676145553588867 
BICCOS Cumulative time: 0.010676145553588867
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.97851 (1), -0.97511 (1), -0.97413 (1), -0.97243 (1), -0.97208 (1), -0.97166 (1), -0.97026 (1), -0.96948 (1), -0.96801 (1), -0.96547 (1), -0.96543 (1), -0.96486 (1), -0.96298 (1), -0.96294 (1), -0.96194 (1), -0.96093 (1), -0.95522 (1), -0.95380 (1), -0.94967 (1), -0.94919 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5222    set_bounds 0.0086    solve 0.1188    add 0.2335    
Accumulated time: pickout 0.0003    decision 0.5222    set_bounds 0.0086    solve 0.1188    add 0.2335    
Current (lb-rhs): -0.9785051345825195
50 domains visited
Cumulative time: 0.9740023612976074

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 61] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] 
split level 1: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 71] [/input-12, 61] [/input-12, 71] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 2: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 40] [/input-12, 71] [/input-12, 40] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
split level 3: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8388910293579102
10 lb beta sum: 0.0, worst -0.8374934196472168
Time: prepare 0.0126    bound 0.1138    transfer 0.0008    finalize 0.0033    func 0.1332    
Accumulated time: func 0.3058    prepare 0.0344    bound 0.2656    transfer 0.0045    finalize 0.0061    
all_split False
======================Cut inference begins======================
max lb tensor(0.60564280) min lb tensor(-0.83718729)
Number of Verified Splits: 43 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.017918825149536133 
BICCOS Cumulative time: 0.028594970703125
Preprocessing time: 0.013724088668823242 Inference time: 0.002065896987915039 Add cuts time: 0.0007448196411132812 Cut analysis time: 0.0013840198516845703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21661 (2), -0.21607 (2), -0.21506 (2), -0.21169 (2), -0.21143 (2), -0.20889 (2), -0.20635 (2), -0.20530 (2), -0.19990 (2), -0.19790 (2), -0.19718 (2), -0.19666 (2), -0.19571 (2), -0.18715 (2), -0.18659 (2), -0.18509 (2), -0.18038 (2), -0.17973 (2), -0.17711 (2), -0.17641 (2), 
Length of domains: 50
Time: pickout 0.0151    decision 0.0240    set_bounds 0.0173    solve 0.1334    add 0.1705    
Accumulated time: pickout 0.0154    decision 0.5462    set_bounds 0.0259    solve 0.2522    add 0.4040    
Current (lb-rhs): -0.21661043167114258
100 domains visited
Cumulative time: 1.3532187938690186

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 95] [/input-12, 61] [/input-12, 61] [/input-12, 95] [/input-12, 71] [/input-12, 95] [/input-12, 61] [/input-12, 61] [/input-12, 95] 
split level 1: [/input-12, 40] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 61] [/input-12, 40] [/input-12, 71] [/input-12, 40] [/input-12, 40] [/input-12, 61] 
split level 2: [/input-12, 58] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 58] [/input-12, 40] [/input-12, 58] [/input-12, 58] [/input-12, 40] 
split level 3: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15444278717041016
10 lb beta sum: 0.24545051157474518, worst -0.08217841386795044
Time: prepare 0.0069    bound 0.1387    transfer 0.0009    finalize 0.0031    func 0.1526    
Accumulated time: func 0.4584    prepare 0.0417    bound 0.4043    transfer 0.0054    finalize 0.0092    
all_split False
======================Cut inference begins======================
max lb tensor(0.63002014) min lb tensor(-0.06855404)
Number of Verified Splits: 396 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 12
#cuts >= 20: 0
BICCOS time: 0.048308372497558594 
BICCOS Cumulative time: 0.0769033432006836
Preprocessing time: 0.01654648780822754 Inference time: 0.022736549377441406 Add cuts time: 0.008518457412719727 Cut analysis time: 0.0005068778991699219
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0015    decision 0.0225    set_bounds 0.0220    solve 0.1528    add 0.0235    
Accumulated time: pickout 0.0169    decision 0.5687    set_bounds 0.0479    solve 0.4050    add 0.4275    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 95] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 71] 
split level 3: [/input-12, 40] 
split level 4: [/input-12, 58] 
split level 5: [/input-12, 8] 
split level 6: [/input-12, 78] 
split level 7: [/input-12, 67] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.074127197265625
10 lb beta sum: 0.02158052660524845, worst -0.026269614696502686
Time: prepare 0.0037    bound 0.1358    transfer 0.0024    finalize 0.0024    func 0.1461    
Accumulated time: func 0.6045    prepare 0.0459    bound 0.5402    transfer 0.0078    finalize 0.0116    
all_split False
======================Cut inference begins======================
max lb tensor(1.63894892) min lb tensor(-0.02461028)
Number of Verified Splits: 255 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7028255462646484
10 lb beta sum: 1.6223535537719727, worst -0.4099113941192627
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.29474496841430664 
BICCOS Cumulative time: 0.37164831161499023
Preprocessing time: 0.007573127746582031 Inference time: 0.2812340259552002 Add cuts time: 0.005456686019897461 Cut analysis time: 0.0004811286926269531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02461 (8), 
Length of domains: 1
Time: pickout 0.0005    decision 0.0244    set_bounds 0.0186    solve 0.1462    add 0.0007    
Accumulated time: pickout 0.0174    decision 0.5931    set_bounds 0.0664    solve 0.5512    add 0.4282    
Current (lb-rhs): -0.024610280990600586
101 domains visited
Cumulative time: 2.1225533485412598

BaB round 2
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 94] 
split level 1: [/input-12, 29] 
split level 2: [/input-12, 82] 
split level 3: [/input-12, 19] 
split level 4: [/input-12, 16] 
split level 5: [/input-12, 46] 
split level 6: [/input-8, 345] 
split level 7: [/input-8, 1124] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.17967891693115234

all verified at 0th iter
Time: prepare 0.0052    bound 0.0051    transfer 0.0009    finalize 0.0013    func 0.0142    
Accumulated time: func 0.6186    prepare 0.0516    bound 0.5452    transfer 0.0087    finalize 0.0129    
all_split False
======================Cut inference begins======================
max lb tensor(0.38417864) min lb tensor(0.17967892)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.007768154144287109 
BICCOS Cumulative time: 0.37941646575927734
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0014    decision 0.0240    set_bounds 0.0268    solve 0.0142    add 0.0004    
Accumulated time: pickout 0.0188    decision 0.6171    set_bounds 0.0932    solve 0.5654    add 0.4285    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
101 domains visited
Cumulative time: 2.1982219219207764


Properties batch 5, size 1
Remaining timeout: 192.93525457382202
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 192.93516898155212
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 192.93514370918274
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 192.93512201309204
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 7.0659 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 19, vnnlib ID: 19 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.85465240, -39.28628922, -31.62213326, -28.90679550, -30.95142746,
         -29.91031837, -31.48631477, -34.68875504, -38.12473679, -39.54559708]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [913]; unstable size 913; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 400, 1, 913] with unstable size 399 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 47, 1, 913] with unstable size 46 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 913] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [399]; unstable size 399; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 47, 1, 399] with unstable size 46 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 399] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [46]; unstable size 46; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 46] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.32789016,  5.06265831, -0.85343742, -1.41258264, -0.75268853,
         -0.94943786,  1.91940403,  4.41505527,  5.64977980]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.85465240, -39.28628922, -31.62213326, -28.90679550, -30.95142746,
         -29.91031837, -31.48631477, -34.68875504, -38.12473679, -39.54559708]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.47it/s]100%|██████████| 1/1 [00:00<00:00,  7.46it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-38.22840500, -40.87108231, -32.81224442, -30.14846992, -32.17874908,
          -30.65454292, -33.07853699, -35.55596161, -39.65217209, -40.80433273],
         [-38.22840500, -40.87108231, -32.81224442, -30.14846992, -32.17874908,
          -30.65454292, -33.07853699, -35.55596161, -39.65217209, -40.80433273]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.66377449, 2.03027916, 0.50607300, 2.93006706]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1378 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.08994483947754
alpha/beta optimization time: 1.2290165424346924
initial alpha-crown bounds: tensor([[ 3.62544489,  5.41886711, -0.58665133, -1.15332413, -0.62153691,
         -0.68452311,  2.29642415,  4.78255463,  6.01268911]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 4 ; Worst class: (+ rhs) -1.1533241271972656
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.55409502983093
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.55405235290527
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.5540246963501
Verifying property 2 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.58665133]], device='cuda:0') need to verify.
Model prediction is: tensor([-36.85465240, -39.28628922, -31.62213326, -28.90679550, -30.95142746,
        -29.91031837, -31.48631477, -34.68875504, -38.12473679, -39.54559708],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.58665133]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 913
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 388
Node /15 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 1346
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.942054748535156e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 92] 
split level 1: [/input-12, 66] 
split level 2: [/input-12, 57] 
split level 3: [/input-12, 62] 
split level 4: [/input-12, 8] 
split level 5: [/input-12, 83] 
split level 6: [/input-12, 70] 
split level 7: [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.2605292797088623

all verified at 0th iter
Time: prepare 0.0018    bound 0.0042    transfer 0.0018    finalize 0.0017    func 0.0111    
Accumulated time: func 0.0111    prepare 0.0022    bound 0.0042    transfer 0.0018    finalize 0.0017    
all_split False
======================Cut inference begins======================
max lb tensor(2.91905308) min lb tensor(0.26052928)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.007188558578491211 
BICCOS Cumulative time: 0.007188558578491211
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0165    solve 0.0112    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0225    set_bounds 0.0165    solve 0.0112    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06312680244445801


Properties batch 3, size 1
Remaining timeout: 198.2573618888855
Verifying property 3 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.15332413]], device='cuda:0') need to verify.
Model prediction is: tensor([-36.85465240, -39.28628922, -31.62213326, -28.90679550, -30.95142746,
        -29.91031837, -31.48631477, -34.68875504, -38.12473679, -39.54559708],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.15332413]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 913
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 388
Node /15 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 1346
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00019407272338867188
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 88] 
split level 2: [/input-12, 71] 
split level 3: [/input-12, 8] 
split level 4: [/input-12, 40] 
split level 5: [/input-12, 36] 
split level 6: [/input-12, 73] 
split level 7: [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06900835037231445
10 lb beta sum: 0.0, worst -0.06679844856262207
Time: prepare 0.0018    bound 0.0950    transfer 0.0009    finalize 0.0015    func 0.1008    
Accumulated time: func 0.1008    prepare 0.0022    bound 0.0950    transfer 0.0009    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(1.30224276) min lb tensor(-0.06590354)
Number of Verified Splits: 248 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.1533184051513672
10 lb beta sum: 0.0, worst -1.1533362865447998
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 3
#cuts 4-6: 13
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.2107069492340088 
BICCOS Cumulative time: 0.2107069492340088
Preprocessing time: 0.006662845611572266 Inference time: 0.2002410888671875 Add cuts time: 0.0028340816497802734 Cut analysis time: 0.00096893310546875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06590 (8), -0.05500 (8), -0.05383 (8), -0.05048 (8), -0.04530 (8), -0.03826 (8), -0.03549 (8), -0.02535 (8), 
Length of domains: 8
Time: pickout 0.0003    decision 0.0222    set_bounds 0.0162    solve 0.1009    add 0.0221    
Accumulated time: pickout 0.0003    decision 0.0222    set_bounds 0.0162    solve 0.1009    add 0.0221    
Current (lb-rhs): -0.06590354442596436
8 domains visited
Cumulative time: 0.37769079208374023

BaB round 2
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] 
split level 1: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 2: [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] 
split level 3: [/input-8, 283] [/input-8, 283] [/input-8, 283] [/input-8, 283] [/input-8, 283] [/input-8, 283] [/input-8, 283] [/input-8, 283] 
split level 4: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.08272862434387207

all verified at 0th iter
Time: prepare 0.0051    bound 0.0046    transfer 0.0010    finalize 0.0013    func 0.0135    
Accumulated time: func 0.1143    prepare 0.0075    bound 0.0996    transfer 0.0018    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(0.44149506) min lb tensor(0.08272862)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 20.
#cuts 1-3: 3
#cuts 4-6: 13
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.0074748992919921875 
BICCOS Cumulative time: 0.21818184852600098
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0158    set_bounds 0.0142    solve 0.0136    add 0.0003    
Accumulated time: pickout 0.0014    decision 0.0380    set_bounds 0.0305    solve 0.1145    add 0.0224    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
8 domains visited
Cumulative time: 0.43096017837524414


Properties batch 4, size 1
Remaining timeout: 197.66353559494019
Verifying property 4 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.62153691]], device='cuda:0') need to verify.
Model prediction is: tensor([-36.85465240, -39.28628922, -31.62213326, -28.90679550, -30.95142746,
        -29.91031837, -31.48631477, -34.68875504, -38.12473679, -39.54559708],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.62153691]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 913
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 388
Node /15 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 1346
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.000102996826171875
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 85] 
split level 2: [/input-12, 82] 
split level 3: [/input-12, 35] 
split level 4: [/input-12, 94] 
split level 5: [/input-12, 65] 
split level 6: [/input-12, 90] 
split level 7: [/input-12, 70] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11433511972427368
10 lb beta sum: 0.0, worst -0.11177206039428711
Time: prepare 0.0018    bound 0.0956    transfer 0.0009    finalize 0.0015    func 0.1014    
Accumulated time: func 0.1014    prepare 0.0022    bound 0.0956    transfer 0.0009    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(0.78113532) min lb tensor(-0.11052820)
Number of Verified Splits: 244 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6215323209762573
10 lb beta sum: 0.0, worst -0.6215428113937378
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 1
#cuts 4-6: 13
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.21466994285583496 
BICCOS Cumulative time: 0.21466994285583496
Preprocessing time: 0.006617307662963867 Inference time: 0.20346832275390625 Add cuts time: 0.003576517105102539 Cut analysis time: 0.0010077953338623047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11053 (8), -0.10119 (8), -0.09804 (8), -0.08442 (8), -0.07964 (8), -0.06887 (8), -0.06763 (8), -0.05430 (8), -0.02037 (8), -0.01710 (8), -0.01404 (8), -0.00880 (8), 
Length of domains: 12
Time: pickout 0.0003    decision 0.0222    set_bounds 0.0159    solve 0.1015    add 0.0436    
Accumulated time: pickout 0.0003    decision 0.0222    set_bounds 0.0159    solve 0.1015    add 0.0436    
Current (lb-rhs): -0.11052820086479187
12 domains visited
Cumulative time: 0.4104881286621094

BaB round 2
batch: 12
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 83] [/input-12, 62] [/input-12, 83] [/input-12, 83] [/input-12, 62] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] 
split level 1: [/input-12, 62] [/input-12, 83] [/input-12, 62] [/input-12, 62] [/input-12, 83] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] 
split level 2: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 3: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 4: [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.022704333066940308
10 lb beta sum: 0.0, worst -0.021401256322860718
Time: prepare 0.0053    bound 0.1157    transfer 0.0040    finalize 0.0024    func 0.1299    
Accumulated time: func 0.2313    prepare 0.0078    bound 0.2112    transfer 0.0049    finalize 0.0039    
all_split False
======================Cut inference begins======================
max lb tensor(0.26087889) min lb tensor(-0.02082109)
Number of Verified Splits: 379 of 384
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3840632140636444
10 lb beta sum: 0.234201118350029, worst -0.32647621631622314
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 81.
#cuts 1-3: 1
#cuts 4-6: 18
#cuts 7-9: 58
#cuts 10-12: 4
#cuts >= 20: 0
BICCOS time: 0.3767507076263428 
BICCOS Cumulative time: 0.5914206504821777
Preprocessing time: 0.011184215545654297 Inference time: 0.3309509754180908 Add cuts time: 0.03005051612854004 Cut analysis time: 0.004565000534057617
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02082 (13), -0.01117 (13), -0.01048 (13), -0.00692 (13), -0.00036 (13), 
Length of domains: 5
Time: pickout 0.0013    decision 0.0195    set_bounds 0.0194    solve 0.1300    add 0.0433    
Accumulated time: pickout 0.0016    decision 0.0417    set_bounds 0.0353    solve 0.2315    add 0.0869    
Current (lb-rhs): -0.020821094512939453
17 domains visited
Cumulative time: 1.0146372318267822

BaB round 3
batch: 5
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
split level 1: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] 
split level 2: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] 
split level 3: [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
split level 4: [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] 
split level 5: [/input-8, 1685] [/input-8, 1685] [/input-8, 1685] [/input-8, 1685] [/input-8, 1685] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.046613723039627075

all verified at 0th iter
Time: prepare 0.0063    bound 0.0046    transfer 0.0030    finalize 0.0019    func 0.0178    
Accumulated time: func 0.2491    prepare 0.0144    bound 0.2158    transfer 0.0078    finalize 0.0058    
all_split False
======================Cut inference begins======================
max lb tensor(0.14114857) min lb tensor(0.04661372)
Number of Verified Splits: 320 of 320
No cut inferred: All or none verified.
Total number of valid cuts: 81.
#cuts 1-3: 1
#cuts 4-6: 18
#cuts 7-9: 58
#cuts 10-12: 4
#cuts >= 20: 0
BICCOS time: 0.009689807891845703 
BICCOS Cumulative time: 0.6011104583740234
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0015    decision 0.0208    set_bounds 0.0202    solve 0.0179    add 0.0001    
Accumulated time: pickout 0.0031    decision 0.0624    set_bounds 0.0555    solve 0.2493    add 0.0870    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
17 domains visited
Cumulative time: 1.0857274532318115


Properties batch 5, size 1
Remaining timeout: 196.44698405265808
Verifying property 5 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.68452311]], device='cuda:0') need to verify.
Model prediction is: tensor([-36.85465240, -39.28628922, -31.62213326, -28.90679550, -30.95142746,
        -29.91031837, -31.48631477, -34.68875504, -38.12473679, -39.54559708],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.68452311]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 913
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 388
Node /15 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 1346
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.441375732421875e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 87] 
split level 1: [/input-12, 44] 
split level 2: [/input-12, 56] 
split level 3: [/input-12, 6] 
split level 4: [/input-12, 20] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 36] 
split level 7: [/input-12, 70] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.16072940826416016

all verified at 0th iter
Time: prepare 0.0018    bound 0.0042    transfer 0.0016    finalize 0.0015    func 0.0107    
Accumulated time: func 0.0107    prepare 0.0022    bound 0.0042    transfer 0.0016    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(1.90861702) min lb tensor(0.16072941)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006682157516479492 
BICCOS Cumulative time: 0.006682157516479492
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.0223    set_bounds 0.0164    solve 0.0108    add 0.0003    
Accumulated time: pickout 0.0003    decision 0.0223    set_bounds 0.0164    solve 0.0108    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0617222785949707


Properties batch 6, size 1
Remaining timeout: 196.16685676574707
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 196.16678857803345
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 196.16676497459412
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.8333 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 20, vnnlib ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-37.63462448, -37.61000443, -32.92775345, -33.30642700, -33.78479767,
         -33.62779236, -29.01242828, -36.92855453, -37.03195190, -38.02410507]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [898]; unstable size 898; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 356, 1, 898] with unstable size 355 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 50, 1, 898] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 898] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [355]; unstable size 355; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 50, 1, 355] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 355] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [49]; unstable size 49; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 49] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.73768044, 4.08914280, 0.57586074, 1.35127747, 1.38270307, 1.29210162,
         3.39129066, 3.74660206, 4.17147160]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0771 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 21, vnnlib ID: 21 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.58296585, -31.59258461, -25.70833778, -24.58119583, -26.38792610,
         -23.89438438, -27.32310295, -24.78837204, -30.25214386, -29.72377968]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [686]; unstable size 686; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 247, 1, 686] with unstable size 246 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 686] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [246]; unstable size 246; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 246] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 246] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.95138836,  4.50604200, -0.46017504, -0.34097236, -0.16855681,
          1.29881668, -1.16903865,  2.83615303,  3.14933205]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.58296585, -31.59258461, -25.70833778, -24.58119583, -26.38792610,
         -23.89438438, -27.32310295, -24.78837204, -30.25214386, -29.72377968]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.93321991, -31.01965714, -25.12579918, -24.33978844, -25.67185020,
          -23.92835999, -26.75732803, -23.84227943, -29.78033447, -29.18923759],
         [-28.93321991, -31.01965714, -25.12579918, -24.33978844, -25.67185020,
          -23.92835999, -26.75732803, -23.84227943, -29.78033447, -29.18923759]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.19743919,  0.41142845,  1.74349022, -0.08608055]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0772 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 22, vnnlib ID: 22 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.88024712, -35.23323441, -35.73305511, -35.41489410, -34.35032654,
         -36.79653168, -36.10003281, -37.54729843, -26.08010674, -34.95559311]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [767]; unstable size 767; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 291, 1, 767] with unstable size 290 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 36, 1, 767] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 767] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [290]; unstable size 290; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 36, 1, 290] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 290] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.20718908, 5.67496061, 5.37616873, 5.87569427, 4.52897167, 6.74763584,
         6.51314735, 7.60033560, 5.45458078]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0804 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 23, vnnlib ID: 23 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.78421783, -25.23838425, -22.70737076, -19.10114670, -21.17105293,
         -18.01855278, -23.43561935, -21.83352470, -21.82706642, -22.61488342]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [666]; unstable size 666; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 258, 1, 666] with unstable size 257 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 43, 1, 666] with unstable size 42 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 666] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [257]; unstable size 257; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 43, 1, 257] with unstable size 42 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 257] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [42]; unstable size 42; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 42] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.30814600,  3.57213736,  2.16594720,  0.15592325,  1.43266797,
          3.18479443,  1.77486777, -0.10893178,  1.86798477]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.78421783, -25.23838425, -22.70737076, -19.10114670, -21.17105293,
         -18.01855278, -23.43561935, -21.83352470, -21.82706642, -22.61488342]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.03it/s]100%|██████████| 1/1 [00:00<00:00,  9.02it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.67127609, -24.87281227, -22.72171593, -19.46452713, -21.41184807,
          -18.59487343, -23.60668182, -22.23333359, -20.91667747, -22.53122902]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.32180405]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1134 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 4th iter
best_l after optimization: 16.058076858520508
alpha/beta optimization time: 0.06697273254394531
initial alpha-crown bounds: tensor([[1.40385687, 3.70934296, 2.23774862, 0.18242049, 1.48538065, 3.24062824,
         1.82983112, 0.00866365, 1.96020460]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.008663654327392578
verified with init bound!
Result: safe-incomplete in 0.2517 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 24, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-50.77482986, -47.16749191, -55.28391647, -55.91117859, -56.15769196,
         -57.67793274, -53.52692795, -56.53850937, -53.19353867, -50.19855118]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1154]; unstable size 1154; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 423, 1, 1154] with unstable size 422 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 50, 1, 1154] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1154] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [422]; unstable size 422; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 50, 1, 422] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 422] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [49]; unstable size 49; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 49] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.00062180,  0.27419662,  2.00280571,  1.56656075,  2.92910099,
          0.34350014,  1.91473293,  0.42074776, -0.46073627]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-50.77482986, -47.16749191, -55.28391647, -55.91117859, -56.15769196,
         -57.67793274, -53.52692795, -56.53850937, -53.19353867, -50.19855118]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.88it/s]100%|██████████| 1/1 [00:00<00:00,  8.87it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-48.41722107, -45.67558670, -52.93465424, -53.48196411, -53.62812805,
          -55.15054321, -51.34995651, -53.87900543, -50.76089096, -47.50686646],
         [-48.41722107, -45.67558670, -52.93465424, -53.48196411, -53.62812805,
          -55.15054321, -51.34995651, -53.87900543, -50.76089096, -47.50686646]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.74163437, 1.83127975]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1156 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 10.703991889953613
alpha/beta optimization time: 1.2330572605133057
initial alpha-crown bounds: tensor([[-1.56354141,  0.76494026,  2.43206406,  2.00304031,  3.41688251,
          0.71940231,  2.36360359,  0.78360844, -0.21600819]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -1.5635414123535156
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.56926727294922
Verifying property 0 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.56354141]], device='cuda:0') need to verify.
Model prediction is: tensor([-50.77482986, -47.16749191, -55.28391647, -55.91117859, -56.15769196,
        -57.67793274, -53.52692795, -56.53850937, -53.19353867, -50.19855118],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.56354141]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1154
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 409
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1610
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010061264038085938
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.5635309219360352
10 lb beta sum: 0.0, worst -1.563589096069336
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0528    transfer 0.0001    finalize 0.0001    func 0.0533    
Accumulated time: func 0.0533    prepare 0.0002    bound 0.0528    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 28] 
split level 1: [/input-12, 36] 
split level 2: [/input-12, 49] 
split level 3: [/input-12, 22] 
split level 4: [/input-12, 30] 
split level 5: [/input-12, 61] 
split level 6: [/input-12, 40] 
split level 7: [/input-12, 43] 
split level 8: [/input-12, 58] 
split level 9: [/input-12, 56] 
split level 10: [/input-12, 62] 
split level 11: [/input-12, 10] 
split level 12: [/input-12, 15] 
split level 13: [/input-12, 65] 
split level 14: [/input-12, 29] 
split level 15: [/input-12, 14] 
split level 16: [/input-12, 80] 
split level 17: [/input-12, 84] 
split level 18: [/input-8, 1499] 
split level 19: [/input-12, 94] 
split level 20: [/input-12, 1] 
split level 21: [/input-8, 547] 
split level 22: [/input-8, 1747] 
split level 23: [/input-8, 542] 
split level 24: [/input-8, 622] 
split level 25: [/input-12, 75] 
split level 26: [/input-8, 1891] 
split level 27: [/input-8, 483] 
split level 28: [/input-8, 1290] 
split level 29: [/input-8, 1500] 
split level 30: [/input-8, 1620] 
split level 31: [/input-8, 550] 
split level 32: [/input-8, 1420] 
split level 33: [/input-8, 1306] 
split level 34: [/input-8, 1498] 
split level 35: [/input-8, 1490] 
split level 36: [/input-8, 356] 
split level 37: [/input-8, 1643] 
split level 38: [/input-8, 1755] 
split level 39: [/input-8, 1418] 
split level 40: [/input-8, 1307] 
split level 41: [/input-8, 1298] 
split level 42: [/input, 631] 
split level 43: [/input-8, 116] 
split level 44: [/input-8, 1882] 
split level 45: [/input-8, 1422] 
split level 46: [/input-8, 1977] 
split level 47: [/input-12, 47] 
split level 48: [/input-8, 1932] 
split level 49: [/input-8, 1419] 
split level 50: [/input-8, 1139] 
split level 51: [/input-8, 1644] 
split level 52: [/input-8, 357] 
split level 53: [/input-8, 982] 
split level 54: [/input-8, 477] 
split level 55: [/input-8, 541] 
split level 56: [/input-8, 1949] 
split level 57: [/input-8, 1941] 
split level 58: [/input-8, 1509] 
split level 59: [/input-8, 1978] 
split level 60: [/input-8, 1874] 
split level 61: [/input, 614] 
split level 62: [/input-8, 402] 
split level 63: [/input-8, 1931] 
split level 64: [/input-8, 1140] 
split level 65: [/input-8, 1421] 
split level 66: [/input-8, 986] 
split level 67: [/input-8, 1636] 
split level 68: [/input-8, 985] 
split level 69: [/input-8, 1913] 
split level 70: [/input-8, 1588] 
split level 71: [/input-8, 1969] 
split level 72: [/input-8, 1782] 
split level 73: [/input-8, 1980] 
split level 74: [/input, 2698] 
split level 75: [/input-8, 813] 
split level 76: [/input-8, 1138] 
split level 77: [/input-8, 1979] 
split level 78: [/input-8, 1875] 
split level 79: [/input-8, 235] 
split level 80: [/input, 632] 
split level 81: [/input-8, 108] 
split level 82: [/input-8, 1930] 
split level 83: [/input, 714] 
split level 84: [/input-8, 1908] 
split level 85: [/input-8, 1546] 
split level 86: [/input-8, 1921] 
split level 87: [/input-8, 1923] 
split level 88: [/input-8, 805] 
split level 89: [/input-8, 109] 
split level 90: [/input-8, 1560] 
split level 91: [/input-8, 410] 
split level 92: [/input, 729] 
split level 93: [/input-8, 1934] 
split level 94: [/input, 613] 
split level 95: [/input-8, 1915] 
split level 96: [/input-8, 1754] 
split level 97: [/input-8, 1971] 
split level 98: [/input-8, 1129] 
split level 99: [/input-8, 269] 
split level 100: [/input-8, 401] 
split level 101: [/input, 2983] 
split level 102: [/input-8, 606] 
split level 103: [/input-8, 1437] 
split level 104: [/input-8, 955] 
split level 105: [/input-8, 1781] 
split level 106: [/input-8, 1916] 
split level 107: [/input-8, 957] 
split level 108: [/input-8, 534] 
split level 109: [/input-8, 1540] 
split level 110: [/input-8, 956] 
split level 111: [/input, 725] 
split level 112: [/input-8, 1539] 
split level 113: [/input-8, 945] 
split level 114: [/input-8, 470] 
split level 115: [/input-8, 1905] 
split level 116: [/input, 378] 
split level 117: [/input-8, 1909] 
split level 118: [/input-8, 1258] 
split level 119: [/input-8, 268] 
split level 120: [/input-8, 1922] 
split level 121: [/input-8, 416] 
split level 122: [/input-8, 2031] 
split level 123: [/input-8, 1645] 
split level 124: [/input-8, 973] 
split level 125: [/input-8, 1032] 
split level 126: [/input, 2678] 
split level 127: [/input, 2537] 
split level 128: [/input, 3016] 
split level 129: [/input, 2518] 
split level 130: [/input, 730] 
split level 131: [/input, 2985] 
split level 132: [/input, 1480] 
split level 133: [/input-8, 1547] 
split level 134: [/input, 2520] 
split level 135: [/input-8, 494] 
split level 136: [/input, 716] 
split level 137: [/input-8, 1563] 
split level 138: [/input, 745] 
split level 139: [/input-8, 1970] 
split level 140: [/input, 2757] 
split level 141: [/input, 2664] 
split level 142: [/input-8, 97] 
split level 143: [/input-8, 460] 
split level 144: [/input, 1170] 
split level 145: [/input-8, 954] 
split level 146: [/input, 3265] 
split level 147: [/input-8, 1646] 
split level 148: [/input-8, 1929] 
split level 149: [/input-8, 2039] 
split level 150: [/input-8, 2030] 
split level 151: [/input-8, 936] 
split level 152: [/input, 2519] 
split level 153: [/input, 3281] 
split level 154: [/input, 728] 
split level 155: [/input-8, 1917] 
split level 156: [/input-8, 1981] 
split level 157: [/input-12, 35] 
split level 158: [/input, 984] 
split level 159: [/input, 2724] 
split level 160: [/input, 709] 
split level 161: [/input, 2124] 
split level 162: [/input, 2775] 
split level 163: [/input, 2517] 
split level 164: [/input, 724] 
split level 165: [/input-8, 1033] 
split level 166: [/input-8, 1907] 
split level 167: [/input, 2962] 
split level 168: [/input, 1927] 
split level 169: [/input, 1720] 
split level 170: [/input-8, 683] 
split level 171: [/input, 747] 
split level 172: [/input, 233] 
split level 173: [/input, 746] 
split level 174: [/input, 731] 
split level 175: [/input, 213] 
split level 176: [/input, 2961] 
split level 177: [/input, 2521] 
split level 178: [/input, 726] 
split level 179: [/input, 708] 
split level 180: [/input, 732] 
split level 181: [/input, 2538] 
split level 182: [/input, 749] 
split level 183: [/input, 744] 
split level 184: [/input, 200] 
split level 185: [/input, 2506] 
split level 186: [/input, 232] 
split level 187: [/input, 748] 
split level 188: [/input, 3250] 
split level 189: [/input, 2536] 
split level 190: [/input, 3249] 
split level 191: [/input, 743] 
split level 192: [/input, 1217] 
split level 193: [/input, 1014] 
split level 194: [/input, 2533] 
split level 195: [/input, 234] 
split level 196: [/input, 2739] 
split level 197: [/input, 2188] 
split level 198: [/input, 4076] 
split level 199: [/input, 2539] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.5621919631958008
10 lb beta sum: 0.0, worst -1.5621767044067383
Time: prepare 0.0115    bound 0.0976    transfer 0.0030    finalize 0.0035    func 0.1184    
Accumulated time: func 0.1716    prepare 0.0215    bound 0.1504    transfer 0.0031    finalize 0.0037    
all_split False
======================Cut inference begins======================
max lb tensor(0.30497646) min lb tensor(-1.56212902)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.010399580001831055 
BICCOS Cumulative time: 0.010399580001831055
Preprocessing time: 0.009966135025024414 Inference time: 0.0001494884490966797 Add cuts time: 6.246566772460938e-05 Cut analysis time: 0.00022149085998535156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.51137 (1), -1.51116 (1), -1.51061 (1), -1.50990 (1), -1.50691 (1), -1.50633 (1), -1.50589 (1), -1.50567 (1), -1.50464 (1), -1.50362 (1), -1.50360 (1), -1.50264 (1), -1.50097 (1), -1.49775 (1), -1.49716 (1), -1.49615 (1), -1.49546 (1), -1.49494 (1), -1.49432 (1), -1.49298 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5142    set_bounds 0.0087    solve 0.1184    add 0.1418    
Accumulated time: pickout 0.0003    decision 0.5142    set_bounds 0.0087    solve 0.1184    add 0.1418    
Current (lb-rhs): -1.5113725662231445
50 domains visited
Cumulative time: 0.8660888671875

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 40] [/input-12, 30] [/input-12, 30] [/input-12, 30] 
split level 1: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 40] 
split level 2: [/input-12, 40] [/input-12, 40] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 40] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] 
split level 3: [/input-12, 43] [/input-12, 43] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 43] [/input-12, 58] [/input-12, 58] [/input-12, 40] [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3620929718017578
10 lb beta sum: 0.7076768279075623, worst -1.3357008695602417
Time: prepare 0.0063    bound 0.1193    transfer 0.0012    finalize 0.0023    func 0.1318    
Accumulated time: func 0.3034    prepare 0.0280    bound 0.2697    transfer 0.0044    finalize 0.0060    
all_split False
======================Cut inference begins======================
max lb tensor(0.33918107) min lb tensor(-1.33540630)
Number of Verified Splits: 5 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.012505531311035156 
BICCOS Cumulative time: 0.02290511131286621
Preprocessing time: 0.011734724044799805 Inference time: 0.00027561187744140625 Add cuts time: 0.00016450881958007812 Cut analysis time: 0.0003306865692138672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.73503 (2), -0.72315 (2), -0.72306 (2), -0.71874 (2), -0.71691 (2), -0.70325 (2), -0.69710 (2), -0.69419 (2), -0.69116 (2), -0.69073 (2), -0.67565 (2), -0.67412 (2), -0.66433 (2), -0.66058 (2), -0.65942 (2), -0.65032 (2), -0.64157 (2), -0.64087 (2), -0.63740 (2), -0.63442 (2), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0189    set_bounds 0.0139    solve 0.1318    add 0.1608    
Accumulated time: pickout 0.0013    decision 0.5331    set_bounds 0.0226    solve 0.2503    add 0.3026    
Current (lb-rhs): -0.735029935836792
100 domains visited
Cumulative time: 1.2052876949310303

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 30] [/input-12, 30] [/input-12, 61] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 61] [/input-12, 30] [/input-12, 30] 
split level 1: [/input-12, 61] [/input-12, 43] [/input-12, 43] [/input-12, 40] [/input-12, 61] [/input-12, 43] [/input-12, 40] [/input-12, 40] [/input-12, 61] [/input-12, 61] 
split level 2: [/input-12, 40] [/input-12, 40] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 40] [/input-12, 58] [/input-12, 43] [/input-12, 40] [/input-12, 43] 
split level 3: [/input-12, 58] [/input-12, 58] [/input-12, 40] [/input-12, 43] [/input-12, 40] [/input-12, 58] [/input-12, 43] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7353286743164062
10 lb beta sum: 0.8309069871902466, worst -0.6467108726501465
Time: prepare 0.0056    bound 0.1160    transfer 0.0012    finalize 0.0023    func 0.1276    
Accumulated time: func 0.4310    prepare 0.0338    bound 0.3856    transfer 0.0056    finalize 0.0084    
all_split False
======================Cut inference begins======================
max lb tensor(0.56069708) min lb tensor(-0.64284533)
Number of Verified Splits: 105 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 6
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.01999950408935547 
BICCOS Cumulative time: 0.04290461540222168
Preprocessing time: 0.011670827865600586 Inference time: 0.0048046112060546875 Add cuts time: 0.0030031204223632812 Cut analysis time: 0.0005209445953369141
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14252 (3), -0.14080 (3), -0.13811 (3), -0.13786 (3), -0.13705 (3), -0.13699 (3), -0.13587 (3), -0.13375 (3), -0.13148 (3), -0.13142 (3), -0.13075 (3), -0.13043 (3), -0.12972 (3), -0.12879 (3), -0.12849 (3), -0.12846 (3), -0.12738 (3), -0.12543 (3), -0.12509 (3), -0.12001 (3), 
Length of domains: 50
Time: pickout 0.0009    decision 0.0194    set_bounds 0.0151    solve 0.1277    add 0.3970    
Accumulated time: pickout 0.0022    decision 0.5525    set_bounds 0.0377    solve 0.3780    add 0.6995    
Current (lb-rhs): -0.1425178050994873
150 domains visited
Cumulative time: 1.799304723739624

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 61] [/input-12, 30] [/input-12, 61] [/input-12, 30] [/input-12, 40] [/input-12, 40] [/input-12, 40] 
split level 1: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 40] [/input-12, 61] [/input-12, 40] [/input-12, 61] [/input-12, 43] [/input-12, 43] [/input-12, 61] 
split level 2: [/input-12, 43] [/input-12, 40] [/input-12, 43] [/input-12, 43] [/input-12, 58] [/input-12, 43] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 43] 
split level 3: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 62] [/input-12, 15] [/input-12, 62] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21148014068603516
10 lb beta sum: 0.7362431287765503, worst -0.16340386867523193
Time: prepare 0.0060    bound 0.1512    transfer 0.0009    finalize 0.0032    func 0.1668    
Accumulated time: func 0.5978    prepare 0.0403    bound 0.5369    transfer 0.0065    finalize 0.0115    
all_split False
======================Cut inference begins======================
max lb tensor(0.54419577) min lb tensor(-0.03688860)
Number of Verified Splits: 396 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 11
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.04325270652770996 
BICCOS Cumulative time: 0.08615732192993164
Preprocessing time: 0.014311790466308594 Inference time: 0.02261042594909668 Add cuts time: 0.005653858184814453 Cut analysis time: 0.0006766319274902344
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0264    decision 0.0265    set_bounds 0.0192    solve 0.1670    add 0.0317    
Accumulated time: pickout 0.0286    decision 0.5790    set_bounds 0.0569    solve 0.5450    add 0.7313    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 28] 
split level 1: [/input-12, 30] 
split level 2: [/input-12, 61] 
split level 3: [/input-12, 40] 
split level 4: [/input-12, 43] 
split level 5: [/input-12, 58] 
split level 6: [/input-12, 62] 
split level 7: [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2933206558227539
10 lb beta sum: 0.10779186338186264, worst -0.1995047926902771
Time: prepare 0.0039    bound 0.1350    transfer 0.0033    finalize 0.0018    func 0.1460    
Accumulated time: func 0.7438    prepare 0.0447    bound 0.6719    transfer 0.0098    finalize 0.0133    
all_split False
======================Cut inference begins======================
max lb tensor(1.18241024) min lb tensor(-0.19768436)
Number of Verified Splits: 252 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.1292943954467773
10 lb beta sum: 1.333309531211853, worst -0.9812962412834167
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 11
#cuts 4-6: 12
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.2877507209777832 
BICCOS Cumulative time: 0.37390804290771484
Preprocessing time: 0.0073316097259521484 Inference time: 0.2766234874725342 Add cuts time: 0.0029306411743164062 Cut analysis time: 0.0008649826049804688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19768 (8), -0.14602 (8), -0.09578 (8), -0.06850 (8), 
Length of domains: 4
Time: pickout 0.0008    decision 0.0250    set_bounds 0.2492    solve 0.1461    add 0.0154    
Accumulated time: pickout 0.0294    decision 0.6041    set_bounds 0.3061    solve 0.6911    add 0.7467    
Current (lb-rhs): -0.1976843625307083
154 domains visited
Cumulative time: 2.866253614425659

BaB round 2
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] 
split level 1: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 2: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 3: [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 65] 
split level 4: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 5: [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.07245063781738281

all verified at 0th iter
Time: prepare 0.0038    bound 0.0052    transfer 0.0005    finalize 0.0014    func 0.0126    
Accumulated time: func 0.7564    prepare 0.0489    bound 0.6771    transfer 0.0104    finalize 0.0147    
all_split False
======================Cut inference begins======================
max lb tensor(1.13282394) min lb tensor(0.07245064)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 24.
#cuts 1-3: 11
#cuts 4-6: 12
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.007945060729980469 
BICCOS Cumulative time: 0.3818531036376953
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0021    decision 0.0193    set_bounds 0.0180    solve 0.0127    add 0.0003    
Accumulated time: pickout 0.0315    decision 0.6233    set_bounds 0.3241    solve 0.7038    add 0.7470    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
154 domains visited
Cumulative time: 2.9275197982788086


Properties batch 1, size 1
Remaining timeout: 195.41814374923706
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 195.41805338859558
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 195.41773962974548
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 195.4177167415619
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 195.4172978401184
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 195.41726517677307
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 195.4172444343567
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 195.41705560684204
Verifying property 8 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21600819]], device='cuda:0') need to verify.
Model prediction is: tensor([-50.77482986, -47.16749191, -55.28391647, -55.91117859, -56.15769196,
        -57.67793274, -53.52692795, -56.53850937, -53.19353867, -50.19855118],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21600819]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1154
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 409
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1610
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010442733764648438
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21600103378295898
10 lb beta sum: 0.0, worst -0.21604371070861816
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0593    transfer 0.0001    finalize 0.0001    func 0.0598    
Accumulated time: func 0.0598    prepare 0.0002    bound 0.0593    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 11] 
split level 1: [/input-12, 19] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 14] 
split level 4: [/input-12, 35] 
split level 5: [/input-12, 49] 
split level 6: [/input-8, 1499] 
split level 7: [/input-12, 28] 
split level 8: [/input-12, 38] 
split level 9: [/input-12, 56] 
split level 10: [/input-12, 61] 
split level 11: [/input-8, 356] 
split level 12: [/input-12, 85] 
split level 13: [/input-12, 75] 
split level 14: [/input-8, 1500] 
split level 15: [/input-12, 1] 
split level 16: [/input-8, 1498] 
split level 17: [/input-12, 94] 
split level 18: [/input-12, 58] 
split level 19: [/input-8, 1490] 
split level 20: [/input-8, 1891] 
split level 21: [/input-8, 1620] 
split level 22: [/input-8, 357] 
split level 23: [/input-8, 1755] 
split level 24: [/input-8, 1747] 
split level 25: [/input-8, 1893] 
split level 26: [/input-8, 483] 
split level 27: [/input-12, 24] 
split level 28: [/input-12, 10] 
split level 29: [/input-8, 346] 
split level 30: [/input-8, 1643] 
split level 31: [/input-8, 1754] 
split level 32: [/input-8, 1636] 
split level 33: [/input-8, 268] 
split level 34: [/input-8, 238] 
split level 35: [/input, 631] 
split level 36: [/input-8, 2018] 
split level 37: [/input-8, 477] 
split level 38: [/input, 2664] 
split level 39: [/input-12, 46] 
split level 40: [/input-8, 1509] 
split level 41: [/input-8, 178] 
split level 42: [/input-8, 1106] 
split level 43: [/input-8, 1882] 
split level 44: [/input-12, 29] 
split level 45: [/input-8, 2029] 
split level 46: [/input-8, 1763] 
split level 47: [/input-8, 1779] 
split level 48: [/input, 614] 
split level 49: [/input-8, 1139] 
split level 50: [/input-8, 982] 
split level 51: [/input-8, 515] 
split level 52: [/input, 2698] 
split level 53: [/input-8, 402] 
split level 54: [/input-8, 1140] 
split level 55: [/input-8, 1644] 
split level 56: [/input-8, 1886] 
split level 57: [/input-8, 805] 
split level 58: [/input-8, 654] 
split level 59: [/input-8, 811] 
split level 60: [/input-8, 410] 
split level 61: [/input-8, 1331] 
split level 62: [/input-8, 1333] 
split level 63: [/input-8, 269] 
split level 64: [/input, 632] 
split level 65: [/input-8, 547] 
split level 66: [/input, 2663] 
split level 67: [/input-8, 109] 
split level 68: [/input-8, 1129] 
split level 69: [/input, 3979] 
split level 70: [/input-8, 1645] 
split level 71: [/input, 3995] 
split level 72: [/input-8, 678] 
split level 73: [/input, 613] 
split level 74: [/input-12, 15] 
split level 75: [/input-8, 713] 
split level 76: [/input-8, 1703] 
split level 77: [/input-8, 717] 
split level 78: [/input-8, 955] 
split level 79: [/input-8, 1875] 
split level 80: [/input-8, 683] 
split level 81: [/input-8, 1437] 
split level 82: [/input, 2678] 
split level 83: [/input-8, 1932] 
split level 84: [/input-12, 42] 
split level 85: [/input-8, 108] 
split level 86: [/input-8, 705] 
split level 87: [/input-8, 1119] 
split level 88: [/input, 714] 
split level 89: [/input-8, 307] 
split level 90: [/input-8, 653] 
split level 91: [/input-8, 1678] 
split level 92: [/input-8, 1686] 
split level 93: [/input, 3478] 
split level 94: [/input-8, 957] 
split level 95: [/input-8, 1540] 
split level 96: [/input-8, 1292] 
split level 97: [/input-8, 467] 
split level 98: [/input-8, 956] 
split level 99: [/input, 652] 
split level 100: [/input, 984] 
split level 101: [/input-8, 708] 
split level 102: [/input-8, 718] 
split level 103: [/input, 2124] 
split level 104: [/input-8, 1929] 
split level 105: [/input-8, 813] 
split level 106: [/input-8, 343] 
split level 107: [/input-8, 1539] 
split level 108: [/input-8, 1941] 
split level 109: [/input-8, 1969] 
split level 110: [/input, 2665] 
split level 111: [/input-8, 416] 
split level 112: [/input, 2724] 
split level 113: [/input-8, 1138] 
split level 114: [/input-8, 1931] 
split level 115: [/input-8, 181] 
split level 116: [/input, 2708] 
split level 117: [/input, 667] 
split level 118: [/input-8, 1685] 
split level 119: [/input-8, 973] 
split level 120: [/input, 729] 
split level 121: [/input-8, 237] 
split level 122: [/input-8, 1285] 
split level 123: [/input, 359] 
split level 124: [/input-8, 970] 
split level 125: [/input-8, 753] 
split level 126: [/input-8, 179] 
split level 127: [/input-8, 1915] 
split level 128: [/input-8, 1921] 
split level 129: [/input-8, 1977] 
split level 130: [/input-8, 1916] 
split level 131: [/input, 923] 
split level 132: [/input-8, 1323] 
split level 133: [/input, 1480] 
split level 134: [/input-8, 2030] 
split level 135: [/input, 378] 
split level 136: [/input-8, 396] 
split level 137: [/input-8, 766] 
split level 138: [/input-8, 1928] 
split level 139: [/input-8, 329] 
split level 140: [/input-8, 1137] 
split level 141: [/input-8, 917] 
split level 142: [/input-8, 324] 
split level 143: [/input, 2888] 
split level 144: [/input-8, 278] 
split level 145: [/input-8, 971] 
split level 146: [/input-8, 954] 
split level 147: [/input, 728] 
split level 148: [/input-8, 650] 
split level 149: [/input-8, 235] 
split level 150: [/input-8, 512] 
split level 151: [/input-8, 1416] 
split level 152: [/input, 2707] 
split level 153: [/input-8, 706] 
split level 154: [/input, 3237] 
split level 155: [/input-8, 916] 
split level 156: [/input, 3016] 
split level 157: [/input-8, 1286] 
split level 158: [/input, 2092] 
split level 159: [/input, 731] 
split level 160: [/input, 4076] 
split level 161: [/input-8, 330] 
split level 162: [/input, 2507] 
split level 163: [/input-8, 953] 
split level 164: [/input-8, 395] 
split level 165: [/input-8, 1857] 
split level 166: [/input, 744] 
split level 167: [/input, 2775] 
split level 168: [/input-8, 714] 
split level 169: [/input, 730] 
split level 170: [/input-8, 1504] 
split level 171: [/input, 924] 
split level 172: [/input-8, 1541] 
split level 173: [/input-8, 297] 
split level 174: [/input-8, 1839] 
split level 175: [/input, 2685] 
split level 176: [/input-8, 1773] 
split level 177: [/input-8, 620] 
split level 178: [/input-8, 180] 
split level 179: [/input-8, 1646] 
split level 180: [/input, 745] 
split level 181: [/input-8, 1146] 
split level 182: [/input-8, 1922] 
split level 183: [/input, 643] 
split level 184: [/input, 746] 
split level 185: [/input-8, 1147] 
split level 186: [/input, 743] 
split level 187: [/input, 4077] 
split level 188: [/input-8, 470] 
split level 189: [/input-8, 397] 
split level 190: [/input, 204] 
split level 191: [/input, 4075] 
split level 192: [/input, 2141] 
split level 193: [/input, 1018] 
split level 194: [/input, 1014] 
split level 195: [/input, 2605] 
split level 196: [/input, 2091] 
split level 197: [/input, 2517] 
split level 198: [/input, 2533] 
split level 199: [/input, 2868] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2154998779296875
10 lb beta sum: 0.0, worst -0.2154250144958496
Time: prepare 0.0113    bound 0.1124    transfer 0.0043    finalize 0.0039    func 0.1346    
Accumulated time: func 0.1944    prepare 0.0220    bound 0.1717    transfer 0.0044    finalize 0.0041    
all_split False
======================Cut inference begins======================
max lb tensor(0.67371988) min lb tensor(-0.21538806)
Number of Verified Splits: 11 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.01168966293334961 
BICCOS Cumulative time: 0.01168966293334961
Preprocessing time: 0.010537147521972656 Inference time: 0.00045680999755859375 Add cuts time: 0.0001537799835205078 Cut analysis time: 0.0005419254302978516
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.5577    set_bounds 0.0094    solve 0.1347    add 0.0102    
Accumulated time: pickout 0.0004    decision 0.5577    set_bounds 0.0094    solve 0.1347    add 0.0102    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 11] 
split level 1: [/input-12, 19] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 14] 
split level 4: [/input-12, 35] 
split level 5: [/input-12, 38] 
split level 6: [/input-12, 61] 
split level 7: [/input-8, 1500] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.4557220935821533

all verified at 0th iter
Time: prepare 0.0050    bound 0.0044    transfer 0.0043    finalize 0.0017    func 0.0171    
Accumulated time: func 0.2115    prepare 0.0274    bound 0.1761    transfer 0.0088    finalize 0.0058    
all_split False
======================Cut inference begins======================
max lb tensor(1.98189807) min lb tensor(0.45572209)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.007157087326049805 
BICCOS Cumulative time: 0.018846750259399414
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0205    solve 0.0171    add 0.0003    
Accumulated time: pickout 0.0008    decision 0.5810    set_bounds 0.0299    solve 0.1519    add 0.0105    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.8721320629119873

Result: safe in 5.6900 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 25, vnnlib ID: 25 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.76686668, -28.57326126, -25.16184235, -23.06851387, -23.33486366,
         -23.96377945, -23.16743088, -24.59119797, -28.58481407, -26.20581818]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [853]; unstable size 853; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 392, 1, 853] with unstable size 391 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 55, 1, 853] with unstable size 54 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 853] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [391]; unstable size 391; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 55, 1, 391] with unstable size 54 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 391] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [54]; unstable size 54; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 54] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.99357510, -4.86776304, -6.47842169, -6.37980366, -6.38519192,
         -7.30579424, -5.84156990, -1.48716974, -4.40774822]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.76686668, -28.57326126, -25.16184235, -23.06851387, -23.33486366,
         -23.96377945, -23.16743088, -24.59119797, -28.58481407, -26.20581818]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.76687050, -28.57325935, -25.16184235, -23.06851768, -23.33486557,
          -23.96378326, -23.16743088, -24.59119987, -28.58481598, -26.20581627],
         [-25.76687050, -28.57325935, -25.16184235, -23.06851768, -23.33486557,
          -23.96378326, -23.16743088, -24.59119987, -28.58481598, -26.20581627]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.80638885, -0.60502815, -2.69835281, -2.43200493, -1.80308723,
          -2.59943962, -1.17567062,  2.81794548,  0.43894577]]],
       device='cuda:0')
number of violation:  6
clean attack image tensor([[[[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         ...,


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0907 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 26, vnnlib ID: 26 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-51.40615463, -47.99464798, -51.47699738, -49.40166473, -50.15394592,
         -49.50434494, -51.88465881, -49.07424164, -48.02968979, -46.81093979]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [774]; unstable size 774; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 235, 1, 774] with unstable size 234 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 774] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 774] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [234]; unstable size 234; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 234] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 234] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.28202868, -0.95077634,  1.26973319, -0.38511944,  0.08496332,
         -0.81299853,  1.79810667, -1.60203338, -1.29408586]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-51.40615463, -47.99464798, -51.47699738, -49.40166473, -50.15394592,
         -49.50434494, -51.88465881, -49.07424164, -48.02968979, -46.81093979]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.40it/s]100%|██████████| 1/1 [00:00<00:00,  8.39it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-51.46153259, -48.24018097, -51.35804749, -49.37489319, -50.20383835,
          -49.55059814, -51.77952957, -49.30813217, -47.45423889, -47.41017151],
         [-51.46153259, -48.24018097, -51.35804749, -49.37489319, -50.20383835,
          -49.55059814, -51.77952957, -49.30813217, -47.45423889, -47.41017151]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.83000946, 1.96472168, 2.14042664, 1.89796066, 0.04406738]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.1223 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 1.0744333267211914
alpha/beta optimization time: 1.2675352096557617
initial alpha-crown bounds: tensor([[ 1.59606743, -0.82888293,  1.43828106, -0.20282507,  0.26796198,
         -0.63757324,  1.91599655, -1.34972525, -1.12486720]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 5 ; Worst class: (+ rhs) -1.3497252464294434
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.549818277359
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.54977536201477
Verifying property 1 with 1 instances.
##### Instance 26 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.82888293]], device='cuda:0') need to verify.
Model prediction is: tensor([-51.40615463, -47.99464798, -51.47699738, -49.40166473, -50.15394592,
        -49.50434494, -51.88465881, -49.07424164, -48.02968979, -46.81093979],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.82888293]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 774
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 232
Node /15 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 1033
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011444091796875
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 2] 
split level 1: [/input-12, 7] 
split level 2: [/input-12, 6] 
split level 3: [/input-12, 22] 
split level 4: [/input-12, 48] 
split level 5: [/input-8, 1436] 
split level 6: [/input-12, 40] 
split level 7: [/input-12, 78] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3831639289855957
10 lb beta sum: 0.0, worst -0.3813507556915283
Time: prepare 0.0032    bound 0.0995    transfer 0.0026    finalize 0.0021    func 0.1091    
Accumulated time: func 0.1091    prepare 0.0036    bound 0.0995    transfer 0.0026    finalize 0.0021    
all_split False
======================Cut inference begins======================
max lb tensor(0.62250531) min lb tensor(-0.38055348)
Number of Verified Splits: 192 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8288803100585938
10 lb beta sum: 0.0, worst -0.8289000988006592
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 1
#cuts 4-6: 19
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.2046959400177002 
BICCOS Cumulative time: 0.2046959400177002
Preprocessing time: 0.008159637451171875 Inference time: 0.1886916160583496 Add cuts time: 0.006432294845581055 Cut analysis time: 0.0014123916625976562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38055 (8), -0.36688 (8), -0.35740 (8), -0.35026 (8), -0.33237 (8), -0.32936 (8), -0.32822 (8), -0.32214 (8), -0.31810 (8), -0.31705 (8), -0.31643 (8), -0.31409 (8), -0.31260 (8), -0.30567 (8), -0.30197 (8), -0.29904 (8), -0.29545 (8), -0.29516 (8), -0.28793 (8), -0.27608 (8), 
Length of domains: 64
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0189    solve 0.1092    add 0.0685    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0189    solve 0.1092    add 0.0685    
Current (lb-rhs): -0.3805534839630127
64 domains visited
Cumulative time: 0.4376411437988281

BaB round 2
batch: 64
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1437] [/input-8, 1437] [/input-12, 87] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-12, 87] [/input-12, 87] [/input-8, 1437] [/input-8, 1437] 
split level 1: [/input-12, 87] [/input-12, 87] [/input-8, 1508] [/input-8, 1508] [/input-12, 87] [/input-12, 87] [/input-8, 1508] [/input-8, 1508] [/input-12, 87] [/input-12, 87] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3436620235443115
10 lb beta sum: 0.0, worst -0.34255170822143555
Time: prepare 0.0052    bound 0.1334    transfer 0.0018    finalize 0.0020    func 0.1440    
Accumulated time: func 0.2532    prepare 0.0090    bound 0.2329    transfer 0.0044    finalize 0.0041    
all_split False
======================Cut inference begins======================
max lb tensor(0.16081810) min lb tensor(-0.34194827)
Number of Verified Splits: 56 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4775838851928711
10 lb beta sum: 0.2611718773841858, worst -0.29021766781806946
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 1
#cuts 4-6: 19
#cuts 7-9: 12
#cuts 10-12: 4
#cuts >= 20: 0
BICCOS time: 0.1795024871826172 
BICCOS Cumulative time: 0.3841984272003174
Preprocessing time: 0.007850885391235352 Inference time: 0.16654348373413086 Add cuts time: 0.003155231475830078 Cut analysis time: 0.0019528865814208984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34195 (10), -0.33071 (10), -0.32171 (10), -0.31920 (10), -0.31505 (10), -0.31038 (10), -0.30570 (10), -0.30009 (10), -0.29840 (10), -0.29815 (10), -0.29451 (10), -0.29208 (10), -0.29083 (10), -0.28874 (10), -0.28663 (10), -0.28370 (10), -0.28293 (10), -0.28215 (10), -0.27937 (10), -0.27926 (10), 
Length of domains: 200
Time: pickout 0.0068    decision 0.0147    set_bounds 0.0109    solve 0.1441    add 0.0186    
Accumulated time: pickout 0.0072    decision 0.0378    set_bounds 0.0298    solve 0.2533    add 0.0872    
Current (lb-rhs): -0.3419482707977295
264 domains visited
Cumulative time: 0.813603401184082

BaB round 3
batch: 200
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 866] [/input-8, 866] [/input-8, 1437] [/input-12, 87] [/input-8, 866] [/input-8, 866] [/input-8, 1437] [/input-8, 1437] [/input-8, 866] [/input-8, 866] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32558679580688477
10 lb beta sum: 0.0, worst -0.32509636878967285
Time: prepare 0.0081    bound 0.1377    transfer 0.0025    finalize 0.0023    func 0.1539    
Accumulated time: func 0.4071    prepare 0.0173    bound 0.3706    transfer 0.0069    finalize 0.0064    
all_split False
======================Cut inference begins======================
max lb tensor(0.50342870) min lb tensor(-0.32490396)
Number of Verified Splits: 66 of 400
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 1
#cuts 4-6: 31
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.024691104888916016 
BICCOS Cumulative time: 0.4088895320892334
Preprocessing time: 0.011982440948486328 Inference time: 0.006339073181152344 Add cuts time: 0.0045702457427978516 Cut analysis time: 0.0017993450164794922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32490 (11), -0.31414 (11), -0.30428 (11), -0.30239 (11), -0.29792 (11), -0.29047 (11), -0.28832 (11), -0.28091 (11), -0.28091 (11), -0.27970 (11), -0.27498 (11), -0.27451 (11), -0.27354 (11), -0.27049 (11), -0.26989 (11), -0.26907 (11), -0.26670 (11), -0.26657 (11), -0.26267 (11), -0.26240 (11), 
Length of domains: 334
Time: pickout 0.0033    decision 0.0223    set_bounds 0.0105    solve 0.1540    add 0.0303    
Accumulated time: pickout 0.0106    decision 0.0601    set_bounds 0.0403    solve 0.4073    add 0.1175    
Current (lb-rhs): -0.3249039649963379
598 domains visited
Cumulative time: 1.0596601963043213

BaB round 4
batch: 334
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1508] [/input-12, 31] [/input-12, 31] [/input-8, 866] [/input-12, 31] [/input-12, 31] [/input-8, 866] [/input-8, 866] [/input-8, 1508] [/input-12, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.31590962409973145
10 lb beta sum: 0.007406390737742186, worst -0.31569337844848633
Time: prepare 0.0135    bound 0.1442    transfer 0.0039    finalize 0.0037    func 0.1696    
Accumulated time: func 0.5767    prepare 0.0310    bound 0.5148    transfer 0.0108    finalize 0.0101    
all_split False
======================Cut inference begins======================
max lb tensor(0.54002380) min lb tensor(-0.31557703)
Number of Verified Splits: 282 of 668
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 8
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.05687856674194336 
BICCOS Cumulative time: 0.46576809883117676
Preprocessing time: 0.021048307418823242 Inference time: 0.030517101287841797 Add cuts time: 0.004851818084716797 Cut analysis time: 0.00046133995056152344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31558 (12), -0.30507 (12), -0.29494 (12), -0.29333 (12), -0.28897 (12), -0.27956 (12), -0.27923 (12), -0.27152 (12), -0.27057 (12), -0.27035 (12), -0.26520 (12), -0.26415 (12), -0.26396 (12), -0.26131 (12), -0.26059 (12), -0.25797 (12), -0.25754 (12), -0.25714 (12), -0.25287 (12), -0.25258 (12), 
Length of domains: 386
Time: pickout 0.0053    decision 0.0324    set_bounds 0.0190    solve 0.1699    add 0.0191    
Accumulated time: pickout 0.0159    decision 0.0925    set_bounds 0.0593    solve 0.5771    add 0.1366    
Current (lb-rhs): -0.31557703018188477
984 domains visited
Cumulative time: 1.3644607067108154

BaB round 5
batch: 386
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 31] [/input-8, 1508] [/input-8, 866] [/input-12, 31] [/input-8, 541] [/input-12, 30] [/input-12, 31] [/input-12, 30] [/input-12, 31] [/input-8, 1508] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.30405640602111816
10 lb beta sum: 0.5234464406967163, worst -0.3036324977874756
Time: prepare 0.0155    bound 0.1423    transfer 0.0055    finalize 0.0046    func 0.1729    
Accumulated time: func 0.7496    prepare 0.0467    bound 0.6571    transfer 0.0163    finalize 0.0148    
all_split False
======================Cut inference begins======================
max lb tensor(0.87244958) min lb tensor(-0.30342174)
Number of Verified Splits: 730 of 772
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 11
#cuts >= 20: 0
BICCOS time: 0.11000895500183105 
BICCOS Cumulative time: 0.5757770538330078
Preprocessing time: 0.024617433547973633 Inference time: 0.07678079605102539 Add cuts time: 0.007715463638305664 Cut analysis time: 0.0008952617645263672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30342 (13), -0.29364 (13), -0.27676 (13), -0.26672 (13), -0.23628 (13), -0.23307 (13), -0.23225 (13), -0.21382 (13), -0.21200 (13), -0.20821 (13), -0.20674 (13), -0.20626 (13), -0.20494 (13), -0.19758 (13), -0.18895 (13), -0.18552 (13), -0.18322 (13), -0.17619 (13), -0.16658 (13), -0.15809 (13), 
Length of domains: 42
Time: pickout 0.0060    decision 0.0329    set_bounds 0.0207    solve 0.1731    add 0.0034    
Accumulated time: pickout 0.0219    decision 0.1254    set_bounds 0.0800    solve 0.7503    add 0.1401    
Current (lb-rhs): -0.3034217357635498
1026 domains visited
Cumulative time: 1.715578317642212

BaB round 6
batch: 42
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1557] [/input-12, 30] [/input-12, 30] [/input-12, 31] [/input-8, 1557] [/input-12, 30] [/input-12, 30] [/input-12, 31] [/input-12, 30] [/input-12, 30] 
split level 1: [/input-12, 30] [/input-8, 1509] [/input-8, 541] [/input-8, 541] [/input-12, 30] [/input-8, 1509] [/input-8, 1509] [/input-8, 1509] [/input-8, 1509] [/input-8, 1509] 
split level 2: [/input-8, 1509] [/input-8, 522] [/input-8, 522] [/input-8, 522] [/input-8, 1509] [/input-8, 522] [/input-8, 522] [/input-8, 522] [/input-8, 522] [/input-8, 522] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2574343681335449
10 lb beta sum: 0.5041783452033997, worst -0.2566263675689697
Time: prepare 0.0067    bound 0.1412    transfer 0.0011    finalize 0.0018    func 0.1529    
Accumulated time: func 0.9026    prepare 0.0537    bound 0.7983    transfer 0.0174    finalize 0.0165    
all_split False
======================Cut inference begins======================
max lb tensor(0.49951738) min lb tensor(-0.25633383)
Number of Verified Splits: 272 of 336
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.04263925552368164 
BICCOS Cumulative time: 0.6184163093566895
Preprocessing time: 0.01017904281616211 Inference time: 0.030498027801513672 Add cuts time: 0.0015871524810791016 Cut analysis time: 0.0003750324249267578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25633 (16), -0.25409 (16), -0.25392 (16), -0.25167 (16), -0.24389 (16), -0.24156 (16), -0.24067 (16), -0.23854 (16), -0.19423 (16), -0.19035 (16), -0.18963 (16), -0.18486 (16), -0.18118 (16), -0.17894 (16), -0.17820 (16), -0.17599 (16), -0.17202 (16), -0.17029 (16), -0.16985 (16), -0.16943 (16), 
Length of domains: 64
Time: pickout 0.0033    decision 0.0192    set_bounds 0.0177    solve 0.1530    add 0.0015    
Accumulated time: pickout 0.0252    decision 0.1446    set_bounds 0.0977    solve 0.9033    add 0.1415    
Current (lb-rhs): -0.2563338279724121
1090 domains visited
Cumulative time: 1.954420804977417

BaB round 7
batch: 64
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 541] [/input-8, 521] [/input-8, 1557] [/input-8, 1557] [/input-8, 541] [/input-8, 521] [/input-8, 1557] [/input-8, 1557] [/input-8, 541] [/input-8, 521] 
split level 1: [/input-8, 522] [/input-8, 541] [/input-8, 1947] [/input-8, 521] [/input-8, 522] [/input-8, 541] [/input-8, 1947] [/input-8, 521] [/input-8, 522] [/input-8, 541] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24408984184265137
10 lb beta sum: 0.891345739364624, worst -0.23864001035690308
Time: prepare 0.0050    bound 0.1343    transfer 0.0017    finalize 0.0013    func 0.1439    
Accumulated time: func 1.0465    prepare 0.0588    bound 0.9326    transfer 0.0191    finalize 0.0178    
all_split False
======================Cut inference begins======================
max lb tensor(0.58611244) min lb tensor(-0.23849185)
Number of Verified Splits: 196 of 256
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.034996747970581055 
BICCOS Cumulative time: 0.6534130573272705
Preprocessing time: 0.007839441299438477 Inference time: 0.02501368522644043 Add cuts time: 0.0017642974853515625 Cut analysis time: 0.00037932395935058594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23849 (18), -0.23573 (18), -0.21993 (18), -0.21771 (18), -0.20905 (18), -0.20629 (18), -0.19050 (18), -0.18824 (18), -0.18112 (18), -0.16703 (18), -0.16487 (18), -0.16279 (18), -0.15998 (18), -0.15180 (18), -0.15053 (18), -0.14454 (18), -0.14347 (18), -0.14205 (18), -0.13912 (18), -0.13518 (18), 
Length of domains: 60
Time: pickout 0.0020    decision 0.0141    set_bounds 0.0080    solve 0.1440    add 0.0012    
Accumulated time: pickout 0.0271    decision 0.1587    set_bounds 0.1057    solve 1.0472    add 0.1428    
Current (lb-rhs): -0.23849184811115265
1150 domains visited
Cumulative time: 2.159792423248291

BaB round 8
batch: 60
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1558] [/input-8, 1558] [/input-8, 1558] [/input-8, 523] [/input-8, 1558] [/input-8, 1558] [/input-8, 541] [/input-8, 1558] [/input-8, 1558] [/input-8, 1558] 
split level 1: [/input-8, 1947] [/input-8, 522] [/input-8, 541] [/input-8, 1947] [/input-8, 522] [/input-8, 541] [/input-8, 523] [/input-8, 1947] [/input-8, 522] [/input-8, 1947] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7518429160118103, worst -0.21665580570697784
10 lb beta sum: 0.7518429160118103, worst -0.21627719700336456
Time: prepare 0.0103    bound 0.1377    transfer 0.0020    finalize 0.0039    func 0.1558    
Accumulated time: func 1.2023    prepare 0.0693    bound 1.0703    transfer 0.0210    finalize 0.0217    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00179465) min lb tensor(-0.21610267)
Number of Verified Splits: 0 of 240
No cut inferred: All or none verified.
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.010408401489257812 
BICCOS Cumulative time: 0.6638214588165283
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21610 (20), -0.21584 (20), -0.21415 (20), -0.21389 (20), -0.21332 (20), -0.21308 (20), -0.21138 (20), -0.21112 (20), -0.19734 (20), -0.19704 (20), -0.19529 (20), -0.19506 (20), -0.19487 (20), -0.19462 (20), -0.19282 (20), -0.19260 (20), -0.18599 (20), -0.18579 (20), -0.18387 (20), -0.18362 (20), 
Length of domains: 240
Time: pickout 0.0018    decision 0.0141    set_bounds 0.0075    solve 0.1558    add 0.0022    
Accumulated time: pickout 0.0289    decision 0.1727    set_bounds 0.1132    solve 1.2031    add 0.1449    
Current (lb-rhs): -0.21610267460346222
1390 domains visited
Cumulative time: 2.3530795574188232

BaB round 9
batch: 240
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 521] [/input-8, 529] [/input-8, 521] [/input-8, 1558] [/input-8, 1947] [/input-8, 521] [/input-8, 1558] [/input-8, 521] [/input-8, 523] [/input-8, 521] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7518429160118103, worst -0.21331293880939484
10 lb beta sum: 0.7518429160118103, worst -0.21320994198322296
Time: prepare 0.0208    bound 0.1500    transfer 0.0157    finalize 0.0044    func 0.1941    
Accumulated time: func 1.3963    prepare 0.0903    bound 1.2203    transfer 0.0368    finalize 0.0262    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00179465) min lb tensor(-0.21318252)
Number of Verified Splits: 0 of 480
No cut inferred: All or none verified.
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.014959335327148438 
BICCOS Cumulative time: 0.6787807941436768
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21318 (21), -0.21296 (21), -0.21124 (21), -0.21101 (21), -0.21039 (21), -0.21019 (21), -0.20846 (21), -0.20822 (21), -0.19416 (21), -0.19394 (21), -0.19222 (21), -0.19198 (21), -0.19156 (21), -0.19129 (21), -0.18951 (21), -0.18930 (21), -0.18123 (21), -0.18112 (21), -0.18112 (21), -0.18112 (21), 
Length of domains: 480
Time: pickout 0.0080    decision 0.0253    set_bounds 0.0134    solve 0.1942    add 0.0058    
Accumulated time: pickout 0.0369    decision 0.1980    set_bounds 0.1266    solve 1.3973    add 0.1507    
Current (lb-rhs): -0.21318252384662628
1870 domains visited
Cumulative time: 2.615391254425049

BaB round 10
batch: 480
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 529] [/input-8, 523] [/input-8, 556] [/input-8, 541] [/input-8, 523] [/input-8, 556] [/input-8, 1947] [/input-8, 529] [/input-8, 529] [/input-8, 529] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7518428564071655, worst -0.2131832391023636
10 lb beta sum: 0.7518428564071655, worst -0.21319015324115753
Time: prepare 0.0422    bound 0.1393    transfer 0.0090    finalize 0.0047    func 0.2021    
Accumulated time: func 1.5984    prepare 0.1326    bound 1.3596    transfer 0.0458    finalize 0.0308    
all_split False
======================Cut inference begins======================
max lb tensor(0.00628638) min lb tensor(-0.21317323)
Number of Verified Splits: 15 of 960
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.033770084381103516 
BICCOS Cumulative time: 0.7125508785247803
Preprocessing time: 0.030496835708618164 Inference time: 0.0024313926696777344 Add cuts time: 0.00040912628173828125 Cut analysis time: 0.00043272972106933594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21317 (22), -0.21294 (22), -0.21122 (22), -0.21099 (22), -0.21038 (22), -0.21017 (22), -0.20844 (22), -0.20820 (22), -0.19402 (22), -0.19381 (22), -0.19207 (22), -0.19196 (22), -0.19193 (22), -0.19182 (22), -0.19117 (22), -0.19089 (22), -0.18960 (22), -0.18951 (22), -0.18923 (22), -0.18919 (22), 
Length of domains: 945
Time: pickout 0.0080    decision 0.0372    set_bounds 0.2074    solve 0.2023    add 0.0071    
Accumulated time: pickout 0.0449    decision 0.2352    set_bounds 0.3340    solve 1.5996    add 0.1578    
Current (lb-rhs): -0.21317322552204132
2815 domains visited
Cumulative time: 3.1122708320617676

BaB round 11
batch: 945
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 556] [/input-8, 1947] [/input-8, 529] [/input-8, 556] [/input-8, 529] [/input-8, 529] [/input-8, 556] [/input-8, 556] [/input-8, 1947] [/input-8, 556] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7455849647521973, worst -0.2033453732728958
10 lb beta sum: 0.7455849647521973, worst -0.2033570557832718
Time: prepare 0.0811    bound 0.1630    transfer 0.0183    finalize 0.0100    func 0.2855    
Accumulated time: func 1.8839    prepare 0.2140    bound 1.5226    transfer 0.0641    finalize 0.0409    
all_split False
======================Cut inference begins======================
max lb tensor(0.01290452) min lb tensor(-0.20333774)
Number of Verified Splits: 42 of 1890
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.06695270538330078 
BICCOS Cumulative time: 0.779503583908081
Preprocessing time: 0.05851125717163086 Inference time: 0.007289409637451172 Add cuts time: 0.0007243156433105469 Cut analysis time: 0.0004277229309082031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20334 (23), -0.20310 (23), -0.20138 (23), -0.20123 (23), -0.20113 (23), -0.20098 (23), -0.19982 (23), -0.19964 (23), -0.19926 (23), -0.19899 (23), -0.19782 (23), -0.19764 (23), -0.19464 (23), -0.19459 (23), -0.19250 (23), -0.19248 (23), -0.18495 (23), -0.18469 (23), -0.18295 (23), -0.18266 (23), 
Length of domains: 1848
Time: pickout 0.0177    decision 0.0628    set_bounds 0.0492    solve 0.2859    add 0.0292    
Accumulated time: pickout 0.0626    decision 0.2980    set_bounds 0.3833    solve 1.8855    add 0.1870    
Current (lb-rhs): -0.20333774387836456
4663 domains visited
Cumulative time: 3.6273155212402344

BaB round 12
batch: 1848
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 603] [/input-8, 997] [/input-8, 1844] [/input-8, 529] [/input-8, 556] [/input-8, 1844] [/input-8, 529] [/input-8, 603] [/input-8, 997] [/input-8, 1433] 
cut re-enabled after branching node selection
0 lb beta sum: 0.736748218536377, worst -0.1972263604402542
10 lb beta sum: 0.736748218536377, worst -0.1971638947725296
Time: prepare 0.1710    bound 0.2656    transfer 0.0344    finalize 0.0174    func 0.5131    
Accumulated time: func 2.3970    prepare 0.3852    bound 1.7882    transfer 0.0986    finalize 0.0583    
all_split False
======================Cut inference begins======================
max lb tensor(0.01308304) min lb tensor(-0.19712456)
Number of Verified Splits: 149 of 3696
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.14427757263183594 
BICCOS Cumulative time: 0.923781156539917
Preprocessing time: 0.11448121070861816 Inference time: 0.027531862258911133 Add cuts time: 0.0017459392547607422 Cut analysis time: 0.0005185604095458984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19712 (24), -0.19688 (24), -0.19651 (24), -0.19598 (24), -0.19484 (24), -0.19456 (24), -0.19438 (24), -0.19383 (24), -0.19338 (24), -0.19322 (24), -0.19278 (24), -0.19243 (24), -0.18779 (24), -0.18778 (24), -0.18775 (24), -0.18749 (24), -0.18112 (24), -0.17958 (24), -0.17934 (24), -0.17808 (24), 
Length of domains: 3547
Time: pickout 0.0311    decision 0.1120    set_bounds 0.2440    solve 0.5137    add 0.0691    
Accumulated time: pickout 0.0938    decision 0.4100    set_bounds 0.6273    solve 2.3992    add 0.2561    
Current (lb-rhs): -0.19712455570697784
8210 domains visited
Cumulative time: 4.747501850128174

BaB round 13
batch: 3547
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 556] [/input-8, 523] [/input-8, 156] [/input-8, 523] [/input-8, 156] [/input-8, 1433] [/input-8, 556] [/input-8, 1844] [/input-8, 997] [/input-8, 523] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7252948880195618, worst -0.19232042133808136
10 lb beta sum: 0.7252948880195618, worst -0.1922810822725296
Time: prepare 0.3123    bound 0.4421    transfer 0.0531    finalize 0.0388    func 0.8939    
Accumulated time: func 3.2909    prepare 0.6978    bound 2.2303    transfer 0.1517    finalize 0.0971    
all_split False
======================Cut inference begins======================
max lb tensor(0.01426107) min lb tensor(-0.19225009)
Number of Verified Splits: 366 of 7094
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.4544682502746582 
BICCOS Cumulative time: 1.3782494068145752
Preprocessing time: 0.21924281120300293 Inference time: 0.22922563552856445 Add cuts time: 0.005479097366333008 Cut analysis time: 0.0005207061767578125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19225 (25), -0.19173 (25), -0.19033 (25), -0.18992 (25), -0.18981 (25), -0.18939 (25), -0.18840 (25), -0.18810 (25), -0.18802 (25), -0.18747 (25), -0.18643 (25), -0.18610 (25), -0.18306 (25), -0.18282 (25), -0.18098 (25), -0.18078 (25), -0.17457 (25), -0.17429 (25), -0.17320 (25), -0.17305 (25), 
Length of domains: 6728
Time: pickout 0.0585    decision 0.2050    set_bounds 0.3509    solve 0.8956    add 0.0586    
Accumulated time: pickout 0.1522    decision 0.6150    set_bounds 0.9782    solve 3.2948    add 0.3148    
Current (lb-rhs): -0.1922500878572464
14938 domains visited
Cumulative time: 6.781792402267456

BaB round 14
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 603] [/input-8, 1433] [/input-8, 997] [/input-8, 997] [/input-8, 1844] [/input-8, 603] [/input-8, 1010] [/input-8, 603] [/input-8, 1433] [/input-8, 997] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7118699550628662, worst -0.18667514622211456
10 lb beta sum: 0.7118699550628662, worst -0.18662221729755402
Time: prepare 0.3609    bound 0.4975    transfer 0.0422    finalize 0.2302    func 1.1851    
Accumulated time: func 4.4760    prepare 1.0589    bound 2.7278    transfer 0.1939    finalize 0.3272    
all_split False
======================Cut inference begins======================
max lb tensor(0.01229036) min lb tensor(-0.18661101)
Number of Verified Splits: 514 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.36802101135253906 
BICCOS Cumulative time: 1.7462704181671143
Preprocessing time: 0.2576117515563965 Inference time: 0.10265183448791504 Add cuts time: 0.007226467132568359 Cut analysis time: 0.0005309581756591797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18661 (26), -0.18609 (26), -0.18477 (26), -0.18429 (26), -0.18424 (26), -0.18376 (26), -0.18274 (26), -0.18245 (26), -0.18245 (26), -0.18191 (26), -0.18083 (26), -0.18051 (26), -0.17745 (26), -0.17722 (26), -0.17539 (26), -0.17520 (26), -0.17320 (25), -0.17305 (25), -0.17174 (25), -0.17097 (25), 
Length of domains: 10310
Time: pickout 0.0633    decision 0.2287    set_bounds 0.2313    solve 1.1865    add 0.0616    
Accumulated time: pickout 0.2156    decision 0.8437    set_bounds 1.2095    solve 4.4814    add 0.3764    
Current (lb-rhs): -0.18661101162433624
22616 domains visited
current_vram/total_varm: 11.0GB/99.9GB, batch_size increase to 8192
Cumulative time: 8.937930345535278

BaB round 15
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1844] [/input-8, 603] [/input-8, 1433] [/input-8, 997] [/input-8, 1844] [/input-8, 1844] [/input-8, 1844] [/input-8, 603] [/input-8, 1844] [/input-8, 603] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7019026279449463, worst -0.18137581646442413
10 lb beta sum: 0.7019026279449463, worst -0.18134362995624542
Time: prepare 0.7268    bound 0.9253    transfer 0.0965    finalize 0.0935    func 1.9500    
Accumulated time: func 6.4260    prepare 1.7861    bound 3.6532    transfer 0.2904    finalize 0.4208    
all_split False
======================Cut inference begins======================
max lb tensor(0.01246625) min lb tensor(-0.18133052)
Number of Verified Splits: 1415 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 1.0733497142791748 
BICCOS Cumulative time: 2.819620132446289
Preprocessing time: 0.5305683612823486 Inference time: 0.5268373489379883 Add cuts time: 0.015410661697387695 Cut analysis time: 0.0005333423614501953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18133 (27), -0.18066 (27), -0.17951 (27), -0.17902 (27), -0.17885 (27), -0.17833 (27), -0.17742 (27), -0.17722 (27), -0.17697 (27), -0.17654 (27), -0.17554 (27), -0.17510 (27), -0.17221 (27), -0.17185 (27), -0.17022 (27), -0.16989 (27), -0.16847 (26), -0.16814 (26), -0.16697 (26), -0.16678 (26), 
Length of domains: 17087
Time: pickout 0.1241    decision 0.6344    set_bounds 0.6618    solve 1.9523    add 0.0714    
Accumulated time: pickout 0.3397    decision 1.4781    set_bounds 1.8714    solve 6.4336    add 0.4477    
Current (lb-rhs): -0.18133051693439484
37585 domains visited
current_vram/total_varm: 19.3GB/99.9GB, batch_size increase to 16384
Cumulative time: 13.497042417526245

BaB round 16
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1915] [/input-8, 603] [/input-8, 1915] [/input-8, 173] [/input-8, 1915] [/input-8, 1433] [/input-8, 1915] [/input-8, 603] [/input-8, 1433] [/input-8, 1010] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6885731220245361, worst -0.17754824459552765
10 lb beta sum: 0.6885731220245361, worst -0.17748458683490753
Time: prepare 1.4574    bound 1.7831    transfer 0.1897    finalize 0.4526    func 4.0966    
Accumulated time: func 10.5225    prepare 3.2440    bound 5.4362    transfer 0.4800    finalize 0.8733    
all_split False
======================Cut inference begins======================
max lb tensor(0.02294087) min lb tensor(-0.17743833)
Number of Verified Splits: 4226 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 15
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 2.379939317703247 
BICCOS Cumulative time: 5.199559450149536
Preprocessing time: 1.071204423904419 Inference time: 1.2540509700775146 Add cuts time: 0.05391860008239746 Cut analysis time: 0.0007653236389160156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18133 (27), -0.17744 (28), -0.17636 (28), -0.17593 (28), -0.17562 (28), -0.17509 (28), -0.17434 (28), -0.17408 (28), -0.17378 (28), -0.17327 (28), -0.17242 (28), -0.17187 (28), -0.16920 (28), -0.16862 (28), -0.16715 (28), -0.16665 (28), -0.16254 (27), -0.16200 (27), -0.16108 (27), -0.16056 (27), 
Length of domains: 29245
Time: pickout 0.2505    decision 1.8982    set_bounds 1.2163    solve 4.1018    add 0.1504    
Accumulated time: pickout 0.5902    decision 3.3763    set_bounds 3.0876    solve 10.5354    add 0.5981    
Current (lb-rhs): -0.18133051693439484
66127 domains visited
current_vram/total_varm: 32.5GB/99.9GB, batch_size increase to 32768
Cumulative time: 23.570690393447876

BaB round 17
batch: 29245
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1916] [/input-8, 532] [/input-8, 1010] [/input-8, 532] [/input-8, 173] [/input-8, 997] [/input-8, 550] [/input-8, 1844] [/input-8, 523] [/input-8, 603] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1783311367034912
10 lb beta sum: 0.3570108115673065, worst -0.1782848834991455
Time: prepare 1.2158    bound 3.1531    transfer 0.4633    finalize 0.3549    func 5.9930    
Accumulated time: func 16.5155    prepare 4.4602    bound 8.5893    transfer 0.9433    finalize 1.2283    
all_split False
======================Cut inference begins======================
max lb tensor(0.14407766) min lb tensor(-0.17823434)
Number of Verified Splits: 38108 of 58490
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 15
#cuts 4-6: 4
#cuts 7-9: 13
#cuts >= 20: 0
BICCOS time: 11.537773609161377 
BICCOS Cumulative time: 16.737333059310913
Preprocessing time: 1.9367611408233643 Inference time: 9.147224187850952 Add cuts time: 0.45218396186828613 Cut analysis time: 0.001604318618774414
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17823 (28), -0.16793 (29), -0.16677 (29), -0.16643 (29), -0.16602 (29), -0.16558 (29), -0.16530 (29), -0.16475 (29), -0.16450 (29), -0.16421 (29), -0.16416 (29), -0.16377 (29), -0.16367 (29), -0.16342 (29), -0.16294 (29), -0.16273 (29), -0.16222 (29), -0.16206 (29), -0.16188 (29), -0.16157 (29), 
Length of domains: 20382
Time: pickout 0.5914    decision 2.9549    set_bounds 2.4977    solve 6.0012    add 0.1954    
Accumulated time: pickout 1.1816    decision 6.3312    set_bounds 5.5854    solve 16.5366    add 0.7936    
Current (lb-rhs): -0.17823433876037598
86509 domains visited
Cumulative time: 47.827775955200195

BaB round 18
batch: 20382
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1010] [/input-8, 556] [/input-8, 173] [/input-8, 1844] [/input-8, 532] [/input-8, 173] [/input-8, 603] [/input-8, 532] [/input-8, 1844] [/input-8, 532] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16879701614379883
10 lb beta sum: 0.25916463136672974, worst -0.1687462329864502
Time: prepare 0.9598    bound 2.2346    transfer 0.2582    finalize 0.6914    func 4.4136    
Accumulated time: func 20.9291    prepare 5.4204    bound 10.8239    transfer 1.2016    finalize 1.9197    
all_split False
======================Cut inference begins======================
max lb tensor(0.05213793) min lb tensor(-0.16872501)
Number of Verified Splits: 11037 of 40764
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 79.
#cuts 1-3: 15
#cuts 4-6: 25
#cuts 7-9: 39
#cuts >= 20: 0
BICCOS time: 4.555467128753662 
BICCOS Cumulative time: 21.292800188064575
Preprocessing time: 1.5274279117584229 Inference time: 2.866685390472412 Add cuts time: 0.15758442878723145 Cut analysis time: 0.003769397735595703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16873 (29), -0.16607 (29), -0.16463 (30), -0.16312 (30), -0.16312 (30), -0.16239 (30), -0.16228 (30), -0.16170 (30), -0.16141 (30), -0.16089 (30), -0.16085 (30), -0.16018 (30), -0.16004 (30), -0.15934 (30), -0.15905 (30), -0.15856 (30), -0.15846 (30), -0.15795 (30), -0.15629 (30), -0.15575 (30), 
Length of domains: 29727
Time: pickout 0.4412    decision 2.0705    set_bounds 1.7044    solve 4.4219    add 0.1787    
Accumulated time: pickout 1.6228    decision 8.4017    set_bounds 7.2897    solve 20.9584    add 0.9723    
Current (lb-rhs): -0.16872501373291016
116236 domains visited
Cumulative time: 61.37716460227966

BaB round 19
batch: 29727
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 559] [/input-8, 173] [/input-8, 603] [/input-8, 1433] [/input-8, 173] [/input-8, 1433] [/input-8, 173] [/input-8, 173] [/input-8, 1010] [/input-8, 173] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16543221473693848
10 lb beta sum: 0.23505517840385437, worst -0.1654200553894043
Time: prepare 1.3268    bound 3.3626    transfer 0.4685    finalize 0.9814    func 6.5315    
Accumulated time: func 27.4606    prepare 6.7477    bound 14.1865    transfer 1.6701    finalize 2.9011    
all_split False
======================Cut inference begins======================
max lb tensor(0.05255636) min lb tensor(-0.16540480)
Number of Verified Splits: 17286 of 59454
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 110.
#cuts 1-3: 15
#cuts 4-6: 51
#cuts 7-9: 44
#cuts >= 20: 0
BICCOS time: 6.823337078094482 
BICCOS Cumulative time: 28.116137266159058
Preprocessing time: 2.020188331604004 Inference time: 4.5140039920806885 Add cuts time: 0.28405046463012695 Cut analysis time: 0.005094289779663086
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16540 (30), -0.16245 (30), -0.15399 (31), -0.15349 (31), -0.15257 (31), -0.15250 (31), -0.15199 (31), -0.15195 (31), -0.15182 (31), -0.15165 (31), -0.15124 (31), -0.15115 (31), -0.15105 (31), -0.15082 (31), -0.15054 (31), -0.15030 (31), -0.15027 (31), -0.15027 (31), -0.14976 (31), -0.14976 (31), 
Length of domains: 42168
Time: pickout 0.5423    decision 3.1042    set_bounds 2.8096    solve 6.5421    add 0.2156    
Accumulated time: pickout 2.1651    decision 11.5060    set_bounds 10.0993    solve 27.5006    add 1.1879    
Current (lb-rhs): -0.1654047966003418
158404 domains visited
Cumulative time: 81.70008730888367

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 156] [/input-8, 1433] [/input-8, 1844] [/input-8, 532] [/input-8, 1433] [/input-8, 532] [/input-8, 1433] [/input-8, 1433] [/input-8, 173] [/input-8, 1433] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1518714427947998
10 lb beta sum: 0.21849247813224792, worst -0.15186643600463867
Time: prepare 1.4912    bound 10.4776    transfer 0.5277    finalize 0.5616    func 13.5000    
Accumulated time: func 40.9606    prepare 8.2393    bound 24.6641    transfer 2.1977    finalize 3.4627    
all_split False
======================Cut inference begins======================
max lb tensor(0.05237087) min lb tensor(-0.15182710)
Number of Verified Splits: 20937 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 148.
#cuts 1-3: 15
#cuts 4-6: 62
#cuts 7-9: 70
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 8.288078784942627 
BICCOS Cumulative time: 36.404216051101685
Preprocessing time: 2.2709500789642334 Inference time: 5.609618425369263 Add cuts time: 0.4005701541900635 Cut analysis time: 0.006940126419067383
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16540 (30), -0.15399 (31), -0.15257 (31), -0.15250 (31), -0.15183 (31), -0.15182 (31), -0.15165 (31), -0.15129 (31), -0.15105 (31), -0.15082 (31), -0.15030 (31), -0.15027 (31), -0.14976 (31), -0.14952 (31), -0.14948 (31), -0.14934 (31), -0.14906 (32), -0.14903 (31), -0.14883 (31), -0.14870 (31), 
Length of domains: 53999
Time: pickout 0.6005    decision 3.5086    set_bounds 3.3366    solve 14.2610    add 0.3771    
Accumulated time: pickout 2.7656    decision 15.0145    set_bounds 13.4359    solve 41.7616    add 1.5649    
Current (lb-rhs): -0.1654047966003418
203003 domains visited
Cumulative time: 112.42807698249817

BaB round 21
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1433] [/input-8, 1433] [/input-8, 1433] [/input-8, 1939] [/input-8, 1939] [/input-8, 1433] [/input-8, 1844] [/input-8, 1433] [/input-8, 1844] [/input-8, 1939] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15482759475708008
10 lb beta sum: 0.20469947159290314, worst -0.15481305122375488
Time: prepare 1.5100    bound 10.6499    transfer 0.5373    finalize 0.5997    func 14.6433    
Accumulated time: func 55.6039    prepare 9.7498    bound 35.3140    transfer 2.7350    finalize 4.0624    
all_split False
======================Cut inference begins======================
max lb tensor(0.05225357) min lb tensor(-0.15478945)
Number of Verified Splits: 22619 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 210.
#cuts 1-3: 15
#cuts 4-6: 101
#cuts 7-9: 89
#cuts 10-12: 5
#cuts >= 20: 0
BICCOS time: 9.134790897369385 
BICCOS Cumulative time: 45.53900694847107
Preprocessing time: 2.2936971187591553 Inference time: 6.324974775314331 Add cuts time: 0.5061349868774414 Cut analysis time: 0.009984016418457031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15479 (31), -0.15425 (31), -0.15183 (31), -0.14962 (32), -0.14906 (32), -0.14817 (32), -0.14817 (32), -0.14760 (32), -0.14750 (32), -0.14739 (32), -0.14726 (32), -0.14675 (32), -0.14670 (32), -0.14650 (32), -0.14647 (32), -0.14628 (32), -0.14591 (32), -0.14588 (32), -0.14588 (32), -0.14574 (32), 
Length of domains: 64148
Time: pickout 0.6045    decision 3.3514    set_bounds 3.5734    solve 14.6567    add 0.5039    
Accumulated time: pickout 3.3701    decision 18.3660    set_bounds 17.0093    solve 56.4184    add 2.0688    
Current (lb-rhs): -0.15478944778442383
245920 domains visited
Cumulative time: 144.94062852859497

BaB round 22
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1761] [/input-8, 876] [/input-8, 876] [/input-8, 876] [/input-8, 876] [/input-8, 876] [/input-8, 550] [/input-8, 550] [/input-8, 550] [/input-8, 550] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15001535415649414
10 lb beta sum: 0.19274291396141052, worst -0.14989876747131348
Time: prepare 1.6376    bound 10.8655    transfer 0.5498    finalize 0.6964    func 15.5595    
Accumulated time: func 71.1634    prepare 11.3881    bound 46.1795    transfer 3.2848    finalize 4.7588    
all_split False
======================Cut inference begins======================
max lb tensor(0.05010041) min lb tensor(-0.14986753)
Number of Verified Splits: 22415 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 249.
#cuts 1-3: 15
#cuts 4-6: 128
#cuts 7-9: 103
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 11.04509687423706 
BICCOS Cumulative time: 56.58410382270813
Preprocessing time: 2.628429651260376 Inference time: 7.745955944061279 Add cuts time: 0.6559450626373291 Cut analysis time: 0.014766216278076172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15479 (31), -0.14987 (32), -0.14962 (32), -0.14817 (32), -0.14817 (32), -0.14739 (32), -0.14726 (32), -0.14709 (32), -0.14650 (32), -0.14647 (32), -0.14628 (32), -0.14609 (33), -0.14591 (32), -0.14588 (32), -0.14504 (32), -0.14501 (32), -0.14482 (32), -0.14464 (33), -0.14460 (33), -0.14426 (32), 
Length of domains: 74501
Time: pickout 0.7679    decision 4.9699    set_bounds 3.9768    solve 15.5767    add 0.5915    
Accumulated time: pickout 4.1381    decision 23.3358    set_bounds 20.9861    solve 71.9950    add 2.6604    
Current (lb-rhs): -0.15478944778442383
289041 domains visited
Cumulative time: 182.49785089492798

BaB round 23
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 876] [/input-8, 1761] [/input-8, 139] [/input-8, 139] [/input-8, 1761] [/input-8, 1761] [/input-8, 876] [/input-8, 876] [/input-8, 1761] [/input-8, 550] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1505591869354248
10 lb beta sum: 0.18335428833961487, worst -0.15047907829284668
Time: prepare 1.6605    bound 10.9893    transfer 0.3105    finalize 0.5856    func 13.9832    
Accumulated time: func 85.1466    prepare 13.0495    bound 57.1688    transfer 3.5953    finalize 5.3443    
all_split False
======================Cut inference begins======================
max lb tensor(0.04991039) min lb tensor(-0.15045500)
Number of Verified Splits: 25122 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 331.
#cuts 1-3: 15
#cuts 4-6: 169
#cuts 7-9: 142
#cuts 10-12: 5
#cuts >= 20: 0
BICCOS time: 11.002734422683716 
BICCOS Cumulative time: 67.58683824539185
Preprocessing time: 2.437868595123291 Inference time: 7.64922571182251 Add cuts time: 0.8963742256164551 Cut analysis time: 0.01926589012145996
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15045 (32), -0.14987 (32), -0.14709 (32), -0.14665 (33), -0.14609 (33), -0.14528 (33), -0.14520 (33), -0.14464 (33), -0.14460 (33), -0.14445 (33), -0.14429 (33), -0.14381 (33), -0.14372 (33), -0.14360 (33), -0.14356 (33), -0.14333 (33), -0.14300 (33), -0.14297 (33), -0.14292 (33), -0.14277 (33), 
Length of domains: 82147
Time: pickout 0.7300    decision 3.4681    set_bounds 4.7690    solve 14.0041    add 0.2335    
Accumulated time: pickout 4.8681    decision 26.8039    set_bounds 25.7550    solve 85.9992    add 2.8939    
Current (lb-rhs): -0.15045499801635742
329455 domains visited
Time out!!!!!!!!
Result: unknown in 219.6308 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 27, vnnlib ID: 27 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-39.10966110, -44.41528320, -38.26922226, -39.69669724, -36.84957886,
         -39.03826904, -39.92231369, -31.21683502, -42.52749252, -41.09471130]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [875]; unstable size 875; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 318, 1, 875] with unstable size 317 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 39, 1, 875] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 875] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [317]; unstable size 317; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 39, 1, 317] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 317] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [38]; unstable size 38; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.50014496, 7.90916634, 2.82874107, 4.54060268, 2.52650118, 4.01052952,
         4.07968903, 6.65568924, 5.55764437]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0814 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 28, vnnlib ID: 28 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.65501022, -40.86853409, -35.54205704, -38.19442749, -37.45741653,
         -38.86818695, -38.35976410, -40.93164444, -37.53094482, -40.83524704]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1116]; unstable size 1116; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 219, 1, 1116] with unstable size 218 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 1116] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1116] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [218]; unstable size 218; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 218] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 218] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.71670580, 0.06172085, 2.22146559, 1.50599837, 2.58690810, 2.57825708,
         4.04641104, 1.25272179, 4.83678102]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0668 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 29, vnnlib ID: 29 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-39.27124405, -38.91182327, -34.76234055, -31.28829384, -32.38124084,
         -32.28250504, -31.43453598, -34.35034943, -38.37918472, -38.15852356]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [965]; unstable size 965; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 293, 1, 965] with unstable size 292 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 36, 1, 965] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 965] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [292]; unstable size 292; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 36, 1, 292] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 292] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.49291325,  0.81660891, -3.21010971, -5.39728642, -4.13461304,
         -4.75879860, -6.20728350,  0.94911480,  0.78615701]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-39.27124405, -38.91182327, -34.76234055, -31.28829384, -32.38124084,
         -32.28250504, -31.43453598, -34.35034943, -38.37918472, -38.15852356]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.27124405, -38.91182709, -34.76234436, -31.28829765, -32.38124466,
          -32.28250504, -31.43453979, -34.35034943, -38.37919235, -38.15852356],
         [-39.27124405, -38.91182709, -34.76234436, -31.28829765, -32.38124466,
          -32.28250504, -31.43453979, -34.35034943, -38.37919235, -38.15852356]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.41199493, -3.06205177, -1.96910477, -2.06784439, -2.91580963]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0653 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 30, vnnlib ID: 30 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-40.01227951, -46.68482590, -44.39871216, -47.57000732, -45.36288834,
         -49.70219040, -47.92353439, -50.96149826, -44.68561935, -46.33597946]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1096]; unstable size 1096; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 297, 1, 1096] with unstable size 296 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 1096] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1096] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [296]; unstable size 296; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 296] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 296] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.82514668, 1.83915639, 4.44214010, 2.37968922, 6.11862850, 4.79061508,
         7.34239483, 1.82212424, 3.93620944]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0669 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 31, vnnlib ID: 31 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-34.97704697, -41.12887192, -33.62250137, -35.96536255, -30.36490250,
         -36.67815399, -35.31568146, -34.39420700, -38.39189911, -39.47142792]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [670]; unstable size 670; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 301, 1, 670] with unstable size 300 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 38, 1, 670] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 670] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [300]; unstable size 300; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 38, 1, 300] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 300] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [37]; unstable size 37; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.61297202, 6.83863020, 0.58088684, 3.34703422, 3.72961712, 1.83263183,
         1.24157691, 5.05306244, 5.39242601]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0683 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 32, vnnlib ID: 32 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.85940170, -36.85256577, -32.24290085, -32.99658966, -29.82269478,
         -33.45941544, -33.43396759, -29.88413811, -33.48080063, -34.87062836]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1095]; unstable size 1095; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 447, 1, 1095] with unstable size 446 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 59, 1, 1095] with unstable size 58 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1095] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [446]; unstable size 446; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 59, 1, 446] with unstable size 58 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 446] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [58]; unstable size 58; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 58] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.21373558,  0.03447235, -3.80135727, -1.83622122, -3.95271301,
         -1.30398273, -2.73880386, -2.68448424, -0.86757088]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.85940170, -36.85256577, -32.24290085, -32.99658966, -29.82269478,
         -33.45941544, -33.43396759, -29.88413811, -33.48080063, -34.87062836]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.85939789, -36.85256577, -32.24289703, -32.99658585, -29.82269096,
          -33.45941162, -33.43396759, -29.88413429, -33.48080063, -34.87062454],
         [-33.85939789, -36.85256577, -32.24289703, -32.99658585, -29.82269096,
          -33.45941162, -33.43396759, -29.88413429, -33.48080063, -34.87062454]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 3.97526360,  2.35876274,  3.11245155, -0.06144333,  3.57527733,
           3.54983330,  3.59666634,  4.98649025]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         ...,


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]]]],
       device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0961 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 33, vnnlib ID: 33 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-43.45547104, -49.82109451, -47.20139313, -50.03735352, -52.22932434,
         -52.48610687, -51.32045364, -55.12765121, -47.18824387, -49.91006088]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1243]; unstable size 1243; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 309, 1, 1243] with unstable size 308 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 1243] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1243] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [308]; unstable size 308; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 308] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 308] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.22238636, 1.21076202, 4.03405380, 4.86842775, 5.71701527, 4.54680347,
         7.87252426, 1.15907645, 4.09404564]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0996 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 34, vnnlib ID: 34 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.66591644, -28.78306389, -24.76087761, -22.87705803, -23.37098503,
         -24.30959320, -24.39266968, -25.04489326, -30.33021736, -27.35327911]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [799]; unstable size 799; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 395, 1, 799] with unstable size 394 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 54, 1, 799] with unstable size 53 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 799] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [394]; unstable size 394; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 54, 1, 394] with unstable size 53 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 394] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [53]; unstable size 53; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 53] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.59435034,  0.16951227, -1.54706955, -2.25549936, -0.21366927,
         -1.59599352, -1.25854921,  2.48468351, -0.83439970]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.66591644, -28.78306389, -24.76087761, -22.87705803, -23.37098503,
         -24.30959320, -24.39266968, -25.04489326, -30.33021736, -27.35327911]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.01388359, -28.31304359, -24.25914955, -22.82112122, -22.41024971,
          -24.20838737, -24.12451553, -24.21014977, -29.79281425, -27.06704521],
         [-28.01388359, -28.31304359, -24.25914955, -22.82112122, -22.41024971,
          -24.20838737, -24.12451553, -24.21014977, -29.79281425, -27.06704521]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.43802834, -0.41087151,  1.38726616,  1.30339432,  1.38902855,
           4.24592400]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0115 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0762 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 35, vnnlib ID: 35 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.37882042, -28.86397934, -24.00654221, -19.59586525, -24.54585648,
         -22.15358543, -21.18541336, -24.80801773, -29.20103264, -27.59878540]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [817]; unstable size 817; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 351, 1, 817] with unstable size 350 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 52, 1, 817] with unstable size 51 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 817] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [350]; unstable size 350; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 52, 1, 350] with unstable size 51 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 350] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [51]; unstable size 51; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 51] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.60130072,  4.11072636,  0.57979441,  1.88955092,  1.12461615,
         -2.03839779,  1.26848340,  4.89902020,  3.05693674]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.37882042, -28.86397934, -24.00654221, -19.59586525, -24.54585648,
         -22.15358543, -21.18541336, -24.80801773, -29.20103264, -27.59878540]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.44it/s]100%|██████████| 1/1 [00:00<00:00,  8.43it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-30.42800903, -30.82060814, -25.75936699, -21.73507118, -26.49415779,
          -24.35151863, -22.07335663, -27.17408752, -31.34317017, -29.75984764]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.33828545]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1212 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 21.22197723388672
alpha/beta optimization time: 1.3069207668304443
initial alpha-crown bounds: tensor([[ 4.80697107,  4.37515068,  0.76609039,  2.03724098,  1.20231974,
         -1.86722541,  1.47095132,  5.15570879,  3.27476883]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -1.8672254085540771
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.5042929649353
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.50425004959106
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.50421929359436
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.5041961669922
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.50417566299438
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.50415563583374
Verifying property 5 with 1 instances.
##### Instance 35 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.86722541]], device='cuda:0') need to verify.
Model prediction is: tensor([-28.37882042, -28.86397934, -24.00654221, -19.59586525, -24.54585648,
        -22.15358543, -21.18541336, -24.80801773, -29.20103264, -27.59878540],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.86722541]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 817
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 344
Node /15 input 0: size torch.Size([100]) unstable 48
-----------------
# of unstable neurons: 1209
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011038780212402344
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.8672199249267578
10 lb beta sum: 0.0, worst -1.8672237396240234
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0566    transfer 0.0001    finalize 0.0002    func 0.0571    
Accumulated time: func 0.0571    prepare 0.0002    bound 0.0566    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 87] 
split level 1: [/input-12, 56] 
split level 2: [/input-12, 37] 
split level 3: [/input-12, 76] 
split level 4: [/input-12, 44] 
split level 5: [/input-12, 6] 
split level 6: [/input-12, 80] 
split level 7: [/input-12, 47] 
split level 8: [/input-12, 70] 
split level 9: [/input-12, 90] 
split level 10: [/input-12, 58] 
split level 11: [/input-12, 51] 
split level 12: [/input-12, 45] 
split level 13: [/input-12, 25] 
split level 14: [/input-12, 81] 
split level 15: [/input-8, 1556] 
split level 16: [/input-12, 57] 
split level 17: [/input-8, 1555] 
split level 18: [/input-12, 97] 
split level 19: [/input-12, 83] 
split level 20: [/input-8, 1547] 
split level 21: [/input-12, 7] 
split level 22: [/input-8, 1549] 
split level 23: [/input-12, 73] 
split level 24: [/input-8, 522] 
split level 25: [/input-12, 66] 
split level 26: [/input-8, 1562] 
split level 27: [/input, 935] 
split level 28: [/input-8, 515] 
split level 29: [/input, 934] 
split level 30: [/input-8, 371] 
split level 31: [/input-8, 1565] 
split level 32: [/input-8, 1845] 
split level 33: [/input, 2503] 
split level 34: [/input-8, 1442] 
split level 35: [/input, 184] 
split level 36: [/input-8, 1948] 
split level 37: [/input-8, 596] 
split level 38: [/input-8, 370] 
split level 39: [/input, 678] 
split level 40: [/input, 1641] 
split level 41: [/input, 2536] 
split level 42: [/input, 2490] 
split level 43: [/input, 2473] 
split level 44: [/input-8, 2046] 
split level 45: [/input, 2471] 
split level 46: [/input-8, 2029] 
split level 47: [/input-8, 149] 
split level 48: [/input, 969] 
split level 49: [/input, 2489] 
split level 50: [/input-8, 532] 
split level 51: [/input, 169] 
split level 52: [/input-8, 945] 
split level 53: [/input, 953] 
split level 54: [/input, 2262] 
split level 55: [/input-8, 1740] 
split level 56: [/input-8, 516] 
split level 57: [/input-8, 929] 
split level 58: [/input, 151] 
split level 59: [/input-8, 1523] 
split level 60: [/input-8, 1949] 
split level 61: [/input-8, 1331] 
split level 62: [/input, 134] 
split level 63: [/input, 2505] 
split level 64: [/input, 679] 
split level 65: [/input-8, 84] 
split level 66: [/input-8, 1441] 
split level 67: [/input-8, 920] 
split level 68: [/input, 172] 
split level 69: [/input, 2067] 
split level 70: [/input-8, 1365] 
split level 71: [/input, 150] 
split level 72: [/input, 680] 
split level 73: [/input-12, 15] 
split level 74: [/input, 154] 
split level 75: [/input, 170] 
split level 76: [/input, 189] 
split level 77: [/input-8, 266] 
split level 78: [/input, 730] 
split level 79: [/input, 2748] 
split level 80: [/input, 183] 
split level 81: [/input, 152] 
split level 82: [/input-8, 1313] 
split level 83: [/input-8, 2036] 
split level 84: [/input, 1656] 
split level 85: [/input, 2458] 
split level 86: [/input, 2476] 
split level 87: [/input-8, 2040] 
split level 88: [/input, 101] 
split level 89: [/input, 75] 
split level 90: [/input, 2232] 
split level 91: [/input, 2373] 
split level 92: [/input-8, 938] 
split level 93: [/input-8, 921] 
split level 94: [/input, 711] 
split level 95: [/input, 2726] 
split level 96: [/input, 669] 
split level 97: [/input, 2311] 
split level 98: [/input, 155] 
split level 99: [/input, 662] 
split level 100: [/input-8, 1312] 
split level 101: [/input, 146] 
split level 102: [/input, 44] 
split level 103: [/input, 696] 
split level 104: [/input, 148] 
split level 105: [/input-8, 1940] 
split level 106: [/input, 692] 
split level 107: [/input, 918] 
split level 108: [/input-8, 946] 
split level 109: [/input, 202] 
split level 110: [/input, 2449] 
split level 111: [/input, 162] 
split level 112: [/input, 697] 
split level 113: [/input-8, 943] 
split level 114: [/input, 647] 
split level 115: [/input, 3171] 
split level 116: [/input-8, 1374] 
split level 117: [/input, 2068] 
split level 118: [/input, 217] 
split level 119: [/input, 39] 
split level 120: [/input-8, 416] 
split level 121: [/input, 140] 
split level 122: [/input, 53] 
split level 123: [/input, 2327] 
split level 124: [/input, 658] 
split level 125: [/input, 1123] 
split level 126: [/input, 2430] 
split level 127: [/input, 2745] 
split level 128: [/input-8, 2044] 
split level 129: [/input, 2494] 
split level 130: [/input, 23] 
split level 131: [/input, 2758] 
split level 132: [/input, 3987] 
split level 133: [/input, 1131] 
split level 134: [/input-8, 273] 
split level 135: [/input, 2712] 
split level 136: [/input, 1836] 
split level 137: [/input-8, 2030] 
split level 138: [/input, 86] 
split level 139: [/input, 2234] 
split level 140: [/input, 2341] 
split level 141: [/input, 2343] 
split level 142: [/input-8, 1222] 
split level 143: [/input, 2328] 
split level 144: [/input, 161] 
split level 145: [/input, 534] 
split level 146: [/input-8, 905] 
split level 147: [/input, 234] 
split level 148: [/input, 699] 
split level 149: [/input, 138] 
split level 150: [/input, 2517] 
split level 151: [/input, 731] 
split level 152: [/input, 2747] 
split level 153: [/input, 1852] 
split level 154: [/input, 81] 
split level 155: [/input, 2710] 
split level 156: [/input-8, 1127] 
split level 157: [/input-8, 1883] 
split level 158: [/input, 1879] 
split level 159: [/input, 983] 
split level 160: [/input-8, 374] 
split level 161: [/input, 190] 
split level 162: [/input, 141] 
split level 163: [/input, 2466] 
split level 164: [/input, 1210] 
split level 165: [/input, 2277] 
split level 166: [/input, 901] 
split level 167: [/input, 2220] 
split level 168: [/input, 2329] 
split level 169: [/input, 74] 
split level 170: [/input, 2776] 
split level 171: [/input, 701] 
split level 172: [/input, 2777] 
split level 173: [/input-8, 214] 
split level 174: [/input, 2340] 
split level 175: [/input-8, 1531] 
split level 176: [/input-8, 1755] 
split level 177: [/input, 2750] 
split level 178: [/input, 698] 
split level 179: [/input, 2363] 
split level 180: [/input, 1207] 
split level 181: [/input, 1052] 
split level 182: [/input, 2580] 
split level 183: [/input-8, 1952] 
split level 184: [/input, 85] 
split level 185: [/input-8, 1648] 
split level 186: [/input, 229] 
split level 187: [/input, 761] 
split level 188: [/input, 2845] 
split level 189: [/input, 2740] 
split level 190: [/input, 125] 
split level 191: [/input, 231] 
split level 192: [/input, 1169] 
split level 193: [/input, 3233] 
split level 194: [/input, 1505] 
split level 195: [/input, 707] 
split level 196: [/input, 2702] 
split level 197: [/input-8, 1837] 
split level 198: [/input, 661] 
split level 199: [/input, 2775] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.8669960498809814
10 lb beta sum: 0.0, worst -1.8670005798339844
Time: prepare 0.0113    bound 0.1042    transfer 0.0020    finalize 0.0032    func 0.1234    
Accumulated time: func 0.1805    prepare 0.0219    bound 0.1608    transfer 0.0021    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(-0.60835457) min lb tensor(-1.86699545)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010211706161499023 
BICCOS Cumulative time: 0.010211706161499023
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.84647 (1), -1.84554 (1), -1.84395 (1), -1.84392 (1), -1.84385 (1), -1.84286 (1), -1.84213 (1), -1.84172 (1), -1.84014 (1), -1.83927 (1), -1.83767 (1), -1.83755 (1), -1.83708 (1), -1.83657 (1), -1.83332 (1), -1.83125 (1), -1.82617 (1), -1.82479 (1), -1.82378 (1), -1.82039 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5483    set_bounds 0.0091    solve 0.1234    add 0.1809    
Accumulated time: pickout 0.0004    decision 0.5483    set_bounds 0.0091    solve 0.1234    add 0.1809    
Current (lb-rhs): -1.8464674949645996
50 domains visited
Cumulative time: 0.935124397277832

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 87] [/input-12, 56] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] 
split level 1: [/input-12, 76] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 76] [/input-12, 37] [/input-12, 37] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 2: [/input-12, 37] [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 37] [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 37] [/input-12, 37] 
split level 3: [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 76] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.742323875427246
10 lb beta sum: 0.0, worst -1.7407844066619873
Time: prepare 0.0118    bound 0.1023    transfer 0.0007    finalize 0.0021    func 0.1195    
Accumulated time: func 0.3000    prepare 0.0340    bound 0.2630    transfer 0.0029    finalize 0.0055    
all_split False
======================Cut inference begins======================
max lb tensor(0.26217580) min lb tensor(-1.74010623)
Number of Verified Splits: 5 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.012876749038696289 
BICCOS Cumulative time: 0.023088455200195312
Preprocessing time: 0.011677265167236328 Inference time: 0.000270843505859375 Add cuts time: 0.00012969970703125 Cut analysis time: 0.0007989406585693359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.77949 (2), -0.77938 (2), -0.77635 (2), -0.77462 (2), -0.76830 (2), -0.76706 (2), -0.76297 (2), -0.74780 (2), -0.73077 (2), -0.72575 (2), -0.72247 (2), -0.71880 (2), -0.71597 (2), -0.70706 (2), -0.70687 (2), -0.69858 (2), -0.67377 (2), -0.67096 (2), -0.66687 (2), -0.65287 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0269    set_bounds 0.0140    solve 0.1196    add 0.2510    
Accumulated time: pickout 0.0015    decision 0.5752    set_bounds 0.0231    solve 0.2430    add 0.4320    
Current (lb-rhs): -0.7794922590255737
100 domains visited
Cumulative time: 1.3677313327789307

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 87] [/input-12, 87] [/input-12, 56] [/input-12, 87] [/input-12, 56] [/input-12, 76] [/input-12, 76] [/input-12, 87] [/input-12, 87] [/input-12, 56] 
split level 1: [/input-12, 56] [/input-12, 56] [/input-12, 37] [/input-12, 56] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 56] [/input-12, 56] [/input-12, 76] 
split level 2: [/input-12, 76] [/input-12, 37] [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 44] [/input-12, 44] [/input-12, 76] [/input-12, 37] [/input-12, 37] 
split level 3: [/input-12, 37] [/input-12, 44] [/input-12, 44] [/input-12, 37] [/input-12, 44] [/input-12, 90] [/input-12, 90] [/input-12, 44] [/input-12, 44] [/input-12, 44] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6704385876655579
10 lb beta sum: 0.2015180140733719, worst -0.6673101186752319
Time: prepare 0.0059    bound 0.1244    transfer 0.0019    finalize 0.0025    func 0.1374    
Accumulated time: func 0.4374    prepare 0.0402    bound 0.3875    transfer 0.0048    finalize 0.0080    
all_split False
======================Cut inference begins======================
max lb tensor(0.60700989) min lb tensor(-0.66442949)
Number of Verified Splits: 138 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 11
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.02149033546447754 
BICCOS Cumulative time: 0.04457879066467285
Preprocessing time: 0.011748552322387695 Inference time: 0.007203578948974609 Add cuts time: 0.0020551681518554688 Cut analysis time: 0.0004830360412597656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23611 (3), -0.22360 (3), -0.21861 (3), -0.21240 (3), -0.20539 (3), -0.20444 (3), -0.20209 (3), -0.20178 (3), -0.19872 (3), -0.19681 (3), -0.19673 (3), -0.19335 (3), -0.19260 (3), -0.19205 (3), -0.19021 (3), -0.18748 (3), -0.18505 (3), -0.18255 (3), -0.18019 (3), -0.17593 (3), 
Length of domains: 50
Time: pickout 0.0148    decision 0.0213    set_bounds 0.0154    solve 0.1375    add 0.2502    
Accumulated time: pickout 0.0163    decision 0.5965    set_bounds 0.0385    solve 0.3805    add 0.6822    
Current (lb-rhs): -0.2361145317554474
150 domains visited
Cumulative time: 1.8355603218078613

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 87] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 87] [/input-12, 56] [/input-12, 56] [/input-12, 87] [/input-12, 56] [/input-12, 56] 
split level 1: [/input-12, 76] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 76] [/input-12, 37] [/input-12, 37] 
split level 2: [/input-12, 44] [/input-12, 44] [/input-12, 6] [/input-12, 6] [/input-12, 44] [/input-12, 6] [/input-12, 6] [/input-12, 44] [/input-12, 6] [/input-12, 6] 
split level 3: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 44] [/input-12, 44] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23701930046081543
10 lb beta sum: 0.1903853565454483, worst -0.5194466710090637
Time: prepare 0.0059    bound 0.1240    transfer 0.0009    finalize 0.0028    func 0.1362    
Accumulated time: func 0.5736    prepare 0.0464    bound 0.5114    transfer 0.0057    finalize 0.0108    
all_split False
======================Cut inference begins======================
max lb tensor(0.68102753) min lb tensor(-0.08354502)
Number of Verified Splits: 381 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 13
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.03896951675415039 
BICCOS Cumulative time: 0.08354830741882324
Preprocessing time: 0.011564254760742188 Inference time: 0.020209074020385742 Add cuts time: 0.006539344787597656 Cut analysis time: 0.0006568431854248047
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0147    decision 0.0203    set_bounds 0.0157    solve 0.1363    add 0.0240    
Accumulated time: pickout 0.0311    decision 0.6168    set_bounds 0.0542    solve 0.5168    add 0.7062    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 87] 
split level 1: [/input-12, 56] 
split level 2: [/input-12, 37] 
split level 3: [/input-12, 76] 
split level 4: [/input-12, 44] 
split level 5: [/input-12, 6] 
split level 6: [/input-12, 90] 
split level 7: [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6233302354812622
10 lb beta sum: 0.12677741050720215, worst -0.6120561361312866
Time: prepare 0.0036    bound 0.1202    transfer 0.0013    finalize 0.0014    func 0.1282    
Accumulated time: func 0.7018    prepare 0.0504    bound 0.6316    transfer 0.0070    finalize 0.0122    
all_split False
======================Cut inference begins======================
max lb tensor(1.45641136) min lb tensor(-0.61011821)
Number of Verified Splits: 233 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2984619140625
10 lb beta sum: 0.8961433172225952, worst -1.1969326734542847
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 13
#cuts 4-6: 18
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.2538328170776367 
BICCOS Cumulative time: 0.33738112449645996
Preprocessing time: 0.006453037261962891 Inference time: 0.2431490421295166 Add cuts time: 0.0029752254486083984 Cut analysis time: 0.0012555122375488281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.61012 (8), -0.53315 (8), -0.52201 (8), -0.46610 (8), -0.44631 (8), -0.44396 (8), -0.36837 (8), -0.36646 (8), -0.35620 (8), -0.33493 (8), -0.31094 (8), -0.28721 (8), -0.26948 (8), -0.22843 (8), -0.18243 (8), -0.16161 (8), -0.13403 (8), -0.11564 (8), -0.07519 (8), -0.05777 (8), 
Length of domains: 23
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0171    solve 0.1282    add 0.0114    
Accumulated time: pickout 0.0315    decision 0.6398    set_bounds 0.0713    solve 0.6450    add 0.7176    
Current (lb-rhs): -0.6101182103157043
173 domains visited
Cumulative time: 2.5279343128204346

BaB round 2
batch: 23
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
split level 1: [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] 
split level 2: [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] 
split level 3: [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4420323371887207
10 lb beta sum: 0.12546195089817047, worst -0.4314247667789459
Time: prepare 0.0051    bound 0.1268    transfer 0.0020    finalize 0.0019    func 0.1388    
Accumulated time: func 0.8406    prepare 0.0558    bound 0.7584    transfer 0.0091    finalize 0.0141    
all_split False
======================Cut inference begins======================
max lb tensor(0.65247327) min lb tensor(-0.43013504)
Number of Verified Splits: 308 of 368
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.317265510559082
10 lb beta sum: 1.026668906211853, worst -1.1125166416168213
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 57.
#cuts 1-3: 13
#cuts 4-6: 23
#cuts 7-9: 19
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.3333301544189453 
BICCOS Cumulative time: 0.6707112789154053
Preprocessing time: 0.010857105255126953 Inference time: 0.30428171157836914 Add cuts time: 0.01563286781311035 Cut analysis time: 0.002558469772338867
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.43014 (12), -0.42450 (12), -0.41285 (12), -0.41002 (12), -0.34830 (12), -0.34709 (12), -0.34036 (12), -0.33781 (12), -0.33630 (12), -0.33220 (12), -0.32466 (12), -0.32092 (12), -0.28718 (12), -0.28708 (12), -0.27822 (12), -0.27665 (12), -0.27313 (12), -0.26149 (12), -0.26042 (12), -0.25950 (12), 
Length of domains: 60
Time: pickout 0.0011    decision 0.0184    set_bounds 0.0211    solve 0.1389    add 0.0092    
Accumulated time: pickout 0.0326    decision 0.6582    set_bounds 0.0923    solve 0.7840    add 0.7268    
Current (lb-rhs): -0.430135041475296
233 domains visited
Cumulative time: 3.0524375438690186

BaB round 3
batch: 60
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
split level 1: [/input-8, 1556] [/input-8, 1555] [/input-12, 57] [/input-8, 1555] [/input-12, 81] [/input-8, 1547] [/input-8, 1556] [/input-12, 57] [/input-12, 81] [/input-8, 1547] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.40416574478149414
10 lb beta sum: 0.2260817140340805, worst -0.4017183780670166
Time: prepare 0.0045    bound 0.1222    transfer 0.0016    finalize 0.0020    func 0.1320    
Accumulated time: func 0.9726    prepare 0.0606    bound 0.8806    transfer 0.0107    finalize 0.0161    
all_split False
======================Cut inference begins======================
max lb tensor(0.58838636) min lb tensor(-0.40132451)
Number of Verified Splits: 125 of 240
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 13
#cuts 4-6: 7
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.02421879768371582 
BICCOS Cumulative time: 0.6949300765991211
Preprocessing time: 0.007216691970825195 Inference time: 0.013078927993774414 Add cuts time: 0.003071308135986328 Cut analysis time: 0.0008518695831298828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40132 (14), -0.39546 (14), -0.38390 (14), -0.38053 (14), -0.36956 (14), -0.36409 (14), -0.35206 (14), -0.34808 (14), -0.32834 (14), -0.32801 (14), -0.32018 (14), -0.31718 (14), -0.31341 (14), -0.31147 (14), -0.31134 (14), -0.30741 (14), -0.30156 (14), -0.29914 (14), -0.29785 (14), -0.29743 (14), 
Length of domains: 115
Time: pickout 0.0019    decision 0.0152    set_bounds 0.0136    solve 0.1321    add 0.0014    
Accumulated time: pickout 0.0345    decision 0.6734    set_bounds 0.1060    solve 0.9161    add 0.7282    
Current (lb-rhs): -0.4013245105743408
348 domains visited
Cumulative time: 3.241741418838501

BaB round 4
batch: 115
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1562] [/input-8, 1562] [/input-8, 1562] [/input-8, 1555] [/input-8, 1562] [/input-8, 1562] [/input-12, 81] [/input-12, 81] [/input-8, 1556] [/input-8, 1555] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.38225650787353516
10 lb beta sum: 0.4160040616989136, worst -0.38000059127807617
Time: prepare 0.0046    bound 0.1267    transfer 0.0005    finalize 0.0015    func 0.1348    
Accumulated time: func 1.1074    prepare 0.0654    bound 1.0073    transfer 0.0112    finalize 0.0176    
all_split False
======================Cut inference begins======================
max lb tensor(0.50914991) min lb tensor(-0.37970257)
Number of Verified Splits: 168 of 230
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 18
#cuts 4-6: 7
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.027920007705688477 
BICCOS Cumulative time: 0.7228500843048096
Preprocessing time: 0.0067958831787109375 Inference time: 0.017939090728759766 Add cuts time: 0.0023412704467773438 Cut analysis time: 0.0008437633514404297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.37970 (15), -0.37316 (15), -0.36256 (15), -0.35858 (15), -0.35850 (15), -0.35196 (15), -0.34679 (15), -0.34268 (15), -0.34060 (15), -0.33839 (15), -0.32915 (15), -0.32513 (15), -0.32267 (15), -0.31650 (15), -0.30646 (15), -0.30191 (15), -0.30007 (15), -0.30000 (15), -0.28773 (15), -0.28466 (15), 
Length of domains: 62
Time: pickout 0.0024    decision 0.0182    set_bounds 0.0091    solve 0.1349    add 0.0014    
Accumulated time: pickout 0.0369    decision 0.6916    set_bounds 0.1150    solve 1.0509    add 0.7296    
Current (lb-rhs): -0.3797025680541992
410 domains visited
Cumulative time: 3.4365546703338623

BaB round 5
batch: 62
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1556] [/input-12, 97] [/input-8, 1556] [/input-12, 57] [/input-8, 1556] [/input-12, 97] [/input-8, 1556] [/input-12, 57] [/input-8, 1556] [/input-12, 97] 
split level 1: [/input-8, 1547] [/input-8, 1547] [/input-8, 1547] [/input-8, 1556] [/input-8, 1547] [/input-8, 1547] [/input-8, 1547] [/input-8, 1555] [/input-8, 1547] [/input-8, 1547] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3474256992340088
10 lb beta sum: 0.9263546466827393, worst -0.34541067481040955
Time: prepare 0.0055    bound 0.1402    transfer 0.0009    finalize 0.0015    func 0.1499    
Accumulated time: func 1.2573    prepare 0.0711    bound 1.1476    transfer 0.0121    finalize 0.0192    
all_split False
======================Cut inference begins======================
max lb tensor(0.56757998) min lb tensor(-0.33745897)
Number of Verified Splits: 198 of 248
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03525710105895996 
BICCOS Cumulative time: 0.7581071853637695
Preprocessing time: 0.007784366607666016 Inference time: 0.02524423599243164 Add cuts time: 0.0019834041595458984 Cut analysis time: 0.00024509429931640625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33746 (17), -0.32565 (17), -0.27590 (17), -0.27311 (17), -0.27281 (17), -0.26797 (17), -0.26777 (17), -0.25531 (17), -0.20854 (17), -0.20705 (17), -0.20046 (17), -0.19967 (17), -0.19864 (17), -0.19062 (17), -0.18914 (17), -0.18749 (17), -0.18212 (17), -0.17999 (17), -0.17669 (17), -0.17655 (17), 
Length of domains: 50
Time: pickout 0.0017    decision 0.0145    set_bounds 0.3187    solve 0.1500    add 0.0014    
Accumulated time: pickout 0.0386    decision 0.7061    set_bounds 0.4337    solve 1.2009    add 0.7310    
Current (lb-rhs): -0.3374589681625366
460 domains visited
Cumulative time: 3.959893226623535

BaB round 6
batch: 50
splitting decisions: 
split level 0: [/input-12, 47] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 7] [/input-12, 57] [/input-8, 1556] [/input-12, 57] [/input-12, 57] 
split level 1: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-8, 1555] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
split level 2: [/input-8, 1442] [/input-8, 1442] [/input-12, 7] [/input-8, 1442] [/input-8, 84] [/input-12, 66] [/input-8, 1442] [/input-12, 7] [/input-12, 7] [/input-8, 84] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3137173652648926
10 lb beta sum: 0.3116542100906372, worst 0.00395318865776062

all verified at 10th iter
Time: prepare 0.0078    bound 0.0589    transfer 0.0019    finalize 0.0022    func 0.0734    
Accumulated time: func 1.3307    prepare 0.0791    bound 1.2064    transfer 0.0140    finalize 0.0214    
all_split False
======================Cut inference begins======================
max lb tensor(0.82585680) min lb tensor(0.02232130)
Number of Verified Splits: 400 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011629104614257812 
BICCOS Cumulative time: 0.7697362899780273
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0017    decision 0.0155    set_bounds 0.0303    solve 0.0735    add 0.0006    
Accumulated time: pickout 0.0403    decision 0.7217    set_bounds 0.4640    solve 1.2744    add 0.7316    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
460 domains visited
Cumulative time: 4.094746351242065


Properties batch 6, size 1
Remaining timeout: 194.10604429244995
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 194.10568571090698
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 194.10564136505127
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 5.8944 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 36, vnnlib ID: 36 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.24979019, -37.63498306, -32.75728989, -28.24139977, -30.75187874,
         -30.04108620, -31.37268639, -28.88580322, -35.62981796, -33.41122818]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1062]; unstable size 1062; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 219, 1, 1062] with unstable size 218 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 1062] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1062] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [218]; unstable size 218; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 218] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 218] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.37213707,  5.66663790,  1.06869316, -2.65215921, -0.02795410,
         -0.68250787,  0.21485090,  3.28807592,  1.44539118]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-31.24979019, -37.63498306, -32.75728989, -28.24139977, -30.75187874,
         -30.04108620, -31.37268639, -28.88580322, -35.62981796, -33.41122818]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.24978638, -37.63497925, -32.75728607, -28.24139404, -30.75187683,
          -30.04108429, -31.37268257, -28.88580132, -35.62982178, -33.41122818],
         [-31.24978638, -37.63497925, -32.75728607, -28.24139404, -30.75187683,
          -30.04108429, -31.37268257, -28.88580132, -35.62982178, -33.41122818]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.36398506, -0.64440727,  1.86607552,  1.15528297]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]],


         [[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]],


         [[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]],


         [[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0804 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 37, vnnlib ID: 37 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.67501450, -36.13852692, -36.83300018, -40.82568359, -36.21772385,
         -42.24020386, -42.45991516, -38.66070557, -35.91165543, -35.76698303]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [878]; unstable size 878; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 331, 1, 878] with unstable size 330 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 878] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 878] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [330]; unstable size 330; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 330] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 330] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.78481674, 1.49165308, 5.77715397, 0.89226502, 6.82856560, 7.20897055,
         3.02560472, 0.17169452, 0.52866650]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0637 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 38, vnnlib ID: 38 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.17910576, -31.78906441, -24.95549965, -24.87192535, -24.36640358,
         -24.86773491, -23.70508957, -26.14169312, -31.76165390, -29.65419197]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [614]; unstable size 614; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 325, 1, 614] with unstable size 324 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 45, 1, 614] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 614] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [324]; unstable size 324; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 45, 1, 324] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 324] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [44]; unstable size 44; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.76061106,  4.32922459, -1.74681902, -1.31281900, -2.15046692,
         -1.73146141, -0.95801044,  4.07414341,  2.02290058]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.17910576, -31.78906441, -24.95549965, -24.87192535, -24.36640358,
         -24.86773491, -23.70508957, -26.14169312, -31.76165390, -29.65419197]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.94438744, -30.86083794, -23.72993660, -23.57277298, -22.81074905,
          -23.49327850, -23.14589691, -24.67353058, -30.67050552, -28.82363129],
         [-28.94438744, -30.86083794, -23.72993660, -23.57277298, -22.81074905,
          -23.49327850, -23.14589691, -24.67353058, -30.67050552, -28.82363129]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.58403969,  0.42687607, -0.33514786,  0.34738159,  1.52763367]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0072 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0962 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 39, vnnlib ID: 39 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.49489975, -29.61354637, -25.57846069, -26.19230080, -24.30094719,
         -27.21088409, -21.59574509, -28.64048386, -30.74347115, -30.22692299]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [556]; unstable size 556; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 298, 1, 556] with unstable size 297 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 43, 1, 556] with unstable size 42 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 556] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [297]; unstable size 297; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 43, 1, 297] with unstable size 42 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 297] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [42]; unstable size 42; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 42] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.41523075,  3.06062412, -0.03771448,  1.50578284, -0.37208533,
          1.90023458,  2.02679539,  4.98053074,  4.19109058]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.49489975, -29.61354637, -25.57846069, -26.19230080, -24.30094719,
         -27.21088409, -21.59574509, -28.64048386, -30.74347115, -30.22692299]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.64it/s]100%|██████████| 1/1 [00:00<00:00,  7.64it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.86279869, -28.52536774, -24.04965401, -25.05946732, -22.46587563,
          -25.94314384, -21.08313942, -27.04704475, -29.59427834, -29.10247231],
         [-28.86279869, -28.52536774, -24.04965401, -25.05946732, -22.46587563,
          -25.94314384, -21.08313942, -27.04704475, -29.59427834, -29.10247231]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.96651459, 1.38273621]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1340 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 23.52692222595215
alpha/beta optimization time: 1.3773953914642334
initial alpha-crown bounds: tensor([[ 4.64865017,  3.29110241,  0.15778685,  1.64891076, -0.19033599,
          2.08761740,  2.29942179,  5.17791080,  4.40585804]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.19033598899841309
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.41339945793152
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.41335129737854
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.41332507133484
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.41330289840698
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.41328239440918
Verifying property 4 with 1 instances.
##### Instance 39 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.19033599]], device='cuda:0') need to verify.
Model prediction is: tensor([-30.49489975, -29.61354637, -25.57846069, -26.19230080, -24.30094719,
        -27.21088409, -21.59574509, -28.64048386, -30.74347115, -30.22692299],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.19033599]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 556
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 292
Node /15 input 0: size torch.Size([100]) unstable 42
-----------------
# of unstable neurons: 890
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011205673217773438
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19033265113830566
10 lb beta sum: 0.0, worst -0.19034075736999512
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0563    transfer 0.0001    finalize 0.0001    func 0.0568    
Accumulated time: func 0.0568    prepare 0.0002    bound 0.0563    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 95] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 58] 
split level 3: [/input-12, 62] 
split level 4: [/input-12, 22] 
split level 5: [/input-12, 73] 
split level 6: [/input-12, 29] 
split level 7: [/input-12, 50] 
split level 8: [/input-12, 16] 
split level 9: [/input-12, 82] 
split level 10: [/input-12, 67] 
split level 11: [/input-12, 48] 
split level 12: [/input-12, 15] 
split level 13: [/input-12, 19] 
split level 14: [/input-12, 60] 
split level 15: [/input-8, 419] 
split level 16: [/input-12, 46] 
split level 17: [/input-8, 1963] 
split level 18: [/input-8, 1484] 
split level 19: [/input-8, 867] 
split level 20: [/input-8, 998] 
split level 21: [/input-8, 1491] 
split level 22: [/input-12, 92] 
split level 23: [/input-8, 411] 
split level 24: [/input-8, 1490] 
split level 25: [/input-12, 36] 
split level 26: [/input-8, 1562] 
split level 27: [/input-8, 437] 
split level 28: [/input-8, 987] 
split level 29: [/input-8, 410] 
split level 30: [/input-8, 420] 
split level 31: [/input-12, 14] 
split level 32: [/input-8, 427] 
split level 33: [/input-8, 1474] 
split level 34: [/input-12, 35] 
split level 35: [/input-8, 1489] 
split level 36: [/input-8, 1009] 
split level 37: [/input-8, 1498] 
split level 38: [/input-8, 438] 
split level 39: [/input-8, 362] 
split level 40: [/input-8, 1481] 
split level 41: [/input-8, 1289] 
split level 42: [/input-8, 1971] 
split level 43: [/input-8, 2012] 
split level 44: [/input-8, 1251] 
split level 45: [/input-8, 100] 
split level 46: [/input-8, 404] 
split level 47: [/input-8, 1304] 
split level 48: [/input-8, 1532] 
split level 49: [/input-8, 1524] 
split level 50: [/input, 565] 
split level 51: [/input-8, 107] 
split level 52: [/input-8, 1629] 
split level 53: [/input-8, 197] 
split level 54: [/input-12, 54] 
split level 55: [/input-8, 1244] 
split level 56: [/input-8, 290] 
split level 57: [/input-8, 1508] 
split level 58: [/input-8, 426] 
split level 59: [/input-8, 298] 
split level 60: [/input-8, 443] 
split level 61: [/input-8, 939] 
split level 62: [/input-8, 1068] 
split level 63: [/input-8, 1525] 
split level 64: [/input-8, 275] 
split level 65: [/input-8, 1644] 
split level 66: [/input-8, 1876] 
split level 67: [/input-8, 445] 
split level 68: [/input-8, 1485] 
split level 69: [/input-8, 1517] 
split level 70: [/input-8, 422] 
split level 71: [/input, 2966] 
split level 72: [/input-8, 116] 
split level 73: [/input-8, 1891] 
split level 74: [/input-8, 1494] 
split level 75: [/input-8, 1057] 
split level 76: [/input-8, 1419] 
split level 77: [/input-8, 1500] 
split level 78: [/input, 3921] 
split level 79: [/input-8, 922] 
split level 80: [/input, 1857] 
split level 81: [/input, 3910] 
split level 82: [/input, 581] 
split level 83: [/input-8, 635] 
split level 84: [/input-8, 1242] 
split level 85: [/input-12, 85] 
split level 86: [/input-8, 90] 
split level 87: [/input-8, 626] 
split level 88: [/input-8, 1651] 
split level 89: [/input, 2265] 
split level 90: [/input, 2949] 
split level 91: [/input-8, 91] 
split level 92: [/input-8, 1899] 
split level 93: [/input-8, 248] 
split level 94: [/input-8, 627] 
split level 95: [/input, 566] 
split level 96: [/input-8, 1529] 
split level 97: [/input-8, 26] 
split level 98: [/input-8, 144] 
split level 99: [/input-8, 1268] 
split level 100: [/input-8, 940] 
split level 101: [/input-8, 625] 
split level 102: [/input-8, 446] 
split level 103: [/input, 3877] 
split level 104: [/input, 3911] 
split level 105: [/input-8, 1077] 
split level 106: [/input, 2726] 
split level 107: [/input, 3954] 
split level 108: [/input-8, 1391] 
split level 109: [/input-8, 1964] 
split level 110: [/input-8, 1253] 
split level 111: [/input, 1922] 
split level 112: [/input-8, 268] 
split level 113: [/input, 2980] 
split level 114: [/input-8, 1910] 
split level 115: [/input-8, 1550] 
split level 116: [/input, 2969] 
split level 117: [/input-8, 1926] 
split level 118: [/input-8, 1254] 
split level 119: [/input, 567] 
split level 120: [/input, 4075] 
split level 121: [/input, 568] 
split level 122: [/input, 1920] 
split level 123: [/input-8, 1350] 
split level 124: [/input-8, 441] 
split level 125: [/input-8, 1049] 
split level 126: [/input, 2229] 
split level 127: [/input, 2950] 
split level 128: [/input, 1890] 
split level 129: [/input, 645] 
split level 130: [/input-8, 571] 
split level 131: [/input-8, 1901] 
split level 132: [/input, 1844] 
split level 133: [/input-8, 271] 
split level 134: [/input-8, 1059] 
split level 135: [/input-8, 108] 
split level 136: [/input, 596] 
split level 137: [/input, 3430] 
split level 138: [/input, 3983] 
split level 139: [/input, 1153] 
split level 140: [/input-8, 458] 
split level 141: [/input, 595] 
split level 142: [/input, 727] 
split level 143: [/input-8, 1855] 
split level 144: [/input, 614] 
split level 145: [/input-8, 838] 
split level 146: [/input-8, 152] 
split level 147: [/input-8, 1877] 
split level 148: [/input, 716] 
split level 149: [/input-8, 726] 
split level 150: [/input, 86] 
split level 151: [/input, 718] 
split level 152: [/input, 88] 
split level 153: [/input, 599] 
split level 154: [/input, 2919] 
split level 155: [/input, 70] 
split level 156: [/input, 1929] 
split level 157: [/input, 2953] 
split level 158: [/input-8, 1943] 
split level 159: [/input, 1930] 
split level 160: [/input, 3204] 
split level 161: [/input, 611] 
split level 162: [/input, 2264] 
split level 163: [/input, 2227] 
split level 164: [/input, 4059] 
split level 165: [/input-8, 1908] 
split level 166: [/input, 2761] 
split level 167: [/input, 2954] 
split level 168: [/input, 2977] 
split level 169: [/input, 3967] 
split level 170: [/input, 71] 
split level 171: [/input, 2962] 
split level 172: [/input-8, 2039] 
split level 173: [/input-8, 1466] 
split level 174: [/input, 547] 
split level 175: [/input, 772] 
split level 176: [/input, 734] 
split level 177: [/input, 551] 
split level 178: [/input-8, 1062] 
split level 179: [/input, 1947] 
split level 180: [/input, 3396] 
split level 181: [/input, 696] 
split level 182: [/input, 730] 
split level 183: [/input, 2993] 
split level 184: [/input-8, 400] 
split level 185: [/input, 56] 
split level 186: [/input, 532] 
split level 187: [/input, 2907] 
split level 188: [/input, 2938] 
split level 189: [/input, 887] 
split level 190: [/input-8, 853] 
split level 191: [/input-8, 1718] 
split level 192: [/input, 3950] 
split level 193: [/input, 2214] 
split level 194: [/input, 54] 
split level 195: [/input, 1089] 
split level 196: [/input, 2932] 
split level 197: [/input, 615] 
split level 198: [/input, 1856] 
split level 199: [/input-8, 645] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1900942325592041
10 lb beta sum: 0.0, worst -0.1900944709777832
Time: prepare 0.0113    bound 0.1043    transfer 0.0027    finalize 0.0031    func 0.1240    
Accumulated time: func 0.1809    prepare 0.0217    bound 0.1606    transfer 0.0028    finalize 0.0032    
all_split False
======================Cut inference begins======================
max lb tensor(0.47191870) min lb tensor(-0.19008946)
Number of Verified Splits: 12 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011192798614501953 
BICCOS Cumulative time: 0.011192798614501953
Preprocessing time: 0.010369539260864258 Inference time: 0.0004830360412597656 Add cuts time: 0.00016069412231445312 Cut analysis time: 0.00017952919006347656
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5490    set_bounds 0.0098    solve 0.1241    add 0.0107    
Accumulated time: pickout 0.0003    decision 0.5490    set_bounds 0.0098    solve 0.1241    add 0.0107    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 95] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 58] 
split level 3: [/input-12, 62] 
split level 4: [/input-12, 22] 
split level 5: [/input-12, 73] 
split level 6: [/input-12, 50] 
split level 7: [/input-12, 19] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.589148759841919

all verified at 0th iter
Time: prepare 0.0036    bound 0.0043    transfer 0.0013    finalize 0.0014    func 0.0122    
Accumulated time: func 0.1930    prepare 0.0257    bound 0.1649    transfer 0.0041    finalize 0.0046    
all_split False
======================Cut inference begins======================
max lb tensor(1.59650528) min lb tensor(0.58914876)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.0063283443450927734 
BICCOS Cumulative time: 0.017521142959594727
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0166    solve 0.0122    add 0.0002    
Accumulated time: pickout 0.0008    decision 0.5722    set_bounds 0.0264    solve 0.1363    add 0.0109    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.8465309143066406


Properties batch 5, size 1
Remaining timeout: 197.3323311805725
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.33225965499878
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.3322355747223
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.3322138786316
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.6678 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 40, vnnlib ID: 40 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.11076927, -36.69453049, -32.60337067, -34.30706406, -34.58263397,
         -35.22109985, -37.72026443, -35.09574509, -35.32368851, -37.03879929]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [621]; unstable size 621; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 621] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 621] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 621] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 259] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.53100419, -0.51214230,  1.26456392,  1.34744489,  1.93597674,
          4.17533636,  1.88568830,  1.95796549,  3.22071171]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-31.11076927, -36.69453049, -32.60337067, -34.30706406, -34.58263397,
         -35.22109985, -37.72026443, -35.09574509, -35.32368851, -37.03879929]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.45it/s]100%|██████████| 1/1 [00:00<00:00,  8.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.30154419, -37.72869873, -32.63628006, -34.64999008, -34.87859344,
          -35.43562317, -37.95940399, -35.54698563, -36.26806641, -37.99850082]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.33473587]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1212 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 18.656946182250977
alpha/beta optimization time: 1.2985990047454834
initial alpha-crown bounds: tensor([[ 2.71017623, -0.44247991,  1.33025837,  1.42465627,  2.01650953,
          4.24172449,  1.98454475,  2.03670120,  3.35485578]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.4424799084663391
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.51159238815308
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.51154828071594
Verifying property 1 with 1 instances.
##### Instance 40 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.44247991]], device='cuda:0') need to verify.
Model prediction is: tensor([-31.11076927, -36.69453049, -32.60337067, -34.30706406, -34.58263397,
        -35.22109985, -37.72026443, -35.09574509, -35.32368851, -37.03879929],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.44247991]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 621
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 257
Node /15 input 0: size torch.Size([100]) unstable 17
-----------------
# of unstable neurons: 895
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011086463928222656
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.44247937202453613
10 lb beta sum: 0.0, worst -0.442486047744751
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0567    transfer 0.0001    finalize 0.0001    func 0.0572    
Accumulated time: func 0.0572    prepare 0.0002    bound 0.0567    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 70] 
split level 1: [/input-12, 19] 
split level 2: [/input-12, 68] 
split level 3: [/input-12, 88] 
split level 4: [/input-12, 50] 
split level 5: [/input-12, 47] 
split level 6: [/input-12, 87] 
split level 7: [/input-8, 1569] 
split level 8: [/input-8, 1708] 
split level 9: [/input-8, 340] 
split level 10: [/input-8, 2003] 
split level 11: [/input-8, 1882] 
split level 12: [/input-8, 1875] 
split level 13: [/input-8, 1707] 
split level 14: [/input-8, 323] 
split level 15: [/input-8, 1915] 
split level 16: [/input-8, 1876] 
split level 17: [/input-8, 1562] 
split level 18: [/input-8, 1913] 
split level 19: [/input, 2435] 
split level 20: [/input-8, 1698] 
split level 21: [/input-8, 1881] 
split level 22: [/input-8, 1706] 
split level 23: [/input-8, 659] 
split level 24: [/input, 884] 
split level 25: [/input-8, 2002] 
split level 26: [/input-8, 802] 
split level 27: [/input-8, 1916] 
split level 28: [/input, 869] 
split level 29: [/input-8, 1334] 
split level 30: [/input-8, 1058] 
split level 31: [/input-8, 2005] 
split level 32: [/input-8, 985] 
split level 33: [/input-8, 1577] 
split level 34: [/input-8, 1673] 
split level 35: [/input, 1998] 
split level 36: [/input, 897] 
split level 37: [/input-8, 1890] 
split level 38: [/input, 627] 
split level 39: [/input-8, 892] 
split level 40: [/input, 2470] 
split level 41: [/input-8, 1889] 
split level 42: [/input-8, 483] 
split level 43: [/input-8, 707] 
split level 44: [/input, 2727] 
split level 45: [/input-8, 54] 
split level 46: [/input, 2710] 
split level 47: [/input-8, 47] 
split level 48: [/input-8, 812] 
split level 49: [/input, 2725] 
split level 50: [/input-8, 1532] 
split level 51: [/input, 2247] 
split level 52: [/input, 188] 
split level 53: [/input-8, 978] 
split level 54: [/input, 2871] 
split level 55: [/input-8, 941] 
split level 56: [/input-8, 1632] 
split level 57: [/input, 870] 
split level 58: [/input-8, 708] 
split level 59: [/input-8, 1997] 
split level 60: [/input, 3970] 
split level 61: [/input-8, 1578] 
split level 62: [/input, 2775] 
split level 63: [/input, 89] 
split level 64: [/input-8, 792] 
split level 65: [/input-8, 810] 
split level 66: [/input-8, 245] 
split level 67: [/input-8, 1979] 
split level 68: [/input-8, 1873] 
split level 69: [/input-8, 1868] 
split level 70: [/input, 1962] 
split level 71: [/input, 2421] 
split level 72: [/input-8, 1299] 
split level 73: [/input-8, 1866] 
split level 74: [/input, 871] 
split level 75: [/input, 2436] 
split level 76: [/input, 662] 
split level 77: [/input-8, 89] 
split level 78: [/input, 950] 
split level 79: [/input, 1995] 
split level 80: [/input, 1965] 
split level 81: [/input, 3866] 
split level 82: [/input, 916] 
split level 83: [/input, 1228] 
split level 84: [/input, 614] 
split level 85: [/input, 1981] 
split level 86: [/input-8, 1590] 
split level 87: [/input, 2012] 
split level 88: [/input-8, 585] 
split level 89: [/input, 2392] 
split level 90: [/input, 205] 
split level 91: [/input, 2534] 
split level 92: [/input-8, 430] 
split level 93: [/input, 997] 
split level 94: [/input-8, 1611] 
split level 95: [/input-8, 883] 
split level 96: [/input, 172] 
split level 97: [/input, 616] 
split level 98: [/input, 626] 
split level 99: [/input-8, 771] 
split level 100: [/input, 2393] 
split level 101: [/input, 104] 
split level 102: [/input, 3293] 
split level 103: [/input, 236] 
split level 104: [/input-8, 1640] 
split level 105: [/input, 3870] 
split level 106: [/input, 2474] 
split level 107: [/input-8, 1489] 
split level 108: [/input, 2458] 
split level 109: [/input-8, 725] 
split level 110: [/input-8, 927] 
split level 111: [/input, 725] 
split level 112: [/input, 2524] 
split level 113: [/input, 2540] 
split level 114: [/input-8, 55] 
split level 115: [/input, 2492] 
split level 116: [/input, 4043] 
split level 117: [/input, 984] 
split level 118: [/input-8, 811] 
split level 119: [/input, 202] 
split level 120: [/input, 3946] 
split level 121: [/input, 998] 
split level 122: [/input, 2509] 
split level 123: [/input, 219] 
split level 124: [/input-8, 563] 
split level 125: [/input, 1045] 
split level 126: [/input, 920] 
split level 127: [/input, 130] 
split level 128: [/input-8, 1394] 
split level 129: [/input-8, 39] 
split level 130: [/input, 2728] 
split level 131: [/input, 1401] 
split level 132: [/input-8, 1598] 
split level 133: [/input, 2539] 
split level 134: [/input, 1195] 
split level 135: [/input, 2774] 
split level 136: [/input-8, 236] 
split level 137: [/input, 728] 
split level 138: [/input, 830] 
split level 139: [/input, 724] 
split level 140: [/input-8, 1888] 
split level 141: [/input, 190] 
split level 142: [/input, 1196] 
split level 143: [/input-8, 1741] 
split level 144: [/input, 2473] 
split level 145: [/input, 1212] 
split level 146: [/input, 2792] 
split level 147: [/input, 615] 
split level 148: [/input, 4047] 
split level 149: [/input, 2756] 
split level 150: [/input, 1209] 
split level 151: [/input, 2905] 
split level 152: [/input, 146] 
split level 153: [/input, 1226] 
split level 154: [/input-8, 1992] 
split level 155: [/input, 118] 
split level 156: [/input, 3900] 
split level 157: [/input, 664] 
split level 158: [/input, 886] 
split level 159: [/input, 222] 
split level 160: [/input-8, 506] 
split level 161: [/input, 726] 
split level 162: [/input, 2938] 
split level 163: [/input, 1977] 
split level 164: [/input, 526] 
split level 165: [/input, 2772] 
split level 166: [/input, 4002] 
split level 167: [/input, 2402] 
split level 168: [/input, 102] 
split level 169: [/input, 1225] 
split level 170: [/input, 2854] 
split level 171: [/input, 2906] 
split level 172: [/input, 238] 
split level 173: [/input-8, 43] 
split level 174: [/input, 982] 
split level 175: [/input, 1366] 
split level 176: [/input, 538] 
split level 177: [/input, 2414] 
split level 178: [/input, 185] 
split level 179: [/input, 1262] 
split level 180: [/input, 1656] 
split level 181: [/input, 4030] 
split level 182: [/input, 218] 
split level 183: [/input, 744] 
split level 184: [/input-8, 444] 
split level 185: [/input, 1994] 
split level 186: [/input-8, 443] 
split level 187: [/input-8, 1523] 
split level 188: [/input, 2625] 
split level 189: [/input, 680] 
split level 190: [/input, 2794] 
split level 191: [/input, 716] 
split level 192: [/input, 2030] 
split level 193: [/input, 570] 
split level 194: [/input, 162] 
split level 195: [/input, 2874] 
split level 196: [/input, 2251] 
split level 197: [/input, 2556] 
split level 198: [/input, 2264] 
split level 199: [/input, 3249] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4422703981399536
10 lb beta sum: 0.0, worst -0.4422784447669983
Time: prepare 0.0115    bound 0.1045    transfer 0.0026    finalize 0.0031    func 0.1244    
Accumulated time: func 0.1816    prepare 0.0218    bound 0.1612    transfer 0.0027    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(0.55581796) min lb tensor(-0.44226909)
Number of Verified Splits: 4 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.010632753372192383 
BICCOS Cumulative time: 0.010632753372192383
Preprocessing time: 0.010131120681762695 Inference time: 0.0001888275146484375 Add cuts time: 6.604194641113281e-05 Cut analysis time: 0.0002467632293701172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.42764 (1), -0.42763 (1), -0.42733 (1), -0.42731 (1), -0.42725 (1), -0.42709 (1), -0.42634 (1), -0.42586 (1), -0.42537 (1), -0.42481 (1), -0.42473 (1), -0.42470 (1), -0.42468 (1), -0.42445 (1), -0.42438 (1), -0.42418 (1), -0.42355 (1), -0.42184 (1), -0.42156 (1), -0.42127 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5473    set_bounds 0.0094    solve 0.1245    add 0.1944    
Accumulated time: pickout 0.0004    decision 0.5473    set_bounds 0.0094    solve 0.1245    add 0.1944    
Current (lb-rhs): -0.4276376962661743
50 domains visited
Cumulative time: 0.9667882919311523

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 68] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] 
split level 1: [/input-12, 88] [/input-12, 88] [/input-12, 68] [/input-12, 88] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
split level 2: [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] 
split level 3: [/input-12, 87] [/input-12, 87] [/input-8, 1569] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4154781103134155
10 lb beta sum: 0.8485320806503296, worst -0.27441561222076416
Time: prepare 0.0076    bound 0.1270    transfer 0.0007    finalize 0.0034    func 0.1415    
Accumulated time: func 0.3231    prepare 0.0297    bound 0.2882    transfer 0.0035    finalize 0.0066    
all_split False
======================Cut inference begins======================
max lb tensor(0.30143428) min lb tensor(-0.25649974)
Number of Verified Splits: 54 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.01574540138244629 
BICCOS Cumulative time: 0.026378154754638672
Preprocessing time: 0.012223243713378906 Inference time: 0.0018956661224365234 Add cuts time: 0.0012638568878173828 Cut analysis time: 0.00036263465881347656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11521 (2), -0.11509 (2), -0.11502 (2), -0.11445 (2), -0.11379 (2), -0.11376 (2), -0.11332 (2), -0.11250 (2), -0.11125 (2), -0.11093 (2), -0.11090 (2), -0.11089 (2), -0.11063 (2), -0.11061 (2), -0.11055 (2), -0.11055 (2), -0.10913 (2), -0.10912 (2), -0.10703 (2), -0.10686 (2), 
Length of domains: 50
Time: pickout 0.0079    decision 0.0230    set_bounds 0.0117    solve 0.1416    add 0.2108    
Accumulated time: pickout 0.0083    decision 0.5703    set_bounds 0.0211    solve 0.2660    add 0.4052    
Current (lb-rhs): -0.11521041393280029
100 domains visited
Cumulative time: 1.3842341899871826

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] 
split level 1: [/input-12, 47] [/input-12, 88] [/input-12, 47] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 68] [/input-12, 68] [/input-12, 88] 
split level 2: [/input-8, 1569] [/input-12, 47] [/input-8, 1569] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] 
split level 3: [/input-8, 1562] [/input-8, 1569] [/input-8, 1562] [/input-8, 1569] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-8, 1562] [/input-8, 1562] [/input-12, 87] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4499704837799072, worst -0.11521124839782715
10 lb beta sum: 1.4499704837799072, worst -0.11470901966094971
Time: prepare 0.0182    bound 0.1257    transfer 0.0007    finalize 0.0024    func 0.1496    
Accumulated time: func 0.4727    prepare 0.0482    bound 0.4139    transfer 0.0042    finalize 0.0091    
all_split False
======================Cut inference begins======================
max lb tensor(0.43369424) min lb tensor(-0.11416960)
Number of Verified Splits: 119 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 8
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.019990921020507812 
BICCOS Cumulative time: 0.046369075775146484
Preprocessing time: 0.011912345886230469 Inference time: 0.005055904388427734 Add cuts time: 0.002490520477294922 Cut analysis time: 0.0005321502685546875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05198 (3), -0.05102 (3), -0.04720 (3), -0.04637 (3), -0.04440 (3), -0.04248 (3), -0.04248 (3), -0.03995 (3), -0.03984 (3), -0.03832 (3), -0.03680 (3), -0.03667 (3), -0.03614 (3), -0.03500 (3), -0.03472 (3), -0.03358 (3), -0.02960 (3), -0.02171 (3), -0.02159 (3), -0.02105 (3), 
Length of domains: 50
Time: pickout 0.0079    decision 0.0222    set_bounds 0.0153    solve 0.1497    add 0.2371    
Accumulated time: pickout 0.0162    decision 0.5925    set_bounds 0.0365    solve 0.4157    add 0.6423    
Current (lb-rhs): -0.051976561546325684
150 domains visited
Cumulative time: 1.8372132778167725

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] 
split level 1: [/input-12, 88] [/input-12, 47] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
split level 2: [/input-12, 47] [/input-8, 1569] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] 
split level 3: [/input-8, 1569] [/input-8, 1562] [/input-8, 1569] [/input-8, 1569] [/input-8, 1569] [/input-8, 1569] [/input-8, 1569] [/input-8, 1569] [/input-8, 1569] [/input-8, 1569] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24945807456970215
10 lb beta sum: 1.4610216617584229, worst -0.09815400838851929
Time: prepare 0.0081    bound 0.1442    transfer 0.0008    finalize 0.0027    func 0.1585    
Accumulated time: func 0.6311    prepare 0.0566    bound 0.5581    transfer 0.0050    finalize 0.0118    
all_split False
======================Cut inference begins======================
max lb tensor(0.55487192) min lb tensor(-0.04882920)
Number of Verified Splits: 326 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 11
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.03398251533508301 
BICCOS Cumulative time: 0.08035159111022949
Preprocessing time: 0.011887073516845703 Inference time: 0.014504671096801758 Add cuts time: 0.007121562957763672 Cut analysis time: 0.000469207763671875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04883 (4), -0.04872 (4), -0.04743 (4), -0.04612 (4), -0.04265 (4), -0.04237 (4), -0.04233 (4), -0.04167 (4), -0.04145 (4), -0.04117 (4), -0.04014 (4), -0.03887 (4), -0.03855 (4), -0.03830 (4), -0.03730 (4), -0.03675 (4), -0.03663 (4), -0.03333 (4), -0.03233 (4), -0.03226 (4), 
Length of domains: 49
Time: pickout 0.0013    decision 0.0207    set_bounds 0.0153    solve 0.1585    add 0.3263    
Accumulated time: pickout 0.0175    decision 0.6132    set_bounds 0.0518    solve 0.5743    add 0.9686    
Current (lb-rhs): -0.04882919788360596
199 domains visited
Cumulative time: 2.39359450340271

Shallow-BaB round 5
batch: 49
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 88] [/input-12, 70] [/input-12, 88] 
split level 1: [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-8, 1569] [/input-8, 1569] [/input-12, 88] [/input-8, 1569] 
split level 2: [/input-12, 87] [/input-12, 87] [/input-8, 1569] [/input-8, 1569] [/input-12, 87] [/input-8, 1569] [/input-8, 1562] [/input-8, 1562] [/input-8, 1562] [/input-8, 1562] 
split level 3: [/input-8, 1707] [/input-8, 1532] [/input-8, 1707] [/input-8, 1707] [/input-8, 1707] [/input-8, 1578] [/input-8, 1578] [/input-8, 1578] [/input-8, 1578] [/input-8, 1578] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24388206005096436
10 lb beta sum: 1.1600556373596191, worst -0.08376210927963257
Time: prepare 0.0082    bound 0.1506    transfer 0.0021    finalize 0.0029    func 0.1663    
Accumulated time: func 0.7974    prepare 0.0651    bound 0.7087    transfer 0.0071    finalize 0.0147    
all_split False
======================Cut inference begins======================
max lb tensor(0.51964140) min lb tensor(-0.04104105)
Number of Verified Splits: 154 of 392
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 11
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.02403712272644043 
BICCOS Cumulative time: 0.10438871383666992
Preprocessing time: 0.011548280715942383 Inference time: 0.007816791534423828 Add cuts time: 0.0037152767181396484 Cut analysis time: 0.0009567737579345703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01126 (5), -0.01108 (5), -0.01108 (5), -0.01108 (5), -0.01099 (5), -0.01090 (5), -0.01078 (5), -0.00675 (5), -0.00671 (5), -0.00666 (5), -0.00664 (5), -0.00659 (5), -0.00655 (5), -0.00655 (5), -0.00651 (5), -0.00648 (5), -0.00622 (5), -0.00601 (5), -0.00576 (5), -0.00572 (5), 
Length of domains: 50
Time: pickout 0.0013    decision 0.0238    set_bounds 0.0149    solve 0.1664    add 0.1095    
Accumulated time: pickout 0.0188    decision 0.6370    set_bounds 0.0667    solve 0.7407    add 1.0781    
Current (lb-rhs): -0.011259675025939941
249 domains visited
Cumulative time: 2.7337300777435303


Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 70] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 88] 
split level 3: [/input-12, 50] 
split level 4: [/input-12, 47] 
split level 5: [/input-12, 87] 
split level 6: [/input-8, 1569] 
split level 7: [/input-8, 1875] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11984515190124512
10 lb beta sum: 0.4451729655265808, worst -0.11808429658412933
Time: prepare 0.0050    bound 0.1392    transfer 0.0014    finalize 0.0014    func 0.1487    
Accumulated time: func 0.9461    prepare 0.0706    bound 0.8480    transfer 0.0085    finalize 0.0161    
all_split False
======================Cut inference begins======================
max lb tensor(1.03028011) min lb tensor(-0.11740798)
Number of Verified Splits: 236 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.41246461868286133
10 lb beta sum: 1.20463228225708, worst -0.2741768956184387
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 11
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.27687811851501465 
BICCOS Cumulative time: 0.38126683235168457
Preprocessing time: 0.007109165191650391 Inference time: 0.26242709159851074 Add cuts time: 0.006574869155883789 Cut analysis time: 0.0007669925689697266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11741 (8), -0.11617 (8), -0.10266 (8), -0.10155 (8), -0.09057 (8), -0.08852 (8), -0.08696 (8), -0.08352 (8), -0.07572 (8), -0.07424 (8), -0.07382 (8), -0.07129 (8), -0.05607 (8), -0.05051 (8), -0.04397 (8), -0.03849 (8), -0.02332 (8), -0.01819 (8), -0.00920 (8), -0.00404 (8), 
Length of domains: 20
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0206    solve 0.1488    add 0.0011    
Accumulated time: pickout 0.0191    decision 0.6607    set_bounds 0.0873    solve 0.8894    add 1.0792    
Current (lb-rhs): -0.11740797758102417
269 domains visited
Cumulative time: 3.209178924560547

BaB round 2
batch: 20
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1882] [/input-8, 1882] [/input-8, 1882] [/input-8, 1882] [/input-8, 1882] [/input-8, 1882] [/input-8, 1882] [/input-8, 1882] [/input-8, 1882] [/input-8, 1882] 
split level 1: [/input-8, 1673] [/input-8, 802] [/input-8, 1707] [/input-8, 802] [/input-8, 1673] [/input-8, 802] [/input-8, 1707] [/input-8, 802] [/input-8, 1673] [/input-8, 1562] 
split level 2: [/input-8, 1698] [/input-8, 1673] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1673] [/input-8, 1673] [/input-8, 1698] [/input-8, 1562] [/input-8, 1578] 
split level 3: [/input-8, 1532] [/input-8, 1698] [/input-8, 1673] [/input-8, 1881] [/input-8, 1532] [/input-8, 1698] [/input-8, 1698] [/input-8, 1881] [/input, 3946] [/input, 3946] 
cut re-enabled after branching node selection
0 lb beta sum: 0.46218371391296387, worst -0.09703058004379272
10 lb beta sum: 0.46586161851882935, worst -0.09623533487319946
Time: prepare 0.0148    bound 0.1436    transfer 0.0013    finalize 0.0019    func 0.1637    
Accumulated time: func 1.1098    prepare 0.0856    bound 0.9915    transfer 0.0098    finalize 0.0179    
all_split False
======================Cut inference begins======================
max lb tensor(0.05560118) min lb tensor(-0.09583521)
Number of Verified Splits: 121 of 320
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.8255749940872192, worst -0.3730357885360718
10 lb beta sum: 1.4607372283935547, worst -0.16497033834457397
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 11
#cuts 4-6: 10
#cuts 7-9: 13
#cuts 10-12: 12
#cuts >= 20: 0
BICCOS time: 0.2559185028076172 
BICCOS Cumulative time: 0.6371853351593018
Preprocessing time: 0.009418010711669922 Inference time: 0.2368936538696289 Add cuts time: 0.007065296173095703 Cut analysis time: 0.0025415420532226562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09584 (12), -0.09505 (12), -0.08900 (12), -0.08709 (12), -0.08688 (12), -0.08659 (12), -0.08136 (12), -0.08064 (12), -0.08039 (12), -0.07814 (12), -0.07709 (12), -0.07566 (12), -0.07546 (12), -0.07529 (12), -0.07385 (12), -0.07242 (12), -0.07241 (12), -0.07217 (12), -0.07154 (12), -0.06889 (12), 
Length of domains: 199
Time: pickout 0.0014    decision 0.0171    set_bounds 0.0204    solve 0.1637    add 0.0920    
Accumulated time: pickout 0.0205    decision 0.6778    set_bounds 0.1077    solve 1.0532    add 1.1713    
Current (lb-rhs): -0.09583520889282227
468 domains visited
Cumulative time: 3.7675440311431885

BaB round 3
batch: 199
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 340] [/input-8, 340] [/input-8, 1707] [/input-8, 340] [/input-8, 1889] [/input-8, 340] [/input-8, 340] [/input-8, 340] [/input-8, 1707] [/input-8, 340] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09219992160797119
10 lb beta sum: 0.17896580696105957, worst -0.09141664206981659
Time: prepare 0.0082    bound 0.1648    transfer 0.0015    finalize 0.0033    func 0.1806    
Accumulated time: func 1.2904    prepare 0.0941    bound 1.1564    transfer 0.0113    finalize 0.0213    
all_split False
======================Cut inference begins======================
max lb tensor(0.01620591) min lb tensor(-0.09123772)
Number of Verified Splits: 110 of 398
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 57.
#cuts 1-3: 5
#cuts 4-6: 46
#cuts 7-9: 4
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.0337831974029541 
BICCOS Cumulative time: 0.6709685325622559
Preprocessing time: 0.011887073516845703 Inference time: 0.012334346771240234 Add cuts time: 0.007082700729370117 Cut analysis time: 0.002479076385498047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09124 (13), -0.09049 (13), -0.08432 (13), -0.08198 (13), -0.08193 (13), -0.08160 (13), -0.07642 (13), -0.07575 (13), -0.07533 (13), -0.07267 (13), -0.07030 (13), -0.07016 (13), -0.06987 (13), -0.06877 (13), -0.06716 (13), -0.06711 (13), -0.06687 (13), -0.06599 (13), -0.06502 (13), -0.06423 (13), 
Length of domains: 288
Time: pickout 0.0159    decision 0.0230    set_bounds 0.0174    solve 0.1807    add 0.0766    
Accumulated time: pickout 0.0365    decision 0.7008    set_bounds 0.1251    solve 1.2339    add 1.2479    
Current (lb-rhs): -0.09123772382736206
756 domains visited
Cumulative time: 4.122857093811035

BaB round 4
batch: 288
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1889] [/input-8, 812] [/input-8, 1915] [/input-8, 1915] [/input-8, 812] [/input-8, 1915] [/input-8, 1915] [/input-8, 1915] [/input-8, 1915] [/input-8, 1915] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08843231201171875
10 lb beta sum: 0.17487788200378418, worst -0.08781449496746063
Time: prepare 0.0112    bound 0.1503    transfer 0.0012    finalize 0.0026    func 0.1689    
Accumulated time: func 1.4593    prepare 0.1055    bound 1.3067    transfer 0.0125    finalize 0.0238    
all_split False
======================Cut inference begins======================
max lb tensor(0.01287949) min lb tensor(-0.08772171)
Number of Verified Splits: 163 of 576
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 103.
#cuts 1-3: 5
#cuts 4-6: 90
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.05279707908630371 
BICCOS Cumulative time: 0.7237656116485596
Preprocessing time: 0.016446352005004883 Inference time: 0.020528793334960938 Add cuts time: 0.011542797088623047 Cut analysis time: 0.004279136657714844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08772 (14), -0.08657 (14), -0.08029 (14), -0.07841 (14), -0.07822 (14), -0.07763 (14), -0.07484 (14), -0.07290 (14), -0.07183 (14), -0.07133 (14), -0.06897 (14), -0.06846 (14), -0.06667 (14), -0.06612 (14), -0.06612 (14), -0.06596 (14), -0.06478 (14), -0.06363 (14), -0.06304 (14), -0.06290 (14), 
Length of domains: 413
Time: pickout 0.0172    decision 0.0278    set_bounds 0.0247    solve 0.1691    add 0.0683    
Accumulated time: pickout 0.0537    decision 0.7286    set_bounds 0.1498    solve 1.4030    add 1.3162    
Current (lb-rhs): -0.08772170543670654
1169 domains visited
Cumulative time: 4.486025810241699

BaB round 5
batch: 413
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1915] [/input-8, 1881] [/input-8, 1673] [/input-8, 1881] [/input-8, 1881] [/input-8, 1915] [/input-8, 1673] [/input-8, 1881] [/input-8, 1915] [/input-8, 1673] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08456718921661377
10 lb beta sum: 0.16027651727199554, worst -0.08400331437587738
Time: prepare 0.0170    bound 0.1486    transfer 0.0042    finalize 0.0048    func 0.1805    
Accumulated time: func 1.6398    prepare 0.1227    bound 1.4553    transfer 0.0167    finalize 0.0286    
all_split False
======================Cut inference begins======================
max lb tensor(0.01894724) min lb tensor(-0.08391368)
Number of Verified Splits: 258 of 826
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 143.
#cuts 1-3: 5
#cuts 4-6: 130
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.0825042724609375 
BICCOS Cumulative time: 0.8062698841094971
Preprocessing time: 0.023971080780029297 Inference time: 0.03176426887512207 Add cuts time: 0.021143436431884766 Cut analysis time: 0.005625486373901367
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08391 (15), -0.08126 (15), -0.07497 (15), -0.07457 (15), -0.07419 (15), -0.07289 (15), -0.07246 (15), -0.07229 (15), -0.06940 (15), -0.06910 (15), -0.06668 (15), -0.06631 (15), -0.06597 (15), -0.06485 (15), -0.06391 (15), -0.06313 (15), -0.06307 (15), -0.06282 (15), -0.06273 (15), -0.06228 (15), 
Length of domains: 568
Time: pickout 0.0073    decision 0.0347    set_bounds 0.0367    solve 0.1807    add 0.0038    
Accumulated time: pickout 0.0610    decision 0.7633    set_bounds 0.1864    solve 1.5837    add 1.3200    
Current (lb-rhs): -0.08391368389129639
1737 domains visited
Cumulative time: 4.833542108535767

BaB round 6
batch: 568
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1708] [/input-8, 1915] [/input-8, 1881] [/input-8, 1058] [/input-8, 1881] [/input-8, 1058] [/input-8, 1708] [/input-8, 1058] [/input-8, 1708] [/input-8, 1889] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07908916473388672
10 lb beta sum: 0.1667270064353943, worst -0.07850542664527893
Time: prepare 0.0225    bound 0.1553    transfer 0.0052    finalize 0.0063    func 0.1968    
Accumulated time: func 1.8366    prepare 0.1454    bound 1.6106    transfer 0.0219    finalize 0.0349    
all_split False
======================Cut inference begins======================
max lb tensor(0.23870796) min lb tensor(-0.07842682)
Number of Verified Splits: 395 of 1136
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 180.
#cuts 1-3: 5
#cuts 4-6: 172
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.1290116310119629 
BICCOS Cumulative time: 0.93528151512146
Preprocessing time: 0.03495025634765625 Inference time: 0.05007123947143555 Add cuts time: 0.037125587463378906 Cut analysis time: 0.0068645477294921875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07843 (16), -0.07567 (16), -0.07228 (16), -0.07142 (16), -0.07038 (16), -0.06897 (16), -0.06891 (16), -0.06853 (16), -0.06685 (16), -0.06675 (16), -0.06377 (16), -0.06371 (16), -0.06368 (16), -0.06311 (16), -0.06256 (16), -0.06250 (16), -0.06220 (16), -0.06120 (16), -0.06107 (16), -0.06070 (16), 
Length of domains: 741
Time: pickout 0.0074    decision 0.0440    set_bounds 0.2222    solve 0.1972    add 0.0058    
Accumulated time: pickout 0.0683    decision 0.8073    set_bounds 0.4086    solve 1.7809    add 1.3258    
Current (lb-rhs): -0.07842682301998138
2478 domains visited
Cumulative time: 5.442651748657227

BaB round 7
batch: 741
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1058] [/input-8, 812] [/input-8, 1058] [/input-8, 1889] [/input-8, 1058] [/input-8, 1889] [/input-8, 1889] [/input-8, 812] [/input-8, 1889] [/input-8, 1889] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07403218746185303
10 lb beta sum: 0.1684739738702774, worst -0.07349449396133423
Time: prepare 0.0296    bound 0.1628    transfer 0.0046    finalize 0.0084    func 0.2156    
Accumulated time: func 2.0522    prepare 0.1752    bound 1.7734    transfer 0.0265    finalize 0.0433    
all_split False
======================Cut inference begins======================
max lb tensor(0.21725143) min lb tensor(-0.07347091)
Number of Verified Splits: 549 of 1482
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 202.
#cuts 1-3: 9
#cuts 4-6: 181
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 0.17374086380004883 
BICCOS Cumulative time: 1.1090223789215088
Preprocessing time: 0.04793858528137207 Inference time: 0.07104659080505371 Add cuts time: 0.046727895736694336 Cut analysis time: 0.008027791976928711
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07347 (17), -0.07244 (17), -0.06996 (17), -0.06803 (17), -0.06769 (17), -0.06709 (17), -0.06419 (17), -0.06378 (17), -0.06349 (17), -0.06338 (17), -0.06186 (17), -0.06118 (17), -0.06054 (17), -0.06026 (17), -0.05998 (17), -0.05896 (17), -0.05876 (17), -0.05835 (17), -0.05831 (17), -0.05783 (17), 
Length of domains: 933
Time: pickout 0.0142    decision 0.0527    set_bounds 0.0635    solve 0.2161    add 0.0721    
Accumulated time: pickout 0.0825    decision 0.8600    set_bounds 0.4721    solve 1.9970    add 1.3979    
Current (lb-rhs): -0.07347090542316437
3411 domains visited
Cumulative time: 6.040940046310425

BaB round 8
batch: 933
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1889] [/input-8, 812] [/input-8, 812] [/input-8, 1058] [/input-8, 1058] [/input-8, 812] [/input-8, 1058] [/input-8, 1889] [/input-8, 1889] [/input-8, 659] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0701259970664978
10 lb beta sum: 0.3331490457057953, worst -0.06734886765480042
Time: prepare 0.0387    bound 0.2343    transfer 0.0139    finalize 0.0111    func 0.3111    
Accumulated time: func 2.3633    prepare 0.2143    bound 2.0077    transfer 0.0404    finalize 0.0544    
all_split False
======================Cut inference begins======================
max lb tensor(0.23988998) min lb tensor(-0.06728074)
Number of Verified Splits: 765 of 1866
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 223.
#cuts 1-3: 12
#cuts 4-6: 196
#cuts 7-9: 15
#cuts >= 20: 0
BICCOS time: 0.41266465187072754 
BICCOS Cumulative time: 1.5216870307922363
Preprocessing time: 0.057173967361450195 Inference time: 0.10293412208557129 Add cuts time: 0.24381279945373535 Cut analysis time: 0.008743762969970703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06728 (18), -0.06673 (18), -0.06324 (18), -0.06201 (18), -0.06187 (18), -0.06105 (18), -0.06098 (18), -0.05817 (18), -0.05712 (18), -0.05674 (18), -0.05668 (18), -0.05638 (18), -0.05629 (18), -0.05543 (18), -0.05534 (18), -0.05510 (18), -0.05443 (18), -0.05372 (18), -0.05327 (18), -0.05317 (18), 
Length of domains: 1101
Time: pickout 0.0166    decision 0.0636    set_bounds 0.0774    solve 0.3115    add 0.0046    
Accumulated time: pickout 0.0992    decision 0.9236    set_bounds 0.5495    solve 2.3085    add 1.4025    
Current (lb-rhs): -0.06728073954582214
4512 domains visited
Cumulative time: 6.936140298843384

BaB round 9
batch: 1101
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 662] [/input, 662] [/input, 662] [/input, 662] [/input-8, 659] [/input-8, 1889] [/input-8, 659] [/input-8, 659] [/input-8, 659] [/input-8, 1058] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06632673740386963
10 lb beta sum: 0.3605181574821472, worst -0.06385020911693573
Time: prepare 0.0512    bound 0.2642    transfer 0.0124    finalize 0.0131    func 0.3551    
Accumulated time: func 2.7184    prepare 0.2657    bound 2.2719    transfer 0.0527    finalize 0.0675    
all_split False
======================Cut inference begins======================
max lb tensor(0.32263243) min lb tensor(-0.06384295)
Number of Verified Splits: 863 of 2202
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 317.
#cuts 1-3: 13
#cuts 4-6: 272
#cuts 7-9: 32
#cuts >= 20: 0
BICCOS time: 0.29695916175842285 
BICCOS Cumulative time: 1.8186461925506592
Preprocessing time: 0.07015609741210938 Inference time: 0.11461424827575684 Add cuts time: 0.10044384002685547 Cut analysis time: 0.011744976043701172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06384 (19), -0.06227 (19), -0.05935 (19), -0.05862 (19), -0.05830 (19), -0.05808 (19), -0.05778 (19), -0.05701 (19), -0.05663 (19), -0.05411 (19), -0.05385 (19), -0.05314 (19), -0.05296 (19), -0.05285 (19), -0.05278 (19), -0.05250 (19), -0.05221 (19), -0.05216 (19), -0.05195 (19), -0.05139 (19), 
Length of domains: 1339
Time: pickout 0.0171    decision 0.0737    set_bounds 0.0813    solve 0.3560    add 0.0088    
Accumulated time: pickout 0.1163    decision 0.9973    set_bounds 0.6308    solve 2.6645    add 1.4113    
Current (lb-rhs): -0.06384295225143433
5851 domains visited
Cumulative time: 7.778219223022461

BaB round 10
batch: 1339
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 870] [/input, 870] [/input, 870] [/input, 870] [/input, 870] [/input, 662] [/input, 870] [/input, 662] [/input, 662] [/input, 662] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.061084866523742676
10 lb beta sum: 0.36502605676651, worst -0.05860249698162079
Time: prepare 0.0678    bound 0.3174    transfer 0.0090    finalize 0.0162    func 0.4280    
Accumulated time: func 3.1463    prepare 0.3337    bound 2.5892    transfer 0.0618    finalize 0.0838    
all_split False
======================Cut inference begins======================
max lb tensor(0.24104095) min lb tensor(-0.05859601)
Number of Verified Splits: 875 of 2678
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 323.
#cuts 1-3: 21
#cuts 4-6: 269
#cuts 7-9: 33
#cuts >= 20: 0
BICCOS time: 0.33083486557006836 
BICCOS Cumulative time: 2.1494810581207275
Preprocessing time: 0.08586287498474121 Inference time: 0.12043356895446777 Add cuts time: 0.11131954193115234 Cut analysis time: 0.013218879699707031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05860 (20), -0.05723 (20), -0.05712 (20), -0.05545 (20), -0.05483 (20), -0.05377 (20), -0.05330 (20), -0.05303 (20), -0.05200 (20), -0.05196 (20), -0.05184 (20), -0.05157 (20), -0.05098 (20), -0.05017 (20), -0.04954 (20), -0.04921 (20), -0.04900 (20), -0.04884 (20), -0.04882 (20), -0.04867 (20), 
Length of domains: 1803
Time: pickout 0.0273    decision 0.0885    set_bounds 0.1019    solve 0.4292    add 0.0112    
Accumulated time: pickout 0.1436    decision 1.0859    set_bounds 0.7327    solve 3.0937    add 1.4225    
Current (lb-rhs): -0.058596014976501465
7654 domains visited
Cumulative time: 8.777329444885254

BaB round 11
batch: 1803
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 792] [/input-8, 792] [/input-8, 792] [/input-8, 811] [/input-8, 659] [/input-8, 659] [/input, 870] [/input, 662] [/input-8, 941] [/input, 662] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05859839916229248
10 lb beta sum: 0.4077240526676178, worst -0.05612318217754364
Time: prepare 0.0917    bound 0.4054    transfer 0.0213    finalize 0.0226    func 0.5645    
Accumulated time: func 3.7109    prepare 0.4258    bound 2.9946    transfer 0.0831    finalize 0.1064    
all_split False
======================Cut inference begins======================
max lb tensor(0.24585021) min lb tensor(-0.05611461)
Number of Verified Splits: 1291 of 3606
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 381.
#cuts 1-3: 29
#cuts 4-6: 310
#cuts 7-9: 42
#cuts >= 20: 0
BICCOS time: 0.46706295013427734 
BICCOS Cumulative time: 2.616544008255005
Preprocessing time: 0.11363434791564941 Inference time: 0.18310809135437012 Add cuts time: 0.1560204029083252 Cut analysis time: 0.014300107955932617
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05611 (21), -0.05312 (21), -0.05283 (21), -0.05206 (21), -0.05128 (21), -0.05083 (21), -0.05044 (21), -0.04969 (21), -0.04799 (21), -0.04783 (21), -0.04773 (21), -0.04676 (21), -0.04650 (21), -0.04649 (21), -0.04636 (21), -0.04625 (21), -0.04611 (21), -0.04597 (21), -0.04542 (21), -0.04535 (21), 
Length of domains: 2315
Time: pickout 0.0344    decision 0.2832    set_bounds 0.1559    solve 0.5652    add 0.0077    
Accumulated time: pickout 0.1780    decision 1.3690    set_bounds 0.8886    solve 3.6589    add 1.4303    
Current (lb-rhs): -0.05611461400985718
9969 domains visited
Cumulative time: 10.306068658828735

BaB round 12
batch: 2315
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 941] [/input-8, 1532] [/input-8, 792] [/input-8, 792] [/input-8, 811] [/input-8, 2005] [/input-8, 811] [/input-8, 1578] [/input-8, 941] [/input-8, 659] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05363023281097412
10 lb beta sum: 0.4225752055644989, worst -0.051066264510154724
Time: prepare 0.1195    bound 0.5119    transfer 0.0259    finalize 0.1959    func 0.8834    
Accumulated time: func 4.5943    prepare 0.5456    bound 3.5065    transfer 0.1090    finalize 0.3023    
all_split False
======================Cut inference begins======================
max lb tensor(0.47900665) min lb tensor(-0.05105174)
Number of Verified Splits: 1990 of 4630
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 369.
#cuts 1-3: 40
#cuts 4-6: 277
#cuts 7-9: 52
#cuts >= 20: 0
BICCOS time: 0.6659839153289795 
BICCOS Cumulative time: 3.2825279235839844
Preprocessing time: 0.1458759307861328 Inference time: 0.2981894016265869 Add cuts time: 0.2080376148223877 Cut analysis time: 0.01388096809387207
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05105 (22), -0.05052 (22), -0.04855 (22), -0.04812 (22), -0.04804 (22), -0.04766 (22), -0.04576 (22), -0.04555 (22), -0.04541 (22), -0.04541 (22), -0.04528 (22), -0.04435 (22), -0.04329 (22), -0.04301 (22), -0.04275 (22), -0.04257 (22), -0.04249 (22), -0.04246 (22), -0.04238 (22), -0.04192 (22), 
Length of domains: 2640
Time: pickout 0.0393    decision 0.1391    set_bounds 0.2021    solve 0.8843    add 0.0129    
Accumulated time: pickout 0.2172    decision 1.5081    set_bounds 1.0907    solve 4.5432    add 1.4432    
Current (lb-rhs): -0.05105173587799072
12609 domains visited
Cumulative time: 12.271627426147461

BaB round 13
batch: 2640
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 941] [/input-8, 2005] [/input-8, 941] [/input-8, 941] [/input-8, 2005] [/input-8, 2005] [/input-8, 2005] [/input-8, 2005] [/input-8, 1532] [/input-8, 941] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04809272289276123
10 lb beta sum: 0.4048064649105072, worst -0.045553237199783325
Time: prepare 0.1375    bound 0.5666    transfer 0.0235    finalize 0.0332    func 0.9595    
Accumulated time: func 5.5538    prepare 0.6833    bound 4.0730    transfer 0.1325    finalize 0.3355    
all_split False
======================Cut inference begins======================
max lb tensor(0.48142880) min lb tensor(-0.04553618)
Number of Verified Splits: 1859 of 5280
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 479.
#cuts 1-3: 50
#cuts 4-6: 373
#cuts 7-9: 56
#cuts >= 20: 0
BICCOS time: 0.7608656883239746 
BICCOS Cumulative time: 4.043393611907959
Preprocessing time: 0.16667580604553223 Inference time: 0.2934234142303467 Add cuts time: 0.2828352451324463 Cut analysis time: 0.017931222915649414
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04554 (23), -0.04516 (23), -0.04455 (23), -0.04420 (23), -0.04301 (23), -0.04280 (23), -0.04274 (23), -0.04224 (23), -0.04205 (23), -0.04182 (23), -0.04166 (23), -0.04165 (23), -0.04143 (23), -0.04025 (23), -0.04022 (23), -0.04006 (23), -0.03988 (23), -0.03984 (23), -0.03923 (23), -0.03908 (23), 
Length of domains: 3421
Time: pickout 0.0554    decision 0.1578    set_bounds 0.2327    solve 0.9604    add 0.0205    
Accumulated time: pickout 0.2726    decision 1.6658    set_bounds 1.3234    solve 5.5036    add 1.4636    
Current (lb-rhs): -0.04553617537021637
16030 domains visited
Cumulative time: 14.479493379592896

BaB round 14
batch: 3421
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2005] [/input-8, 1578] [/input-8, 941] [/input-8, 1532] [/input-8, 2005] [/input, 2436] [/input-8, 941] [/input, 2436] [/input, 2436] [/input-8, 941] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.044400811195373535
10 lb beta sum: 0.39020347595214844, worst -0.041851744055747986
Time: prepare 0.1810    bound 0.7703    transfer 0.0308    finalize 0.2485    func 1.2756    
Accumulated time: func 6.8293    prepare 0.8646    bound 4.8434    transfer 0.1633    finalize 0.5840    
all_split False
======================Cut inference begins======================
max lb tensor(0.47501588) min lb tensor(-0.04183561)
Number of Verified Splits: 2732 of 6842
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 495.
#cuts 1-3: 29
#cuts 4-6: 385
#cuts 7-9: 81
#cuts >= 20: 0
BICCOS time: 1.0612235069274902 
BICCOS Cumulative time: 5.104617118835449
Preprocessing time: 0.21988821029663086 Inference time: 0.45003652572631836 Add cuts time: 0.3712306022644043 Cut analysis time: 0.02006816864013672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04184 (24), -0.04087 (24), -0.03960 (24), -0.03919 (24), -0.03915 (24), -0.03904 (24), -0.03864 (24), -0.03823 (24), -0.03822 (24), -0.03790 (24), -0.03785 (24), -0.03720 (24), -0.03708 (24), -0.03676 (24), -0.03654 (24), -0.03639 (24), -0.03626 (24), -0.03584 (24), -0.03574 (24), -0.03556 (24), 
Length of domains: 4110
Time: pickout 0.0709    decision 0.1998    set_bounds 0.3036    solve 1.2777    add 0.0386    
Accumulated time: pickout 0.3435    decision 1.8656    set_bounds 1.6269    solve 6.7813    add 1.5022    
Current (lb-rhs): -0.04183560609817505
20140 domains visited
Cumulative time: 17.48852229118347

BaB round 15
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2005] [/input-8, 2005] [/input-8, 2005] [/input, 2436] [/input-8, 2005] [/input, 626] [/input-8, 2005] [/input-8, 2005] [/input-8, 1532] [/input-8, 2005] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0398716926574707
10 lb beta sum: 0.3931519687175751, worst -0.03733214735984802
Time: prepare 0.2319    bound 0.9173    transfer 0.0246    finalize 0.0620    func 1.2913    
Accumulated time: func 8.1206    prepare 1.0968    bound 5.7606    transfer 0.1879    finalize 0.6459    
all_split False
======================Cut inference begins======================
max lb tensor(0.47789907) min lb tensor(-0.03730413)
Number of Verified Splits: 3664 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 462.
#cuts 1-3: 46
#cuts 4-6: 336
#cuts 7-9: 80
#cuts >= 20: 0
BICCOS time: 1.5814557075500488 
BICCOS Cumulative time: 6.686072826385498
Preprocessing time: 0.2888026237487793 Inference time: 0.6433045864105225 Add cuts time: 0.6311285495758057 Cut analysis time: 0.018219947814941406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03730 (25), -0.03621 (25), -0.03528 (25), -0.03516 (25), -0.03487 (25), -0.03461 (25), -0.03446 (25), -0.03444 (25), -0.03431 (25), -0.03391 (25), -0.03357 (25), -0.03329 (25), -0.03288 (25), -0.03251 (25), -0.03246 (25), -0.03244 (25), -0.03239 (25), -0.03200 (25), -0.03193 (25), -0.03182 (25), 
Length of domains: 4542
Time: pickout 0.0774    decision 0.2413    set_bounds 0.6686    solve 1.2948    add 0.0425    
Accumulated time: pickout 0.4209    decision 2.1069    set_bounds 2.2955    solve 8.0762    add 1.5447    
Current (lb-rhs): -0.03730413317680359
24668 domains visited
current_vram/total_varm: 13.8GB/99.9GB, batch_size increase to 8192
Cumulative time: 21.449148416519165

BaB round 16
batch: 4542
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 626] [/input-8, 941] [/input-8, 1532] [/input-8, 1532] [/input-8, 2005] [/input-8, 941] [/input-8, 941] [/input-8, 941] [/input-8, 1532] [/input-8, 941] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.035599470138549805
10 lb beta sum: 0.3834209144115448, worst -0.039621502161026
Time: prepare 0.2482    bound 1.0067    transfer 0.0673    finalize 0.0671    func 1.4483    
Accumulated time: func 9.5689    prepare 1.3453    bound 6.7673    transfer 0.2552    finalize 0.7131    
all_split False
======================Cut inference begins======================
max lb tensor(0.47835445) min lb tensor(-0.03297764)
Number of Verified Splits: 4332 of 9084
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 500.
#cuts 1-3: 49
#cuts 4-6: 346
#cuts 7-9: 104
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.775714635848999 
BICCOS Cumulative time: 8.461787462234497
Preprocessing time: 0.5226237773895264 Inference time: 0.7674148082733154 Add cuts time: 0.4651186466217041 Cut analysis time: 0.020557403564453125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03298 (26), -0.03188 (26), -0.03180 (26), -0.03138 (26), -0.03086 (26), -0.03085 (26), -0.03043 (26), -0.03029 (26), -0.03014 (26), -0.03014 (26), -0.02931 (26), -0.02925 (26), -0.02896 (26), -0.02894 (26), -0.02886 (26), -0.02837 (26), -0.02822 (26), -0.02817 (26), -0.02808 (26), -0.02802 (26), 
Length of domains: 4752
Time: pickout 0.1073    decision 0.2675    set_bounds 0.4232    solve 1.4513    add 0.0321    
Accumulated time: pickout 0.5283    decision 2.3745    set_bounds 2.7187    solve 9.5275    add 1.5768    
Current (lb-rhs): -0.0329776406288147
29420 domains visited
Cumulative time: 25.55576777458191

BaB round 17
batch: 4752
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1562] [/input-8, 2005] [/input, 626] [/input-8, 2005] [/input-8, 2005] [/input-8, 2005] [/input, 626] [/input-8, 2005] [/input-8, 2005] [/input, 3970] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03236311674118042
10 lb beta sum: 0.3519478738307953, worst -0.04645290970802307
Time: prepare 0.2635    bound 1.0724    transfer 0.0159    finalize 0.0589    func 1.4726    
Accumulated time: func 11.0415    prepare 1.6091    bound 7.8397    transfer 0.2711    finalize 0.7719    
all_split False
======================Cut inference begins======================
max lb tensor(0.47467172) min lb tensor(-0.02956185)
Number of Verified Splits: 5087 of 9504
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 500.
#cuts 1-3: 49
#cuts 4-6: 346
#cuts 7-9: 104
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.0010523796081542969 
BICCOS Cumulative time: 8.462839841842651
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02956 (27), -0.02914 (27), -0.02861 (27), -0.02819 (27), -0.02749 (27), -0.02708 (27), -0.02702 (27), -0.02662 (27), -0.02642 (27), -0.02615 (27), -0.02593 (27), -0.02569 (27), -0.02558 (27), -0.02539 (27), -0.02491 (27), -0.02483 (27), -0.02469 (27), -0.02468 (27), -0.02463 (27), -0.02461 (27), 
Length of domains: 4417
Time: pickout 0.0875    decision 0.2778    set_bounds 0.6513    solve 1.4755    add 0.0144    
Accumulated time: pickout 0.6158    decision 2.6522    set_bounds 3.3700    solve 11.0030    add 1.5912    
Current (lb-rhs): -0.029561847448349
33837 domains visited
Cumulative time: 28.110400438308716

BaB round 18
batch: 4417
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2421] [/input, 2436] [/input-8, 941] [/input, 3970] [/input, 3970] [/input, 3970] [/input, 3970] [/input-8, 1562] [/input, 3970] [/input, 2421] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4936559498310089, worst -0.0271967351436615
10 lb beta sum: 0.4936530888080597, worst -0.027213305234909058
Time: prepare 0.4648    bound 1.0019    transfer 0.0114    finalize 0.0528    func 1.5887    
Accumulated time: func 12.6302    prepare 2.0743    bound 8.8416    transfer 0.2825    finalize 0.8248    
all_split False
======================Cut inference begins======================
max lb tensor(0.24343145) min lb tensor(-0.02718970)
Number of Verified Splits: 4819 of 8834
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 500.
#cuts 1-3: 49
#cuts 4-6: 346
#cuts 7-9: 104
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.000997304916381836 
BICCOS Cumulative time: 8.463837146759033
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02719 (28), -0.02672 (28), -0.02624 (28), -0.02576 (28), -0.02473 (28), -0.02423 (28), -0.02379 (28), -0.02330 (28), -0.02287 (28), -0.02268 (28), -0.02229 (28), -0.02221 (28), -0.02212 (28), -0.02183 (28), -0.02178 (28), -0.02177 (28), -0.02174 (28), -0.02168 (28), -0.02166 (28), -0.02157 (28), 
Length of domains: 4015
Time: pickout 0.0994    decision 0.2572    set_bounds 0.6118    solve 1.5917    add 0.0168    
Accumulated time: pickout 0.7152    decision 2.9094    set_bounds 3.9819    solve 12.5947    add 1.6080    
Current (lb-rhs): -0.027189701795578003
37852 domains visited
Cumulative time: 30.73355221748352

BaB round 19
batch: 4015
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 626] [/input-8, 1890] [/input-8, 1890] [/input-8, 1578] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1578] [/input-8, 1890] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48690757155418396, worst -0.024229496717453003
10 lb beta sum: 0.4869067966938019, worst -0.02421465516090393
Time: prepare 0.6061    bound 0.9038    transfer 0.0103    finalize 0.0487    func 1.6223    
Accumulated time: func 14.2525    prepare 2.6807    bound 9.7455    transfer 0.2927    finalize 0.8735    
all_split False
======================Cut inference begins======================
max lb tensor(0.24442817) min lb tensor(-0.02420112)
Number of Verified Splits: 5058 of 8030
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 500.
#cuts 1-3: 49
#cuts 4-6: 346
#cuts 7-9: 104
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.0009710788726806641 
BICCOS Cumulative time: 8.464808225631714
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02420 (29), -0.02372 (29), -0.02325 (29), -0.02277 (29), -0.02152 (29), -0.02102 (29), -0.02059 (29), -0.02009 (29), -0.01983 (29), -0.01960 (29), -0.01939 (29), -0.01929 (29), -0.01919 (29), -0.01915 (29), -0.01882 (29), -0.01874 (29), -0.01874 (29), -0.01865 (29), -0.01863 (29), -0.01861 (29), 
Length of domains: 2972
Time: pickout 0.0734    decision 0.2368    set_bounds 0.3588    solve 1.6252    add 0.0111    
Accumulated time: pickout 0.7886    decision 3.1462    set_bounds 4.3406    solve 14.2199    add 1.6192    
Current (lb-rhs): -0.024201124906539917
40824 domains visited
Cumulative time: 33.08595371246338

BaB round 20
batch: 2972
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4882660508155823, worst -0.019373208284378052
10 lb beta sum: 0.4882660508155823, worst -0.01936402916908264
Time: prepare 0.3121    bound 0.6867    transfer 0.0362    finalize 0.0398    func 1.1138    
Accumulated time: func 15.3663    prepare 2.9931    bound 10.4322    transfer 0.3289    finalize 0.9133    
all_split False
======================Cut inference begins======================
max lb tensor(0.24369465) min lb tensor(-0.01933882)
Number of Verified Splits: 3833 of 5944
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 500.
#cuts 1-3: 49
#cuts 4-6: 346
#cuts 7-9: 104
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.0008399486541748047 
BICCOS Cumulative time: 8.465648174285889
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01934 (30), -0.01867 (30), -0.01838 (30), -0.01811 (30), -0.01792 (30), -0.01771 (30), -0.01716 (30), -0.01696 (30), -0.01665 (30), -0.01637 (30), -0.01614 (30), -0.01595 (30), -0.01570 (30), -0.01570 (30), -0.01545 (30), -0.01528 (30), -0.01521 (30), -0.01521 (30), -0.01517 (30), -0.01511 (30), 
Length of domains: 2111
Time: pickout 0.1002    decision 0.1771    set_bounds 0.2624    solve 1.1160    add 0.0476    
Accumulated time: pickout 0.8888    decision 3.3233    set_bounds 4.6030    solve 15.3360    add 1.6667    
Current (lb-rhs): -0.01933881640434265
42935 domains visited
Cumulative time: 34.823058128356934

BaB round 21
batch: 2111
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] [/input-8, 1890] 
cut re-enabled after branching node selection
0 lb beta sum: 0.49049100279808044, worst -0.015912801027297974
10 lb beta sum: 0.49049100279808044, worst -0.015916258096694946
Time: prepare 0.2185    bound 0.4947    transfer 0.0165    finalize 0.0261    func 0.7836    
Accumulated time: func 16.1499    prepare 3.2119    bound 10.9269    transfer 0.3454    finalize 0.9394    
all_split False
======================Cut inference begins======================
max lb tensor(0.01686744) min lb tensor(-0.01589623)
Number of Verified Splits: 2700 of 4222
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 500.
#cuts 1-3: 49
#cuts 4-6: 346
#cuts 7-9: 104
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.0008649826049804688 
BICCOS Cumulative time: 8.46651315689087
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01590 (31), -0.01524 (31), -0.01495 (31), -0.01467 (31), -0.01447 (31), -0.01435 (31), -0.01428 (31), -0.01372 (31), -0.01368 (31), -0.01353 (31), -0.01352 (31), -0.01326 (31), -0.01322 (31), -0.01315 (31), -0.01291 (31), -0.01289 (31), -0.01265 (31), -0.01259 (31), -0.01259 (31), -0.01252 (31), 
Length of domains: 1522
Time: pickout 0.0416    decision 0.2862    set_bounds 0.1855    solve 0.7845    add 0.0486    
Accumulated time: pickout 0.9303    decision 3.6095    set_bounds 4.7885    solve 16.1205    add 1.7153    
Current (lb-rhs): -0.015896230936050415
44457 domains visited
Cumulative time: 36.19191884994507

BaB round 22
batch: 1522
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1979] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4889073073863983, worst -0.013100892305374146
10 lb beta sum: 0.4889073073863983, worst -0.013146549463272095
Time: prepare 0.1568    bound 0.3803    transfer 0.0053    finalize 0.0174    func 0.5799    
Accumulated time: func 16.7298    prepare 3.3690    bound 11.3072    transfer 0.3508    finalize 0.9567    
all_split False
======================Cut inference begins======================
max lb tensor(0.01667143) min lb tensor(-0.01310089)
Number of Verified Splits: 2267 of 3044
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 500.
#cuts 1-3: 49
#cuts 4-6: 346
#cuts 7-9: 104
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.0007793903350830078 
BICCOS Cumulative time: 8.467292547225952
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01310 (32), -0.01245 (32), -0.01223 (32), -0.01188 (32), -0.01157 (32), -0.01122 (32), -0.01113 (32), -0.01074 (32), -0.01064 (32), -0.01047 (32), -0.01043 (32), -0.01009 (32), -0.01005 (32), -0.00995 (32), -0.00990 (32), -0.00985 (32), -0.00982 (32), -0.00966 (32), -0.00938 (32), -0.00925 (32), 
Length of domains: 777
Time: pickout 0.0301    decision 0.0957    set_bounds 0.1320    solve 0.5812    add 0.0043    
Accumulated time: pickout 0.9605    decision 3.7052    set_bounds 4.9205    solve 16.7017    add 1.7196    
Current (lb-rhs): -0.013100892305374146
45234 domains visited
Cumulative time: 37.0512375831604

BaB round 23
batch: 777
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1708] [/input-8, 1708] [/input-8, 585] [/input-8, 585] [/input-8, 1979] [/input-8, 585] [/input-8, 585] [/input-8, 1979] [/input-8, 1708] [/input-8, 1708] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48414504528045654, worst -0.010085374116897583
10 lb beta sum: 0.48414504528045654, worst -0.010038942098617554
Time: prepare 0.0803    bound 0.2346    transfer 0.0027    finalize 0.0106    func 0.3388    
Accumulated time: func 17.0686    prepare 3.4495    bound 11.5418    transfer 0.3535    finalize 0.9674    
all_split False
======================Cut inference begins======================
max lb tensor(0.01679248) min lb tensor(-0.01000991)
Number of Verified Splits: 1228 of 1554
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 500.
#cuts 1-3: 49
#cuts 4-6: 346
#cuts 7-9: 104
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.0009188652038574219 
BICCOS Cumulative time: 8.46821141242981
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01001 (33), -0.00934 (33), -0.00914 (33), -0.00879 (33), -0.00846 (33), -0.00811 (33), -0.00790 (33), -0.00768 (33), -0.00763 (33), -0.00704 (33), -0.00700 (33), -0.00685 (33), -0.00674 (33), -0.00674 (33), -0.00649 (33), -0.00638 (33), -0.00636 (33), -0.00616 (33), -0.00611 (33), -0.00595 (33), 
Length of domains: 326
Time: pickout 0.0173    decision 0.0563    set_bounds 0.0664    solve 0.3392    add 0.0020    
Accumulated time: pickout 0.9778    decision 3.7615    set_bounds 4.9870    solve 17.0409    add 1.7216    
Current (lb-rhs): -0.010009914636611938
45560 domains visited
Cumulative time: 37.54319453239441

BaB round 24
batch: 326
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 585] [/input-8, 585] [/input-8, 585] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4843253195285797, worst -0.006815522909164429
10 lb beta sum: 0.4843253195285797, worst -0.006837636232376099
Time: prepare 0.0346    bound 0.1708    transfer 0.0011    finalize 0.0037    func 0.2145    
Accumulated time: func 17.2831    prepare 3.4844    bound 11.7126    transfer 0.3546    finalize 0.9711    
all_split False
======================Cut inference begins======================
max lb tensor(0.01616681) min lb tensor(-0.00680044)
Number of Verified Splits: 560 of 652
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 500.
#cuts 1-3: 49
#cuts 4-6: 346
#cuts 7-9: 104
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.0007452964782714844 
BICCOS Cumulative time: 8.468956708908081
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00680 (34), -0.00611 (34), -0.00595 (34), -0.00554 (34), -0.00532 (34), -0.00525 (34), -0.00472 (34), -0.00450 (34), -0.00441 (34), -0.00410 (34), -0.00399 (34), -0.00376 (34), -0.00356 (34), -0.00356 (34), -0.00339 (34), -0.00332 (34), -0.00317 (34), -0.00297 (34), -0.00291 (34), -0.00291 (34), 
Length of domains: 92
Time: pickout 0.0102    decision 0.0329    set_bounds 0.0301    solve 0.2155    add 0.0013    
Accumulated time: pickout 0.9880    decision 3.7944    set_bounds 5.0171    solve 17.2564    add 1.7229    
Current (lb-rhs): -0.006800442934036255
45652 domains visited
Cumulative time: 37.83706617355347

BaB round 25
batch: 92
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 792] [/input-8, 792] [/input-8, 1979] [/input-8, 1979] 
split level 1: [/input, 916] [/input, 916] [/input, 916] [/input, 916] [/input, 916] [/input, 916] [/input, 916] [/input, 916] [/input, 916] [/input, 916] 
cut re-enabled after branching node selection
0 lb beta sum: 0.48304483294487, worst 0.0006944239139556885

all verified at 0th iter
Time: prepare 0.0199    bound 0.0070    transfer 0.0013    finalize 0.0022    func 0.0328    
Accumulated time: func 17.3159    prepare 3.5045    bound 11.7196    transfer 0.3559    finalize 0.9733    
all_split False
======================Cut inference begins======================
max lb tensor(0.02130318) min lb tensor(0.00069442)
Number of Verified Splits: 368 of 368
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 500.
#cuts 1-3: 49
#cuts 4-6: 346
#cuts 7-9: 104
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.0007135868072509766 
BICCOS Cumulative time: 8.469670295715332
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0034    decision 0.0174    set_bounds 0.1658    solve 0.0329    add 0.0001    
Accumulated time: pickout 0.9913    decision 3.8118    set_bounds 5.1829    solve 17.2893    add 1.7230    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
45652 domains visited
Cumulative time: 38.0593535900116


Properties batch 2, size 1
Remaining timeout: 160.22268390655518
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 160.22258830070496
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 160.22256016731262
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 160.22253799438477
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 160.22251749038696
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 160.22249698638916
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 160.22247695922852
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 39.7776 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 41, vnnlib ID: 41 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.96438026, -33.14295578, -32.26459503, -29.07794380, -29.70187950,
         -30.32794762, -31.23779678, -31.09666061, -23.18394279, -30.66130447]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [769]; unstable size 769; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 236, 1, 769] with unstable size 235 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 39, 1, 769] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 769] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [235]; unstable size 235; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 39, 1, 235] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 235] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [38]; unstable size 38; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.61635828, 5.94665623, 4.75855780, 2.73768234, 2.88329816, 3.27531147,
         4.76455498, 3.61341333, 3.53591728]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0571 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 42, vnnlib ID: 42 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.79622078, -31.21529770, -26.27239418, -25.32670784, -27.52338409,
         -26.62690163, -22.77772331, -29.55108452, -29.65537643, -30.91590118]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [763]; unstable size 763; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 329, 1, 763] with unstable size 328 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 48, 1, 763] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 763] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [328]; unstable size 328; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 48, 1, 328] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 328] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [47]; unstable size 47; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 47] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.18919873,  4.17893934, -0.51179695, -0.60519063,  0.73802543,
         -0.03879166,  2.31790853,  1.59991622,  2.73503971]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.79622078, -31.21529770, -26.27239418, -25.32670784, -27.52338409,
         -26.62690163, -22.77772331, -29.55108452, -29.65537643, -30.91590118]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.84it/s]100%|██████████| 1/1 [00:00<00:00,  7.83it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.38006210, -29.84156609, -25.05973053, -23.51592636, -26.03652573,
          -24.63275146, -22.24502754, -27.70118141, -28.17500496, -29.21797752],
         [-28.38006210, -29.84156609, -25.05973053, -23.51592636, -26.03652573,
          -24.63275146, -22.24502754, -27.70118141, -28.17500496, -29.21797752]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.81470299, 1.27089882, 2.38772392]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1309 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 14.798050880432129
alpha/beta optimization time: 1.2846918106079102
initial alpha-crown bounds: tensor([[ 2.42159009,  4.44305801, -0.30194616, -0.41623354,  0.97133756,
          0.15689325,  2.56462145,  1.92512012,  3.03361034]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.41623353958129883
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.5133228302002
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.51327967643738
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.51325464248657
Verifying property 2 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.30194616]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.79622078, -31.21529770, -26.27239418, -25.32670784, -27.52338409,
        -26.62690163, -22.77772331, -29.55108452, -29.65537643, -30.91590118],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.30194616]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 763
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 325
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1135
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011348724365234375
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3019399642944336
10 lb beta sum: 0.0, worst -0.30196094512939453
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0563    transfer 0.0001    finalize 0.0001    func 0.0568    
Accumulated time: func 0.0568    prepare 0.0002    bound 0.0563    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] 
split level 1: [/input-12, 22] 
split level 2: [/input-12, 30] 
split level 3: [/input-12, 66] 
split level 4: [/input-12, 62] 
split level 5: [/input-12, 7] 
split level 6: [/input-12, 50] 
split level 7: [/input-12, 71] 
split level 8: [/input-12, 61] 
split level 9: [/input-12, 28] 
split level 10: [/input-12, 49] 
split level 11: [/input-12, 1] 
split level 12: [/input-12, 31] 
split level 13: [/input-12, 10] 
split level 14: [/input-12, 14] 
split level 15: [/input-12, 95] 
split level 16: [/input-12, 46] 
split level 17: [/input-12, 67] 
split level 18: [/input-12, 19] 
split level 19: [/input-12, 74] 
split level 20: [/input-12, 84] 
split level 21: [/input-8, 868] 
split level 22: [/input-12, 73] 
split level 23: [/input-8, 996] 
split level 24: [/input-8, 987] 
split level 25: [/input-8, 1133] 
split level 26: [/input-8, 915] 
split level 27: [/input-8, 1506] 
split level 28: [/input-12, 60] 
split level 29: [/input-8, 1491] 
split level 30: [/input-8, 438] 
split level 31: [/input-8, 730] 
split level 32: [/input-8, 322] 
split level 33: [/input-8, 430] 
split level 34: [/input-8, 609] 
split level 35: [/input-12, 72] 
split level 36: [/input-8, 916] 
split level 37: [/input-12, 97] 
split level 38: [/input-8, 988] 
split level 39: [/input-8, 1505] 
split level 40: [/input-8, 1821] 
split level 41: [/input-8, 1126] 
split level 42: [/input-8, 867] 
split level 43: [/input-8, 1498] 
split level 44: [/input-8, 1867] 
split level 45: [/input-8, 1876] 
split level 46: [/input-8, 1634] 
split level 47: [/input-8, 620] 
split level 48: [/input-8, 1308] 
split level 49: [/input-8, 1504] 
split level 50: [/input-8, 1581] 
split level 51: [/input-12, 94] 
split level 52: [/input-8, 1490] 
split level 53: [/input-8, 1891] 
split level 54: [/input-8, 933] 
split level 55: [/input-12, 35] 
split level 56: [/input-8, 427] 
split level 57: [/input, 4092] 
split level 58: [/input-8, 1866] 
split level 59: [/input-8, 985] 
split level 60: [/input-8, 1813] 
split level 61: [/input-8, 1582] 
split level 62: [/input-8, 989] 
split level 63: [/input-8, 650] 
split level 64: [/input-8, 1626] 
split level 65: [/input-8, 924] 
split level 66: [/input-8, 478] 
split level 67: [/input-8, 1509] 
split level 68: [/input-8, 1492] 
split level 69: [/input-8, 723] 
split level 70: [/input-8, 866] 
split level 71: [/input-8, 488] 
split level 72: [/input-8, 1779] 
split level 73: [/input-8, 1630] 
split level 74: [/input-8, 1753] 
split level 75: [/input-8, 908] 
split level 76: [/input-8, 1573] 
split level 77: [/input-8, 722] 
split level 78: [/input-8, 2011] 
split level 79: [/input-8, 275] 
split level 80: [/input-8, 907] 
split level 81: [/input-8, 658] 
split level 82: [/input-8, 1684] 
split level 83: [/input-8, 1317] 
split level 84: [/input-8, 974] 
split level 85: [/input-8, 601] 
split level 86: [/input-8, 925] 
split level 87: [/input-8, 1396] 
split level 88: [/input-8, 2021] 
split level 89: [/input-8, 906] 
split level 90: [/input-8, 1643] 
split level 91: [/input-8, 1812] 
split level 92: [/input-8, 1297] 
split level 93: [/input-8, 522] 
split level 94: [/input-8, 913] 
split level 95: [/input-8, 669] 
split level 96: [/input-8, 1298] 
split level 97: [/input-8, 155] 
split level 98: [/input-8, 428] 
split level 99: [/input-8, 1494] 
split level 100: [/input-8, 585] 
split level 101: [/input-8, 949] 
split level 102: [/input-8, 1638] 
split level 103: [/input-8, 979] 
split level 104: [/input-8, 1314] 
split level 105: [/input, 3992] 
split level 106: [/input-8, 324] 
split level 107: [/input-8, 516] 
split level 108: [/input-8, 513] 
split level 109: [/input, 1197] 
split level 110: [/input-8, 1865] 
split level 111: [/input-8, 189] 
split level 112: [/input-8, 738] 
split level 113: [/input-8, 422] 
split level 114: [/input-8, 1857] 
split level 115: [/input-8, 1145] 
split level 116: [/input-8, 592] 
split level 117: [/input, 1998] 
split level 118: [/input-8, 1532] 
split level 119: [/input-8, 1597] 
split level 120: [/input-8, 276] 
split level 121: [/input-8, 1565] 
split level 122: [/input-8, 1418] 
split level 123: [/input-8, 2042] 
split level 124: [/input-8, 31] 
split level 125: [/input-8, 944] 
split level 126: [/input-8, 543] 
split level 127: [/input, 2613] 
split level 128: [/input, 3398] 
split level 129: [/input-8, 1934] 
split level 130: [/input-8, 790] 
split level 131: [/input-8, 934] 
split level 132: [/input, 747] 
split level 133: [/input, 765] 
split level 134: [/input, 838] 
split level 135: [/input, 1182] 
split level 136: [/input, 3227] 
split level 137: [/input-8, 1325] 
split level 138: [/input-8, 1066] 
split level 139: [/input, 2141] 
split level 140: [/input-8, 24] 
split level 141: [/input-8, 1486] 
split level 142: [/input-8, 1] 
split level 143: [/input-8, 2037] 
split level 144: [/input-8, 709] 
split level 145: [/input-8, 447] 
split level 146: [/input-8, 1599] 
split level 147: [/input-8, 415] 
split level 148: [/input, 760] 
split level 149: [/input-8, 1521] 
split level 150: [/input, 1185] 
split level 151: [/input-8, 1644] 
split level 152: [/input, 1948] 
split level 153: [/input-8, 564] 
split level 154: [/input-8, 877] 
split level 155: [/input-8, 1534] 
split level 156: [/input, 2190] 
split level 157: [/input, 1246] 
split level 158: [/input, 3507] 
split level 159: [/input, 766] 
split level 160: [/input, 764] 
split level 161: [/input-8, 297] 
split level 162: [/input-8, 1378] 
split level 163: [/input-8, 1501] 
split level 164: [/input-8, 505] 
split level 165: [/input, 2241] 
split level 166: [/input, 2277] 
split level 167: [/input-8, 32] 
split level 168: [/input, 3174] 
split level 169: [/input-8, 810] 
split level 170: [/input-12, 4] 
split level 171: [/input-8, 1395] 
split level 172: [/input-8, 14] 
split level 173: [/input-8, 490] 
split level 174: [/input, 3764] 
split level 175: [/input-8, 1078] 
split level 176: [/input, 1949] 
split level 177: [/input, 757] 
split level 178: [/input-8, 1587] 
split level 179: [/input, 2627] 
split level 180: [/input-8, 404] 
split level 181: [/input, 4030] 
split level 182: [/input, 1857] 
split level 183: [/input-8, 800] 
split level 184: [/input-8, 1334] 
split level 185: [/input, 3134] 
split level 186: [/input, 3862] 
split level 187: [/input-8, 520] 
split level 188: [/input, 3781] 
split level 189: [/input, 3769] 
split level 190: [/input, 3718] 
split level 191: [/input-8, 1571] 
split level 192: [/input, 851] 
split level 193: [/input, 2226] 
split level 194: [/input, 1179] 
split level 195: [/input, 1045] 
split level 196: [/input-8, 156] 
split level 197: [/input, 3765] 
split level 198: [/input-8, 168] 
split level 199: [/input, 2240] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.30174779891967773
10 lb beta sum: 0.0, worst -0.30174827575683594
Time: prepare 0.0115    bound 0.1044    transfer 0.0021    finalize 0.0027    func 0.1233    
Accumulated time: func 0.1801    prepare 0.0218    bound 0.1607    transfer 0.0022    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(0.57082796) min lb tensor(-0.30173397)
Number of Verified Splits: 15 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.011673927307128906 
BICCOS Cumulative time: 0.011673927307128906
Preprocessing time: 0.010127782821655273 Inference time: 0.0005888938903808594 Add cuts time: 0.0002262592315673828 Cut analysis time: 0.0007309913635253906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26308 (1), -0.26239 (1), -0.25725 (1), -0.25300 (1), -0.25262 (1), -0.25154 (1), -0.25093 (1), -0.24952 (1), -0.24933 (1), -0.24928 (1), -0.24825 (1), -0.24808 (1), -0.24790 (1), -0.24739 (1), -0.24557 (1), -0.24536 (1), -0.24527 (1), -0.24061 (1), -0.24049 (1), -0.23845 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5420    set_bounds 0.0086    solve 0.1234    add 0.1881    
Accumulated time: pickout 0.0004    decision 0.5420    set_bounds 0.0086    solve 0.1234    add 0.1881    
Current (lb-rhs): -0.26308250427246094
50 domains visited
Cumulative time: 0.9464914798736572

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 66] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 1: [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 62] [/input-12, 66] [/input-12, 62] [/input-12, 66] [/input-12, 62] [/input-12, 62] [/input-12, 62] 
split level 2: [/input-12, 62] [/input-12, 62] [/input-12, 7] [/input-12, 7] [/input-12, 62] [/input-12, 66] [/input-12, 62] [/input-12, 66] [/input-12, 66] [/input-12, 66] 
split level 3: [/input-12, 28] [/input-12, 7] [/input-12, 28] [/input-12, 28] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 28] [/input-12, 7] [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12497520446777344

all verified at 1th iter
Time: prepare 0.0069    bound 0.0130    transfer 0.0007    finalize 0.0022    func 0.0254    
Accumulated time: func 0.2055    prepare 0.0289    bound 0.1737    transfer 0.0029    finalize 0.0050    
all_split False
======================Cut inference begins======================
max lb tensor(0.44846201) min lb tensor(0.00081921)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03590965270996094 
BICCOS Cumulative time: 0.047583580017089844
Preprocessing time: 0.011894464492797852 Inference time: 0.01610589027404785 Add cuts time: 0.007706642150878906 Cut analysis time: 0.00020265579223632812
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0259    set_bounds 0.0135    solve 0.0255    add 0.0154    
Accumulated time: pickout 0.0016    decision 0.5679    set_bounds 0.0221    solve 0.1489    add 0.2036    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 92] 
split level 1: [/input-12, 22] 
split level 2: [/input-12, 30] 
split level 3: [/input-12, 66] 
split level 4: [/input-12, 62] 
split level 5: [/input-12, 7] 
split level 6: [/input-12, 28] 
split level 7: [/input-12, 49] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.9201526641845703

all verified at 0th iter
Time: prepare 0.0036    bound 0.0042    transfer 0.0013    finalize 0.0014    func 0.0122    
Accumulated time: func 0.2177    prepare 0.0330    bound 0.1780    transfer 0.0042    finalize 0.0065    
all_split False
======================Cut inference begins======================
max lb tensor(2.39851594) min lb tensor(0.92015266)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006349802017211914 
BICCOS Cumulative time: 0.05393338203430176
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0164    solve 0.0123    add 0.0002    
Accumulated time: pickout 0.0020    decision 0.5909    set_bounds 0.0385    solve 0.1612    add 0.2038    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.126338005065918


Properties batch 3, size 1
Remaining timeout: 197.19824695587158
Verifying property 3 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.41623354]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.79622078, -31.21529770, -26.27239418, -25.32670784, -27.52338409,
        -26.62690163, -22.77772331, -29.55108452, -29.65537643, -30.91590118],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.41623354]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 763
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 325
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1135
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001087188720703125
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4162311553955078
10 lb beta sum: 0.0, worst -0.4162425994873047
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0559    transfer 0.0001    finalize 0.0001    func 0.0564    
Accumulated time: func 0.0564    prepare 0.0002    bound 0.0559    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 35] 
split level 1: [/input-12, 65] 
split level 2: [/input-12, 74] 
split level 3: [/input-12, 14] 
split level 4: [/input-12, 1] 
split level 5: [/input-12, 30] 
split level 6: [/input-12, 71] 
split level 7: [/input-12, 94] 
split level 8: [/input-12, 50] 
split level 9: [/input-12, 10] 
split level 10: [/input-12, 19] 
split level 11: [/input-12, 49] 
split level 12: [/input-12, 2] 
split level 13: [/input-12, 22] 
split level 14: [/input-12, 61] 
split level 15: [/input-12, 95] 
split level 16: [/input-12, 31] 
split level 17: [/input-12, 46] 
split level 18: [/input-12, 29] 
split level 19: [/input-12, 67] 
split level 20: [/input-12, 4] 
split level 21: [/input-8, 1491] 
split level 22: [/input-12, 11] 
split level 23: [/input-8, 1506] 
split level 24: [/input-8, 987] 
split level 25: [/input-8, 1933] 
split level 26: [/input-12, 88] 
split level 27: [/input-12, 75] 
split level 28: [/input-12, 62] 
split level 29: [/input-8, 996] 
split level 30: [/input-12, 60] 
split level 31: [/input-8, 1813] 
split level 32: [/input-8, 868] 
split level 33: [/input-8, 988] 
split level 34: [/input-8, 1934] 
split level 35: [/input-8, 1866] 
split level 36: [/input-8, 1867] 
split level 37: [/input-8, 989] 
split level 38: [/input-8, 1812] 
split level 39: [/input-8, 1821] 
split level 40: [/input-8, 1644] 
split level 41: [/input-12, 28] 
split level 42: [/input-8, 1859] 
split level 43: [/input-8, 1505] 
split level 44: [/input-8, 1694] 
split level 45: [/input-8, 1779] 
split level 46: [/input-8, 1509] 
split level 47: [/input-8, 1865] 
split level 48: [/input-8, 1857] 
split level 49: [/input-8, 730] 
split level 50: [/input-8, 1626] 
split level 51: [/input-8, 155] 
split level 52: [/input-8, 1492] 
split level 53: [/input-12, 84] 
split level 54: [/input-8, 1873] 
split level 55: [/input-8, 1719] 
split level 56: [/input-8, 1490] 
split level 57: [/input-8, 468] 
split level 58: [/input-8, 478] 
split level 59: [/input-8, 430] 
split level 60: [/input-8, 650] 
split level 61: [/input-8, 1858] 
split level 62: [/input-8, 1634] 
split level 63: [/input-8, 1900] 
split level 64: [/input-8, 1498] 
split level 65: [/input-8, 1396] 
split level 66: [/input-8, 609] 
split level 67: [/input-8, 1317] 
split level 68: [/input-8, 915] 
split level 69: [/input-8, 1521] 
split level 70: [/input-8, 620] 
split level 71: [/input-8, 1308] 
split level 72: [/input-8, 658] 
split level 73: [/input-8, 2011] 
split level 74: [/input, 2613] 
split level 75: [/input-8, 766] 
split level 76: [/input-8, 1687] 
split level 77: [/input-8, 438] 
split level 78: [/input-8, 1643] 
split level 79: [/input-8, 985] 
split level 80: [/input, 2168] 
split level 81: [/input-8, 179] 
split level 82: [/input-8, 322] 
split level 83: [/input, 2675] 
split level 84: [/input-8, 1684] 
split level 85: [/input-8, 1861] 
split level 86: [/input-8, 723] 
split level 87: [/input-8, 1876] 
split level 88: [/input-8, 1133] 
split level 89: [/input-8, 528] 
split level 90: [/input-8, 1955] 
split level 91: [/input-8, 1298] 
split level 92: [/input-8, 709] 
split level 93: [/input-8, 1114] 
split level 94: [/input-8, 1753] 
split level 95: [/input-8, 208] 
split level 96: [/input-8, 722] 
split level 97: [/input-8, 1501] 
split level 98: [/input, 786] 
split level 99: [/input-8, 1288] 
split level 100: [/input-8, 156] 
split level 101: [/input-8, 1645] 
split level 102: [/input-8, 1279] 
split level 103: [/input, 2707] 
split level 104: [/input-8, 1918] 
split level 105: [/input-8, 601] 
split level 106: [/input-8, 974] 
split level 107: [/input-8, 1959] 
split level 108: [/input-8, 1517] 
split level 109: [/input-8, 867] 
split level 110: [/input-8, 1326] 
split level 111: [/input, 599] 
split level 112: [/input-8, 1630] 
split level 113: [/input, 838] 
split level 114: [/input-8, 1901] 
split level 115: [/input, 2178] 
split level 116: [/input-8, 324] 
split level 117: [/input-8, 1397] 
split level 118: [/input-8, 1418] 
split level 119: [/input-8, 1297] 
split level 120: [/input, 851] 
split level 121: [/input-8, 1494] 
split level 122: [/input, 2141] 
split level 123: [/input-8, 1638] 
split level 124: [/input-8, 790] 
split level 125: [/input-8, 800] 
split level 126: [/input-8, 513] 
split level 127: [/input-8, 1062] 
split level 128: [/input-8, 543] 
split level 129: [/input-8, 1534] 
split level 130: [/input-8, 913] 
split level 131: [/input-8, 1954] 
split level 132: [/input, 2140] 
split level 133: [/input-8, 1395] 
split level 134: [/input-8, 979] 
split level 135: [/input-8, 216] 
split level 136: [/input-8, 1910] 
split level 137: [/input-8, 1067] 
split level 138: [/input, 964] 
split level 139: [/input, 785] 
split level 140: [/input, 2710] 
split level 141: [/input-8, 1220] 
split level 142: [/input-8, 422] 
split level 143: [/input-8, 1486] 
split level 144: [/input-8, 1504] 
split level 145: [/input-8, 520] 
split level 146: [/input, 2743] 
split level 147: [/input-8, 1391] 
split level 148: [/input-8, 738] 
split level 149: [/input-8, 447] 
split level 150: [/input, 2089] 
split level 151: [/input-8, 906] 
split level 152: [/input-8, 272] 
split level 153: [/input, 2643] 
split level 154: [/input-8, 1078] 
split level 155: [/input, 4065] 
split level 156: [/input-8, 297] 
split level 157: [/input-8, 1325] 
split level 158: [/input, 857] 
split level 159: [/input, 2681] 
split level 160: [/input, 933] 
split level 161: [/input-8, 1398] 
split level 162: [/input-8, 924] 
split level 163: [/input-8, 334] 
split level 164: [/input-8, 1295] 
split level 165: [/input-8, 1537] 
split level 166: [/input-12, 32] 
split level 167: [/input, 3174] 
split level 168: [/input, 2627] 
split level 169: [/input, 4066] 
split level 170: [/input, 2103] 
split level 171: [/input, 2121] 
split level 172: [/input-8, 741] 
split level 173: [/input-8, 810] 
split level 174: [/input-8, 1145] 
split level 175: [/input-8, 1532] 
split level 176: [/input-8, 168] 
split level 177: [/input, 2322] 
split level 178: [/input-8, 1716] 
split level 179: [/input-8, 1417] 
split level 180: [/input, 3398] 
split level 181: [/input, 33] 
split level 182: [/input, 3781] 
split level 183: [/input, 2497] 
split level 184: [/input, 3718] 
split level 185: [/input-8, 916] 
split level 186: [/input-8, 1899] 
split level 187: [/input, 2633] 
split level 188: [/input, 545] 
split level 189: [/input-8, 488] 
split level 190: [/input, 3764] 
split level 191: [/input, 3765] 
split level 192: [/input, 4081] 
split level 193: [/input-8, 1677] 
split level 194: [/input, 18] 
split level 195: [/input, 2579] 
split level 196: [/input-8, 315] 
split level 197: [/input-8, 271] 
split level 198: [/input, 2198] 
split level 199: [/input, 193] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.41612672805786133
10 lb beta sum: 0.0, worst -0.4161243438720703
Time: prepare 0.0115    bound 0.1085    transfer 0.0007    finalize 0.0034    func 0.1267    
Accumulated time: func 0.1831    prepare 0.0216    bound 0.1644    transfer 0.0008    finalize 0.0035    
all_split False
======================Cut inference begins======================
max lb tensor(0.37051797) min lb tensor(-0.41611528)
Number of Verified Splits: 10 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.011579036712646484 
BICCOS Cumulative time: 0.011579036712646484
Preprocessing time: 0.010360240936279297 Inference time: 0.0007417201995849609 Add cuts time: 0.00015878677368164062 Cut analysis time: 0.00031828880310058594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38318 (1), -0.38286 (1), -0.38226 (1), -0.37846 (1), -0.37840 (1), -0.37700 (1), -0.37656 (1), -0.37604 (1), -0.37553 (1), -0.37432 (1), -0.37287 (1), -0.37274 (1), -0.37025 (1), -0.37005 (1), -0.36950 (1), -0.36682 (1), -0.36663 (1), -0.36276 (1), -0.36256 (1), -0.36096 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5413    set_bounds 0.0085    solve 0.1268    add 0.0697    
Accumulated time: pickout 0.0003    decision 0.5413    set_bounds 0.0085    solve 0.1268    add 0.0697    
Current (lb-rhs): -0.3831803798675537
50 domains visited
Cumulative time: 0.820528507232666

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 1] [/input-12, 35] 
split level 1: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 19] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 19] [/input-12, 1] 
split level 2: [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 19] [/input-12, 49] [/input-12, 49] [/input-12, 49] 
split level 3: [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 19] [/input-12, 46] [/input-12, 19] [/input-12, 49] [/input-12, 19] [/input-12, 46] [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2913705110549927
10 lb beta sum: 2.0036187171936035, worst -0.07322871685028076
Time: prepare 0.0066    bound 0.1255    transfer 0.0007    finalize 0.0022    func 0.1376    
Accumulated time: func 0.3207    prepare 0.0285    bound 0.2899    transfer 0.0016    finalize 0.0057    
all_split False
======================Cut inference begins======================
max lb tensor(0.42828709) min lb tensor(-0.07247812)
Number of Verified Splits: 361 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03335976600646973 
BICCOS Cumulative time: 0.04493880271911621
Preprocessing time: 0.011741399765014648 Inference time: 0.014534711837768555 Add cuts time: 0.006892204284667969 Cut analysis time: 0.0001914501190185547
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0207    set_bounds 0.0133    solve 0.1376    add 0.0153    
Accumulated time: pickout 0.0014    decision 0.5620    set_bounds 0.0218    solve 0.2644    add 0.0851    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 35] 
split level 1: [/input-12, 14] 
split level 2: [/input-12, 1] 
split level 3: [/input-12, 94] 
split level 4: [/input-12, 19] 
split level 5: [/input-12, 49] 
split level 6: [/input-12, 95] 
split level 7: [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.280855655670166

all verified at 0th iter
Time: prepare 0.0036    bound 0.0042    transfer 0.0005    finalize 0.0013    func 0.0113    
Accumulated time: func 0.3319    prepare 0.0325    bound 0.2941    transfer 0.0021    finalize 0.0070    
all_split False
======================Cut inference begins======================
max lb tensor(0.92438221) min lb tensor(0.28085566)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.0065076351165771484 
BICCOS Cumulative time: 0.05144643783569336
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0005    decision 0.0232    set_bounds 0.0166    solve 0.0113    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.5852    set_bounds 0.0384    solve 0.2758    add 0.0852    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.1050493717193604


Properties batch 4, size 1
Remaining timeout: 195.8903169631958
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 195.89021229743958
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 195.8901867866516
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 195.8901650905609
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 195.89014410972595
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 4.1099 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 43, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.42795753, -30.46387100, -24.59293175, -24.32059288, -23.03468895,
         -24.19349861, -22.50428391, -24.19194794, -29.34595680, -28.05794144]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [714]; unstable size 714; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 371, 1, 714] with unstable size 370 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 50, 1, 714] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 714] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [370]; unstable size 370; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 50, 1, 370] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 370] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [49]; unstable size 49; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 49] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.60538054,  0.12976217, -4.20032692, -1.13245010, -4.42490959,
         -5.13309193, -2.81717062, -0.49450207, -1.82010269]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.42795753, -30.46387100, -24.59293175, -24.32059288, -23.03468895,
         -24.19349861, -22.50428391, -24.19194794, -29.34595680, -28.05794144]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.42795181, -30.46386719, -24.59292793, -24.32059288, -23.03468513,
          -24.19349480, -22.50428009, -24.19194603, -29.34595299, -28.05793953],
         [-28.42795181, -30.46386719, -24.59292793, -24.32059288, -23.03468513,
          -24.19349480, -22.50428009, -24.19194603, -29.34595299, -28.05793953]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 4.23445702e+00,  3.99433136e-01,  1.27098083e-01, -1.15880966e+00,
          -1.68921471e+00, -1.54876709e-03,  5.15245819e+00,  3.86444473e+00]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         ...,


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]]]],
       device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0848 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 44, vnnlib ID: 44 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.82464600, -38.36074448, -29.76309013, -32.91176605, -30.46774864,
         -33.60894775, -31.24848938, -33.93728638, -36.41239166, -38.32529068]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1194]; unstable size 1194; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 477, 1, 1194] with unstable size 476 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 62, 1, 1194] with unstable size 61 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1194] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [476]; unstable size 476; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 62, 1, 476] with unstable size 61 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 476] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [61]; unstable size 61; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 61] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.61392295,  0.81670046, -1.18483329, -2.86002946, -0.78723580,
         -3.09293604, -1.91617918,  0.30347776,  0.69542885]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.82464600, -38.36074448, -29.76309013, -32.91176605, -30.46774864,
         -33.60894775, -31.24848938, -33.93728638, -36.41239166, -38.32529068]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.78520203, -37.93126297, -30.08230782, -32.60194016, -29.84195709,
          -33.17052460, -31.36643791, -33.11567688, -36.10993576, -37.78126526],
         [-32.78520203, -37.93126297, -30.08230782, -32.60194016, -29.84195709,
          -33.17052460, -31.36643791, -33.11567688, -36.10993576, -37.78126526]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.70289421,  2.51963234, -0.24035072,  3.08821678,  1.28413010,
           3.03336906]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0072 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0757 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 45, vnnlib ID: 45 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-43.28258133, -42.71690750, -44.23192215, -43.14392853, -43.16686249,
         -44.19746399, -43.37423706, -45.52773666, -43.27882385, -42.46476746]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [709]; unstable size 709; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 285, 1, 709] with unstable size 284 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 42, 1, 709] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 709] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [284]; unstable size 284; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 42, 1, 284] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 284] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [41]; unstable size 41; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.20948410, -3.16979504, -3.51343441, -3.70536804, -2.98204803,
         -3.19514465, -2.26794338, -2.99959373, -2.27525043]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-43.28258133, -42.71690750, -44.23192215, -43.14392853, -43.16686249,
         -44.19746399, -43.37423706, -45.52773666, -43.27882385, -42.46476746]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-43.28258133, -42.71691132, -44.23192596, -43.14392853, -43.16686249,
          -44.19746399, -43.37423325, -45.52773666, -43.27882004, -42.46475983],
         [-43.28258133, -42.71691132, -44.23192596, -43.14392853, -43.16686249,
          -44.19746399, -43.37423325, -45.52773666, -43.27882004, -42.46475983]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.56567001,  1.51501465,  0.42701721,  0.44995117,  1.48055267,
           0.65732193,  2.81082535,  0.56190872, -0.25215149]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         ...,


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0806 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 46, vnnlib ID: 46 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.56733704, -31.77669144, -26.36287880, -25.46484566, -26.06635666,
         -25.73415375, -25.77372360, -27.85986328, -32.55982971, -31.37418365]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [996]; unstable size 996; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 372, 1, 996] with unstable size 371 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 51, 1, 996] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 996] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [371]; unstable size 371; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 51, 1, 371] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 371] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [50]; unstable size 50; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 50] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.20994782,  1.77437401, -3.31207800, -1.66550732, -2.76113033,
         -3.02365685, -1.41216505,  1.98852801,  1.72616649]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.56733704, -31.77669144, -26.36287880, -25.46484566, -26.06635666,
         -25.73415375, -25.77372360, -27.85986328, -32.55982971, -31.37418365]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.56733513, -31.77669525, -26.36288071, -25.46484566, -26.06635857,
          -25.73415184, -25.77372742, -27.85986519, -32.55983353, -31.37418747],
         [-28.56733513, -31.77669525, -26.36288071, -25.46484566, -26.06635857,
          -25.73415184, -25.77372742, -27.85986519, -32.55983353, -31.37418747]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.83318329,  0.62872887, -0.26930618,  0.33220673,  0.03957558,
           2.12571335]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]]]],
       device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0793 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 47, vnnlib ID: 47 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-40.08958435, -45.24065018, -42.45501709, -43.97715759, -42.66770172,
         -45.94812393, -44.34593582, -44.65077591, -34.94168472, -45.56184006]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [817]; unstable size 817; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 218, 1, 817] with unstable size 217 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 817] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 817] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [217]; unstable size 217; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 217] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 217] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.94489622, 7.44447136, 5.01838636, 6.76429558, 5.26115084, 8.29398060,
         6.63492727, 7.15714979, 7.99196053]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0665 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 48, vnnlib ID: 48 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.87740707, -33.23645401, -27.24008560, -26.14530754, -28.38466835,
         -25.23544884, -28.44317055, -26.18243027, -33.17858887, -31.07865715]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [694]; unstable size 694; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 314, 1, 694] with unstable size 313 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 46, 1, 694] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 694] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [313]; unstable size 313; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 46, 1, 313] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 313] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [45]; unstable size 45; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 45] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.02323461,  3.40115666, -0.35392904, -0.52351260,  0.17767382,
         -0.39199257, -1.63328695,  3.68811226,  1.57669377]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.87740707, -33.23645401, -27.24008560, -26.14530754, -28.38466835,
         -25.23544884, -28.44317055, -26.18243027, -33.17858887, -31.07865715]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-30.80190659, -33.01534271, -27.20001411, -26.30122757, -28.33727837,
          -25.72375870, -28.42075348, -25.72308350, -32.92524338, -30.93952370],
         [-30.80190659, -33.01534271, -27.20001411, -26.30122757, -28.33727837,
          -25.72375870, -28.42075348, -25.72308350, -32.92524338, -30.93952370]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.47625542e+00,  5.77468872e-01,  2.69699478e+00, -6.75201416e-04]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0110 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0720 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 49, vnnlib ID: 49 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.12424850, -27.96076202, -35.42752838, -36.19653320, -36.90603638,
         -37.47654343, -35.11457443, -36.30969238, -33.45463181, -32.96637726]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [695]; unstable size 695; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 308, 1, 695] with unstable size 307 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 50, 1, 695] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 695] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [307]; unstable size 307; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 50, 1, 307] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 307] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [49]; unstable size 49; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 49] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.15726995, 2.28338766, 3.42606354, 3.77848625, 4.02848244, 2.41334057,
         2.51163721, 1.07549334, 1.72587633]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0790 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 50, vnnlib ID: 50 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.24371719, -29.45029831, -28.99143410, -30.41832542, -29.54037666,
         -29.86980629, -29.82247925, -33.08366013, -30.54731941, -31.56406021]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1296]; unstable size 1296; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 416, 1, 1296] with unstable size 415 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 38, 1, 1296] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1296] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [415]; unstable size 415; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 38, 1, 415] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 415] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [37]; unstable size 37; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-4.42147350, -5.87202740, -4.20095539, -0.48016870, -3.59140110,
         -3.39713049,  0.12716883, -3.78006506, -2.63723278]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.24371719, -29.45029831, -28.99143410, -30.41832542, -29.54037666,
         -29.86980629, -29.82247925, -33.08366013, -30.54731941, -31.56406021]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.24371910, -29.45029831, -28.99143219, -30.41832924, -29.54037285,
          -29.86980629, -29.82248306, -33.08365631, -30.54732132, -31.56406021],
         [-29.24371910, -29.45029831, -28.99143219, -30.41832924, -29.54037285,
          -29.86980629, -29.82248306, -33.08365631, -30.54732132, -31.56406021]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.62608719, -0.41950798, -0.87837410,  0.54852295, -0.32943344,
          -0.04732323,  0.67751503,  1.69425392]]], device='cuda:0')
number of violation:  5
clean attack image tensor([[[[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         ...,


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0906 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 51, vnnlib ID: 51 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-37.37476730, -45.52244186, -39.72740936, -43.88140106, -39.76896286,
         -45.35416412, -42.54926682, -44.63312531, -40.83864975, -45.82380295]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [909]; unstable size 909; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 264, 1, 909] with unstable size 263 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 909] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 909] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [263]; unstable size 263; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 263] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 263] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.59545135, 0.52461648, 4.45437050, 0.44444358, 5.67492676, 2.94771290,
         5.14503145, 0.89836073, 6.24193287]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0760 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 52, vnnlib ID: 52 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-43.38108444, -47.05834579, -41.27575684, -39.26679611, -39.97689056,
         -37.91814423, -41.73322678, -39.37093735, -46.63989639, -46.95865250]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [818]; unstable size 818; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 342, 1, 818] with unstable size 341 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 42, 1, 818] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 818] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [341]; unstable size 341; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 42, 1, 341] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 341] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [41]; unstable size 41; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.87014520,  4.42285824, -0.27905416, -0.04456186, -1.32408857,
         -0.04621172, -1.14827549,  5.01111984,  4.48432732]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-43.38108444, -47.05834579, -41.27575684, -39.26679611, -39.97689056,
         -37.91814423, -41.73322678, -39.37093735, -46.63989639, -46.95865250]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.74it/s]100%|██████████| 1/1 [00:00<00:00,  7.73it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-44.03830338, -48.00917053, -41.92952728, -40.36009598, -40.42222977,
          -38.99260712, -42.58531189, -39.39513016, -47.48319626, -47.76542282],
         [-44.03830338, -48.00917053, -41.92952728, -40.36009598, -40.42222977,
          -38.99260712, -42.58531189, -39.39513016, -47.48319626, -47.76542282]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.93692017, 1.36748886, 1.42962265, 3.59270477, 0.40252304]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.1325 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.216531753540039
alpha/beta optimization time: 1.4054293632507324
initial alpha-crown bounds: tensor([[ 2.20942402,  4.73513651, -0.05905390,  0.11593938, -1.07056427,
          0.19970036, -0.95866162,  5.29664803,  4.74796295]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 3 ; Worst class: (+ rhs) -1.0705642700195312
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.39571571350098
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.39567017555237
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.39564299583435
Verifying property 2 with 1 instances.
##### Instance 52 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.05905390]], device='cuda:0') need to verify.
Model prediction is: tensor([-43.38108444, -47.05834579, -41.27575684, -39.26679611, -39.97689056,
        -37.91814423, -41.73322678, -39.37093735, -46.63989639, -46.95865250],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.05905390]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 818
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 333
Node /15 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1192
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010848045349121094
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 92] 
split level 1: [/input-12, 66] 
split level 2: [/input-12, 57] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 62] 
split level 5: [/input-12, 38] 
split level 6: [/input-12, 70] 
split level 7: [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 1.1405305862426758

all verified at 0th iter
Time: prepare 0.0018    bound 0.0043    transfer 0.0013    finalize 0.0019    func 0.0110    
Accumulated time: func 0.0110    prepare 0.0022    bound 0.0043    transfer 0.0013    finalize 0.0019    
all_split False
======================Cut inference begins======================
max lb tensor(2.96115303) min lb tensor(1.14053059)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.007194042205810547 
BICCOS Cumulative time: 0.007194042205810547
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0166    solve 0.0111    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0233    set_bounds 0.0166    solve 0.0111    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06354022026062012


Properties batch 3, size 1
Remaining timeout: 198.12334537506104
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.12327551841736
Verifying property 4 with 1 instances.
##### Instance 52 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.07056427]], device='cuda:0') need to verify.
Model prediction is: tensor([-43.38108444, -47.05834579, -41.27575684, -39.26679611, -39.97689056,
        -37.91814423, -41.73322678, -39.37093735, -46.63989639, -46.95865250],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.07056427]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 818
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 333
Node /15 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1192
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010561943054199219
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 88] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 49] 
split level 5: [/input-12, 8] 
split level 6: [/input-12, 38] 
split level 7: [/input-12, 62] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.034595489501953125

all verified at 0th iter
Time: prepare 0.0019    bound 0.0045    transfer 0.0005    finalize 0.0015    func 0.0101    
Accumulated time: func 0.0101    prepare 0.0023    bound 0.0045    transfer 0.0005    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(1.20485258) min lb tensor(0.03459549)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.0068089962005615234 
BICCOS Cumulative time: 0.0068089962005615234
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0244    set_bounds 0.0165    solve 0.0102    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0244    set_bounds 0.0165    solve 0.0102    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06337690353393555


Properties batch 5, size 1
Remaining timeout: 197.8601336479187
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.86005759239197
Verifying property 6 with 1 instances.
##### Instance 52 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.95866162]], device='cuda:0') need to verify.
Model prediction is: tensor([-43.38108444, -47.05834579, -41.27575684, -39.26679611, -39.97689056,
        -37.91814423, -41.73322678, -39.37093735, -46.63989639, -46.95865250],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.95866162]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 818
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 333
Node /15 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1192
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.000102996826171875
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 10] 
split level 1: [/input-12, 54] 
split level 2: [/input-12, 50] 
split level 3: [/input-12, 61] 
split level 4: [/input-12, 38] 
split level 5: [/input-12, 4] 
split level 6: [/input-12, 76] 
split level 7: [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.29408204555511475
10 lb beta sum: 0.0, worst -0.29180967807769775
Time: prepare 0.0019    bound 0.1012    transfer 0.0005    finalize 0.0015    func 0.1070    
Accumulated time: func 0.1070    prepare 0.0023    bound 0.1012    transfer 0.0005    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(0.67991257) min lb tensor(-0.29097116)
Number of Verified Splits: 203 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.95865797996521
10 lb beta sum: 0.0, worst -0.9586697816848755
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 3
#cuts 4-6: 2
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.2010936737060547 
BICCOS Cumulative time: 0.2010936737060547
Preprocessing time: 0.007151603698730469 Inference time: 0.191331148147583 Add cuts time: 0.0016984939575195312 Cut analysis time: 0.0009124279022216797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29097 (8), -0.27999 (8), -0.27946 (8), -0.26582 (8), -0.22738 (8), -0.22185 (8), -0.20871 (8), -0.20011 (8), -0.19356 (8), -0.19343 (8), -0.17051 (8), -0.17016 (8), -0.16176 (8), -0.14784 (8), -0.14759 (8), -0.14255 (8), -0.13883 (8), -0.13100 (8), -0.12869 (8), -0.12105 (8), 
Length of domains: 53
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0162    solve 0.1071    add 0.0216    
Accumulated time: pickout 0.0004    decision 0.0233    set_bounds 0.0162    solve 0.1071    add 0.0216    
Current (lb-rhs): -0.29097115993499756
53 domains visited
Cumulative time: 0.37510180473327637

BaB round 2
batch: 53
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] [/input-12, 92] [/input-12, 92] [/input-12, 88] [/input-12, 92] [/input-12, 88] [/input-12, 88] [/input-12, 92] [/input-12, 92] [/input-12, 88] 
split level 1: [/input-8, 275] [/input-12, 88] [/input-12, 88] [/input-8, 275] [/input-12, 88] [/input-8, 275] [/input-8, 275] [/input-12, 88] [/input-12, 88] [/input-8, 275] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2554652690887451
10 lb beta sum: 0.0, worst -0.2544283866882324
Time: prepare 0.0038    bound 0.1256    transfer 0.0012    finalize 0.0016    func 0.1336    
Accumulated time: func 0.2406    prepare 0.0063    bound 0.2268    transfer 0.0017    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.33478999) min lb tensor(-0.25395191)
Number of Verified Splits: 131 of 212
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7165031433105469
10 lb beta sum: 0.15850649774074554, worst -0.6077768802642822
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 3
#cuts 4-6: 3
#cuts 7-9: 19
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.2060093879699707 
BICCOS Cumulative time: 0.4071030616760254
Preprocessing time: 0.006456851959228516 Inference time: 0.19525694847106934 Add cuts time: 0.0025911331176757812 Cut analysis time: 0.0017044544219970703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25395 (10), -0.24228 (10), -0.24227 (10), -0.22748 (10), -0.20743 (10), -0.20055 (10), -0.19917 (10), -0.19041 (10), -0.18762 (10), -0.18304 (10), -0.16484 (10), -0.15592 (10), -0.15199 (10), -0.14801 (10), -0.14795 (10), -0.14738 (10), -0.13619 (10), -0.13573 (10), -0.12419 (10), -0.12284 (10), 
Length of domains: 81
Time: pickout 0.0011    decision 0.0166    set_bounds 0.0076    solve 0.1337    add 0.0070    
Accumulated time: pickout 0.0015    decision 0.0399    set_bounds 0.0238    solve 0.2408    add 0.0286    
Current (lb-rhs): -0.25395190715789795
134 domains visited
Cumulative time: 0.7499668598175049

BaB round 3
batch: 81
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 36] [/input-12, 92] [/input-12, 92] [/input-12, 36] 
split level 1: [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-8, 275] [/input-12, 36] [/input-12, 36] [/input-12, 25] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22467219829559326
10 lb beta sum: 0.0, worst -0.22403407096862793
Time: prepare 0.0069    bound 0.1456    transfer 0.0008    finalize 0.0025    func 0.1580    
Accumulated time: func 0.3986    prepare 0.0134    bound 0.3725    transfer 0.0025    finalize 0.0056    
all_split False
======================Cut inference begins======================
max lb tensor(0.59650707) min lb tensor(-0.22370470)
Number of Verified Splits: 242 of 324
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.03764629364013672 
BICCOS Cumulative time: 0.4447493553161621
Preprocessing time: 0.010092496871948242 Inference time: 0.02384352684020996 Add cuts time: 0.0033254623413085938 Cut analysis time: 0.0003848075866699219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22370 (12), -0.21276 (12), -0.21087 (12), -0.19782 (12), -0.17718 (12), -0.17031 (12), -0.16978 (12), -0.16093 (12), -0.15699 (12), -0.15345 (12), -0.13771 (12), -0.12145 (12), -0.11799 (12), -0.11735 (12), -0.11124 (12), -0.11026 (12), -0.10963 (12), -0.10713 (12), -0.10322 (12), -0.10181 (12), 
Length of domains: 82
Time: pickout 0.0031    decision 0.0213    set_bounds 0.0137    solve 0.1581    add 0.0175    
Accumulated time: pickout 0.0046    decision 0.0611    set_bounds 0.0375    solve 0.3989    add 0.0461    
Current (lb-rhs): -0.22370469570159912
216 domains visited
Cumulative time: 1.0029618740081787

BaB round 4
batch: 82
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-8, 275] [/input-8, 275] [/input-8, 275] [/input-8, 275] [/input-8, 275] [/input-12, 25] 
split level 1: [/input-8, 203] [/input-8, 203] [/input-8, 203] [/input-8, 986] [/input-8, 986] [/input-8, 886] [/input-8, 986] [/input-8, 886] [/input-8, 986] [/input-8, 886] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18439292907714844
10 lb beta sum: 0.09380187094211578, worst -0.1952221393585205
Time: prepare 0.0065    bound 0.1268    transfer 0.0006    finalize 0.0022    func 0.1384    
Accumulated time: func 0.5371    prepare 0.0201    bound 0.4993    transfer 0.0032    finalize 0.0078    
all_split False
======================Cut inference begins======================
max lb tensor(0.31704602) min lb tensor(-0.18326974)
Number of Verified Splits: 216 of 328
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 12
#cuts >= 20: 0
BICCOS time: 0.03726315498352051 
BICCOS Cumulative time: 0.4820125102996826
Preprocessing time: 0.010380744934082031 Inference time: 0.02457141876220703 Add cuts time: 0.0017261505126953125 Cut analysis time: 0.0005848407745361328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18327 (14), -0.17940 (14), -0.17379 (14), -0.16993 (14), -0.16802 (14), -0.16778 (14), -0.16601 (14), -0.16307 (14), -0.15823 (14), -0.15807 (14), -0.15373 (14), -0.15345 (14), -0.15217 (14), -0.15036 (14), -0.14474 (14), -0.14054 (14), -0.13850 (14), -0.13297 (14), -0.13107 (14), -0.12952 (14), 
Length of domains: 112
Time: pickout 0.0021    decision 0.0195    set_bounds 0.0127    solve 0.1385    add 0.0022    
Accumulated time: pickout 0.0067    decision 0.0806    set_bounds 0.0502    solve 0.5374    add 0.0483    
Current (lb-rhs): -0.18326973915100098
328 domains visited
Cumulative time: 1.2164921760559082

BaB round 5
batch: 112
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 986] [/input-8, 986] [/input-8, 1521] [/input-8, 1521] [/input-8, 986] [/input-8, 203] [/input-8, 1521] [/input-8, 203] [/input-8, 203] [/input-8, 1521] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1734989881515503
10 lb beta sum: 0.4141317903995514, worst -0.1732172966003418
Time: prepare 0.0045    bound 0.1443    transfer 0.0014    finalize 0.0011    func 0.1527    
Accumulated time: func 0.6898    prepare 0.0248    bound 0.6436    transfer 0.0045    finalize 0.0090    
all_split False
======================Cut inference begins======================
max lb tensor(0.32088369) min lb tensor(-0.17307293)
Number of Verified Splits: 161 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.026248693466186523 
BICCOS Cumulative time: 0.5082612037658691
Preprocessing time: 0.006842851638793945 Inference time: 0.017350196838378906 Add cuts time: 0.0016245841979980469 Cut analysis time: 0.000431060791015625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17307 (15), -0.16899 (15), -0.16028 (15), -0.15660 (15), -0.15562 (15), -0.15258 (15), -0.13883 (15), -0.13592 (15), -0.12874 (15), -0.12109 (15), -0.11735 (15), -0.11599 (15), -0.11157 (15), -0.10980 (15), -0.10224 (15), -0.09794 (15), -0.09598 (15), -0.08358 (15), -0.08172 (15), -0.06699 (15), 
Length of domains: 63
Time: pickout 0.0029    decision 0.0185    set_bounds 0.0060    solve 0.1528    add 0.0012    
Accumulated time: pickout 0.0096    decision 0.0991    set_bounds 0.0562    solve 0.6902    add 0.0495    
Current (lb-rhs): -0.1730729341506958
391 domains visited
Cumulative time: 1.424985408782959

BaB round 6
batch: 63
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1010] [/input-8, 203] [/input-8, 1521] [/input-8, 1521] [/input-8, 1521] [/input-8, 203] [/input-8, 1521] [/input-8, 1521] [/input-8, 1010] [/input-8, 203] 
split level 1: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15115797519683838
10 lb beta sum: 0.5746762156486511, worst -0.14591741561889648
Time: prepare 0.0051    bound 0.1424    transfer 0.0005    finalize 0.0014    func 0.1511    
Accumulated time: func 0.8408    prepare 0.0301    bound 0.7860    transfer 0.0051    finalize 0.0104    
all_split False
======================Cut inference begins======================
max lb tensor(0.32906193) min lb tensor(-0.14579773)
Number of Verified Splits: 180 of 252
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 17
#cuts >= 20: 0
BICCOS time: 0.0309903621673584 
BICCOS Cumulative time: 0.5392515659332275
Preprocessing time: 0.007478952407836914 Inference time: 0.021167278289794922 Add cuts time: 0.0019159317016601562 Cut analysis time: 0.00042819976806640625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14580 (17), -0.14164 (17), -0.13620 (17), -0.13307 (17), -0.13198 (17), -0.12933 (17), -0.12347 (17), -0.12225 (17), -0.12074 (17), -0.11962 (17), -0.11446 (17), -0.11296 (17), -0.10807 (17), -0.10692 (17), -0.10141 (17), -0.10012 (17), -0.09914 (17), -0.09361 (17), -0.09176 (17), -0.08879 (17), 
Length of domains: 72
Time: pickout 0.0016    decision 0.0147    set_bounds 0.0110    solve 0.1511    add 0.0011    
Accumulated time: pickout 0.0112    decision 0.1138    set_bounds 0.0672    solve 0.8413    add 0.0506    
Current (lb-rhs): -0.1457977294921875
463 domains visited
Cumulative time: 1.6363937854766846

BaB round 7
batch: 72
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1010] [/input-8, 1010] [/input-8, 1010] [/input-8, 1010] [/input-8, 1521] [/input-8, 1010] [/input-8, 1010] [/input-8, 1010] [/input-8, 1010] [/input-8, 1010] 
split level 1: [/input-8, 886] [/input-8, 1289] [/input-8, 531] [/input-8, 886] [/input-8, 203] [/input-8, 886] [/input-8, 1289] [/input-8, 531] [/input-8, 886] [/input-8, 886] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13268983364105225
10 lb beta sum: 0.5814076662063599, worst -0.1272130012512207
Time: prepare 0.0057    bound 0.1437    transfer 0.0018    finalize 0.0016    func 0.1548    
Accumulated time: func 0.9957    prepare 0.0360    bound 0.9297    transfer 0.0068    finalize 0.0120    
all_split False
======================Cut inference begins======================
max lb tensor(0.58495677) min lb tensor(-0.12708127)
Number of Verified Splits: 212 of 288
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 17
#cuts >= 20: 0
BICCOS time: 0.04181241989135742 
BICCOS Cumulative time: 0.581063985824585
Preprocessing time: 0.009702920913696289 Inference time: 0.0288236141204834 Add cuts time: 0.0027315616607666016 Cut analysis time: 0.0005543231964111328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12708 (19), -0.12318 (19), -0.12286 (19), -0.11864 (19), -0.11522 (19), -0.11384 (19), -0.11283 (19), -0.11214 (19), -0.11169 (19), -0.10826 (19), -0.10789 (19), -0.10630 (19), -0.10371 (19), -0.10192 (19), -0.10025 (19), -0.09953 (19), -0.09900 (19), -0.09849 (19), -0.09849 (19), -0.09673 (19), 
Length of domains: 76
Time: pickout 0.0018    decision 0.0156    set_bounds 0.0089    solve 0.1555    add 0.0011    
Accumulated time: pickout 0.0130    decision 0.1294    set_bounds 0.0761    solve 0.9969    add 0.0517    
Current (lb-rhs): -0.1270812749862671
539 domains visited
Cumulative time: 1.8622369766235352

BaB round 8
batch: 76
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1933] [/input-8, 886] [/input-8, 1933] [/input-8, 1933] [/input-8, 886] [/input-8, 531] [/input-8, 531] [/input-12, 49] [/input-8, 1933] [/input-8, 531] 
split level 1: [/input-8, 1289] [/input-8, 1933] [/input-8, 1289] [/input-8, 1289] [/input-8, 1933] [/input-8, 1289] [/input-8, 1289] [/input-8, 886] [/input-8, 1289] [/input-8, 1289] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4970987141132355, worst -0.11604857444763184
10 lb beta sum: 0.4970987141132355, worst -0.11590278148651123
Time: prepare 0.0155    bound 0.1511    transfer 0.0023    finalize 0.0021    func 0.1730    
Accumulated time: func 1.1687    prepare 0.0517    bound 1.0808    transfer 0.0091    finalize 0.0141    
all_split False
======================Cut inference begins======================
max lb tensor(0.22513059) min lb tensor(-0.11585450)
Number of Verified Splits: 116 of 304
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.02586960792541504 
BICCOS Cumulative time: 0.60693359375
Preprocessing time: 0.009227514266967773 Inference time: 0.015308141708374023 Add cuts time: 0.0008492469787597656 Cut analysis time: 0.00048470497131347656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11585 (21), -0.11549 (21), -0.11205 (21), -0.11170 (21), -0.11169 (21), -0.11132 (21), -0.10755 (21), -0.10717 (21), -0.10416 (21), -0.10375 (21), -0.10276 (21), -0.10030 (21), -0.10003 (21), -0.09993 (21), -0.09650 (21), -0.09614 (21), -0.09609 (21), -0.09571 (21), -0.09481 (21), -0.09453 (21), 
Length of domains: 188
Time: pickout 0.0023    decision 0.0177    set_bounds 0.0122    solve 0.1731    add 0.0024    
Accumulated time: pickout 0.0153    decision 0.1472    set_bounds 0.0882    solve 1.1700    add 0.0541    
Current (lb-rhs): -0.11585450172424316
727 domains visited
Cumulative time: 2.096646308898926

BaB round 9
batch: 188
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11034953594207764
10 lb beta sum: 0.33675363659858704, worst -0.1103065013885498
Time: prepare 0.0075    bound 0.1532    transfer 0.0025    finalize 0.0021    func 0.1678    
Accumulated time: func 1.3365    prepare 0.0594    bound 1.2339    transfer 0.0117    finalize 0.0162    
all_split False
======================Cut inference begins======================
max lb tensor(0.65843821) min lb tensor(-0.11028600)
Number of Verified Splits: 325 of 376
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 22
#cuts >= 20: 0
BICCOS time: 0.06061387062072754 
BICCOS Cumulative time: 0.6675474643707275
Preprocessing time: 0.01123356819152832 Inference time: 0.04638266563415527 Add cuts time: 0.0024695396423339844 Cut analysis time: 0.0005280971527099609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11029 (22), -0.10990 (22), -0.10652 (22), -0.10614 (22), -0.09854 (22), -0.09813 (22), -0.09708 (22), -0.09433 (22), -0.08800 (22), -0.08470 (22), -0.08037 (22), -0.07691 (22), -0.07387 (22), -0.07023 (22), -0.06663 (22), -0.06627 (22), -0.06591 (22), -0.06454 (22), -0.06310 (22), -0.06108 (22), 
Length of domains: 51
Time: pickout 0.0035    decision 0.0223    set_bounds 0.0100    solve 0.1679    add 0.0014    
Accumulated time: pickout 0.0188    decision 0.1695    set_bounds 0.0983    solve 1.3379    add 0.0554    
Current (lb-rhs): -0.11028599739074707
778 domains visited
Cumulative time: 2.3640081882476807

BaB round 10
batch: 51
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1526] [/input-8, 1526] [/input-8, 531] [/input-8, 1933] [/input-8, 1526] [/input-8, 531] [/input-8, 1933] [/input-8, 1526] [/input-8, 267] [/input-8, 267] 
split level 1: [/input-8, 531] [/input-8, 531] [/input-8, 863] [/input-8, 863] [/input-8, 1933] [/input-8, 863] [/input-8, 863] [/input-8, 1933] [/input-8, 1289] [/input-8, 1289] 
split level 2: [/input-8, 863] [/input-8, 863] [/input-8, 439] [/input-8, 439] [/input-8, 863] [/input-8, 439] [/input-8, 439] [/input-8, 863] [/input-8, 439] [/input-8, 439] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08585453033447266
10 lb beta sum: 0.5071566104888916, worst -0.08010141551494598
Time: prepare 0.0088    bound 0.1463    transfer 0.0025    finalize 0.0021    func 0.1624    
Accumulated time: func 1.4988    prepare 0.0684    bound 1.3802    transfer 0.0141    finalize 0.0183    
all_split False
======================Cut inference begins======================
max lb tensor(0.31856656) min lb tensor(-0.07994084)
Number of Verified Splits: 225 of 408
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 22
#cuts >= 20: 0
BICCOS time: 0.05099058151245117 
BICCOS Cumulative time: 0.7185380458831787
Preprocessing time: 0.012337684631347656 Inference time: 0.03629422187805176 Add cuts time: 0.0018277168273925781 Cut analysis time: 0.0005309581756591797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07994 (25), -0.07954 (25), -0.07732 (25), -0.07689 (25), -0.07677 (25), -0.07640 (25), -0.07415 (25), -0.07377 (25), -0.07298 (25), -0.07257 (25), -0.07057 (25), -0.07016 (25), -0.06977 (25), -0.06939 (25), -0.06837 (25), -0.06795 (25), -0.06739 (25), -0.06701 (25), -0.06562 (25), -0.06519 (25), 
Length of domains: 183
Time: pickout 0.0019    decision 0.0180    set_bounds 0.0159    solve 0.1625    add 0.0026    
Accumulated time: pickout 0.0207    decision 0.1876    set_bounds 0.1142    solve 1.5003    add 0.0581    
Current (lb-rhs): -0.07994084060192108
961 domains visited
Cumulative time: 2.617075204849243

BaB round 11
batch: 183
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1526] [/input-8, 1526] [/input-8, 1526] [/input-8, 267] [/input-8, 1526] [/input-8, 1526] [/input-8, 1526] [/input-8, 1526] [/input-8, 1526] [/input-8, 1526] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5774070024490356, worst -0.07677321135997772
10 lb beta sum: 0.5774070024490356, worst -0.07665662467479706
Time: prepare 0.0166    bound 0.1476    transfer 0.0008    finalize 0.0019    func 0.1692    
Accumulated time: func 1.6680    prepare 0.0851    bound 1.5278    transfer 0.0149    finalize 0.0202    
all_split False
======================Cut inference begins======================
max lb tensor(0.01931775) min lb tensor(-0.07661943)
Number of Verified Splits: 58 of 366
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 22
#cuts >= 20: 0
BICCOS time: 0.021366357803344727 
BICCOS Cumulative time: 0.7399044036865234
Preprocessing time: 0.010808229446411133 Inference time: 0.009318351745605469 Add cuts time: 0.000774383544921875 Cut analysis time: 0.00046539306640625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07662 (26), -0.07624 (26), -0.07505 (26), -0.07463 (26), -0.07391 (26), -0.07353 (26), -0.07235 (26), -0.07192 (26), -0.06928 (26), -0.06888 (26), -0.06774 (26), -0.06729 (26), -0.06697 (26), -0.06659 (26), -0.06540 (26), -0.06496 (26), -0.06494 (26), -0.06456 (26), -0.06340 (26), -0.06299 (26), 
Length of domains: 308
Time: pickout 0.0039    decision 0.0214    set_bounds 0.0098    solve 0.1693    add 0.0026    
Accumulated time: pickout 0.0246    decision 0.2090    set_bounds 0.1239    solve 1.6696    add 0.0606    
Current (lb-rhs): -0.07661943137645721
1269 domains visited
Cumulative time: 2.846787929534912

BaB round 12
batch: 308
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 267] [/input-8, 267] [/input, 2887] [/input-8, 1933] [/input-12, 31] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 267] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5501818060874939, worst -0.07504992187023163
10 lb beta sum: 0.5501818060874939, worst -0.07499806582927704
Time: prepare 0.0297    bound 0.1477    transfer 0.0033    finalize 0.0042    func 0.1891    
Accumulated time: func 1.8571    prepare 0.1151    bound 1.6755    transfer 0.0182    finalize 0.0244    
all_split False
======================Cut inference begins======================
max lb tensor(0.04525656) min lb tensor(-0.07495658)
Number of Verified Splits: 87 of 616
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 22
#cuts >= 20: 0
BICCOS time: 0.0363614559173584 
BICCOS Cumulative time: 0.7762658596038818
Preprocessing time: 0.018334150314331055 Inference time: 0.014901876449584961 Add cuts time: 0.0025861263275146484 Cut analysis time: 0.0005393028259277344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07496 (27), -0.07455 (27), -0.07221 (27), -0.07178 (27), -0.07048 (27), -0.07010 (27), -0.06772 (27), -0.06758 (27), -0.06734 (27), -0.06713 (27), -0.06523 (27), -0.06480 (27), -0.06330 (27), -0.06307 (27), -0.06286 (27), -0.06267 (27), -0.06233 (27), -0.06197 (27), -0.06074 (27), -0.06053 (27), 
Length of domains: 529
Time: pickout 0.0068    decision 0.0284    set_bounds 0.0160    solve 0.1893    add 0.0071    
Accumulated time: pickout 0.0314    decision 0.2374    set_bounds 0.1400    solve 1.8589    add 0.0677    
Current (lb-rhs): -0.07495658099651337
1798 domains visited
Cumulative time: 3.1316637992858887

BaB round 13
batch: 529
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1925] [/input-8, 1925] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-8, 1925] [/input-8, 1925] [/input-8, 1925] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5348271131515503, worst -0.07072560489177704
10 lb beta sum: 0.5348271131515503, worst -0.07069902122020721
Time: prepare 0.0496    bound 0.1499    transfer 0.0089    finalize 0.0067    func 0.2220    
Accumulated time: func 2.0791    prepare 0.1650    bound 1.8254    transfer 0.0272    finalize 0.0311    
all_split False
======================Cut inference begins======================
max lb tensor(0.55083656) min lb tensor(-0.07065265)
Number of Verified Splits: 367 of 1058
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 23
#cuts >= 20: 0
BICCOS time: 0.10286355018615723 
BICCOS Cumulative time: 0.8791294097900391
Preprocessing time: 0.0354611873626709 Inference time: 0.06359744071960449 Add cuts time: 0.0031931400299072266 Cut analysis time: 0.0006117820739746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07065 (28), -0.07021 (28), -0.06789 (28), -0.06743 (28), -0.06618 (28), -0.06577 (28), -0.06341 (28), -0.06300 (28), -0.06173 (28), -0.06128 (28), -0.05937 (28), -0.05894 (28), -0.05894 (28), -0.05850 (28), -0.05786 (28), -0.05743 (28), -0.05725 (28), -0.05684 (28), -0.05618 (28), -0.05574 (28), 
Length of domains: 691
Time: pickout 0.0113    decision 0.0413    set_bounds 0.0270    solve 0.3538    add 0.0056    
Accumulated time: pickout 0.0427    decision 0.2787    set_bounds 0.1670    solve 2.2127    add 0.0733    
Current (lb-rhs): -0.07065264880657196
2489 domains visited
Cumulative time: 3.6767778396606445

BaB round 14
batch: 691
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2871] [/input-8, 1932] [/input, 2887] [/input, 2871] [/input-8, 1932] [/input, 2887] [/input, 2887] [/input, 2887] [/input-12, 31] [/input-12, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06619143486022949
10 lb beta sum: 0.2871307134628296, worst -0.0661693811416626
Time: prepare 0.0308    bound 0.1601    transfer 0.0021    finalize 0.0089    func 0.2107    
Accumulated time: func 2.2898    prepare 0.1960    bound 1.9855    transfer 0.0293    finalize 0.0400    
all_split False
======================Cut inference begins======================
max lb tensor(0.78952336) min lb tensor(-0.06614935)
Number of Verified Splits: 897 of 1382
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 0.2084641456604004 
BICCOS Cumulative time: 1.0875935554504395
Preprocessing time: 0.043412208557128906 Inference time: 0.1576540470123291 Add cuts time: 0.006775617599487305 Cut analysis time: 0.0006222724914550781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06615 (29), -0.06571 (29), -0.06339 (29), -0.06295 (29), -0.06163 (29), -0.06122 (29), -0.05886 (29), -0.05846 (29), -0.05742 (29), -0.05696 (29), -0.05509 (29), -0.05463 (29), -0.05438 (29), -0.05394 (29), -0.05314 (29), -0.05293 (29), -0.05273 (29), -0.05251 (29), -0.05164 (29), -0.05120 (29), 
Length of domains: 485
Time: pickout 0.0165    decision 0.0505    set_bounds 0.0326    solve 0.2110    add 0.0056    
Accumulated time: pickout 0.0592    decision 0.3292    set_bounds 0.1995    solve 2.4237    add 0.0789    
Current (lb-rhs): -0.06614935398101807
2974 domains visited
Cumulative time: 4.206619024276733

BaB round 15
batch: 485
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2887] [/input, 2887] [/input-8, 1932] [/input-8, 1925] [/input, 2887] [/input-8, 1925] [/input-8, 1932] [/input-8, 1932] [/input-8, 1932] [/input, 2887] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06159687042236328
10 lb beta sum: 0.3981570303440094, worst -0.061556220054626465
Time: prepare 0.0212    bound 0.1531    transfer 0.0015    finalize 0.0060    func 0.1880    
Accumulated time: func 2.4778    prepare 0.2175    bound 2.1386    transfer 0.0308    finalize 0.0460    
all_split False
======================Cut inference begins======================
max lb tensor(0.27901924) min lb tensor(-0.06152737)
Number of Verified Splits: 683 of 970
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 0.15892243385314941 
BICCOS Cumulative time: 1.2465159893035889
Preprocessing time: 0.02995467185974121 Inference time: 0.12266802787780762 Add cuts time: 0.005644321441650391 Cut analysis time: 0.0006554126739501953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06153 (30), -0.06109 (30), -0.05877 (30), -0.05833 (30), -0.05701 (30), -0.05659 (30), -0.05424 (30), -0.05383 (30), -0.04982 (30), -0.04937 (30), -0.04845 (30), -0.04806 (30), -0.04708 (30), -0.04662 (30), -0.04570 (30), -0.04530 (30), -0.04528 (30), -0.04487 (30), -0.04378 (30), -0.04350 (30), 
Length of domains: 287
Time: pickout 0.0117    decision 0.0379    set_bounds 0.0253    solve 0.1882    add 0.0028    
Accumulated time: pickout 0.0709    decision 0.3671    set_bounds 0.2248    solve 2.6119    add 0.0817    
Current (lb-rhs): -0.061527371406555176
3261 domains visited
Cumulative time: 4.635890007019043

BaB round 16
batch: 287
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1932] [/input-8, 1925] [/input-8, 1925] [/input-8, 1925] [/input-8, 1925] [/input-8, 1925] [/input-8, 1925] [/input-8, 1925] [/input-8, 1925] [/input-8, 1925] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0558319091796875
10 lb beta sum: 0.2948392629623413, worst -0.05575752258300781
Time: prepare 0.0116    bound 0.1490    transfer 0.0012    finalize 0.0030    func 0.1685    
Accumulated time: func 2.6463    prepare 0.2293    bound 2.2876    transfer 0.0320    finalize 0.0490    
all_split False
======================Cut inference begins======================
max lb tensor(0.24165542) min lb tensor(-0.05569208)
Number of Verified Splits: 277 of 574
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 28
#cuts >= 20: 0
BICCOS time: 0.07226014137268066 
BICCOS Cumulative time: 1.3187761306762695
Preprocessing time: 0.01682281494140625 Inference time: 0.05245518684387207 Add cuts time: 0.002332925796508789 Cut analysis time: 0.0006492137908935547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05569 (31), -0.05524 (31), -0.05293 (31), -0.05248 (31), -0.05116 (31), -0.05073 (31), -0.04840 (31), -0.04840 (31), -0.04798 (31), -0.04797 (31), -0.04566 (31), -0.04522 (31), -0.04409 (31), -0.04386 (31), -0.04364 (31), -0.04345 (31), -0.04256 (31), -0.04217 (31), -0.04135 (31), -0.04113 (31), 
Length of domains: 297
Time: pickout 0.0069    decision 0.0273    set_bounds 0.0153    solve 0.1687    add 0.0035    
Accumulated time: pickout 0.0778    decision 0.3944    set_bounds 0.2401    solve 2.7806    add 0.0852    
Current (lb-rhs): -0.055692076683044434
3558 domains visited
Cumulative time: 4.931570291519165

BaB round 17
batch: 297
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1317] [/input-8, 1317] [/input-8, 1317] [/input-8, 1317] [/input, 2919] [/input-8, 1317] [/input-8, 1317] [/input-8, 1317] [/input-8, 1317] [/input-8, 1317] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04838597774505615
10 lb beta sum: 0.2853321433067322, worst -0.04833686351776123
Time: prepare 0.0144    bound 0.1481    transfer 0.0029    finalize 0.0035    func 0.1734    
Accumulated time: func 2.8198    prepare 0.2439    bound 2.4357    transfer 0.0349    finalize 0.0525    
all_split False
======================Cut inference begins======================
max lb tensor(0.03646135) min lb tensor(-0.04830384)
Number of Verified Splits: 194 of 594
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 29
#cuts >= 20: 0
BICCOS time: 0.05833148956298828 
BICCOS Cumulative time: 1.3771076202392578
Preprocessing time: 0.017533540725708008 Inference time: 0.038279056549072266 Add cuts time: 0.0019431114196777344 Cut analysis time: 0.0005757808685302734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04830 (32), -0.04785 (32), -0.04556 (32), -0.04546 (32), -0.04510 (32), -0.04500 (32), -0.04378 (32), -0.04335 (32), -0.04271 (32), -0.04225 (32), -0.04101 (32), -0.04091 (32), -0.04077 (32), -0.04059 (32), -0.04048 (32), -0.04034 (32), -0.03816 (32), -0.03803 (32), -0.03793 (32), -0.03773 (32), 
Length of domains: 400
Time: pickout 0.0063    decision 0.0285    set_bounds 0.0143    solve 0.1736    add 0.0047    
Accumulated time: pickout 0.0841    decision 0.4229    set_bounds 0.2544    solve 2.9542    add 0.0899    
Current (lb-rhs): -0.048303842544555664
3958 domains visited
Cumulative time: 5.218579530715942

BaB round 18
batch: 400
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2183] [/input, 2183] [/input, 2183] [/input, 2919] [/input, 2919] [/input, 2919] [/input, 2919] [/input, 2183] [/input, 2919] [/input, 2919] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.043110013008117676
10 lb beta sum: 0.2981812059879303, worst -0.043129920959472656
Time: prepare 0.0198    bound 0.1453    transfer 0.0027    finalize 0.0044    func 0.1774    
Accumulated time: func 2.9972    prepare 0.2639    bound 2.5810    transfer 0.0376    finalize 0.0569    
all_split False
======================Cut inference begins======================
max lb tensor(0.03791802) min lb tensor(-0.04311001)
Number of Verified Splits: 264 of 800
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 29
#cuts >= 20: 0
BICCOS time: 0.22358226776123047 
BICCOS Cumulative time: 1.6006898880004883
Preprocessing time: 0.025022268295288086 Inference time: 0.19512581825256348 Add cuts time: 0.002656698226928711 Cut analysis time: 0.0007774829864501953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04311 (33), -0.04266 (33), -0.04213 (33), -0.04167 (33), -0.04034 (33), -0.03989 (33), -0.03938 (33), -0.03894 (33), -0.03893 (33), -0.03857 (33), -0.03848 (33), -0.03816 (33), -0.03758 (33), -0.03715 (33), -0.03617 (33), -0.03580 (33), -0.03572 (33), -0.03547 (33), -0.03538 (33), -0.03502 (33), 
Length of domains: 536
Time: pickout 0.0077    decision 0.0330    set_bounds 0.0109    solve 0.1776    add 0.0044    
Accumulated time: pickout 0.0918    decision 0.4558    set_bounds 0.2653    solve 3.1317    add 0.0944    
Current (lb-rhs): -0.043110013008117676
4494 domains visited
Cumulative time: 5.679046154022217

BaB round 19
batch: 536
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2919] [/input, 2919] [/input, 2183] [/input, 2887] [/input, 2183] [/input, 2183] [/input-8, 2034] [/input, 2183] [/input, 2183] [/input-8, 2034] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4484015703201294, worst -0.040274858474731445
10 lb beta sum: 0.4634941518306732, worst -0.040265440940856934
Time: prepare 0.0548    bound 0.1499    transfer 0.0017    finalize 0.0061    func 0.2200    
Accumulated time: func 3.2172    prepare 0.3189    bound 2.7308    transfer 0.0393    finalize 0.0630    
all_split False
======================Cut inference begins======================
max lb tensor(0.01335391) min lb tensor(-0.04025698)
Number of Verified Splits: 368 of 1072
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 29
#cuts >= 20: 0
BICCOS time: 0.10679960250854492 
BICCOS Cumulative time: 1.7074894905090332
Preprocessing time: 0.03383517265319824 Inference time: 0.0689234733581543 Add cuts time: 0.0034432411193847656 Cut analysis time: 0.0005977153778076172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04026 (34), -0.03980 (34), -0.03750 (34), -0.03704 (34), -0.03693 (34), -0.03648 (34), -0.03603 (34), -0.03572 (34), -0.03558 (34), -0.03530 (34), -0.03416 (34), -0.03372 (34), -0.03328 (34), -0.03328 (34), -0.03295 (34), -0.03282 (34), -0.03282 (34), -0.03253 (34), -0.03253 (34), -0.03238 (34), 
Length of domains: 704
Time: pickout 0.0130    decision 0.0422    set_bounds 0.0266    solve 0.2203    add 0.0036    
Accumulated time: pickout 0.1048    decision 0.4980    set_bounds 0.2919    solve 3.3520    add 0.0979    
Current (lb-rhs): -0.04025697708129883
5198 domains visited
Cumulative time: 6.09414267539978

BaB round 20
batch: 704
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2887] [/input, 2183] [/input-8, 2034] [/input-8, 2034] [/input-8, 2034] [/input-8, 2034] [/input-8, 2034] [/input-8, 2034] [/input-8, 2034] [/input-8, 2034] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4153117835521698, worst -0.03377425670623779
10 lb beta sum: 0.42007631063461304, worst -0.03374624252319336
Time: prepare 0.0708    bound 0.1602    transfer 0.0021    finalize 0.0083    func 0.2506    
Accumulated time: func 3.4678    prepare 0.3900    bound 2.8910    transfer 0.0415    finalize 0.0713    
all_split False
======================Cut inference begins======================
max lb tensor(0.00980675) min lb tensor(-0.03370929)
Number of Verified Splits: 568 of 1408
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 29
#cuts >= 20: 0
BICCOS time: 0.16089558601379395 
BICCOS Cumulative time: 1.8683850765228271
Preprocessing time: 0.04534029960632324 Inference time: 0.10973715782165527 Add cuts time: 0.005118131637573242 Cut analysis time: 0.0006999969482421875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03371 (35), -0.03326 (35), -0.03095 (35), -0.03084 (35), -0.03050 (35), -0.03040 (35), -0.03039 (35), -0.02994 (35), -0.02949 (35), -0.02917 (35), -0.02905 (35), -0.02875 (35), -0.02808 (35), -0.02763 (35), -0.02763 (35), -0.02748 (35), -0.02718 (35), -0.02703 (35), -0.02674 (35), -0.02673 (35), 
Length of domains: 840
Time: pickout 0.0187    decision 0.0517    set_bounds 0.0333    solve 0.2510    add 0.0072    
Accumulated time: pickout 0.1236    decision 0.5497    set_bounds 0.3253    solve 3.6030    add 0.1052    
Current (lb-rhs): -0.03370928764343262
6038 domains visited
Cumulative time: 6.620702028274536

BaB round 21
batch: 840
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3238] [/input, 2887] [/input, 2887] [/input, 2887] [/input, 2887] [/input, 2887] [/input, 2887] [/input, 2887] [/input, 2887] [/input, 2887] 
cut re-enabled after branching node selection
0 lb beta sum: 0.3564717769622803, worst -0.028702497482299805
10 lb beta sum: 0.3578811287879944, worst -0.02869415283203125
Time: prepare 0.0839    bound 0.1648    transfer 0.0090    finalize 0.0095    func 0.2778    
Accumulated time: func 3.7456    prepare 0.4741    bound 3.0558    transfer 0.0505    finalize 0.0808    
all_split False
======================Cut inference begins======================
max lb tensor(0.00818503) min lb tensor(-0.02866066)
Number of Verified Splits: 755 of 1680
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 29
#cuts >= 20: 0
BICCOS time: 0.21293091773986816 
BICCOS Cumulative time: 2.0813159942626953
Preprocessing time: 0.05286288261413574 Inference time: 0.1523439884185791 Add cuts time: 0.007025003433227539 Cut analysis time: 0.0006990432739257812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02866 (36), -0.02820 (36), -0.02589 (36), -0.02575 (36), -0.02542 (36), -0.02534 (36), -0.02530 (36), -0.02509 (36), -0.02488 (36), -0.02463 (36), -0.02444 (36), -0.02411 (36), -0.02397 (36), -0.02370 (36), -0.02299 (36), -0.02256 (36), -0.02253 (36), -0.02238 (36), -0.02230 (36), -0.02218 (36), 
Length of domains: 925
Time: pickout 0.0178    decision 0.0582    set_bounds 0.0399    solve 0.2788    add 0.0047    
Accumulated time: pickout 0.1414    decision 0.6079    set_bounds 0.3652    solve 3.8817    add 0.1099    
Current (lb-rhs): -0.02866065502166748
6963 domains visited
Cumulative time: 7.242514371871948

BaB round 22
batch: 925
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3238] [/input, 3238] [/input, 3238] [/input, 3238] [/input, 3238] [/input, 3238] [/input, 3238] [/input, 3238] [/input, 3238] [/input, 3238] 
cut re-enabled after branching node selection
0 lb beta sum: 0.29151907563209534, worst -0.024639487266540527
10 lb beta sum: 0.29151907563209534, worst -0.024404406547546387
Time: prepare 0.0935    bound 0.1715    transfer 0.0033    finalize 0.0109    func 0.2910    
Accumulated time: func 4.0365    prepare 0.5678    bound 3.2273    transfer 0.0538    finalize 0.0916    
all_split False
======================Cut inference begins======================
max lb tensor(0.00767648) min lb tensor(-0.02432609)
Number of Verified Splits: 859 of 1850
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 29
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.39105701446533203 
BICCOS Cumulative time: 2.4723730087280273
Preprocessing time: 0.05945467948913574 Inference time: 0.32240796089172363 Add cuts time: 0.008314847946166992 Cut analysis time: 0.0008795261383056641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02433 (37), -0.02389 (37), -0.02155 (37), -0.02154 (37), -0.02110 (37), -0.02109 (37), -0.02102 (37), -0.02075 (37), -0.02057 (37), -0.02030 (37), -0.01999 (37), -0.01980 (37), -0.01957 (37), -0.01953 (37), -0.01938 (37), -0.01913 (37), -0.01877 (37), -0.01832 (37), -0.01825 (37), -0.01824 (37), 
Length of domains: 991
Time: pickout 0.0246    decision 0.0639    set_bounds 0.0449    solve 0.2914    add 0.0039    
Accumulated time: pickout 0.1660    decision 0.6718    set_bounds 0.4101    solve 4.1732    add 0.1138    
Current (lb-rhs): -0.024326086044311523
7954 domains visited
Cumulative time: 8.069283962249756

BaB round 23
batch: 991
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 934] [/input-8, 934] [/input-8, 934] [/input-8, 934] [/input-8, 934] [/input-8, 934] [/input-8, 934] [/input-8, 934] [/input-8, 934] [/input-8, 934] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.020012259483337402
10 lb beta sum: 0.0650690495967865, worst -0.02249729633331299
Time: prepare 0.0501    bound 0.2252    transfer 0.0101    finalize 0.0109    func 0.3092    
Accumulated time: func 4.3457    prepare 0.6182    bound 3.4525    transfer 0.0639    finalize 0.1025    
all_split False
======================Cut inference begins======================
max lb tensor(0.01103635) min lb tensor(-0.01982248)
Number of Verified Splits: 1125 of 1982
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 34
#cuts >= 20: 0
BICCOS time: 0.30936312675476074 
BICCOS Cumulative time: 2.781736135482788
Preprocessing time: 0.06338834762573242 Inference time: 0.2348940372467041 Add cuts time: 0.010263204574584961 Cut analysis time: 0.0008175373077392578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01982 (38), -0.01965 (38), -0.01715 (38), -0.01705 (38), -0.01703 (38), -0.01687 (38), -0.01685 (38), -0.01659 (38), -0.01641 (38), -0.01625 (38), -0.01609 (38), -0.01547 (38), -0.01541 (38), -0.01535 (38), -0.01532 (38), -0.01517 (38), -0.01516 (38), -0.01500 (38), -0.01436 (38), -0.01434 (38), 
Length of domains: 857
Time: pickout 0.0262    decision 0.0666    set_bounds 0.0479    solve 0.3096    add 0.0045    
Accumulated time: pickout 0.1922    decision 0.7384    set_bounds 0.4580    solve 4.4828    add 0.1183    
Current (lb-rhs): -0.01982247829437256
8811 domains visited
Cumulative time: 8.840862035751343

BaB round 24
batch: 857
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2011] [/input-8, 2011] [/input-8, 2011] [/input-8, 2011] [/input-8, 2011] [/input, 3238] [/input, 3238] [/input-8, 414] [/input-8, 934] [/input-8, 2011] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.01565706729888916
10 lb beta sum: 0.06395506858825684, worst -0.015624165534973145
Time: prepare 0.0429    bound 0.2062    transfer 0.0065    finalize 0.0085    func 0.2759    
Accumulated time: func 4.6217    prepare 0.6613    bound 3.6587    transfer 0.0704    finalize 0.1110    
all_split False
======================Cut inference begins======================
max lb tensor(0.47166988) min lb tensor(-0.01559019)
Number of Verified Splits: 1213 of 1714
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 34
#cuts >= 20: 0
BICCOS time: 0.3228025436401367 
BICCOS Cumulative time: 3.104538679122925
Preprocessing time: 0.05484628677368164 Inference time: 0.256195068359375 Add cuts time: 0.010984659194946289 Cut analysis time: 0.0007765293121337891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01559 (39), -0.01355 (39), -0.01305 (39), -0.01282 (39), -0.01276 (39), -0.01239 (39), -0.01202 (39), -0.01173 (39), -0.01124 (39), -0.01111 (39), -0.01104 (39), -0.01098 (39), -0.01077 (39), -0.01072 (39), -0.01054 (39), -0.01037 (39), -0.01026 (39), -0.01022 (39), -0.01019 (39), -0.01005 (39), 
Length of domains: 501
Time: pickout 0.0252    decision 0.0594    set_bounds 0.0417    solve 0.2763    add 0.0064    
Accumulated time: pickout 0.2174    decision 0.7978    set_bounds 0.4997    solve 4.7591    add 0.1247    
Current (lb-rhs): -0.015590190887451172
9312 domains visited
Cumulative time: 9.579716444015503

BaB round 25
batch: 501
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] 
cut re-enabled after branching node selection
0 lb beta sum: 0.16761986911296844, worst -0.012095928192138672
10 lb beta sum: 0.2253156155347824, worst -0.012063145637512207
Time: prepare 0.0506    bound 0.1678    transfer 0.0054    finalize 0.0065    func 0.2367    
Accumulated time: func 4.8584    prepare 0.7121    bound 3.8265    transfer 0.0759    finalize 0.1176    
all_split False
======================Cut inference begins======================
max lb tensor(0.47117233) min lb tensor(-0.01204443)
Number of Verified Splits: 907 of 1002
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.22938799858093262 
BICCOS Cumulative time: 3.3339266777038574
Preprocessing time: 0.0313725471496582 Inference time: 0.19196510314941406 Add cuts time: 0.005301237106323242 Cut analysis time: 0.0007491111755371094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01204 (40), -0.00999 (40), -0.00950 (40), -0.00927 (40), -0.00912 (40), -0.00886 (40), -0.00800 (40), -0.00756 (40), -0.00745 (40), -0.00722 (40), -0.00707 (40), -0.00684 (40), -0.00671 (40), -0.00666 (40), -0.00657 (40), -0.00636 (40), -0.00617 (40), -0.00611 (40), -0.00609 (40), -0.00575 (40), 
Length of domains: 95
Time: pickout 0.0154    decision 0.0392    set_bounds 0.0243    solve 0.2370    add 0.0032    
Accumulated time: pickout 0.2328    decision 0.8370    set_bounds 0.5239    solve 4.9961    add 0.1279    
Current (lb-rhs): -0.012044429779052734
9407 domains visited
Cumulative time: 10.132192611694336

BaB round 26
batch: 95
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2904] [/input-8, 1530] [/input-8, 1530] [/input-8, 1530] [/input-8, 1530] [/input-8, 1530] [/input-8, 1530] [/input-8, 1530] [/input-8, 1530] [/input-8, 1530] 
split level 1: [/input, 3238] [/input-8, 414] [/input-8, 2011] [/input-8, 414] [/input-8, 2011] [/input-8, 2011] [/input-8, 414] [/input-8, 2011] [/input-8, 2011] [/input-8, 414] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0045746564865112305
10 lb beta sum: 0.006230768747627735, worst -0.004522085189819336
Time: prepare 0.0096    bound 0.1609    transfer 0.0021    finalize 0.0022    func 0.1772    
Accumulated time: func 5.0355    prepare 0.7219    bound 3.9873    transfer 0.0780    finalize 0.1198    
all_split False
======================Cut inference begins======================
max lb tensor(0.02354181) min lb tensor(-0.00450110)
Number of Verified Splits: 359 of 380
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.09359931945800781 
BICCOS Cumulative time: 3.4275259971618652
Preprocessing time: 0.011429071426391602 Inference time: 0.07970929145812988 Add cuts time: 0.0017554759979248047 Cut analysis time: 0.0007054805755615234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00450 (42), -0.00401 (42), -0.00357 (42), -0.00308 (42), -0.00243 (42), -0.00194 (42), -0.00173 (42), -0.00142 (42), -0.00133 (42), -0.00123 (42), -0.00116 (42), -0.00091 (42), -0.00080 (42), -0.00068 (42), -0.00047 (42), -0.00042 (42), -0.00041 (42), -0.00029 (42), -0.00023 (42), -0.00009 (42), 
Length of domains: 21
Time: pickout 0.0035    decision 0.0205    set_bounds 0.0119    solve 0.1773    add 0.0010    
Accumulated time: pickout 0.2363    decision 0.8575    set_bounds 0.5358    solve 5.1734    add 0.1289    
Current (lb-rhs): -0.0045011043548583984
9428 domains visited
Cumulative time: 10.441449642181396

BaB round 27
batch: 21
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] 
split level 1: [/input, 2904] [/input, 2904] [/input, 2904] [/input, 2904] [/input, 2904] [/input, 2904] [/input, 2904] [/input, 2904] [/input, 2904] [/input, 2904] 
split level 2: [/input-8, 1297] [/input-8, 1297] [/input-8, 1297] [/input-8, 1297] [/input-8, 1297] [/input-8, 1297] [/input-8, 1297] [/input-8, 1297] [/input-8, 1297] [/input-8, 1297] 
split level 3: [/input, 1155] [/input, 1155] [/input, 1155] [/input, 1155] [/input, 1155] [/input, 1155] [/input, 1155] [/input, 1155] [/input, 1155] [/input, 1155] 
cut re-enabled after branching node selection
0 lb beta sum: 0.10051371157169342, worst 0.009050607681274414

all verified at 0th iter
Time: prepare 0.0174    bound 0.0067    transfer 0.0015    finalize 0.0021    func 0.0298    
Accumulated time: func 5.0653    prepare 0.7394    bound 3.9940    transfer 0.0795    finalize 0.1219    
all_split False
======================Cut inference begins======================
max lb tensor(0.03494513) min lb tensor(0.00905061)
Number of Verified Splits: 336 of 336
No cut inferred: All or none verified.
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.010736942291259766 
BICCOS Cumulative time: 3.438262939453125
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0016    decision 0.0157    set_bounds 0.1327    solve 0.0299    add 0.0001    
Accumulated time: pickout 0.2380    decision 0.8732    set_bounds 0.6685    solve 5.2032    add 0.1290    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
9428 domains visited
Cumulative time: 10.634125709533691


Properties batch 7, size 1
Remaining timeout: 187.06984329223633
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 187.06976628303528
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 12.9303 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 53, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-37.31383514, -40.72904205, -35.75227356, -36.47557068, -35.78518677,
         -36.95241928, -35.85292435, -37.71683884, -41.93178177, -39.08169937]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [726]; unstable size 726; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 230, 1, 726] with unstable size 229 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 31, 1, 726] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 726] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [229]; unstable size 229; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 31, 1, 229] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 229] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.76407182,  2.36186504, -2.52291250, -1.24650288, -2.13389301,
         -0.80049741, -0.65695727,  3.10517955,  0.23416173]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-37.31383514, -40.72904205, -35.75227356, -36.47557068, -35.78518677,
         -36.95241928, -35.85292435, -37.71683884, -41.93178177, -39.08169937]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.31383133, -40.72904205, -35.75226593, -36.47556305, -35.78518677,
          -36.95241547, -35.85292053, -37.71683884, -41.93177795, -39.08169556],
         [-37.31383133, -40.72904205, -35.75226593, -36.47556305, -35.78518677,
          -36.95241547, -35.85292053, -37.71683884, -41.93177795, -39.08169556]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.46091080, -0.10065460,  0.62264252, -0.06773376,  1.09949493,
           1.86391830]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0827 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 54, vnnlib ID: 54 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-38.81443405, -41.24586105, -39.08216858, -38.71930695, -39.79739380,
         -39.57961273, -38.24942780, -37.44314957, -34.77187729, -39.99777222]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [948]; unstable size 948; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 309, 1, 948] with unstable size 308 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 33, 1, 948] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 948] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [308]; unstable size 308; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 33, 1, 308] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 308] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [32]; unstable size 32; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.86750507,  2.99483967, -0.24792290, -0.08771181,  0.17314148,
          0.15137720, -0.20702696, -1.99932456,  2.17658544]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-38.81443405, -41.24586105, -39.08216858, -38.71930695, -39.79739380,
         -39.57961273, -38.24942780, -37.44314957, -34.77187729, -39.99777222]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.27it/s]100%|██████████| 1/1 [00:00<00:00,  8.26it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.12866592, -40.20692062, -37.09508133, -36.62865448, -37.67253876,
          -37.35092163, -36.29777145, -34.81556320, -34.01676559, -38.68932343],
         [-37.12866592, -40.20692062, -37.09508133, -36.62865448, -37.67253876,
          -37.35092163, -36.29777145, -34.81556320, -34.01676559, -38.68932343]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[3.07831573, 2.61188889, 2.28100586, 0.79879761]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1242 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 5.3413777351379395
alpha/beta optimization time: 1.3006207942962646
initial alpha-crown bounds: tensor([[ 1.00058460,  3.16131210, -0.03818417,  0.07088327,  0.35041761,
          0.33616400, -0.04980612, -1.81376553,  2.32377195]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 3 ; Worst class: (+ rhs) -1.813765525817871
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50819993019104
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.5081558227539
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.50812530517578
Verifying property 2 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03818417]], device='cuda:0') need to verify.
Model prediction is: tensor([-38.81443405, -41.24586105, -39.08216858, -38.71930695, -39.79739380,
        -39.57961273, -38.24942780, -37.44314957, -34.77187729, -39.99777222],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03818417]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 948
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 302
Node /15 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 1280
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011467933654785156
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 83] 
split level 1: [/input-12, 62] 
split level 2: [/input-12, 66] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 77] 
split level 5: [/input-12, 7] 
split level 6: [/input-12, 89] 
split level 7: [/input-12, 71] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 1.345447063446045

all verified at 0th iter
Time: prepare 0.0020    bound 0.0045    transfer 0.0022    finalize 0.0018    func 0.0122    
Accumulated time: func 0.0122    prepare 0.0024    bound 0.0045    transfer 0.0022    finalize 0.0018    
all_split False
======================Cut inference begins======================
max lb tensor(2.48996449) min lb tensor(1.34544706)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.007496356964111328 
BICCOS Cumulative time: 0.007496356964111328
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0239    set_bounds 0.0172    solve 0.0123    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0239    set_bounds 0.0172    solve 0.0123    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06639647483825684


Properties batch 3, size 1
Remaining timeout: 198.1992471218109
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.1991732120514
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.19914937019348
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.1991274356842
Verifying property 6 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04980612]], device='cuda:0') need to verify.
Model prediction is: tensor([-38.81443405, -41.24586105, -39.08216858, -38.71930695, -39.79739380,
        -39.57961273, -38.24942780, -37.44314957, -34.77187729, -39.99777222],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04980612]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 948
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 302
Node /15 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 1280
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010919570922851562
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 83] 
split level 1: [/input-12, 77] 
split level 2: [/input-12, 15] 
split level 3: [/input-12, 62] 
split level 4: [/input-12, 89] 
split level 5: [/input-12, 54] 
split level 6: [/input-12, 42] 
split level 7: [/input-8, 1572] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.7156767845153809

all verified at 0th iter
Time: prepare 0.0032    bound 0.0044    transfer 0.0010    finalize 0.0022    func 0.0125    
Accumulated time: func 0.0125    prepare 0.0037    bound 0.0044    transfer 0.0010    finalize 0.0022    
all_split False
======================Cut inference begins======================
max lb tensor(1.23970771) min lb tensor(0.71567678)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.008040428161621094 
BICCOS Cumulative time: 0.008040428161621094
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0184    solve 0.0126    add 0.0004    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0184    solve 0.0126    add 0.0004    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0693056583404541


Properties batch 7, size 1
Remaining timeout: 197.93863940238953
Verifying property 7 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.81376553]], device='cuda:0') need to verify.
Model prediction is: tensor([-38.81443405, -41.24586105, -39.08216858, -38.71930695, -39.79739380,
        -39.57961273, -38.24942780, -37.44314957, -34.77187729, -39.99777222],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.81376553]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 948
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 302
Node /15 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 1280
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010561943054199219
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 73] 
split level 1: [/input-12, 54] 
split level 2: [/input-12, 83] 
split level 3: [/input-12, 42] 
split level 4: [/input-12, 77] 
split level 5: [/input-12, 89] 
split level 6: [/input-12, 62] 
split level 7: [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5187721252441406
10 lb beta sum: 0.0, worst -0.5158743858337402
Time: prepare 0.0018    bound 0.1017    transfer 0.0005    finalize 0.0017    func 0.1075    
Accumulated time: func 0.1075    prepare 0.0022    bound 0.1017    transfer 0.0005    finalize 0.0017    
all_split False
======================Cut inference begins======================
max lb tensor(1.01739264) min lb tensor(-0.51479864)
Number of Verified Splits: 224 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.8137590885162354
10 lb beta sum: 0.0, worst -1.8137855529785156
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 3
#cuts 4-6: 3
#cuts 7-9: 14
#cuts >= 20: 0
BICCOS time: 0.20299124717712402 
BICCOS Cumulative time: 0.20299124717712402
Preprocessing time: 0.0071222782135009766 Inference time: 0.19142413139343262 Add cuts time: 0.0028951168060302734 Cut analysis time: 0.0015497207641601562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.51480 (8), -0.50819 (8), -0.50128 (8), -0.50042 (8), -0.49659 (8), -0.48803 (8), -0.47303 (8), -0.46534 (8), -0.25815 (8), -0.25099 (8), -0.25026 (8), -0.24800 (8), -0.24698 (8), -0.24144 (8), -0.23387 (8), -0.23069 (8), -0.21693 (8), -0.21582 (8), -0.21326 (8), -0.21241 (8), 
Length of domains: 32
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0167    solve 0.1076    add 0.0619    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0167    solve 0.1076    add 0.0619    
Current (lb-rhs): -0.514798641204834
32 domains visited
Cumulative time: 0.4188680648803711

BaB round 2
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 1: [/input-12, 35] [/input-8, 1572] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
split level 2: [/input-8, 1572] [/input-8, 1291] [/input-8, 1572] [/input-8, 1572] [/input-12, 85] [/input-8, 1572] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-8, 1962] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.43167591094970703
10 lb beta sum: 0.0, worst -0.4308309555053711
Time: prepare 0.0047    bound 0.1211    transfer 0.0012    finalize 0.0016    func 0.1304    
Accumulated time: func 0.2379    prepare 0.0071    bound 0.2228    transfer 0.0018    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(0.79115868) min lb tensor(-0.43049765)
Number of Verified Splits: 188 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.6640799045562744
10 lb beta sum: 0.2840414345264435, worst -1.529289960861206
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 59.
#cuts 1-3: 3
#cuts 4-6: 8
#cuts 7-9: 47
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.25094008445739746 
BICCOS Cumulative time: 0.4539313316345215
Preprocessing time: 0.007979393005371094 Inference time: 0.23062610626220703 Add cuts time: 0.008929729461669922 Cut analysis time: 0.003404855728149414
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.43050 (11), -0.41666 (11), -0.41613 (11), -0.41585 (11), -0.41539 (11), -0.41260 (11), -0.41236 (11), -0.40032 (11), -0.39254 (11), -0.36247 (11), -0.34210 (11), -0.33741 (11), -0.17474 (11), -0.16670 (11), -0.16160 (11), -0.16151 (11), -0.15639 (11), -0.15529 (11), -0.15262 (11), -0.14965 (11), 
Length of domains: 68
Time: pickout 0.0016    decision 0.0180    set_bounds 0.0110    solve 0.1305    add 0.0438    
Accumulated time: pickout 0.0020    decision 0.0418    set_bounds 0.0277    solve 0.2380    add 0.1057    
Current (lb-rhs): -0.4304976463317871
100 domains visited
Cumulative time: 0.8763959407806396

BaB round 3
batch: 68
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 85] [/input-12, 35] [/input-12, 85] [/input-12, 85] 
split level 1: [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-8, 1931] [/input-12, 85] [/input-8, 1931] [/input-8, 1962] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3925633430480957
10 lb beta sum: 0.0, worst -0.39200925827026367
Time: prepare 0.0054    bound 0.1440    transfer 0.0024    finalize 0.0014    func 0.1549    
Accumulated time: func 0.3928    prepare 0.0128    bound 0.3668    transfer 0.0041    finalize 0.0047    
all_split False
======================Cut inference begins======================
max lb tensor(0.29703879) min lb tensor(-0.39173007)
Number of Verified Splits: 151 of 272
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 6
#cuts 4-6: 2
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.02895665168762207 
BICCOS Cumulative time: 0.48288798332214355
Preprocessing time: 0.01015329360961914 Inference time: 0.014611005783081055 Add cuts time: 0.0031604766845703125 Cut analysis time: 0.0010318756103515625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39173 (13), -0.37759 (13), -0.37691 (13), -0.37378 (13), -0.37067 (13), -0.36537 (13), -0.36434 (13), -0.36383 (13), -0.36257 (13), -0.36195 (13), -0.35832 (13), -0.34610 (13), -0.34280 (13), -0.33551 (13), -0.32930 (13), -0.32619 (13), -0.32388 (13), -0.31525 (13), -0.31506 (13), -0.31202 (13), 
Length of domains: 121
Time: pickout 0.0021    decision 0.0194    set_bounds 0.0100    solve 0.1550    add 0.0014    
Accumulated time: pickout 0.0041    decision 0.0612    set_bounds 0.0377    solve 0.3931    add 0.1071    
Current (lb-rhs): -0.39173007011413574
221 domains visited
Cumulative time: 1.0942678451538086

BaB round 4
batch: 121
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1962] [/input-8, 1962] [/input-8, 1931] [/input-8, 1571] [/input-8, 1571] [/input-8, 1931] [/input-8, 1571] [/input-8, 1931] [/input-8, 1962] [/input-8, 995] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3770589828491211
10 lb beta sum: 0.07679560780525208, worst -0.3765075206756592
Time: prepare 0.0050    bound 0.1447    transfer 0.0014    finalize 0.0014    func 0.1540    
Accumulated time: func 0.5469    prepare 0.0180    bound 0.5115    transfer 0.0055    finalize 0.0061    
all_split False
======================Cut inference begins======================
max lb tensor(0.25344944) min lb tensor(-0.37631226)
Number of Verified Splits: 169 of 242
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 6
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.027085065841674805 
BICCOS Cumulative time: 0.5099730491638184
Preprocessing time: 0.0073146820068359375 Inference time: 0.017642498016357422 Add cuts time: 0.0014023780822753906 Cut analysis time: 0.0007255077362060547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.37631 (14), -0.36159 (14), -0.35883 (14), -0.35538 (14), -0.35025 (14), -0.34856 (14), -0.34854 (14), -0.34803 (14), -0.34590 (14), -0.34499 (14), -0.34466 (14), -0.33978 (14), -0.33269 (14), -0.33255 (14), -0.33143 (14), -0.32752 (14), -0.32482 (14), -0.32144 (14), -0.31877 (14), -0.31401 (14), 
Length of domains: 73
Time: pickout 0.0022    decision 0.0185    set_bounds 0.0068    solve 0.1541    add 0.0015    
Accumulated time: pickout 0.0063    decision 0.0797    set_bounds 0.0446    solve 0.5471    add 0.1086    
Current (lb-rhs): -0.376312255859375
294 domains visited
Cumulative time: 1.3056061267852783

BaB round 5
batch: 73
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1140] [/input-12, 81] [/input-8, 1571] [/input-12, 81] [/input-8, 1962] [/input-12, 81] [/input-12, 81] [/input-8, 1571] [/input-8, 1140] [/input-8, 1571] 
split level 1: [/input-8, 1962] [/input-8, 1931] [/input-8, 1140] [/input-8, 1962] [/input-8, 995] [/input-8, 1931] [/input-8, 1962] [/input-8, 995] [/input-8, 1962] [/input-8, 1140] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32758522033691406
10 lb beta sum: 0.16013652086257935, worst -0.32717084884643555
Time: prepare 0.0059    bound 0.1268    transfer 0.0027    finalize 0.0018    func 0.1391    
Accumulated time: func 0.6859    prepare 0.0241    bound 0.6382    transfer 0.0083    finalize 0.0079    
all_split False
======================Cut inference begins======================
max lb tensor(0.66135025) min lb tensor(-0.32695413)
Number of Verified Splits: 196 of 292
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 11
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.032943010330200195 
BICCOS Cumulative time: 0.5429160594940186
Preprocessing time: 0.008826971054077148 Inference time: 0.022177457809448242 Add cuts time: 0.0013451576232910156 Cut analysis time: 0.0005934238433837891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32695 (16), -0.32478 (16), -0.31248 (16), -0.31033 (16), -0.30942 (16), -0.30921 (16), -0.30750 (16), -0.30599 (16), -0.29671 (16), -0.29500 (16), -0.29483 (16), -0.29166 (16), -0.29140 (16), -0.28596 (16), -0.28214 (16), -0.27903 (16), -0.27672 (16), -0.27367 (16), -0.27114 (16), -0.27110 (16), 
Length of domains: 96
Time: pickout 0.0018    decision 0.0184    set_bounds 0.0116    solve 0.1392    add 0.0016    
Accumulated time: pickout 0.0081    decision 0.0982    set_bounds 0.0562    solve 0.6863    add 0.1101    
Current (lb-rhs): -0.3269541263580322
390 domains visited
Cumulative time: 1.512216329574585

BaB round 6
batch: 96
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] 
split level 1: [/input-8, 1948] [/input-8, 995] [/input-8, 1948] [/input-8, 995] [/input-8, 1948] [/input-8, 995] [/input-8, 1948] [/input-8, 995] [/input-8, 1948] [/input-8, 995] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2794919013977051
10 lb beta sum: 0.6226806044578552, worst -0.26587820053100586
Time: prepare 0.0077    bound 0.1413    transfer 0.0027    finalize 0.0025    func 0.1573    
Accumulated time: func 0.8433    prepare 0.0320    bound 0.7795    transfer 0.0110    finalize 0.0104    
all_split False
======================Cut inference begins======================
max lb tensor(0.81313980) min lb tensor(-0.26568079)
Number of Verified Splits: 272 of 384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 13
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.04798603057861328 
BICCOS Cumulative time: 0.5909020900726318
Preprocessing time: 0.011373281478881836 Inference time: 0.03367185592651367 Add cuts time: 0.0022802352905273438 Cut analysis time: 0.0006606578826904297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26568 (18), -0.26480 (18), -0.26341 (18), -0.26252 (18), -0.25159 (18), -0.24991 (18), -0.24895 (18), -0.24569 (18), -0.24211 (18), -0.24098 (18), -0.24030 (18), -0.23917 (18), -0.23858 (18), -0.23578 (18), -0.23232 (18), -0.22909 (18), -0.22869 (18), -0.22857 (18), -0.22855 (18), -0.22473 (18), 
Length of domains: 112
Time: pickout 0.0024    decision 0.0182    set_bounds 0.0173    solve 0.1574    add 0.0026    
Accumulated time: pickout 0.0105    decision 0.1164    set_bounds 0.0734    solve 0.8437    add 0.1127    
Current (lb-rhs): -0.26568078994750977
502 domains visited
Cumulative time: 1.759596347808838

BaB round 7
batch: 112
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 995] [/input-8, 1291] [/input-8, 995] [/input-8, 995] [/input-8, 995] [/input-8, 995] [/input-8, 995] [/input-8, 1291] [/input-8, 995] [/input-8, 995] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2567939758300781
10 lb beta sum: 0.7499024271965027, worst -0.23110246658325195
Time: prepare 0.0046    bound 0.1379    transfer 0.0017    finalize 0.0013    func 0.1469    
Accumulated time: func 0.9901    prepare 0.0368    bound 0.9174    transfer 0.0127    finalize 0.0116    
all_split False
======================Cut inference begins======================
max lb tensor(0.46329206) min lb tensor(-0.23104858)
Number of Verified Splits: 130 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 14
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.025209665298461914 
BICCOS Cumulative time: 0.6161117553710938
Preprocessing time: 0.006768703460693359 Inference time: 0.01644754409790039 Add cuts time: 0.0013628005981445312 Cut analysis time: 0.0006306171417236328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23105 (19), -0.23036 (19), -0.22994 (19), -0.22931 (19), -0.22908 (19), -0.22880 (19), -0.22870 (19), -0.22834 (19), -0.22768 (19), -0.22682 (19), -0.22573 (19), -0.22502 (19), -0.20824 (19), -0.20717 (19), -0.20697 (19), -0.20590 (19), -0.20589 (19), -0.20483 (19), -0.20266 (19), -0.20160 (19), 
Length of domains: 94
Time: pickout 0.0026    decision 0.0158    set_bounds 0.0060    solve 0.1469    add 0.0015    
Accumulated time: pickout 0.0131    decision 0.1322    set_bounds 0.0794    solve 0.9907    add 0.1142    
Current (lb-rhs): -0.231048583984375
596 domains visited
Cumulative time: 1.9584548473358154

BaB round 8
batch: 94
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1948] [/input-8, 1948] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] 
split level 1: [/input-8, 1948] [/input-8, 529] [/input-8, 1948] [/input-8, 529] [/input-8, 1964] [/input-8, 1964] [/input-8, 1948] [/input-8, 529] [/input-8, 1948] [/input-8, 529] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21994781494140625
10 lb beta sum: 0.7166458964347839, worst -0.20120525360107422
Time: prepare 0.0078    bound 0.1390    transfer 0.0007    finalize 0.0017    func 0.1517    
Accumulated time: func 1.1419    prepare 0.0448    bound 1.0565    transfer 0.0134    finalize 0.0133    
all_split False
======================Cut inference begins======================
max lb tensor(0.30768079) min lb tensor(-0.20115376)
Number of Verified Splits: 129 of 376
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 14
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.031227827072143555 
BICCOS Cumulative time: 0.6473395824432373
Preprocessing time: 0.010932207107543945 Inference time: 0.018388986587524414 Add cuts time: 0.0012359619140625 Cut analysis time: 0.0006706714630126953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20115 (21), -0.19997 (21), -0.19915 (21), -0.19866 (21), -0.19817 (21), -0.19686 (21), -0.19528 (21), -0.19408 (21), -0.18629 (21), -0.18599 (21), -0.18589 (21), -0.18533 (21), -0.18516 (21), -0.18480 (21), -0.18478 (21), -0.18470 (21), -0.18411 (21), -0.18371 (21), -0.18360 (21), -0.18297 (21), 
Length of domains: 247
Time: pickout 0.0020    decision 0.0173    set_bounds 0.0126    solve 0.1518    add 0.0020    
Accumulated time: pickout 0.0151    decision 0.1495    set_bounds 0.0921    solve 1.1425    add 0.1162    
Current (lb-rhs): -0.20115375518798828
843 domains visited
Cumulative time: 2.1762583255767822

BaB round 9
batch: 247
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 540] [/input-12, 95] [/input-8, 540] [/input-12, 95] [/input-8, 540] [/input-8, 540] [/input-8, 540] [/input-12, 95] [/input-8, 540] [/input-12, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8258967399597168, worst -0.18115997314453125
10 lb beta sum: 0.8258967399597168, worst -0.18097829818725586
Time: prepare 0.0224    bound 0.1443    transfer 0.0029    finalize 0.0027    func 0.1755    
Accumulated time: func 1.3174    prepare 0.0674    bound 1.2008    transfer 0.0163    finalize 0.0161    
all_split False
======================Cut inference begins======================
max lb tensor(0.19281471) min lb tensor(-0.18093634)
Number of Verified Splits: 64 of 494
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 14
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.02589106559753418 
BICCOS Cumulative time: 0.6732306480407715
Preprocessing time: 0.014714956283569336 Inference time: 0.008822917938232422 Add cuts time: 0.0006806850433349609 Cut analysis time: 0.001672506332397461
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18094 (22), -0.17971 (22), -0.17892 (22), -0.17891 (22), -0.17840 (22), -0.17804 (22), -0.17803 (22), -0.17803 (22), -0.17794 (22), -0.17719 (22), -0.17716 (22), -0.17691 (22), -0.17655 (22), -0.17614 (22), -0.17605 (22), -0.17600 (22), -0.17587 (22), -0.17525 (22), -0.17505 (22), -0.17505 (22), 
Length of domains: 430
Time: pickout 0.0040    decision 0.0237    set_bounds 0.0131    solve 0.1756    add 0.0040    
Accumulated time: pickout 0.0191    decision 0.1732    set_bounds 0.1052    solve 1.3181    add 0.1202    
Current (lb-rhs): -0.18093633651733398
1273 domains visited
Cumulative time: 2.4233016967773438

BaB round 10
batch: 430
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 734] [/input-8, 734] [/input-8, 734] [/input-8, 734] [/input-8, 734] [/input-8, 734] [/input-8, 734] [/input-8, 734] [/input-12, 95] [/input-12, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8360599875450134, worst -0.1638946533203125
10 lb beta sum: 0.8360599875450134, worst -0.16387319564819336
Time: prepare 0.0391    bound 0.1493    transfer 0.0063    finalize 0.0058    func 0.2069    
Accumulated time: func 1.5242    prepare 0.1067    bound 1.3501    transfer 0.0226    finalize 0.0219    
all_split False
======================Cut inference begins======================
max lb tensor(0.20467246) min lb tensor(-0.16383362)
Number of Verified Splits: 68 of 860
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 14
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.03744101524353027 
BICCOS Cumulative time: 0.7106716632843018
Preprocessing time: 0.025960683822631836 Inference time: 0.009948015213012695 Add cuts time: 0.0008826255798339844 Cut analysis time: 0.0006496906280517578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16383 (23), -0.16314 (23), -0.16306 (23), -0.16192 (23), -0.16112 (23), -0.16087 (23), -0.16061 (23), -0.16016 (23), -0.15964 (23), -0.15947 (23), -0.15877 (23), -0.15826 (23), -0.15775 (23), -0.15763 (23), -0.15743 (23), -0.15727 (23), -0.15725 (23), -0.15697 (23), -0.15695 (23), -0.15695 (23), 
Length of domains: 792
Time: pickout 0.0079    decision 0.0361    set_bounds 0.0227    solve 0.2071    add 0.0074    
Accumulated time: pickout 0.0270    decision 0.2093    set_bounds 0.1279    solve 1.5251    add 0.1276    
Current (lb-rhs): -0.1638336181640625
2065 domains visited
Cumulative time: 2.74522066116333

BaB round 11
batch: 792
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1948] [/input-8, 1140] [/input-8, 1948] [/input-8, 1140] [/input-8, 1948] [/input-8, 1140] [/input-8, 1948] [/input-8, 1948] [/input-8, 1772] [/input-8, 1772] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8126829266548157, worst -0.15775632858276367
10 lb beta sum: 0.8126829266548157, worst -0.15774965286254883
Time: prepare 0.0719    bound 0.1636    transfer 0.0042    finalize 0.0077    func 0.2575    
Accumulated time: func 1.7818    prepare 0.1789    bound 1.5137    transfer 0.0268    finalize 0.0295    
all_split False
======================Cut inference begins======================
max lb tensor(0.22577679) min lb tensor(-0.15769935)
Number of Verified Splits: 519 of 1584
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 16
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.13363409042358398 
BICCOS Cumulative time: 0.8443057537078857
Preprocessing time: 0.050794363021850586 Inference time: 0.07881450653076172 Add cuts time: 0.003284454345703125 Cut analysis time: 0.0007407665252685547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15770 (24), -0.15758 (24), -0.15694 (24), -0.15691 (24), -0.15684 (24), -0.15683 (24), -0.15674 (24), -0.15667 (24), -0.15623 (24), -0.15607 (24), -0.15600 (24), -0.15584 (24), -0.15566 (24), -0.15561 (24), -0.15502 (24), -0.15484 (24), -0.15483 (24), -0.15469 (24), -0.15467 (24), -0.15466 (24), 
Length of domains: 1065
Time: pickout 0.0148    decision 0.0570    set_bounds 0.2064    solve 0.2578    add 0.0094    
Accumulated time: pickout 0.0418    decision 0.2664    set_bounds 0.3342    solve 1.7830    add 0.1370    
Current (lb-rhs): -0.1576993465423584
3130 domains visited
Cumulative time: 3.428910970687866

BaB round 12
batch: 1065
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1291] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15910625457763672
10 lb beta sum: 0.6495983600616455, worst -0.1518263816833496
Time: prepare 0.0412    bound 0.1832    transfer 0.0094    finalize 0.0101    func 0.2585    
Accumulated time: func 2.0402    prepare 0.2203    bound 1.6969    transfer 0.0362    finalize 0.0396    
all_split False
======================Cut inference begins======================
max lb tensor(0.70531213) min lb tensor(-0.15180254)
Number of Verified Splits: 1777 of 2130
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 19
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.3635261058807373 
BICCOS Cumulative time: 1.207831859588623
Preprocessing time: 0.06593823432922363 Inference time: 0.28315281867980957 Add cuts time: 0.013542890548706055 Cut analysis time: 0.0008921623229980469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15180 (25), -0.15164 (25), -0.15141 (25), -0.15084 (25), -0.15048 (25), -0.15031 (25), -0.15017 (25), -0.15003 (25), -0.14932 (25), -0.14915 (25), -0.14896 (25), -0.14867 (25), -0.14775 (25), -0.14750 (25), -0.14721 (25), -0.14590 (25), -0.14501 (25), -0.14481 (25), -0.14465 (25), -0.14409 (25), 
Length of domains: 353
Time: pickout 0.0203    decision 0.0705    set_bounds 0.0574    solve 0.2589    add 0.0049    
Accumulated time: pickout 0.0621    decision 0.3369    set_bounds 0.3917    solve 2.0418    add 0.1418    
Current (lb-rhs): -0.15180253982543945
3483 domains visited
Cumulative time: 4.219792604446411

BaB round 13
batch: 353
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15180206298828125
10 lb beta sum: 0.8276576399803162, worst -0.1156013011932373
Time: prepare 0.0141    bound 0.1498    transfer 0.0070    finalize 0.0034    func 0.1790    
Accumulated time: func 2.2193    prepare 0.2347    bound 1.8467    transfer 0.0432    finalize 0.0430    
all_split False
======================Cut inference begins======================
max lb tensor(0.28240323) min lb tensor(-0.11548060)
Number of Verified Splits: 375 of 706
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 20
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.08715009689331055 
BICCOS Cumulative time: 1.2949819564819336
Preprocessing time: 0.02142953872680664 Inference time: 0.0618443489074707 Add cuts time: 0.003076314926147461 Cut analysis time: 0.0007998943328857422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11548 (26), -0.11506 (26), -0.11413 (26), -0.11412 (26), -0.11385 (26), -0.11349 (26), -0.11321 (26), -0.11265 (26), -0.11252 (26), -0.11201 (26), -0.11176 (26), -0.11166 (26), -0.11048 (26), -0.11029 (26), -0.10990 (26), -0.10881 (26), -0.10840 (26), -0.10824 (26), -0.10752 (26), -0.10736 (26), 
Length of domains: 331
Time: pickout 0.0073    decision 0.0317    set_bounds 0.0189    solve 0.1792    add 0.0022    
Accumulated time: pickout 0.0694    decision 0.3685    set_bounds 0.4105    solve 2.2210    add 0.1441    
Current (lb-rhs): -0.11548060178756714
3814 domains visited
Cumulative time: 4.548743009567261

BaB round 14
batch: 331
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1635] [/input-8, 1635] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13570594787597656
10 lb beta sum: 0.8177594542503357, worst -0.10866773128509521
Time: prepare 0.0134    bound 0.1496    transfer 0.0019    finalize 0.0030    func 0.1723    
Accumulated time: func 2.3915    prepare 0.2484    bound 1.9963    transfer 0.0451    finalize 0.0460    
all_split False
======================Cut inference begins======================
max lb tensor(0.28339183) min lb tensor(-0.10859251)
Number of Verified Splits: 196 of 662
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 21
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.05674934387207031 
BICCOS Cumulative time: 1.351731300354004
Preprocessing time: 0.019870758056640625 Inference time: 0.034223318099975586 Add cuts time: 0.0018582344055175781 Cut analysis time: 0.0007970333099365234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10859 (27), -0.10811 (27), -0.10747 (27), -0.10739 (27), -0.10732 (27), -0.10726 (27), -0.10695 (27), -0.10671 (27), -0.10655 (27), -0.10643 (27), -0.10605 (27), -0.10600 (27), -0.10587 (27), -0.10570 (27), -0.10565 (27), -0.10548 (27), -0.10506 (27), -0.10505 (27), -0.10505 (27), -0.10503 (27), 
Length of domains: 466
Time: pickout 0.0066    decision 0.1549    set_bounds 0.0209    solve 0.1724    add 0.0035    
Accumulated time: pickout 0.0760    decision 0.5235    set_bounds 0.4314    solve 2.3935    add 0.1475    
Current (lb-rhs): -0.10859251022338867
4280 domains visited
Cumulative time: 4.9655442237854

BaB round 15
batch: 466
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1262350082397461
10 lb beta sum: 0.8240243792533875, worst -0.09263443946838379
Time: prepare 0.0178    bound 0.1476    transfer 0.0045    finalize 0.0041    func 0.1808    
Accumulated time: func 2.5723    prepare 0.2664    bound 2.1439    transfer 0.0495    finalize 0.0501    
all_split False
======================Cut inference begins======================
max lb tensor(0.28031194) min lb tensor(-0.09260041)
Number of Verified Splits: 347 of 932
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 23
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.09102869033813477 
BICCOS Cumulative time: 1.4427599906921387
Preprocessing time: 0.02902698516845703 Inference time: 0.05843210220336914 Add cuts time: 0.0027649402618408203 Cut analysis time: 0.0008046627044677734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09260 (28), -0.09225 (28), -0.09137 (28), -0.09123 (28), -0.09112 (28), -0.09098 (28), -0.09091 (28), -0.09085 (28), -0.09068 (28), -0.09062 (28), -0.09057 (28), -0.09006 (28), -0.08987 (28), -0.08979 (28), -0.08975 (28), -0.08963 (28), -0.08946 (28), -0.08921 (28), -0.08902 (28), -0.08901 (28), 
Length of domains: 585
Time: pickout 0.0110    decision 0.0373    set_bounds 0.0245    solve 0.1809    add 0.0049    
Accumulated time: pickout 0.0871    decision 0.5608    set_bounds 0.4559    solve 2.5744    add 0.1525    
Current (lb-rhs): -0.09260040521621704
4865 domains visited
Cumulative time: 5.317774534225464

BaB round 16
batch: 585
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1193695068359375
10 lb beta sum: 0.9240745902061462, worst -0.0856635570526123
Time: prepare 0.0229    bound 0.1515    transfer 0.0018    finalize 0.0050    func 0.1894    
Accumulated time: func 2.7617    prepare 0.2895    bound 2.2954    transfer 0.0513    finalize 0.0551    
all_split False
======================Cut inference begins======================
max lb tensor(0.51831222) min lb tensor(-0.08559906)
Number of Verified Splits: 695 of 1170
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.16042113304138184 
BICCOS Cumulative time: 1.6031811237335205
Preprocessing time: 0.0378720760345459 Inference time: 0.11862993240356445 Add cuts time: 0.0036628246307373047 Cut analysis time: 0.0002562999725341797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08560 (29), -0.08527 (29), -0.08430 (29), -0.08424 (29), -0.08414 (29), -0.08399 (29), -0.08392 (29), -0.08375 (29), -0.08360 (29), -0.08352 (29), -0.08303 (29), -0.08282 (29), -0.08274 (29), -0.08272 (29), -0.08265 (29), -0.08253 (29), -0.08225 (29), -0.08204 (29), -0.08203 (29), -0.08181 (29), 
Length of domains: 475
Time: pickout 0.0126    decision 0.0429    set_bounds 0.0310    solve 0.1897    add 0.0052    
Accumulated time: pickout 0.0997    decision 0.6037    set_bounds 0.4869    solve 2.7641    add 0.1576    
Current (lb-rhs): -0.08559906482696533
5340 domains visited
Cumulative time: 5.7645180225372314

BaB round 17
batch: 475
splitting decisions: 
split level 0: [/input-8, 742] [/input-8, 742] [/input-8, 742] [/input-8, 742] [/input-8, 742] [/input-8, 742] [/input-8, 742] [/input-8, 742] [/input-8, 742] [/input-8, 742] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11245155334472656

all verified at 3th iter
Time: prepare 0.0181    bound 0.0287    transfer 0.0014    finalize 0.0042    func 0.0591    
Accumulated time: func 2.8208    prepare 0.3079    bound 2.3241    transfer 0.0528    finalize 0.0593    
all_split False
======================Cut inference begins======================
max lb tensor(0.11304095) min lb tensor(2.86102295e-05)
Number of Verified Splits: 950 of 950
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.029603242874145508 
BICCOS Cumulative time: 1.632784366607666
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0111    decision 0.0393    set_bounds 0.0252    solve 0.0592    add 0.0001    
Accumulated time: pickout 0.1108    decision 0.6430    set_bounds 0.5121    solve 2.8233    add 0.1578    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
5340 domains visited
Cumulative time: 5.9326512813568115


Properties batch 8, size 1
Remaining timeout: 191.81001448631287
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 8.1901 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 55, vnnlib ID: 55 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-42.25123215, -42.46682358, -36.67853165, -37.90718079, -35.93508911,
         -38.37357330, -33.62203598, -40.02215958, -42.59091568, -42.80639267]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [734]; unstable size 734; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 430, 1, 734] with unstable size 429 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 46, 1, 734] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 734] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [429]; unstable size 429; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 46, 1, 429] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 429] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [45]; unstable size 45; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 45] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.34969759,  3.13334370, -1.16873837,  0.96141458, -1.40047336,
          1.22247684,  1.34478664,  4.19013596,  3.13465381]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-42.25123215, -42.46682358, -36.67853165, -37.90718079, -35.93508911,
         -38.37357330, -33.62203598, -40.02215958, -42.59091568, -42.80639267]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.17it/s]100%|██████████| 1/1 [00:00<00:00,  8.16it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-40.05603409, -40.84295654, -34.87886810, -35.93630219, -33.48974609,
          -36.42271423, -32.48163605, -37.60496521, -40.71141815, -41.01383972],
         [-40.05603409, -40.84295654, -34.87886810, -35.93630219, -33.48974609,
          -36.42271423, -32.48163605, -37.60496521, -40.71141815, -41.01383972]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.39723206, 1.00811005]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1259 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.10578727722168
alpha/beta optimization time: 1.3023524284362793
initial alpha-crown bounds: tensor([[ 3.62416196,  3.38378668, -0.90965557,  1.13467240, -1.13313723,
          1.41314578,  1.66393018,  4.45811605,  3.47076654]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -1.1331372261047363
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50113105773926
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.5010848045349
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.50105381011963
Verifying property 2 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.90965557]], device='cuda:0') need to verify.
Model prediction is: tensor([-42.25123215, -42.46682358, -36.67853165, -37.90718079, -35.93508911,
        -38.37357330, -33.62203598, -40.02215958, -42.59091568, -42.80639267],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.90965557]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 734
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 421
Node /15 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 1200
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010395050048828125
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9096503257751465
10 lb beta sum: 0.0, worst -0.9096534252166748
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0558    transfer 0.0001    finalize 0.0001    func 0.0563    
Accumulated time: func 0.0563    prepare 0.0002    bound 0.0558    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] 
split level 1: [/input-12, 38] 
split level 2: [/input-12, 92] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 40] 
split level 5: [/input-12, 15] 
split level 6: [/input-12, 66] 
split level 7: [/input-12, 49] 
split level 8: [/input-12, 28] 
split level 9: [/input-12, 48] 
split level 10: [/input-12, 61] 
split level 11: [/input-12, 50] 
split level 12: [/input-12, 8] 
split level 13: [/input-12, 10] 
split level 14: [/input-12, 95] 
split level 15: [/input-12, 14] 
split level 16: [/input-12, 19] 
split level 17: [/input-12, 73] 
split level 18: [/input-8, 1875] 
split level 19: [/input-12, 74] 
split level 20: [/input-8, 1123] 
split level 21: [/input-8, 1491] 
split level 22: [/input-12, 97] 
split level 23: [/input-8, 1308] 
split level 24: [/input-8, 1573] 
split level 25: [/input-8, 1582] 
split level 26: [/input-8, 1530] 
split level 27: [/input-8, 617] 
split level 28: [/input-12, 60] 
split level 29: [/input-8, 1492] 
split level 30: [/input-8, 981] 
split level 31: [/input-8, 1946] 
split level 32: [/input-8, 534] 
split level 33: [/input-8, 1537] 
split level 34: [/input-8, 1289] 
split level 35: [/input-8, 1581] 
split level 36: [/input-8, 488] 
split level 37: [/input-8, 1498] 
split level 38: [/input-8, 275] 
split level 39: [/input-8, 276] 
split level 40: [/input-8, 1052] 
split level 41: [/input-8, 1505] 
split level 42: [/input-8, 1574] 
split level 43: [/input-8, 1051] 
split level 44: [/input-8, 1107] 
split level 45: [/input-8, 1865] 
split level 46: [/input-8, 537] 
split level 47: [/input-8, 1110] 
split level 48: [/input-8, 1867] 
split level 49: [/input-12, 35] 
split level 50: [/input-8, 1259] 
split level 51: [/input-8, 880] 
split level 52: [/input-8, 1868] 
split level 53: [/input-8, 980] 
split level 54: [/input-8, 1773] 
split level 55: [/input-8, 1738] 
split level 56: [/input-8, 1523] 
split level 57: [/input-12, 94] 
split level 58: [/input-8, 277] 
split level 59: [/input-8, 1244] 
split level 60: [/input-8, 1769] 
split level 61: [/input-8, 1889] 
split level 62: [/input-8, 1243] 
split level 63: [/input-8, 977] 
split level 64: [/input-8, 1730] 
split level 65: [/input-8, 1761] 
split level 66: [/input-8, 872] 
split level 67: [/input-8, 1934] 
split level 68: [/input-8, 614] 
split level 69: [/input-8, 274] 
split level 70: [/input-8, 1857] 
split level 71: [/input-8, 1313] 
split level 72: [/input-8, 1484] 
split level 73: [/input-8, 462] 
split level 74: [/input-8, 716] 
split level 75: [/input-8, 1122] 
split level 76: [/input-8, 1301] 
split level 77: [/input-8, 526] 
split level 78: [/input-8, 1932] 
split level 79: [/input-8, 1050] 
split level 80: [/input-8, 1130] 
split level 81: [/input-8, 1619] 
split level 82: [/input-8, 306] 
split level 83: [/input-8, 967] 
split level 84: [/input-8, 1053] 
split level 85: [/input-8, 1416] 
split level 86: [/input-8, 1841] 
split level 87: [/input-8, 608] 
split level 88: [/input-8, 970] 
split level 89: [/input-8, 1873] 
split level 90: [/input-8, 1762] 
split level 91: [/input-8, 747] 
split level 92: [/input-8, 1881] 
split level 93: [/input-8, 612] 
split level 94: [/input-8, 346] 
split level 95: [/input-12, 82] 
split level 96: [/input-8, 1512] 
split level 97: [/input-8, 650] 
split level 98: [/input-8, 966] 
split level 99: [/input-8, 1127] 
split level 100: [/input-8, 841] 
split level 101: [/input-8, 1732] 
split level 102: [/input-8, 494] 
split level 103: [/input-8, 604] 
split level 104: [/input-8, 1485] 
split level 105: [/input-8, 1861] 
split level 106: [/input-8, 1890] 
split level 107: [/input-8, 496] 
split level 108: [/input-8, 307] 
split level 109: [/input-8, 279] 
split level 110: [/input-8, 1281] 
split level 111: [/input-8, 267] 
split level 112: [/input-8, 1812] 
split level 113: [/input-8, 287] 
split level 114: [/input-8, 1513] 
split level 115: [/input-8, 1494] 
split level 116: [/input-8, 285] 
split level 117: [/input-8, 461] 
split level 118: [/input, 2133] 
split level 119: [/input-8, 1137] 
split level 120: [/input-8, 1417] 
split level 121: [/input-8, 1897] 
split level 122: [/input-8, 1288] 
split level 123: [/input-8, 1790] 
split level 124: [/input-8, 886] 
split level 125: [/input-8, 1913] 
split level 126: [/input-8, 713] 
split level 127: [/input-8, 265] 
split level 128: [/input-8, 388] 
split level 129: [/input-8, 394] 
split level 130: [/input-8, 840] 
split level 131: [/input-8, 1482] 
split level 132: [/input-8, 113] 
split level 133: [/input-8, 1250] 
split level 134: [/input-8, 1486] 
split level 135: [/input-8, 1342] 
split level 136: [/input-8, 308] 
split level 137: [/input-8, 1425] 
split level 138: [/input, 4060] 
split level 139: [/input-8, 1034] 
split level 140: [/input-8, 1629] 
split level 141: [/input-8, 939] 
split level 142: [/input-8, 1103] 
split level 143: [/input-8, 708] 
split level 144: [/input-8, 1637] 
split level 145: [/input-8, 1528] 
split level 146: [/input-8, 1871] 
split level 147: [/input-8, 1756] 
split level 148: [/input-8, 706] 
split level 149: [/input, 1013] 
split level 150: [/input, 3875] 
split level 151: [/input-8, 701] 
split level 152: [/input-8, 1929] 
split level 153: [/input-8, 1729] 
split level 154: [/input-8, 1942] 
split level 155: [/input-8, 497] 
split level 156: [/input-8, 530] 
split level 157: [/input-8, 1779] 
split level 158: [/input-8, 268] 
split level 159: [/input, 2676] 
split level 160: [/input, 3281] 
split level 161: [/input-8, 969] 
split level 162: [/input-8, 154] 
split level 163: [/input-8, 1915] 
split level 164: [/input, 357] 
split level 165: [/input-8, 1803] 
split level 166: [/input-8, 1937] 
split level 167: [/input-8, 1777] 
split level 168: [/input, 4029] 
split level 169: [/input-8, 273] 
split level 170: [/input-8, 1040] 
split level 171: [/input-8, 1032] 
split level 172: [/input-8, 1048] 
split level 173: [/input, 2659] 
split level 174: [/input-8, 1839] 
split level 175: [/input-8, 1234] 
split level 176: [/input-8, 846] 
split level 177: [/input, 2808] 
split level 178: [/input-8, 1430] 
split level 179: [/input-8, 1408] 
split level 180: [/input-8, 301] 
split level 181: [/input, 3652] 
split level 182: [/input-8, 705] 
split level 183: [/input-8, 585] 
split level 184: [/input, 2642] 
split level 185: [/input, 2936] 
split level 186: [/input-8, 411] 
split level 187: [/input-8, 309] 
split level 188: [/input-8, 527] 
split level 189: [/input-8, 1049] 
split level 190: [/input, 2692] 
split level 191: [/input-8, 502] 
split level 192: [/input-12, 4] 
split level 193: [/input, 2904] 
split level 194: [/input-8, 637] 
split level 195: [/input, 2788] 
split level 196: [/input-8, 1924] 
split level 197: [/input-8, 586] 
split level 198: [/input, 3735] 
split level 199: [/input, 3718] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9094486236572266
10 lb beta sum: 0.0, worst -0.9094502925872803
Time: prepare 0.0115    bound 0.1034    transfer 0.0010    finalize 0.0031    func 0.1216    
Accumulated time: func 0.1779    prepare 0.0219    bound 0.1593    transfer 0.0011    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(0.16727734) min lb tensor(-0.90943623)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010784626007080078 
BICCOS Cumulative time: 0.010784626007080078
Preprocessing time: 0.010107755661010742 Inference time: 7.43865966796875e-05 Add cuts time: 4.57763671875e-05 Cut analysis time: 0.0005567073822021484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.87047 (1), -0.87037 (1), -0.86876 (1), -0.86861 (1), -0.86852 (1), -0.86681 (1), -0.86540 (1), -0.86484 (1), -0.86109 (1), -0.85997 (1), -0.85485 (1), -0.85315 (1), -0.85164 (1), -0.84575 (1), -0.84170 (1), -0.84160 (1), -0.84081 (1), -0.83617 (1), -0.83026 (1), -0.82948 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5472    set_bounds 0.0091    solve 0.1217    add 0.1426    
Accumulated time: pickout 0.0004    decision 0.5472    set_bounds 0.0091    solve 0.1217    add 0.1426    
Current (lb-rhs): -0.8704748153686523
50 domains visited
Cumulative time: 0.9040343761444092

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] [/input-12, 57] [/input-12, 38] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] 
split level 1: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 38] [/input-12, 92] [/input-12, 92] [/input-12, 38] 
split level 2: [/input-12, 66] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 66] [/input-12, 15] [/input-12, 15] [/input-12, 92] 
split level 3: [/input-12, 15] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 15] [/input-12, 66] [/input-12, 66] [/input-12, 66] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7409462928771973
10 lb beta sum: 0.17954997718334198, worst -0.733830451965332
Time: prepare 0.0064    bound 0.1232    transfer 0.0007    finalize 0.0023    func 0.1351    
Accumulated time: func 0.3130    prepare 0.0285    bound 0.2824    transfer 0.0018    finalize 0.0055    
all_split False
======================Cut inference begins======================
max lb tensor(0.52615833) min lb tensor(-0.73312354)
Number of Verified Splits: 52 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.015392780303955078 
BICCOS Cumulative time: 0.026177406311035156
Preprocessing time: 0.011702537536621094 Inference time: 0.0021851062774658203 Add cuts time: 0.0011255741119384766 Cut analysis time: 0.0003795623779296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25660 (2), -0.25508 (2), -0.25137 (2), -0.24542 (2), -0.23520 (2), -0.23457 (2), -0.23000 (2), -0.22939 (2), -0.22386 (2), -0.21887 (2), -0.21574 (2), -0.21301 (2), -0.21260 (2), -0.21003 (2), -0.20710 (2), -0.20700 (2), -0.20670 (2), -0.20480 (2), -0.20312 (2), -0.20055 (2), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0207    set_bounds 0.0141    solve 0.1352    add 0.1897    
Accumulated time: pickout 0.0014    decision 0.5679    set_bounds 0.0232    solve 0.2569    add 0.3323    
Current (lb-rhs): -0.25659751892089844
100 domains visited
Cumulative time: 1.2803618907928467

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] 
split level 1: [/input-12, 92] [/input-12, 38] [/input-12, 92] [/input-12, 92] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
split level 2: [/input-12, 7] [/input-12, 92] [/input-12, 7] [/input-12, 38] [/input-12, 15] [/input-12, 92] [/input-12, 92] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
split level 3: [/input-12, 66] [/input-12, 15] [/input-12, 66] [/input-12, 15] [/input-12, 66] [/input-12, 15] [/input-12, 15] [/input-12, 66] [/input-12, 66] [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14906549453735352
10 lb beta sum: 0.20615634322166443, worst -0.06673678755760193
Time: prepare 0.0057    bound 0.1222    transfer 0.0007    finalize 0.0018    func 0.1330    
Accumulated time: func 0.4460    prepare 0.0344    bound 0.4046    transfer 0.0026    finalize 0.0073    
all_split False
======================Cut inference begins======================
max lb tensor(0.60336995) min lb tensor(-0.06439078)
Number of Verified Splits: 398 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 12
#cuts >= 20: 0
BICCOS time: 0.03816986083984375 
BICCOS Cumulative time: 0.0643472671508789
Preprocessing time: 0.011736869812011719 Inference time: 0.019591808319091797 Add cuts time: 0.006372928619384766 Cut analysis time: 0.00046825408935546875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0009    decision 0.0203    set_bounds 0.0157    solve 0.1330    add 0.0198    
Accumulated time: pickout 0.0023    decision 0.5882    set_bounds 0.0390    solve 0.3899    add 0.3521    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] 
split level 1: [/input-12, 38] 
split level 2: [/input-12, 92] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 15] 
split level 5: [/input-12, 66] 
split level 6: [/input-12, 28] 
split level 7: [/input-12, 61] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.44829463958740234

all verified at 0th iter
Time: prepare 0.0036    bound 0.0049    transfer 0.0015    finalize 0.0014    func 0.0131    
Accumulated time: func 0.4591    prepare 0.0385    bound 0.4094    transfer 0.0041    finalize 0.0087    
all_split False
======================Cut inference begins======================
max lb tensor(2.01445913) min lb tensor(0.44829464)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 12.
#cuts 1-3: 12
#cuts >= 20: 0
BICCOS time: 0.006311655044555664 
BICCOS Cumulative time: 0.07065892219543457
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0169    solve 0.0132    add 0.0002    
Accumulated time: pickout 0.0027    decision 0.6115    set_bounds 0.0558    solve 0.4031    add 0.3524    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
Cumulative time: 1.5726284980773926


Properties batch 3, size 1
Remaining timeout: 196.71599912643433
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 196.7159206867218
Verifying property 4 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.13313723]], device='cuda:0') need to verify.
Model prediction is: tensor([-42.25123215, -42.46682358, -36.67853165, -37.90718079, -35.93508911,
        -38.37357330, -33.62203598, -40.02215958, -42.59091568, -42.80639267],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.13313723]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 734
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 421
Node /15 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 1200
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010585784912109375
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.1331331729888916
10 lb beta sum: 0.0, worst -1.1331367492675781
Time: prepare 0.0002    bound 0.0977    transfer 0.0001    finalize 0.0001    func 0.0982    
Accumulated time: func 0.0982    prepare 0.0002    bound 0.0977    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 40] 
split level 1: [/input-12, 88] 
split level 2: [/input-12, 95] 
split level 3: [/input-12, 61] 
split level 4: [/input-12, 38] 
split level 5: [/input-12, 58] 
split level 6: [/input-12, 49] 
split level 7: [/input-12, 8] 
split level 8: [/input-12, 73] 
split level 9: [/input-12, 19] 
split level 10: [/input-12, 50] 
split level 11: [/input-12, 82] 
split level 12: [/input-8, 1123] 
split level 13: [/input-8, 1491] 
split level 14: [/input-8, 1523] 
split level 15: [/input-12, 48] 
split level 16: [/input-12, 94] 
split level 17: [/input-12, 60] 
split level 18: [/input-8, 1492] 
split level 19: [/input-12, 15] 
split level 20: [/input-12, 36] 
split level 21: [/input-8, 436] 
split level 22: [/input-8, 276] 
split level 23: [/input-8, 1482] 
split level 24: [/input-8, 275] 
split level 25: [/input-12, 35] 
split level 26: [/input-8, 981] 
split level 27: [/input-8, 1530] 
split level 28: [/input-8, 980] 
split level 29: [/input-8, 1498] 
split level 30: [/input-8, 1289] 
split level 31: [/input-8, 1130] 
split level 32: [/input-8, 1420] 
split level 33: [/input-8, 872] 
split level 34: [/input-8, 880] 
split level 35: [/input-8, 1932] 
split level 36: [/input-12, 92] 
split level 37: [/input-8, 1738] 
split level 38: [/input-8, 1812] 
split level 39: [/input-8, 1537] 
split level 40: [/input-8, 1110] 
split level 41: [/input-8, 1946] 
split level 42: [/input-8, 1259] 
split level 43: [/input-8, 1513] 
split level 44: [/input-12, 14] 
split level 45: [/input-8, 1533] 
split level 46: [/input-8, 534] 
split level 47: [/input-8, 267] 
split level 48: [/input-8, 1062] 
split level 49: [/input-8, 617] 
split level 50: [/input-8, 1619] 
split level 51: [/input-12, 54] 
split level 52: [/input-8, 113] 
split level 53: [/input-8, 1481] 
split level 54: [/input-8, 841] 
split level 55: [/input-8, 1484] 
split level 56: [/input-8, 1417] 
split level 57: [/input-8, 611] 
split level 58: [/input, 4058] 
split level 59: [/input-8, 1122] 
split level 60: [/input-8, 870] 
split level 61: [/input-8, 1313] 
split level 62: [/input-8, 1068] 
split level 63: [/input-8, 268] 
split level 64: [/input-8, 1137] 
split level 65: [/input-8, 1281] 
split level 66: [/input-8, 1730] 
split level 67: [/input-8, 1397] 
split level 68: [/input-8, 1512] 
split level 69: [/input-8, 277] 
split level 70: [/input-8, 461] 
split level 71: [/input-8, 1841] 
split level 72: [/input-8, 1485] 
split level 73: [/input-8, 1244] 
split level 74: [/input, 3217] 
split level 75: [/input-8, 1506] 
split level 76: [/input-8, 1308] 
split level 77: [/input-8, 421] 
split level 78: [/input-8, 1517] 
split level 79: [/input-8, 1243] 
split level 80: [/input-8, 614] 
split level 81: [/input-8, 462] 
split level 82: [/input-8, 1762] 
split level 83: [/input-8, 1868] 
split level 84: [/input-8, 1934] 
split level 85: [/input, 2153] 
split level 86: [/input-8, 840] 
split level 87: [/input-8, 967] 
split level 88: [/input-8, 977] 
split level 89: [/input-8, 1250] 
split level 90: [/input-8, 285] 
split level 91: [/input-8, 604] 
split level 92: [/input-8, 1924] 
split level 93: [/input-8, 1416] 
split level 94: [/input-8, 612] 
split level 95: [/input-8, 157] 
split level 96: [/input, 2262] 
split level 97: [/input-8, 966] 
split level 98: [/input, 2137] 
split level 99: [/input-8, 274] 
split level 100: [/input, 4060] 
split level 101: [/input-8, 608] 
split level 102: [/input, 4042] 
split level 103: [/input, 2725] 
split level 104: [/input-8, 1861] 
split level 105: [/input-8, 1773] 
split level 106: [/input-8, 388] 
split level 107: [/input-8, 1761] 
split level 108: [/input, 358] 
split level 109: [/input-8, 116] 
split level 110: [/input-8, 1064] 
split level 111: [/input-8, 1366] 
split level 112: [/input, 2650] 
split level 113: [/input, 3657] 
split level 114: [/input-8, 851] 
split level 115: [/input-8, 306] 
split level 116: [/input-8, 494] 
split level 117: [/input, 2774] 
split level 118: [/input, 3266] 
split level 119: [/input-8, 1668] 
split level 120: [/input, 726] 
split level 121: [/input-8, 309] 
split level 122: [/input, 2649] 
split level 123: [/input, 3281] 
split level 124: [/input-8, 1127] 
split level 125: [/input-8, 1867] 
split level 126: [/input, 712] 
split level 127: [/input-8, 1288] 
split level 128: [/input-8, 279] 
split level 129: [/input-8, 1528] 
split level 130: [/input-8, 1494] 
split level 131: [/input-8, 1358] 
split level 132: [/input, 2617] 
split level 133: [/input, 2194] 
split level 134: [/input, 4029] 
split level 135: [/input-8, 110] 
split level 136: [/input, 3875] 
split level 137: [/input-8, 308] 
split level 138: [/input-8, 1803] 
split level 139: [/input-8, 313] 
split level 140: [/input, 2676] 
split level 141: [/input, 2808] 
split level 142: [/input-8, 2004] 
split level 143: [/input-8, 2003] 
split level 144: [/input-8, 1629] 
split level 145: [/input-8, 1221] 
split level 146: [/input-8, 1732] 
split level 147: [/input-8, 1107] 
split level 148: [/input, 2692] 
split level 149: [/input-8, 1729] 
split level 150: [/input-8, 1032] 
split level 151: [/input-8, 846] 
split level 152: [/input, 2936] 
split level 153: [/input-8, 526] 
split level 154: [/input-8, 970] 
split level 155: [/input, 2279] 
split level 156: [/input-8, 873] 
split level 157: [/input-8, 716] 
split level 158: [/input-8, 1637] 
split level 159: [/input-8, 845] 
split level 160: [/input-8, 1518] 
split level 161: [/input, 2659] 
split level 162: [/input-8, 1949] 
split level 163: [/input, 2634] 
split level 164: [/input-8, 141] 
split level 165: [/input-8, 1048] 
split level 166: [/input-8, 1405] 
split level 167: [/input-8, 1077] 
split level 168: [/input, 3479] 
split level 169: [/input, 2788] 
split level 170: [/input, 601] 
split level 171: [/input-8, 1545] 
split level 172: [/input-8, 1430] 
split level 173: [/input, 3176] 
split level 174: [/input, 1338] 
split level 175: [/input, 3011] 
split level 176: [/input-8, 1040] 
split level 177: [/input-8, 1958] 
split level 178: [/input, 2205] 
split level 179: [/input, 2723] 
split level 180: [/input-8, 260] 
split level 181: [/input, 3639] 
split level 182: [/input, 597] 
split level 183: [/input, 426] 
split level 184: [/input-8, 1234] 
split level 185: [/input-8, 301] 
split level 186: [/input, 585] 
split level 187: [/input, 824] 
split level 188: [/input-8, 1839] 
split level 189: [/input, 2630] 
split level 190: [/input-8, 527] 
split level 191: [/input, 3315] 
split level 192: [/input, 1229] 
split level 193: [/input, 1773] 
split level 194: [/input-8, 1986] 
split level 195: [/input, 951] 
split level 196: [/input, 3038] 
split level 197: [/input-8, 1857] 
split level 198: [/input-8, 1779] 
split level 199: [/input, 645] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.1328940391540527
10 lb beta sum: 0.0, worst -1.1328978538513184
Time: prepare 0.0115    bound 0.1089    transfer 0.0007    finalize 0.0026    func 0.1263    
Accumulated time: func 0.2246    prepare 0.0218    bound 0.2066    transfer 0.0009    finalize 0.0027    
all_split False
======================Cut inference begins======================
max lb tensor(0.16003799) min lb tensor(-1.13288546)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010487794876098633 
BICCOS Cumulative time: 0.010487794876098633
Preprocessing time: 0.01012563705444336 Inference time: 8.225440979003906e-05 Add cuts time: 6.246566772460938e-05 Cut analysis time: 0.000217437744140625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.09704 (1), -1.09662 (1), -1.09638 (1), -1.09628 (1), -1.09575 (1), -1.09470 (1), -1.09333 (1), -1.09330 (1), -1.09294 (1), -1.09178 (1), -1.09111 (1), -1.08992 (1), -1.08907 (1), -1.08554 (1), -1.08495 (1), -1.08378 (1), -1.08041 (1), -1.08033 (1), -1.07992 (1), -1.07692 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5474    set_bounds 0.0099    solve 0.1264    add 0.1438    
Accumulated time: pickout 0.0004    decision 0.5474    set_bounds 0.0099    solve 0.1264    add 0.1438    
Current (lb-rhs): -1.097043514251709
50 domains visited
Cumulative time: 0.9482104778289795

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] [/input-12, 88] [/input-12, 95] [/input-12, 88] [/input-12, 88] [/input-12, 95] [/input-12, 88] [/input-12, 95] [/input-12, 88] [/input-12, 88] 
split level 1: [/input-12, 95] [/input-12, 95] [/input-12, 88] [/input-12, 95] [/input-12, 95] [/input-12, 61] [/input-12, 38] [/input-12, 88] [/input-12, 95] [/input-12, 95] 
split level 2: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 38] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 38] 
split level 3: [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 38] [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9684939384460449
10 lb beta sum: 0.30831870436668396, worst -0.9319887161254883
Time: prepare 0.0066    bound 0.1278    transfer 0.0007    finalize 0.0022    func 0.1400    
Accumulated time: func 0.3645    prepare 0.0287    bound 0.3344    transfer 0.0016    finalize 0.0049    
all_split False
======================Cut inference begins======================
max lb tensor(0.35005331) min lb tensor(-0.93168461)
Number of Verified Splits: 21 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.013934612274169922 
BICCOS Cumulative time: 0.024422407150268555
Preprocessing time: 0.012110710144042969 Inference time: 0.0009624958038330078 Add cuts time: 0.00043511390686035156 Cut analysis time: 0.00042629241943359375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.45339 (2), -0.44397 (2), -0.41570 (2), -0.41151 (2), -0.39987 (2), -0.39863 (2), -0.39167 (2), -0.37663 (2), -0.37262 (2), -0.36634 (2), -0.36485 (2), -0.35666 (2), -0.33658 (2), -0.33370 (2), -0.32577 (2), -0.32546 (2), -0.32032 (2), -0.30620 (2), -0.30278 (2), -0.30100 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0208    set_bounds 0.0136    solve 0.1401    add 0.0775    
Accumulated time: pickout 0.0015    decision 0.5682    set_bounds 0.0234    solve 0.2665    add 0.2212    
Current (lb-rhs): -0.4533887803554535
100 domains visited
Cumulative time: 1.2158734798431396

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 95] [/input-12, 95] [/input-12, 88] [/input-12, 95] [/input-12, 95] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
split level 1: [/input-12, 61] [/input-12, 88] [/input-12, 95] [/input-12, 88] [/input-12, 61] [/input-12, 38] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 61] 
split level 2: [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 61] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 58] 
split level 3: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.42806148529052734
10 lb beta sum: 0.699611485004425, worst -0.3505490720272064
Time: prepare 0.0063    bound 0.1241    transfer 0.0007    finalize 0.0023    func 0.1360    
Accumulated time: func 0.5005    prepare 0.0352    bound 0.4585    transfer 0.0023    finalize 0.0072    
all_split False
======================Cut inference begins======================
max lb tensor(0.47287643) min lb tensor(-0.34680372)
Number of Verified Splits: 280 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.030509233474731445 
BICCOS Cumulative time: 0.054931640625
Preprocessing time: 0.011654376983642578 Inference time: 0.01372385025024414 Add cuts time: 0.0046808719635009766 Cut analysis time: 0.00045013427734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30510 (3), -0.26239 (3), -0.25144 (3), -0.19516 (3), -0.19156 (3), -0.15592 (3), -0.14332 (3), -0.14298 (3), -0.07513 (3), -0.02312 (3), 
Length of domains: 10
Time: pickout 0.0009    decision 0.0203    set_bounds 0.0162    solve 0.1360    add 0.1102    
Accumulated time: pickout 0.0024    decision 0.5885    set_bounds 0.0396    solve 0.4026    add 0.3314    
Current (lb-rhs): -0.30510038137435913
110 domains visited
Cumulative time: 1.5302391052246094

Shallow-BaB round 4
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] 
split level 1: [/input-12, 88] [/input-12, 95] [/input-12, 95] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] 
split level 2: [/input-12, 38] [/input-12, 38] [/input-12, 88] [/input-12, 95] [/input-12, 38] [/input-12, 95] [/input-12, 38] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
split level 3: [/input-12, 58] [/input-12, 58] [/input-12, 38] [/input-12, 38] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 38] [/input-12, 38] [/input-12, 58] 
split level 4: [/input-12, 49] [/input-12, 49] [/input-12, 58] [/input-12, 58] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 58] [/input-12, 58] [/input-12, 49] 
split level 5: [/input-12, 8] [/input-12, 8] [/input-12, 49] [/input-12, 49] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 49] [/input-12, 49] [/input-12, 8] 
split level 6: [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] 
split level 7: [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] 
split level 8: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-8, 1123] [/input-12, 82] [/input-8, 1123] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
split level 9: [/input-8, 1123] [/input-8, 1123] [/input-8, 1123] [/input-12, 82] [/input-8, 1492] [/input-12, 82] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] 
split level 10: [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] 
split level 11: [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 60] [/input-8, 1492] [/input-12, 60] [/input-12, 60] 
split level 12: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-8, 1492] [/input-12, 60] [/input-8, 1492] [/input-8, 1492] 
split level 13: [/input-8, 1492] [/input-8, 1492] [/input-12, 15] [/input-8, 1492] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
split level 14: [/input-12, 15] [/input-12, 15] [/input-8, 1492] [/input-12, 15] [/input-12, 35] [/input-8, 1492] [/input-8, 1482] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
split level 15: [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-8, 872] [/input-12, 35] [/input-12, 35] [/input-8, 872] [/input-8, 1530] [/input-8, 1530] 
split level 16: [/input-8, 1530] [/input-8, 1530] [/input-8, 1530] [/input-8, 1110] [/input-8, 1841] [/input-8, 1530] [/input-8, 872] [/input-8, 1110] [/input-8, 872] [/input-8, 872] 
split level 17: [/input-8, 1110] [/input-8, 1110] [/input-8, 1110] [/input-8, 1530] [/input-8, 1110] [/input-8, 1110] [/input-8, 1841] [/input-8, 716] [/input-8, 1841] [/input-8, 1110] 
split level 18: [/input-8, 872] [/input-8, 872] [/input-8, 872] [/input-8, 872] [/input-8, 179] [/input-8, 872] [/input-8, 1110] [/input-8, 873] [/input-8, 1110] [/input-8, 179] 
split level 19: [/input-8, 1051] [/input-8, 873] [/input-8, 1051] [/input-8, 1051] [/input-8, 180] [/input-8, 1051] [/input-8, 873] [/input-8, 180] [/input-8, 180] [/input-8, 180] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0287253856658936, worst -0.3237324357032776

all verified at 3th iter
Time: prepare 0.0170    bound 0.0259    transfer 0.0007    finalize 0.0021    func 0.0483    
Accumulated time: func 0.5488    prepare 0.0533    bound 0.4844    transfer 0.0030    finalize 0.0093    
all_split False
======================Cut inference begins======================
max lb tensor(0.68537790) min lb tensor(0.00051296)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 11
#cuts >= 20: 0
BICCOS time: 0.20810747146606445 
BICCOS Cumulative time: 0.26303911209106445
Preprocessing time: 0.011690616607666016 Inference time: 0.18395614624023438 Add cuts time: 0.011980056762695312 Cut analysis time: 0.00048065185546875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0650    set_bounds 0.0167    solve 0.0484    add 0.0250    
Accumulated time: pickout 0.0031    decision 0.6534    set_bounds 0.0564    solve 0.4509    add 0.3564    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
110 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 40] 
split level 1: [/input-12, 88] 
split level 2: [/input-12, 95] 
split level 3: [/input-12, 61] 
split level 4: [/input-12, 38] 
split level 5: [/input-12, 58] 
split level 6: [/input-12, 49] 
split level 7: [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.04671204090118408

all verified at 0th iter
Time: prepare 0.0037    bound 0.0052    transfer 0.0005    finalize 0.0017    func 0.0128    
Accumulated time: func 0.5616    prepare 0.0574    bound 0.4896    transfer 0.0036    finalize 0.0111    
all_split False
======================Cut inference begins======================
max lb tensor(1.81387925) min lb tensor(0.04671204)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 11.
#cuts 1-3: 11
#cuts >= 20: 0
BICCOS time: 0.006510019302368164 
BICCOS Cumulative time: 0.2695491313934326
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0244    set_bounds 0.0169    solve 0.0129    add 0.0001    
Accumulated time: pickout 0.0035    decision 0.6778    set_bounds 0.0732    solve 0.4638    add 0.3565    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
110 domains visited
Cumulative time: 1.9607305526733398


Properties batch 5, size 1
Remaining timeout: 194.56953239440918
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 194.56897139549255
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 194.5689287185669
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 194.56890559196472
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 5.4311 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 56, vnnlib ID: 56 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-41.76406097, -45.48337936, -46.52308273, -48.80912399, -46.53784943,
         -50.56176376, -49.52967453, -50.09123993, -41.30035019, -45.72903061]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [964]; unstable size 964; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 344, 1, 964] with unstable size 343 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 34, 1, 964] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 964] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [343]; unstable size 343; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 34, 1, 343] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 343] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.26610136,  2.10812163,  4.16987705,  1.72249222,  5.68378115,
          4.46470261,  3.71181154, -3.62181616,  1.51373291]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-41.76406097, -45.48337936, -46.52308273, -48.80912399, -46.53784943,
         -50.56176376, -49.52967453, -50.09123993, -41.30035019, -45.72903061]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-41.76406097, -45.48337936, -46.52308273, -48.80912399, -46.53784943,
          -50.56176376, -49.52967453, -50.09123993, -41.30035019, -45.72903061]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.46371078]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.24920666e+00,  1.67777801e+00,  1.32857168e+00,  ...,
             2.80952454e-01,  1.06349289e-01, -5.23808524e-02],
           [ 9.79365110e-01,  1.39206374e+00,  1.24920666e+00,  ...,
            -1.95237994e-01, -1.79364979e-01, -1.31745934e-01],
           [ 1.28095269e+00,  1.39206374e+00,  9.15873051e-01,  ...,
            -2.06348225e-02,  1.11112073e-02,  2.17460394e-01],
           ...,
           [-4.96825397e-01, -4.80952382e-01, -4.33333218e-01,  ...,
            -4.80952382e-01, -4.96825397e-01, -4.96825397e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.80952382e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.96825397e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01]],

          [[ 1.91626441e+00,  2.06119204e+00,  1.70692456e+00,  ...,
             1.27214205e+00,  1.15942061e+00,  1.06280196e+00],
           [ 1.72302771e+00,  1.88405824e+00,  1.83574903e+00,  ...,
             1.07890511e+00,  1.06280196e+00,  1.04669893e+00],
           [ 1.94847047e+00,  1.91626441e+00,  1.69082153e+00,  ...,
             1.19162667e+00,  1.20772982e+00,  1.30434811e+00],
           ...,
           [-3.22059989e-02, -4.83090580e-02, -3.22059989e-02,  ...,
            -6.44121096e-02, -8.05151686e-02, -8.05151686e-02],
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -3.22059989e-02],
           [-6.44121096e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -1.61029361e-02]],

          [[ 2.10045004e+00,  2.08545780e+00,  1.81559265e+00,  ...,
             1.84557760e+00,  1.80060017e+00,  1.74063015e+00],
           [ 1.96551764e+00,  1.92054021e+00,  1.96551764e+00,  ...,
             1.87556267e+00,  1.86057019e+00,  1.81559265e+00],
           [ 2.08545780e+00,  1.96551764e+00,  1.96551764e+00,  ...,
             1.95052516e+00,  1.95052516e+00,  1.96551764e+00],
           ...,
           [ 2.11394474e-01,  1.21439442e-01,  1.81409463e-01,  ...,
             2.11394474e-01,  2.11394474e-01,  2.11394474e-01],
           [ 2.26386964e-01,  1.51424453e-01,  1.81409463e-01,  ...,
             2.26386964e-01,  2.26386964e-01,  2.41379470e-01],
           [ 1.81409463e-01,  1.66416958e-01,  1.96401969e-01,  ...,
             1.96401969e-01,  2.11394474e-01,  2.26386964e-01]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0725 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 57, vnnlib ID: 57 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.78146172, -29.35285950, -22.60057640, -22.43998909, -23.34507942,
         -21.84930992, -24.22325706, -24.27913284, -30.93592644, -29.22196198]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [784]; unstable size 784; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 344, 1, 784] with unstable size 343 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 45, 1, 784] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 784] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [343]; unstable size 343; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 45, 1, 343] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 343] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [44]; unstable size 44; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.76373124,  3.72621250, -2.12337661, -0.42014104, -0.88987207,
         -0.06411266, -0.48147011,  4.77575636,  3.10988283]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.78146172, -29.35285950, -22.60057640, -22.43998909, -23.34507942,
         -21.84930992, -24.22325706, -24.27913284, -30.93592644, -29.22196198]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.42513275, -30.04544449, -22.67414665, -23.44040680, -23.77882385,
          -22.92246437, -24.83906174, -24.81859589, -31.57107162, -30.13834953],
         [-28.42513275, -30.04544449, -22.67414665, -23.44040680, -23.77882385,
          -22.92246437, -24.83906174, -24.81859589, -31.57107162, -30.13834953]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.24831772,  0.51794243,  0.85635948,  1.91659737,  1.89613152]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0069 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0715 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 58, vnnlib ID: 58 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.08035278, -29.35397530, -30.84007645, -28.74387550, -32.50262451,
         -30.45745277, -30.87613869, -32.92050171, -29.53679657, -29.58023643]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [602]; unstable size 602; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 291, 1, 602] with unstable size 290 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 38, 1, 602] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 602] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [290]; unstable size 290; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 38, 1, 290] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 290] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [37]; unstable size 37; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.86188281, -2.58388615, -0.32639980,  1.45079923,  0.72139335,
          0.03575873,  2.30048156, -2.00259542, -1.73288953]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.08035278, -29.35397530, -30.84007645, -28.74387550, -32.50262451,
         -30.45745277, -30.87613869, -32.92050171, -29.53679657, -29.58023643]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.12136841, -29.28388023, -32.14646912, -30.13572884, -33.87952042,
          -31.83791161, -32.06431580, -34.37641907, -30.09585571, -30.14065361],
         [-31.12136841, -29.28388023, -32.14646912, -30.13572884, -33.87952042,
          -31.83791161, -32.06431580, -34.37641907, -30.09585571, -30.14065361]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.98563957, -0.85184860,  2.01074028, -0.03987312,  0.00492477]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0060 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0882 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 59, vnnlib ID: 59 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.14471817, -29.76081848, -24.95824051, -24.91574860, -24.67372704,
         -26.12978363, -22.77488327, -28.20998383, -28.16258049, -30.38860321]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1031]; unstable size 1031; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 394, 1, 1031] with unstable size 393 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 55, 1, 1031] with unstable size 54 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1031] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [393]; unstable size 393; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 55, 1, 393] with unstable size 54 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 393] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [54]; unstable size 54; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 54] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.70882714,  1.99994802, -1.90952086, -0.89402741, -1.76801467,
         -0.07322133,  1.17210579,  0.34328425,  1.50580359]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.14471817, -29.76081848, -24.95824051, -24.91574860, -24.67372704,
         -26.12978363, -22.77488327, -28.20998383, -28.16258049, -30.38860321]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.32it/s]100%|██████████| 1/1 [00:00<00:00,  8.31it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.65855789, -28.23293877, -23.56970215, -23.52195930, -22.70538902,
          -24.75399017, -21.93559647, -26.44519424, -26.73395157, -28.84436417],
         [-26.65855789, -28.23293877, -23.56970215, -23.52195930, -22.70538902,
          -24.75399017, -21.93559647, -26.44519424, -26.73395157, -28.84436417]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.63410568, 1.58636284, 0.76979256, 2.81839371]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1233 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 4.4087371826171875
alpha/beta optimization time: 1.3249704837799072
initial alpha-crown bounds: tensor([[ 1.15564418,  2.35829210, -1.53122139, -0.64561045, -1.41057110,
          0.22691691,  1.55222785,  0.78268242,  1.92037678]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 3 ; Worst class: (+ rhs) -1.5312213897705078
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.46881985664368
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.46877670288086
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.4687464237213
Verifying property 2 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.53122139]], device='cuda:0') need to verify.
Model prediction is: tensor([-28.14471817, -29.76081848, -24.95824051, -24.91574860, -24.67372704,
        -26.12978363, -22.77488327, -28.20998383, -28.16258049, -30.38860321],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.53122139]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1031
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 377
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1461
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010561943054199219
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 92] 
split level 1: [/input-12, 62] 
split level 2: [/input-12, 57] 
split level 3: [/input-12, 22] 
split level 4: [/input-12, 7] 
split level 5: [/input-12, 40] 
split level 6: [/input-12, 15] 
split level 7: [/input-12, 28] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32062816619873047
10 lb beta sum: 0.0, worst -0.3178410530090332
Time: prepare 0.0020    bound 0.1008    transfer 0.0016    finalize 0.0016    func 0.1077    
Accumulated time: func 0.1077    prepare 0.0024    bound 0.1008    transfer 0.0016    finalize 0.0016    
all_split False
======================Cut inference begins======================
max lb tensor(0.67625976) min lb tensor(-0.31644726)
Number of Verified Splits: 222 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.5312137603759766
10 lb beta sum: 0.0, worst -1.5312271118164062
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 4-6: 4
#cuts 7-9: 14
#cuts >= 20: 0
BICCOS time: 0.20561766624450684 
BICCOS Cumulative time: 0.20561766624450684
Preprocessing time: 0.006894826889038086 Inference time: 0.19482660293579102 Add cuts time: 0.0021903514862060547 Cut analysis time: 0.0017058849334716797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31645 (8), -0.28459 (8), -0.25033 (8), -0.24653 (8), -0.23323 (8), -0.19940 (8), -0.19813 (8), -0.19679 (8), -0.19220 (8), -0.17504 (8), -0.16927 (8), -0.16604 (8), -0.13991 (8), -0.13281 (8), -0.12657 (8), -0.11768 (8), -0.10674 (8), -0.09752 (8), -0.09209 (8), -0.09123 (8), 
Length of domains: 34
Time: pickout 0.0004    decision 0.0250    set_bounds 0.0182    solve 0.1078    add 0.0705    
Accumulated time: pickout 0.0004    decision 0.0250    set_bounds 0.0182    solve 0.1078    add 0.0705    
Current (lb-rhs): -0.31644725799560547
34 domains visited
Cumulative time: 0.43932437896728516

BaB round 2
batch: 34
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
split level 1: [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 70] [/input-12, 48] [/input-12, 48] 
split level 2: [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 48] [/input-12, 70] [/input-12, 70] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02169632911682129
10 lb beta sum: 0.0, worst -0.01907205581665039
Time: prepare 0.0039    bound 0.1221    transfer 0.0026    finalize 0.0017    func 0.1319    
Accumulated time: func 0.2396    prepare 0.0065    bound 0.2229    transfer 0.0041    finalize 0.0032    
all_split False
======================Cut inference begins======================
max lb tensor(0.97338009) min lb tensor(-0.01771116)
Number of Verified Splits: 270 of 272
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.5346295833587646
10 lb beta sum: 0.004155334550887346, worst -1.532151222229004
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 4-6: 11
#cuts 7-9: 25
#cuts >= 20: 0
BICCOS time: 0.28951334953308105 
BICCOS Cumulative time: 0.4951310157775879
Preprocessing time: 0.007952213287353516 Inference time: 0.27115750312805176 Add cuts time: 0.008173704147338867 Cut analysis time: 0.002229928970336914
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01771 (11), -0.00457 (11), 
Length of domains: 2
Time: pickout 0.0068    decision 0.0159    set_bounds 0.0106    solve 0.1320    add 0.0262    
Accumulated time: pickout 0.0072    decision 0.0409    set_bounds 0.0288    solve 0.2398    add 0.0967    
Current (lb-rhs): -0.017711162567138672
36 domains visited
Cumulative time: 0.9288358688354492

BaB round 3
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] [/input-12, 61] 
split level 1: [/input-12, 8] [/input-12, 8] 
split level 2: [/input-12, 50] [/input-12, 50] 
split level 3: [/input-12, 71] [/input-12, 71] 
split level 4: [/input-12, 1] [/input-12, 1] 
split level 5: [/input-12, 16] [/input-12, 16] 
split level 6: [/input-12, 19] [/input-12, 19] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.42212677001953125

all verified at 0th iter
Time: prepare 0.0036    bound 0.0047    transfer 0.0013    finalize 0.0015    func 0.0128    
Accumulated time: func 0.2525    prepare 0.0105    bound 0.2276    transfer 0.0054    finalize 0.0048    
all_split False
======================Cut inference begins======================
max lb tensor(0.95117003) min lb tensor(0.42212677)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 36.
#cuts 4-6: 11
#cuts 7-9: 25
#cuts >= 20: 0
BICCOS time: 0.007517576217651367 
BICCOS Cumulative time: 0.5026485919952393
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0231    set_bounds 0.0164    solve 0.0129    add 0.0003    
Accumulated time: pickout 0.0084    decision 0.0640    set_bounds 0.0453    solve 0.2527    add 0.0970    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
36 domains visited
Cumulative time: 0.9911363124847412


Properties batch 3, size 1
Remaining timeout: 197.28628611564636
Verifying property 3 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.64561045]], device='cuda:0') need to verify.
Model prediction is: tensor([-28.14471817, -29.76081848, -24.95824051, -24.91574860, -24.67372704,
        -26.12978363, -22.77488327, -28.20998383, -28.16258049, -30.38860321],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.64561045]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1031
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 377
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1461
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.918212890625e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 33] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 65] 
split level 3: [/input-12, 85] 
split level 4: [/input-12, 82] 
split level 5: [/input-12, 1] 
split level 6: [/input-12, 19] 
split level 7: [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.08316534757614136

all verified at 0th iter
Time: prepare 0.0020    bound 0.0044    transfer 0.0005    finalize 0.0015    func 0.0101    
Accumulated time: func 0.0101    prepare 0.0024    bound 0.0044    transfer 0.0005    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(0.99754202) min lb tensor(0.08316535)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006713390350341797 
BICCOS Cumulative time: 0.006713390350341797
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.0235    set_bounds 0.0164    solve 0.0102    add 0.0003    
Accumulated time: pickout 0.0003    decision 0.0235    set_bounds 0.0164    solve 0.0102    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0622706413269043


Properties batch 4, size 1
Remaining timeout: 197.04816222190857
Verifying property 4 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.41057110]], device='cuda:0') need to verify.
Model prediction is: tensor([-28.14471817, -29.76081848, -24.95824051, -24.91574860, -24.67372704,
        -26.12978363, -22.77488327, -28.20998383, -28.16258049, -30.38860321],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.41057110]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1031
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 377
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1461
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001361370086669922
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 61] 
split level 1: [/input-12, 40] 
split level 2: [/input-12, 71] 
split level 3: [/input-12, 88] 
split level 4: [/input-12, 38] 
split level 5: [/input-12, 8] 
split level 6: [/input-12, 58] 
split level 7: [/input-12, 62] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4480588436126709
10 lb beta sum: 0.0, worst -0.44470691680908203
Time: prepare 0.0018    bound 0.1010    transfer 0.0005    finalize 0.0015    func 0.1066    
Accumulated time: func 0.1066    prepare 0.0023    bound 0.1010    transfer 0.0005    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(1.39760447) min lb tensor(-0.44333291)
Number of Verified Splits: 244 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.4105656147003174
10 lb beta sum: 0.0, worst -1.4105958938598633
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 1
#cuts 4-6: 14
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.21308517456054688 
BICCOS Cumulative time: 0.21308517456054688
Preprocessing time: 0.006682634353637695 Inference time: 0.2020549774169922 Add cuts time: 0.0031280517578125 Cut analysis time: 0.0012195110321044922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.44333 (8), -0.37167 (8), -0.36575 (8), -0.25792 (8), -0.23569 (8), -0.15569 (8), -0.15361 (8), -0.14353 (8), -0.08858 (8), -0.07652 (8), -0.03893 (8), -0.03256 (8), 
Length of domains: 12
Time: pickout 0.0004    decision 0.0241    set_bounds 0.0164    solve 0.1066    add 0.0440    
Accumulated time: pickout 0.0004    decision 0.0241    set_bounds 0.0164    solve 0.1066    add 0.0440    
Current (lb-rhs): -0.4433329105377197
12 domains visited
Cumulative time: 0.41367220878601074

BaB round 2
batch: 12
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] 
split level 1: [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] 
split level 2: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
split level 3: [/input-12, 19] [/input-12, 50] [/input-12, 19] [/input-12, 19] [/input-12, 50] [/input-12, 19] [/input-12, 19] [/input-12, 50] [/input-12, 19] [/input-12, 50] 
split level 4: [/input-12, 50] [/input-12, 19] [/input-12, 50] [/input-12, 50] [/input-12, 19] [/input-12, 50] [/input-12, 50] [/input-12, 19] [/input-12, 50] [/input-12, 19] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23643088340759277
10 lb beta sum: 0.0, worst -0.23487615585327148
Time: prepare 0.0053    bound 0.1269    transfer 0.0022    finalize 0.0028    func 0.1396    
Accumulated time: func 0.2462    prepare 0.0078    bound 0.2279    transfer 0.0027    finalize 0.0043    
all_split False
======================Cut inference begins======================
max lb tensor(0.53334570) min lb tensor(-0.23420811)
Number of Verified Splits: 361 of 384
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9219248294830322
10 lb beta sum: 0.2813836634159088, worst -0.7245912551879883
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 76.
#cuts 1-3: 1
#cuts 4-6: 14
#cuts 7-9: 42
#cuts 10-12: 19
#cuts >= 20: 0
BICCOS time: 0.365588903427124 
BICCOS Cumulative time: 0.5786740779876709
Preprocessing time: 0.01104116439819336 Inference time: 0.328385591506958 Add cuts time: 0.019971132278442383 Cut analysis time: 0.0061910152435302734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23421 (13), -0.21458 (13), -0.18048 (13), -0.16428 (13), -0.16196 (13), -0.16148 (13), -0.13944 (13), -0.12191 (13), -0.11821 (13), -0.11225 (13), -0.11134 (13), -0.09988 (13), -0.08540 (13), -0.06274 (13), -0.05465 (13), -0.05326 (13), -0.04279 (13), -0.04215 (13), -0.03213 (13), -0.02418 (13), 
Length of domains: 23
Time: pickout 0.0012    decision 0.0174    set_bounds 0.0195    solve 0.1397    add 0.0192    
Accumulated time: pickout 0.0016    decision 0.0415    set_bounds 0.0358    solve 0.2464    add 0.0632    
Current (lb-rhs): -0.2342081069946289
35 domains visited
Cumulative time: 0.9789276123046875

BaB round 3
batch: 23
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] 
split level 1: [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 82] [/input-12, 16] 
split level 2: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 60] [/input-12, 60] [/input-12, 82] [/input-12, 16] [/input-12, 82] 
split level 3: [/input-8, 868] [/input-8, 868] [/input-12, 60] [/input-12, 60] [/input-8, 868] [/input-12, 82] [/input-12, 82] [/input-8, 868] [/input-12, 60] [/input-12, 60] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1403179168701172
10 lb beta sum: 0.0, worst -0.13925743103027344
Time: prepare 0.0064    bound 0.1228    transfer 0.0014    finalize 0.0027    func 0.1357    
Accumulated time: func 0.3819    prepare 0.0145    bound 0.3506    transfer 0.0041    finalize 0.0070    
all_split False
======================Cut inference begins======================
max lb tensor(0.39990658) min lb tensor(-0.13883829)
Number of Verified Splits: 348 of 368
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 8
#cuts 4-6: 12
#cuts 7-9: 16
#cuts >= 20: 0
BICCOS time: 0.06141090393066406 
BICCOS Cumulative time: 0.640084981918335
Preprocessing time: 0.01074981689453125 Inference time: 0.04152488708496094 Add cuts time: 0.007303476333618164 Cut analysis time: 0.001832723617553711
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13884 (17), -0.11854 (17), -0.08223 (17), -0.06888 (17), -0.06453 (17), -0.06344 (17), -0.05523 (17), -0.05356 (17), -0.04208 (17), -0.03608 (17), -0.02856 (17), -0.02710 (17), -0.02188 (17), -0.02140 (17), -0.01469 (17), -0.01403 (17), -0.01278 (17), -0.01154 (17), -0.00859 (17), -0.00725 (17), 
Length of domains: 20
Time: pickout 0.0018    decision 0.0166    set_bounds 0.0191    solve 0.1358    add 0.0010    
Accumulated time: pickout 0.0034    decision 0.0582    set_bounds 0.0550    solve 0.3821    add 0.0642    
Current (lb-rhs): -0.1388382911682129
55 domains visited
Cumulative time: 1.2162840366363525

BaB round 4
batch: 20
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-8, 868] [/input-12, 48] [/input-12, 48] [/input-12, 60] [/input-12, 48] 
split level 1: [/input-12, 48] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 48] [/input-12, 15] [/input-12, 15] [/input-12, 48] [/input-12, 15] 
split level 2: [/input-12, 15] [/input-8, 868] [/input-8, 868] [/input-8, 868] [/input-8, 868] [/input-12, 15] [/input-8, 868] [/input-8, 868] [/input-12, 15] [/input-8, 868] 
split level 3: [/input-8, 860] [/input-8, 860] [/input-8, 860] [/input-8, 860] [/input-8, 860] [/input-8, 860] [/input-8, 860] [/input-8, 860] [/input-8, 860] [/input-8, 860] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05294513702392578
10 lb beta sum: 0.009865383617579937, worst -0.05226898193359375
Time: prepare 0.0063    bound 0.1228    transfer 0.0014    finalize 0.0018    func 0.1344    
Accumulated time: func 0.5163    prepare 0.0212    bound 0.4735    transfer 0.0055    finalize 0.0088    
all_split False
======================Cut inference begins======================
max lb tensor(0.12140012) min lb tensor(-0.05195475)
Number of Verified Splits: 312 of 320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 9
#cuts 4-6: 12
#cuts 7-9: 16
#cuts >= 20: 0
BICCOS time: 0.05586647987365723 
BICCOS Cumulative time: 0.6959514617919922
Preprocessing time: 0.009257793426513672 Inference time: 0.0413055419921875 Add cuts time: 0.0035529136657714844 Cut analysis time: 0.0017502307891845703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05195 (21), -0.04615 (21), -0.04510 (21), -0.04286 (21), -0.04089 (21), -0.03751 (21), -0.03629 (21), -0.03270 (21), 
Length of domains: 8
Time: pickout 0.0015    decision 0.0159    set_bounds 0.0165    solve 0.1345    add 0.0008    
Accumulated time: pickout 0.0048    decision 0.0740    set_bounds 0.0715    solve 0.5166    add 0.0650    
Current (lb-rhs): -0.05195474624633789
63 domains visited
Cumulative time: 1.4440131187438965

BaB round 5
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 989] [/input-8, 989] [/input-8, 989] [/input-8, 989] [/input-8, 989] [/input-8, 989] [/input-8, 989] [/input-8, 989] 
split level 1: [/input-8, 1491] [/input-8, 1491] [/input-8, 1491] [/input-8, 1491] [/input-8, 1491] [/input-8, 1491] [/input-8, 1491] [/input-8, 1491] 
split level 2: [/input-8, 990] [/input-8, 990] [/input-8, 990] [/input-8, 990] [/input-8, 990] [/input-8, 990] [/input-8, 990] [/input-8, 990] 
split level 3: [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
split level 4: [/input-8, 857] [/input-8, 857] [/input-8, 857] [/input-8, 857] [/input-8, 857] [/input-8, 857] [/input-8, 857] [/input-8, 857] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.007840394973754883

all verified at 0th iter
Time: prepare 0.0051    bound 0.0048    transfer 0.0005    finalize 0.0015    func 0.0135    
Accumulated time: func 0.5298    prepare 0.0266    bound 0.4782    transfer 0.0059    finalize 0.0103    
all_split False
======================Cut inference begins======================
max lb tensor(0.08925080) min lb tensor(0.00784039)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 37.
#cuts 1-3: 9
#cuts 4-6: 12
#cuts 7-9: 16
#cuts >= 20: 0
BICCOS time: 0.007516384124755859 
BICCOS Cumulative time: 0.703467845916748
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0013    decision 0.0167    set_bounds 0.0161    solve 0.0136    add 0.0003    
Accumulated time: pickout 0.0061    decision 0.0907    set_bounds 0.0876    solve 0.5302    add 0.0653    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
63 domains visited
Cumulative time: 1.500295639038086


Properties batch 5, size 1
Remaining timeout: 195.4211504459381
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 195.4210648536682
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 195.42103910446167
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 195.4210171699524
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 4.5790 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 60, vnnlib ID: 60 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-66.22455597, -59.92525864, -65.64134979, -63.93499756, -68.79487610,
         -65.75015259, -65.43679047, -69.49861908, -62.32413864, -60.84412003]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1102]; unstable size 1102; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 229, 1, 1102] with unstable size 228 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 1102] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1102] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [228]; unstable size 228; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 228] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 228] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.91811371,  1.94436836,  0.55043602,  4.44103384,  1.94029999,
          2.31849670,  5.34295177, -0.44322395, -0.92008984]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-66.22455597, -59.92525864, -65.64134979, -63.93499756, -68.79487610,
         -65.75015259, -65.43679047, -69.49861908, -62.32413864, -60.84412003]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.31it/s]100%|██████████| 1/1 [00:00<00:00,  8.31it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-64.28025818, -58.70403290, -63.65593719, -61.80207443, -66.70831299,
          -63.61569977, -63.46656418, -67.34992218, -60.35741425, -58.74855042],
         [-64.28025818, -58.70403290, -63.65593719, -61.80207443, -66.70831299,
          -63.61569977, -63.46656418, -67.34992218, -60.35741425, -58.74855042]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.65338135, 0.04451752]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1236 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.313764572143555
alpha/beta optimization time: 1.281191349029541
initial alpha-crown bounds: tensor([[ 3.07915640,  2.09627819,  0.69224453,  4.59081888,  2.09823513,
          2.40875053,  5.51217794, -0.31066132, -0.85323548]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.8532354831695557
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.52700877189636
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.52696681022644
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.52694153785706
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.52691984176636
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.52689957618713
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.52687907218933
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.52685952186584
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.52683877944946
Verifying property 7 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.31066132]], device='cuda:0') need to verify.
Model prediction is: tensor([-66.22455597, -59.92525864, -65.64134979, -63.93499756, -68.79487610,
        -65.75015259, -65.43679047, -69.49861908, -62.32413864, -60.84412003],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.31066132]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1102
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 220
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1348
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010585784912109375
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3106541633605957
10 lb beta sum: 0.0, worst -0.3107032775878906
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0579    transfer 0.0001    finalize 0.0002    func 0.0584    
Accumulated time: func 0.0584    prepare 0.0002    bound 0.0579    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 75] 
split level 1: [/input-12, 84] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 88] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 61] 
split level 6: [/input-12, 36] 
split level 7: [/input-12, 46] 
split level 8: [/input-12, 57] 
split level 9: [/input-12, 50] 
split level 10: [/input-12, 85] 
split level 11: [/input-8, 1771] 
split level 12: [/input-12, 60] 
split level 13: [/input-8, 1836] 
split level 14: [/input-8, 2019] 
split level 15: [/input-8, 1830] 
split level 16: [/input-12, 28] 
split level 17: [/input-12, 14] 
split level 18: [/input-8, 1651] 
split level 19: [/input-8, 1500] 
split level 20: [/input-12, 15] 
split level 21: [/input-8, 1588] 
split level 22: [/input-8, 563] 
split level 23: [/input-8, 214] 
split level 24: [/input-8, 561] 
split level 25: [/input-12, 58] 
split level 26: [/input-12, 71] 
split level 27: [/input, 1959] 
split level 28: [/input-8, 1773] 
split level 29: [/input-8, 485] 
split level 30: [/input-8, 626] 
split level 31: [/input-8, 1883] 
split level 32: [/input-8, 1642] 
split level 33: [/input-8, 625] 
split level 34: [/input-8, 546] 
split level 35: [/input, 822] 
split level 36: [/input-8, 915] 
split level 37: [/input-8, 1941] 
split level 38: [/input-8, 1891] 
split level 39: [/input-8, 218] 
split level 40: [/input-8, 1306] 
split level 41: [/input, 823] 
split level 42: [/input-8, 985] 
split level 43: [/input-8, 336] 
split level 44: [/input-8, 1636] 
split level 45: [/input-8, 115] 
split level 46: [/input-8, 374] 
split level 47: [/input, 566] 
split level 48: [/input, 2359] 
split level 49: [/input-8, 90] 
split level 50: [/input, 821] 
split level 51: [/input, 3938] 
split level 52: [/input-8, 1276] 
split level 53: [/input, 1011] 
split level 54: [/input-8, 1660] 
split level 55: [/input-8, 1732] 
split level 56: [/input, 4023] 
split level 57: [/input, 1722] 
split level 58: [/input-8, 1529] 
split level 59: [/input-8, 474] 
split level 60: [/input, 1991] 
split level 61: [/input, 583] 
split level 62: [/input, 2360] 
split level 63: [/input-8, 1637] 
split level 64: [/input, 1012] 
split level 65: [/input-8, 229] 
split level 66: [/input, 4021] 
split level 67: [/input-8, 1496] 
split level 68: [/input, 1737] 
split level 69: [/input-8, 1297] 
split level 70: [/input, 567] 
split level 71: [/input, 741] 
split level 72: [/input, 582] 
split level 73: [/input, 1000] 
split level 74: [/input-8, 701] 
split level 75: [/input, 3894] 
split level 76: [/input, 3176] 
split level 77: [/input, 55] 
split level 78: [/input-8, 1731] 
split level 79: [/input-8, 1300] 
split level 80: [/input-8, 1508] 
split level 81: [/input-8, 1145] 
split level 82: [/input, 2376] 
split level 83: [/input-8, 1866] 
split level 84: [/input, 1020] 
split level 85: [/input-8, 1150] 
split level 86: [/input, 3970] 
split level 87: [/input, 56] 
split level 88: [/input, 825] 
split level 89: [/input, 996] 
split level 90: [/input-8, 1488] 
split level 91: [/input-8, 222] 
split level 92: [/input, 568] 
split level 93: [/input, 839] 
split level 94: [/input, 565] 
split level 95: [/input-8, 917] 
split level 96: [/input, 4093] 
split level 97: [/input, 3242] 
split level 98: [/input, 71] 
split level 99: [/input-8, 1784] 
split level 100: [/input, 3893] 
split level 101: [/input, 584] 
split level 102: [/input, 824] 
split level 103: [/input, 2537] 
split level 104: [/input, 1018] 
split level 105: [/input, 3895] 
split level 106: [/input, 3896] 
split level 107: [/input-8, 1013] 
split level 108: [/input, 53] 
split level 109: [/input-8, 1874] 
split level 110: [/input-8, 1867] 
split level 111: [/input-8, 1661] 
split level 112: [/input, 3925] 
split level 113: [/input, 2536] 
split level 114: [/input, 820] 
split level 115: [/input, 232] 
split level 116: [/input, 3256] 
split level 117: [/input, 2361] 
split level 118: [/input, 756] 
split level 119: [/input, 2652] 
split level 120: [/input, 551] 
split level 121: [/input, 757] 
split level 122: [/input, 764] 
split level 123: [/input-12, 67] 
split level 124: [/input, 1733] 
split level 125: [/input-8, 1943] 
split level 126: [/input, 1016] 
split level 127: [/input, 808] 
split level 128: [/input, 1208] 
split level 129: [/input, 1207] 
split level 130: [/input, 3879] 
split level 131: [/input, 3969] 
split level 132: [/input-8, 1504] 
split level 133: [/input, 571] 
split level 134: [/input, 750] 
split level 135: [/input, 835] 
split level 136: [/input, 633] 
split level 137: [/input, 4094] 
split level 138: [/input, 57] 
split level 139: [/input, 3908] 
split level 140: [/input, 807] 
split level 141: [/input, 569] 
split level 142: [/input-8, 1258] 
split level 143: [/input, 570] 
split level 144: [/input, 233] 
split level 145: [/input, 2364] 
split level 146: [/input, 70] 
split level 147: [/input, 3264] 
split level 148: [/input-8, 830] 
split level 149: [/input, 755] 
split level 150: [/input, 552] 
split level 151: [/input-8, 318] 
split level 152: [/input, 1387] 
split level 153: [/input-8, 1913] 
split level 154: [/input, 218] 
split level 155: [/input, 2362] 
split level 156: [/input, 851] 
split level 157: [/input, 1739] 
split level 158: [/input, 1720] 
split level 159: [/input, 765] 
split level 160: [/input, 3972] 
split level 161: [/input, 39] 
split level 162: [/input, 2538] 
split level 163: [/input, 1734] 
split level 164: [/input, 1735] 
split level 165: [/input-8, 1730] 
split level 166: [/input, 3988] 
split level 167: [/input-8, 153] 
split level 168: [/input-8, 1935] 
split level 169: [/input, 1019] 
split level 170: [/input, 2357] 
split level 171: [/input, 585] 
split level 172: [/input, 598] 
split level 173: [/input, 2363] 
split level 174: [/input, 579] 
split level 175: [/input, 1017] 
split level 176: [/input, 805] 
split level 177: [/input, 2344] 
split level 178: [/input, 762] 
split level 179: [/input, 550] 
split level 180: [/input, 244] 
split level 181: [/input, 1736] 
split level 182: [/input-8, 1354] 
split level 183: [/input, 2548] 
split level 184: [/input, 535] 
split level 185: [/input, 792] 
split level 186: [/input-8, 1110] 
split level 187: [/input, 58] 
split level 188: [/input, 564] 
split level 189: [/input, 536] 
split level 190: [/input, 819] 
split level 191: [/input, 1731] 
split level 192: [/input, 663] 
split level 193: [/input, 553] 
split level 194: [/input, 2343] 
split level 195: [/input, 549] 
split level 196: [/input, 572] 
split level 197: [/input, 3921] 
split level 198: [/input, 2345] 
split level 199: [/input, 3863] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.31038808822631836
10 lb beta sum: 0.0, worst -0.3103761672973633
Time: prepare 0.0128    bound 0.1039    transfer 0.0024    finalize 0.0027    func 0.1245    
Accumulated time: func 0.1829    prepare 0.0231    bound 0.1618    transfer 0.0025    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.62025166) min lb tensor(-0.31035423)
Number of Verified Splits: 8 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.01085972785949707 
BICCOS Cumulative time: 0.01085972785949707
Preprocessing time: 0.010053634643554688 Inference time: 0.0003402233123779297 Add cuts time: 0.00016164779663085938 Cut analysis time: 0.00030422210693359375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29474 (1), -0.29427 (1), -0.29402 (1), -0.29366 (1), -0.29171 (1), -0.29161 (1), -0.29017 (1), -0.29014 (1), -0.29008 (1), -0.29001 (1), -0.28979 (1), -0.28955 (1), -0.28688 (1), -0.28528 (1), -0.28520 (1), -0.28434 (1), -0.28293 (1), -0.28276 (1), -0.28217 (1), -0.28140 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5435    set_bounds 0.0086    solve 0.1246    add 0.2183    
Accumulated time: pickout 0.0004    decision 0.5435    set_bounds 0.0086    solve 0.1246    add 0.2183    
Current (lb-rhs): -0.2947382926940918
50 domains visited
Cumulative time: 0.9908590316772461

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] 
split level 1: [/input-12, 88] [/input-12, 24] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 84] [/input-12, 24] [/input-12, 84] [/input-12, 88] [/input-12, 84] 
split level 2: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 61] [/input-12, 61] 
split level 3: [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 61] [/input-12, 36] [/input-12, 36] [/input-12, 36] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.28518104553222656
10 lb beta sum: 1.261472463607788, worst -0.002285897731781006

all verified at 11th iter
Time: prepare 0.0073    bound 0.0803    transfer 0.0014    finalize 0.0030    func 0.0947    
Accumulated time: func 0.2775    prepare 0.0307    bound 0.2421    transfer 0.0039    finalize 0.0058    
all_split False
======================Cut inference begins======================
max lb tensor(0.57261753) min lb tensor(0.00033855)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03763437271118164 
BICCOS Cumulative time: 0.04849410057067871
Preprocessing time: 0.012757062911987305 Inference time: 0.01686573028564453 Add cuts time: 0.007811069488525391 Cut analysis time: 0.00020051002502441406
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0088    decision 0.0225    set_bounds 0.0143    solve 0.0947    add 0.0162    
Accumulated time: pickout 0.0091    decision 0.5660    set_bounds 0.0229    solve 0.2193    add 0.2345    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 75] 
split level 1: [/input-12, 84] 
split level 2: [/input-12, 88] 
split level 3: [/input-12, 10] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 36] 
split level 6: [/input-12, 46] 
split level 7: [/input-12, 57] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.2578597068786621

all verified at 0th iter
Time: prepare 0.0037    bound 0.0042    transfer 0.0044    finalize 0.0017    func 0.0157    
Accumulated time: func 0.2932    prepare 0.0348    bound 0.2463    transfer 0.0083    finalize 0.0075    
all_split False
======================Cut inference begins======================
max lb tensor(1.20550251) min lb tensor(0.25785971)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010350227355957031 
BICCOS Cumulative time: 0.05884432792663574
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0167    solve 0.0158    add 0.0001    
Accumulated time: pickout 0.0095    decision 0.5891    set_bounds 0.0396    solve 0.2351    add 0.2346    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.269489049911499


Properties batch 8, size 1
Remaining timeout: 197.04290127754211
Verifying property 8 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.85323548]], device='cuda:0') need to verify.
Model prediction is: tensor([-66.22455597, -59.92525864, -65.64134979, -63.93499756, -68.79487610,
        -65.75015259, -65.43679047, -69.49861908, -62.32413864, -60.84412003],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.85323548]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1102
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 220
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1348
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010371208190917969
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8532358407974243
10 lb beta sum: 0.0, worst -0.8532503843307495
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0598    transfer 0.0001    finalize 0.0001    func 0.0603    
Accumulated time: func 0.0603    prepare 0.0002    bound 0.0598    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 50] 
split level 1: [/input-12, 14] 
split level 2: [/input-12, 28] 
split level 3: [/input-12, 38] 
split level 4: [/input-8, 1508] 
split level 5: [/input-12, 71] 
split level 6: [/input-12, 75] 
split level 7: [/input-12, 61] 
split level 8: [/input-12, 85] 
split level 9: [/input-8, 1500] 
split level 10: [/input-12, 24] 
split level 11: [/input-8, 1891] 
split level 12: [/input-12, 67] 
split level 13: [/input-8, 2019] 
split level 14: [/input-8, 561] 
split level 15: [/input-12, 10] 
split level 16: [/input-12, 58] 
split level 17: [/input-8, 1941] 
split level 18: [/input-8, 485] 
split level 19: [/input-12, 46] 
split level 20: [/input, 968] 
split level 21: [/input, 650] 
split level 22: [/input-8, 1771] 
split level 23: [/input-8, 1933] 
split level 24: [/input, 711] 
split level 25: [/input-8, 1140] 
split level 26: [/input-8, 1306] 
split level 27: [/input-8, 1900] 
split level 28: [/input-8, 713] 
split level 29: [/input-8, 1300] 
split level 30: [/input, 984] 
split level 31: [/input-8, 1309] 
split level 32: [/input-8, 1897] 
split level 33: [/input-8, 1637] 
split level 34: [/input, 2712] 
split level 35: [/input-8, 1908] 
split level 36: [/input-8, 985] 
split level 37: [/input-8, 11] 
split level 38: [/input-8, 336] 
split level 39: [/input, 917] 
split level 40: [/input-8, 1866] 
split level 41: [/input-8, 982] 
split level 42: [/input-8, 1901] 
split level 43: [/input-8, 1867] 
split level 44: [/input-8, 1874] 
split level 45: [/input-8, 1636] 
split level 46: [/input-8, 1865] 
split level 47: [/input, 890] 
split level 48: [/input, 635] 
split level 49: [/input, 900] 
split level 50: [/input, 712] 
split level 51: [/input, 1000] 
split level 52: [/input-8, 218] 
split level 53: [/input, 645] 
split level 54: [/input-8, 1651] 
split level 55: [/input-8, 1642] 
split level 56: [/input-8, 1883] 
split level 57: [/input-8, 328] 
split level 58: [/input-8, 1297] 
split level 59: [/input-8, 715] 
split level 60: [/input-8, 115] 
split level 61: [/input-8, 716] 
split level 62: [/input, 652] 
split level 63: [/input-8, 1496] 
split level 64: [/input-8, 222] 
split level 65: [/input, 201] 
split level 66: [/input-8, 374] 
split level 67: [/input, 2009] 
split level 68: [/input, 905] 
split level 69: [/input-8, 1588] 
split level 70: [/input-12, 36] 
split level 71: [/input, 1012] 
split level 72: [/input, 664] 
split level 73: [/input-8, 2036] 
split level 74: [/input-8, 1711] 
split level 75: [/input, 2216] 
split level 76: [/input-12, 15] 
split level 77: [/input-8, 1687] 
split level 78: [/input, 199] 
split level 79: [/input, 2699] 
split level 80: [/input-8, 915] 
split level 81: [/input, 1020] 
split level 82: [/input-8, 214] 
split level 83: [/input-8, 1943] 
split level 84: [/input, 2520] 
split level 85: [/input-8, 1873] 
split level 86: [/input-8, 12] 
split level 87: [/input, 951] 
split level 88: [/input, 646] 
split level 89: [/input-8, 1935] 
split level 90: [/input-8, 1881] 
split level 91: [/input, 1015] 
split level 92: [/input, 1018] 
split level 93: [/input, 214] 
split level 94: [/input, 233] 
split level 95: [/input-8, 90] 
split level 96: [/input, 2519] 
split level 97: [/input, 2759] 
split level 98: [/input-8, 153] 
split level 99: [/input-8, 1286] 
split level 100: [/input, 582] 
split level 101: [/input-8, 701] 
split level 102: [/input, 4021] 
split level 103: [/input, 183] 
split level 104: [/input, 216] 
split level 105: [/input, 229] 
split level 106: [/input, 235] 
split level 107: [/input, 1019] 
split level 108: [/input, 663] 
split level 109: [/input, 2503] 
split level 110: [/input, 2652] 
split level 111: [/input, 3894] 
split level 112: [/input, 2536] 
split level 113: [/input, 696] 
split level 114: [/input, 821] 
split level 115: [/input, 2538] 
split level 116: [/input-8, 1951] 
split level 117: [/input-8, 1428] 
split level 118: [/input, 3908] 
split level 119: [/input, 218] 
split level 120: [/input, 215] 
split level 121: [/input, 566] 
split level 122: [/input-8, 1488] 
split level 123: [/input, 231] 
split level 124: [/input-8, 318] 
split level 125: [/input, 1017] 
split level 126: [/input, 3176] 
split level 127: [/input, 3879] 
split level 128: [/input-8, 490] 
split level 129: [/input, 3925] 
split level 130: [/input, 55] 
split level 131: [/input-8, 1258] 
split level 132: [/input, 3938] 
split level 133: [/input, 4023] 
split level 134: [/input, 583] 
split level 135: [/input, 820] 
split level 136: [/input, 198] 
split level 137: [/input-8, 1889] 
split level 138: [/input, 3895] 
split level 139: [/input, 184] 
split level 140: [/input, 761] 
split level 141: [/input, 232] 
split level 142: [/input, 3896] 
split level 143: [/input, 598] 
split level 144: [/input, 851] 
split level 145: [/input, 53] 
split level 146: [/input, 3893] 
split level 147: [/input-8, 1229] 
split level 148: [/input-12, 88] 
split level 149: [/input, 568] 
split level 150: [/input, 2360] 
split level 151: [/input-8, 830] 
split level 152: [/input, 4039] 
split level 153: [/input, 643] 
split level 154: [/input, 835] 
split level 155: [/input, 71] 
split level 156: [/input-8, 1913] 
split level 157: [/input, 2537] 
split level 158: [/input, 633] 
split level 159: [/input-8, 1028] 
split level 160: [/input, 250] 
split level 161: [/input, 850] 
split level 162: [/input, 1207] 
split level 163: [/input, 251] 
split level 164: [/input, 567] 
split level 165: [/input-8, 1150] 
split level 166: [/input, 2548] 
split level 167: [/input, 2376] 
split level 168: [/input, 247] 
split level 169: [/input, 2382] 
split level 170: [/input, 760] 
split level 171: [/input, 2542] 
split level 172: [/input, 2487] 
split level 173: [/input, 565] 
split level 174: [/input, 762] 
split level 175: [/input, 759] 
split level 176: [/input, 758] 
split level 177: [/input, 3201] 
split level 178: [/input, 56] 
split level 179: [/input, 551] 
split level 180: [/input, 244] 
split level 181: [/input, 39] 
split level 182: [/input, 57] 
split level 183: [/input-8, 1220] 
split level 184: [/input, 1016] 
split level 185: [/input, 1137] 
split level 186: [/input, 535] 
split level 187: [/input, 246] 
split level 188: [/input, 2363] 
split level 189: [/input, 3863] 
split level 190: [/input, 550] 
split level 191: [/input-8, 1727] 
split level 192: [/input, 824] 
split level 193: [/input, 579] 
split level 194: [/input, 536] 
split level 195: [/input, 741] 
split level 196: [/input, 552] 
split level 197: [/input, 3974] 
split level 198: [/input, 757] 
split level 199: [/input, 2361] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8531849384307861
10 lb beta sum: 0.0, worst -0.8531785011291504
Time: prepare 0.0141    bound 0.1079    transfer 0.0023    finalize 0.0032    func 0.1302    
Accumulated time: func 0.1905    prepare 0.0247    bound 0.1677    transfer 0.0024    finalize 0.0034    
all_split False
======================Cut inference begins======================
max lb tensor(0.22875524) min lb tensor(-0.85317636)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.011435270309448242 
BICCOS Cumulative time: 0.011435270309448242
Preprocessing time: 0.01097869873046875 Inference time: 0.0001277923583984375 Add cuts time: 8.606910705566406e-05 Cut analysis time: 0.00024271011352539062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.83851 (1), -0.83847 (1), -0.83841 (1), -0.83812 (1), -0.83703 (1), -0.83683 (1), -0.83655 (1), -0.83624 (1), -0.83624 (1), -0.83530 (1), -0.83501 (1), -0.83492 (1), -0.83481 (1), -0.83240 (1), -0.83183 (1), -0.83060 (1), -0.83023 (1), -0.83017 (1), -0.83016 (1), -0.82848 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5379    set_bounds 0.0097    solve 0.1304    add 0.1976    
Accumulated time: pickout 0.0004    decision 0.5379    set_bounds 0.0097    solve 0.1304    add 0.1976    
Current (lb-rhs): -0.8385059833526611
50 domains visited
Cumulative time: 0.9741544723510742

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 50] [/input-12, 50] [/input-12, 14] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 14] [/input-12, 50] 
split level 1: [/input-12, 14] [/input-12, 14] [/input-8, 1508] [/input-12, 14] [/input-12, 14] [/input-8, 1508] [/input-12, 14] [/input-12, 14] [/input-8, 1508] [/input-12, 14] 
split level 2: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-8, 1508] [/input-12, 71] [/input-8, 1508] 
split level 3: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 71] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8098756074905396
10 lb beta sum: 0.3936287462711334, worst -0.8083259463310242
Time: prepare 0.0075    bound 0.1277    transfer 0.0007    finalize 0.0026    func 0.1411    
Accumulated time: func 0.3316    prepare 0.0324    bound 0.2953    transfer 0.0031    finalize 0.0060    
all_split False
======================Cut inference begins======================
max lb tensor(0.20446008) min lb tensor(-0.80828589)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.013720512390136719 
BICCOS Cumulative time: 0.02515578269958496
Preprocessing time: 0.012517929077148438 Inference time: 0.0001811981201171875 Add cuts time: 0.00011682510375976562 Cut analysis time: 0.0009045600891113281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50213 (2), -0.50086 (2), -0.50085 (2), -0.49962 (2), -0.49922 (2), -0.49742 (2), -0.49568 (2), -0.49541 (2), -0.49514 (2), -0.49200 (2), -0.49155 (2), -0.48988 (2), -0.48756 (2), -0.48688 (2), -0.48613 (2), -0.48601 (2), -0.48577 (2), -0.48431 (2), -0.48333 (2), -0.48182 (2), 
Length of domains: 50
Time: pickout 0.0016    decision 0.0217    set_bounds 0.0140    solve 0.1411    add 0.2128    
Accumulated time: pickout 0.0019    decision 0.5597    set_bounds 0.0237    solve 0.2715    add 0.4104    
Current (lb-rhs): -0.5021268129348755
100 domains visited
Cumulative time: 1.3863208293914795

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 50] [/input-12, 14] [/input-12, 14] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 14] [/input-12, 50] [/input-12, 50] [/input-8, 1508] 
split level 1: [/input-12, 14] [/input-12, 71] [/input-8, 1508] [/input-8, 1508] [/input-12, 14] [/input-12, 14] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
split level 2: [/input-8, 1508] [/input-12, 61] [/input-12, 71] [/input-12, 71] [/input-8, 1508] [/input-8, 1508] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 3: [/input-8, 1636] [/input-8, 1941] [/input-12, 61] [/input-12, 61] [/input-12, 71] [/input-12, 61] [/input-8, 1933] [/input, 663] [/input-8, 1300] [/input-8, 1900] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4965432286262512
10 lb beta sum: 0.6093918085098267, worst -0.49076563119888306
Time: prepare 0.0076    bound 0.1278    transfer 0.0008    finalize 0.0026    func 0.1413    
Accumulated time: func 0.4729    prepare 0.0403    bound 0.4231    transfer 0.0039    finalize 0.0085    
all_split False
======================Cut inference begins======================
max lb tensor(0.42069161) min lb tensor(-0.48873296)
Number of Verified Splits: 52 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 4
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.01723456382751465 
BICCOS Cumulative time: 0.04239034652709961
Preprocessing time: 0.012495040893554688 Inference time: 0.002468585968017578 Add cuts time: 0.0019161701202392578 Cut analysis time: 0.000354766845703125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23738 (3), -0.23585 (3), -0.23497 (3), -0.23458 (3), -0.23390 (3), -0.22803 (3), -0.21640 (3), -0.20483 (3), -0.20425 (3), -0.19849 (3), -0.19834 (3), -0.19680 (3), -0.19586 (3), -0.19355 (3), -0.19322 (3), -0.19241 (3), -0.19138 (3), -0.18944 (3), -0.18871 (3), -0.18626 (3), 
Length of domains: 50
Time: pickout 0.0081    decision 0.0212    set_bounds 0.0160    solve 0.1414    add 0.1807    
Accumulated time: pickout 0.0100    decision 0.5808    set_bounds 0.0397    solve 0.4129    add 0.5910    
Current (lb-rhs): -0.23738355934619904
150 domains visited
Cumulative time: 1.7712414264678955

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-8, 1508] [/input-8, 1508] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-8, 1508] 
split level 1: [/input-8, 1508] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-12, 71] 
split level 2: [/input-12, 71] [/input-8, 1933] [/input-8, 1933] [/input-12, 61] [/input-12, 61] [/input-12, 71] [/input-12, 61] [/input-12, 71] [/input-12, 61] [/input-12, 61] 
split level 3: [/input-12, 61] [/input-8, 1941] [/input-8, 1941] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1300] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2329716682434082
10 lb beta sum: 0.8751675486564636, worst -0.21449045836925507
Time: prepare 0.0076    bound 0.1277    transfer 0.0019    finalize 0.0025    func 0.1423    
Accumulated time: func 0.6152    prepare 0.0481    bound 0.5507    transfer 0.0058    finalize 0.0110    
all_split False
======================Cut inference begins======================
max lb tensor(0.40017653) min lb tensor(-0.21122673)
Number of Verified Splits: 96 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 5
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.02071857452392578 
BICCOS Cumulative time: 0.06310892105102539
Preprocessing time: 0.012274980545043945 Inference time: 0.004516124725341797 Add cuts time: 0.0031919479370117188 Cut analysis time: 0.0007355213165283203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07068 (4), -0.06909 (4), -0.06808 (4), -0.06757 (4), -0.06627 (4), -0.06521 (4), -0.06466 (4), -0.06463 (4), -0.06446 (4), -0.06358 (4), -0.06329 (4), -0.06028 (4), -0.06018 (4), -0.05998 (4), -0.05985 (4), -0.05940 (4), -0.05883 (4), -0.05846 (4), -0.05833 (4), -0.05710 (4), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0209    set_bounds 0.0153    solve 0.1423    add 0.3539    
Accumulated time: pickout 0.0112    decision 0.6018    set_bounds 0.0550    solve 0.5553    add 0.9449    
Current (lb-rhs): -0.07068485021591187
200 domains visited
Cumulative time: 2.3260488510131836

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1508] [/input-12, 61] [/input-12, 61] [/input-12, 71] [/input-8, 1508] [/input-12, 61] [/input-8, 1508] [/input-12, 61] [/input-12, 71] [/input-12, 14] 
split level 1: [/input-12, 61] [/input-8, 1900] [/input-8, 1900] [/input-8, 1941] [/input-12, 71] [/input-12, 67] [/input-12, 61] [/input-12, 67] [/input-12, 61] [/input-8, 1508] 
split level 2: [/input-8, 1306] [/input-8, 1306] [/input-8, 1306] [/input-8, 1306] [/input-8, 1941] [/input-8, 1306] [/input-8, 1306] [/input-8, 1306] [/input-8, 1900] [/input-12, 61] 
split level 3: [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-8, 1300] [/input-8, 1300] [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-8, 1306] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14416885375976562
10 lb beta sum: 1.1988551616668701, worst -0.07367724180221558
Time: prepare 0.0084    bound 0.1478    transfer 0.0022    finalize 0.0029    func 0.1641    
Accumulated time: func 0.7793    prepare 0.0569    bound 0.6985    transfer 0.0080    finalize 0.0140    
all_split False
======================Cut inference begins======================
max lb tensor(0.47160316) min lb tensor(-0.04889059)
Number of Verified Splits: 275 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 5
#cuts 4-6: 22
#cuts >= 20: 0
BICCOS time: 0.03505134582519531 
BICCOS Cumulative time: 0.0981602668762207
Preprocessing time: 0.012966394424438477 Inference time: 0.014223575592041016 Add cuts time: 0.006726741790771484 Cut analysis time: 0.001134634017944336
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03450 (5), -0.03450 (5), -0.03450 (5), -0.03289 (5), -0.03250 (5), -0.03116 (5), -0.02994 (5), -0.02861 (5), -0.02732 (5), -0.02724 (5), -0.02721 (5), -0.02680 (5), -0.02623 (5), -0.02606 (5), -0.02591 (5), -0.02536 (5), -0.02514 (5), -0.02428 (5), -0.02324 (5), -0.02304 (5), 
Length of domains: 50
Time: pickout 0.0013    decision 0.0209    set_bounds 0.0163    solve 0.1642    add 0.1104    
Accumulated time: pickout 0.0125    decision 0.6227    set_bounds 0.0713    solve 0.7195    add 1.0553    
Current (lb-rhs): -0.034497976303100586
250 domains visited
Cumulative time: 2.674593687057495


Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 50] 
split level 1: [/input-12, 14] 
split level 2: [/input-8, 1508] 
split level 3: [/input-12, 71] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 85] 
split level 6: [/input-12, 67] 
split level 7: [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6051583290100098
10 lb beta sum: 1.1527173519134521, worst -0.600384533405304
Time: prepare 0.0051    bound 0.1453    transfer 0.0017    finalize 0.0019    func 0.1557    
Accumulated time: func 0.9350    prepare 0.0625    bound 0.8438    transfer 0.0096    finalize 0.0159    
all_split False
======================Cut inference begins======================
max lb tensor(1.31292200) min lb tensor(-0.60013920)
Number of Verified Splits: 105 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6137783527374268
10 lb beta sum: 1.755218267440796, worst -0.09216022491455078
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 5
#cuts 4-6: 23
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.22707271575927734 
BICCOS Cumulative time: 0.32523298263549805
Preprocessing time: 0.007590532302856445 Inference time: 0.21210503578186035 Add cuts time: 0.005799531936645508 Cut analysis time: 0.001577615737915039
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.60014 (8), -0.59982 (8), -0.57059 (8), -0.57013 (8), -0.56225 (8), -0.56069 (8), -0.55797 (8), -0.55660 (8), -0.53823 (8), -0.53815 (8), -0.52598 (8), -0.52587 (8), -0.52072 (8), -0.52062 (8), -0.51203 (8), -0.50950 (8), -0.48981 (8), -0.48977 (8), -0.48888 (8), -0.48879 (8), 
Length of domains: 151
Time: pickout 0.0004    decision 0.0252    set_bounds 0.0218    solve 0.1557    add 0.1057    
Accumulated time: pickout 0.0129    decision 0.6479    set_bounds 0.0930    solve 0.8752    add 1.1611    
Current (lb-rhs): -0.6001392006874084
401 domains visited
Cumulative time: 3.222059965133667

BaB round 2
batch: 151
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1941] [/input-8, 485] [/input-8, 1941] [/input-8, 485] [/input-8, 1941] [/input-8, 485] [/input-8, 485] [/input-8, 1941] [/input-8, 1941] [/input-8, 485] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5990346670150757
10 lb beta sum: 0.7475990653038025, worst -0.5947563648223877
Time: prepare 0.0066    bound 0.1558    transfer 0.0028    finalize 0.0021    func 0.1693    
Accumulated time: func 1.1043    prepare 0.0693    bound 0.9996    transfer 0.0124    finalize 0.0180    
all_split False
======================Cut inference begins======================
max lb tensor(0.09780598) min lb tensor(-0.59469098)
Number of Verified Splits: 32 of 302
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5874134302139282
10 lb beta sum: 1.1272475719451904, worst -0.18232351541519165
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 5
#cuts 4-6: 23
#cuts 7-9: 11
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.18198418617248535 
BICCOS Cumulative time: 0.5072171688079834
Preprocessing time: 0.009489774703979492 Inference time: 0.16801691055297852 Add cuts time: 0.0027573108673095703 Cut analysis time: 0.0017201900482177734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.59469 (9), -0.59440 (9), -0.56348 (9), -0.56307 (9), -0.55288 (9), -0.55142 (9), -0.54885 (9), -0.54714 (9), -0.53676 (9), -0.53622 (9), -0.53409 (9), -0.53313 (9), -0.52849 (9), -0.52848 (9), -0.52842 (9), -0.52790 (9), -0.51779 (9), -0.51761 (9), -0.51313 (9), -0.51267 (9), 
Length of domains: 270
Time: pickout 0.0184    decision 0.0223    set_bounds 0.0139    solve 0.1694    add 0.0770    
Accumulated time: pickout 0.0313    decision 0.6702    set_bounds 0.1069    solve 1.0446    add 1.2381    
Current (lb-rhs): -0.5946909785270691
671 domains visited
Cumulative time: 3.7125744819641113

BaB round 3
batch: 270
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 485] [/input-8, 485] [/input-8, 1941] [/input-8, 485] [/input-8, 1941] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5900256633758545
10 lb beta sum: 0.7416148781776428, worst -0.5858250260353088
Time: prepare 0.0134    bound 0.1586    transfer 0.0028    finalize 0.0033    func 0.1818    
Accumulated time: func 1.2860    prepare 0.0829    bound 1.1583    transfer 0.0153    finalize 0.0212    
all_split False
======================Cut inference begins======================
max lb tensor(0.34684134) min lb tensor(-0.58578444)
Number of Verified Splits: 44 of 540
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6057232618331909
10 lb beta sum: 1.2978191375732422, worst -0.19230037927627563
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 5
#cuts 4-6: 23
#cuts 7-9: 16
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.2019338607788086 
BICCOS Cumulative time: 0.709151029586792
Preprocessing time: 0.016551971435546875 Inference time: 0.17982983589172363 Add cuts time: 0.0034339427947998047 Cut analysis time: 0.0021181106567382812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.58578 (10), -0.58544 (10), -0.55399 (10), -0.55381 (10), -0.54380 (10), -0.54225 (10), -0.53947 (10), -0.53763 (10), -0.53502 (10), -0.53390 (10), -0.52480 (10), -0.52450 (10), -0.52381 (10), -0.52317 (10), -0.52213 (10), -0.51930 (10), -0.51901 (10), -0.51853 (10), -0.51838 (10), -0.51545 (10), 
Length of domains: 496
Time: pickout 0.0167    decision 0.0265    set_bounds 0.0245    solve 0.1820    add 0.1137    
Accumulated time: pickout 0.0480    decision 0.6967    set_bounds 0.1314    solve 1.2266    add 1.3518    
Current (lb-rhs): -0.5857844352722168
1167 domains visited
Cumulative time: 4.285951614379883

BaB round 4
batch: 496
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input-8, 982] [/input-8, 1500] [/input-8, 1300] [/input-8, 1300] [/input-8, 1306] [/input-8, 1306] [/input-12, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5831073522567749
10 lb beta sum: 0.7105321288108826, worst -0.5789014101028442
Time: prepare 0.0216    bound 0.1574    transfer 0.0143    finalize 0.0060    func 0.2059    
Accumulated time: func 1.4920    prepare 0.1047    bound 1.3156    transfer 0.0296    finalize 0.0272    
all_split False
======================Cut inference begins======================
max lb tensor(0.03238009) min lb tensor(-0.57887369)
Number of Verified Splits: 79 of 992
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 73.
#cuts 1-3: 5
#cuts 4-6: 49
#cuts 7-9: 18
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.05315756797790527 
BICCOS Cumulative time: 0.7623085975646973
Preprocessing time: 0.031606197357177734 Inference time: 0.008881092071533203 Add cuts time: 0.008527755737304688 Cut analysis time: 0.0041425228118896484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.57887 (11), -0.57840 (11), -0.56136 (11), -0.56130 (11), -0.54736 (11), -0.54673 (11), -0.53950 (11), -0.53409 (11), -0.53394 (11), -0.53269 (11), -0.53208 (11), -0.52958 (11), -0.52837 (11), -0.52710 (11), -0.51898 (11), -0.51773 (11), -0.51326 (11), -0.51282 (11), -0.51281 (11), -0.51251 (11), 
Length of domains: 913
Time: pickout 0.0626    decision 0.0398    set_bounds 0.0440    solve 0.2063    add 0.0109    
Accumulated time: pickout 0.1106    decision 0.7364    set_bounds 0.1754    solve 1.4329    add 1.3627    
Current (lb-rhs): -0.5788736939430237
2080 domains visited
Cumulative time: 4.7047107219696045

BaB round 5
batch: 913
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1500] [/input-8, 1500] [/input-8, 1500] [/input-8, 982] [/input-8, 1637] [/input-8, 1637] [/input-8, 1300] [/input-8, 1933] [/input-8, 1933] [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5777629613876343
10 lb beta sum: 0.6939697265625, worst -0.573564350605011
Time: prepare 0.0382    bound 0.1757    transfer 0.0202    finalize 0.2512    func 0.4986    
Accumulated time: func 1.9906    prepare 0.1431    bound 1.4913    transfer 0.0498    finalize 0.2784    
all_split False
======================Cut inference begins======================
max lb tensor(0.07131219) min lb tensor(-0.57352686)
Number of Verified Splits: 155 of 1826
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 84.
#cuts 1-3: 6
#cuts 4-6: 61
#cuts 7-9: 17
#cuts >= 20: 0
BICCOS time: 0.09422945976257324 
BICCOS Cumulative time: 0.8565380573272705
Preprocessing time: 0.06103086471557617 Inference time: 0.0178987979888916 Add cuts time: 0.011613607406616211 Cut analysis time: 0.003686189651489258
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.57353 (12), -0.57327 (12), -0.55880 (12), -0.55870 (12), -0.55524 (12), -0.55505 (12), -0.54108 (12), -0.54081 (12), -0.54035 (12), -0.54010 (12), -0.53304 (12), -0.53277 (12), -0.52887 (12), -0.52503 (12), -0.52383 (12), -0.52260 (12), -0.52062 (12), -0.51901 (12), -0.51615 (12), -0.51480 (12), 
Length of domains: 1671
Time: pickout 0.0148    decision 0.0635    set_bounds 0.0789    solve 0.4992    add 0.0086    
Accumulated time: pickout 0.1254    decision 0.7999    set_bounds 0.2543    solve 1.9321    add 1.3713    
Current (lb-rhs): -0.5735268592834473
3751 domains visited
Cumulative time: 5.4686360359191895

BaB round 6
batch: 1671
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1900] [/input-8, 1900] [/input-8, 222] [/input-8, 222] [/input-8, 222] [/input-8, 1300] [/input-8, 1866] [/input-8, 1637] [/input-8, 1636] [/input-8, 1866] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5680415630340576
10 lb beta sum: 0.6907700300216675, worst -0.5637346506118774
Time: prepare 0.0725    bound 0.2604    transfer 0.0247    finalize 0.0219    func 0.4019    
Accumulated time: func 2.3925    prepare 0.2159    bound 1.7518    transfer 0.0746    finalize 0.3002    
all_split False
======================Cut inference begins======================
max lb tensor(0.07036924) min lb tensor(-0.56362432)
Number of Verified Splits: 253 of 3342
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 89.
#cuts 1-3: 6
#cuts 4-6: 66
#cuts 7-9: 17
#cuts >= 20: 0
BICCOS time: 0.15663361549377441 
BICCOS Cumulative time: 1.013171672821045
Preprocessing time: 0.10585165023803711 Inference time: 0.03128671646118164 Add cuts time: 0.01580190658569336 Cut analysis time: 0.0036933422088623047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.56362 (13), -0.56357 (13), -0.56062 (13), -0.56057 (13), -0.54863 (13), -0.54844 (13), -0.54544 (13), -0.54537 (13), -0.54523 (13), -0.54474 (13), -0.54247 (13), -0.54201 (13), -0.53532 (13), -0.53097 (13), -0.53068 (13), -0.53031 (13), -0.53004 (13), -0.52821 (13), -0.52776 (13), -0.52733 (13), 
Length of domains: 3089
Time: pickout 0.0209    decision 0.1114    set_bounds 0.1469    solve 0.4030    add 0.1180    
Accumulated time: pickout 0.1464    decision 0.9113    set_bounds 0.4012    solve 2.3350    add 1.4892    
Current (lb-rhs): -0.5636243224143982
6840 domains visited
Cumulative time: 6.4332966804504395

BaB round 7
batch: 3089
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 222] [/input-8, 222] [/input-8, 915] [/input-8, 1771] [/input-8, 1309] [/input-8, 1297] [/input-8, 1637] [/input-8, 1900] [/input-8, 1883] [/input-8, 336] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5609841346740723
10 lb beta sum: 0.6912908554077148, worst -0.5568066239356995
Time: prepare 0.1359    bound 0.4200    transfer 0.0428    finalize 0.0440    func 0.6843    
Accumulated time: func 3.0768    prepare 0.3521    bound 2.1717    transfer 0.1173    finalize 0.3442    
all_split False
======================Cut inference begins======================
max lb tensor(0.06156814) min lb tensor(-0.55675501)
Number of Verified Splits: 382 of 6178
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 132.
#cuts 1-3: 6
#cuts 4-6: 83
#cuts 7-9: 39
#cuts 10-12: 4
#cuts >= 20: 0
BICCOS time: 0.29677867889404297 
BICCOS Cumulative time: 1.309950351715088
Preprocessing time: 0.20753765106201172 Inference time: 0.05242156982421875 Add cuts time: 0.030476808547973633 Cut analysis time: 0.006342649459838867
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.55676 (14), -0.55671 (14), -0.55375 (14), -0.55370 (14), -0.55155 (14), -0.55154 (14), -0.54854 (14), -0.54853 (14), -0.54159 (14), -0.54141 (14), -0.53842 (14), -0.53834 (14), -0.53821 (14), -0.53776 (14), -0.53637 (14), -0.53624 (14), -0.53547 (14), -0.53500 (14), -0.53320 (14), -0.53318 (14), 
Length of domains: 5796
Time: pickout 0.0387    decision 0.3989    set_bounds 0.2834    solve 0.6858    add 0.0249    
Accumulated time: pickout 0.1851    decision 1.3103    set_bounds 0.6846    solve 3.0208    add 1.5141    
Current (lb-rhs): -0.556755006313324
12636 domains visited
Cumulative time: 8.177983283996582

BaB round 8
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 915] [/input-8, 915] [/input-8, 214] [/input-8, 915] [/input-8, 1933] [/input-8, 1636] [/input-8, 1873] [/input-8, 1901] [/input-8, 985] [/input-8, 1637] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5479079484939575
10 lb beta sum: 0.6838810443878174, worst -0.5437424778938293
Time: prepare 0.1912    bound 0.7499    transfer 0.0705    finalize 0.2938    func 1.3643    
Accumulated time: func 4.4411    prepare 0.5436    bound 2.9216    transfer 0.1879    finalize 0.6379    
all_split False
======================Cut inference begins======================
max lb tensor(0.05045152) min lb tensor(-0.54370791)
Number of Verified Splits: 642 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 208.
#cuts 1-3: 6
#cuts 4-6: 115
#cuts 7-9: 78
#cuts 10-12: 9
#cuts >= 20: 0
BICCOS time: 0.4558875560760498 
BICCOS Cumulative time: 1.7658379077911377
Preprocessing time: 0.28202080726623535 Inference time: 0.09735679626464844 Add cuts time: 0.06643962860107422 Cut analysis time: 0.010070323944091797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.55676 (14), -0.55671 (14), -0.54371 (15), -0.54349 (15), -0.54196 (15), -0.54192 (15), -0.54159 (14), -0.54148 (15), -0.54141 (14), -0.54121 (15), -0.53974 (15), -0.53965 (15), -0.53846 (15), -0.53842 (14), -0.53834 (14), -0.53821 (14), -0.53820 (15), -0.53776 (14), -0.53672 (15), -0.53663 (15), 
Length of domains: 9250
Time: pickout 0.0567    decision 0.4716    set_bounds 0.3841    solve 1.3673    add 0.0370    
Accumulated time: pickout 0.2417    decision 1.7818    set_bounds 1.0687    solve 4.3881    add 1.5511    
Current (lb-rhs): -0.556755006313324
20186 domains visited
current_vram/total_varm: 10.8GB/99.9GB, batch_size increase to 8192
Cumulative time: 10.979097366333008

BaB round 9
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 214] [/input-8, 214] [/input-8, 222] [/input-8, 1866] [/input-8, 1300] [/input-8, 1866] [/input, 905] [/input-12, 46] [/input-8, 915] [/input-8, 982] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.550940990447998
10 lb beta sum: 0.6871153116226196, worst -0.5467661619186401
Time: prepare 0.3885    bound 1.0616    transfer 0.0756    finalize 0.1200    func 1.7554    
Accumulated time: func 6.1965    prepare 0.9326    bound 3.9832    transfer 0.2635    finalize 0.7579    
all_split False
======================Cut inference begins======================
max lb tensor(0.43466979) min lb tensor(-0.54672956)
Number of Verified Splits: 1259 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 250.
#cuts 1-3: 11
#cuts 4-6: 136
#cuts 7-9: 102
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.2066195011138916 
BICCOS Cumulative time: 2.9724574089050293
Preprocessing time: 0.5909881591796875 Inference time: 0.48995280265808105 Add cuts time: 0.11320114135742188 Cut analysis time: 0.012477397918701172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.54673 (15), -0.54650 (15), -0.54498 (15), -0.54494 (15), -0.54196 (15), -0.54192 (15), -0.53752 (16), -0.53734 (16), -0.53532 (16), -0.53508 (16), -0.53353 (16), -0.53346 (16), -0.53222 (16), -0.53198 (16), -0.53127 (15), -0.53120 (15), -0.53042 (16), -0.53036 (16), -0.52964 (15), -0.52952 (15), 
Length of domains: 16183
Time: pickout 0.1164    decision 0.7420    set_bounds 1.0765    solve 1.7596    add 0.0542    
Accumulated time: pickout 0.3581    decision 2.5239    set_bounds 2.1452    solve 6.1477    add 1.6053    
Current (lb-rhs): -0.546729564666748
35311 domains visited
current_vram/total_varm: 19.7GB/99.9GB, batch_size increase to 16384
Cumulative time: 15.968848943710327

BaB round 10
batch: 16183
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1637] [/input-8, 218] [/input-8, 1140] [/input-8, 1637] [/input-8, 1637] [/input-8, 1941] [/input-8, 218] [/input-8, 1866] [/input-8, 982] [/input-12, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5448693037033081
10 lb beta sum: 0.8382120132446289, worst -0.5357714295387268
Time: prepare 0.7820    bound 2.9428    transfer 0.1967    finalize 0.3008    func 4.8128    
Accumulated time: func 11.0093    prepare 1.7150    bound 6.9260    transfer 0.4602    finalize 1.0587    
all_split False
======================Cut inference begins======================
max lb tensor(1.07880247) min lb tensor(-0.53572768)
Number of Verified Splits: 3227 of 32366
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 372.
#cuts 1-3: 12
#cuts 4-6: 164
#cuts 7-9: 170
#cuts 10-12: 26
#cuts >= 20: 0
BICCOS time: 1.9546923637390137 
BICCOS Cumulative time: 4.927149772644043
Preprocessing time: 1.1099042892456055 Inference time: 0.5692095756530762 Add cuts time: 0.2567899227142334 Cut analysis time: 0.018788576126098633
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53573 (16), -0.53572 (16), -0.53499 (16), -0.53482 (16), -0.53321 (16), -0.53321 (16), -0.53188 (17), -0.53171 (17), -0.52968 (17), -0.52946 (17), -0.52790 (17), -0.52784 (17), -0.52658 (17), -0.52635 (17), -0.52480 (17), -0.52473 (17), -0.52150 (16), -0.52142 (16), -0.51981 (16), -0.51971 (16), 
Length of domains: 29139
Time: pickout 0.3416    decision 0.9191    set_bounds 2.0310    solve 4.8190    add 0.0969    
Accumulated time: pickout 0.6997    decision 3.4430    set_bounds 4.1763    solve 10.9667    add 1.7022    
Current (lb-rhs): -0.5357276797294617
64450 domains visited
Cumulative time: 26.205803871154785

BaB round 11
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1140] [/input-8, 1771] [/input-12, 46] [/input, 917] [/input-8, 218] [/input-8, 1637] [/input-12, 46] [/input-12, 24] [/input-8, 1900] [/input-8, 1642] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5390764474868774
10 lb beta sum: 0.9435104727745056, worst -0.5349885821342468
Time: prepare 0.8244    bound 3.2230    transfer 0.1910    finalize 0.7084    func 5.1677    
Accumulated time: func 16.1770    prepare 2.5397    bound 10.1490    transfer 0.6512    finalize 1.7671    
all_split False
======================Cut inference begins======================
max lb tensor(1.41967225) min lb tensor(-0.53497469)
Number of Verified Splits: 3461 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 475.
#cuts 1-3: 6
#cuts 4-6: 168
#cuts 7-9: 212
#cuts 10-12: 86
#cuts 13-15: 3
#cuts >= 20: 0
BICCOS time: 2.731337308883667 
BICCOS Cumulative time: 7.65848708152771
Preprocessing time: 1.1247632503509521 Inference time: 1.1914925575256348 Add cuts time: 0.38791608810424805 Cut analysis time: 0.02716541290283203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53497 (17), -0.53481 (17), -0.53321 (16), -0.53321 (16), -0.53188 (17), -0.53171 (17), -0.53009 (17), -0.53009 (17), -0.52968 (17), -0.52946 (17), -0.52790 (17), -0.52784 (17), -0.52658 (17), -0.52635 (17), -0.52480 (17), -0.52473 (17), -0.51981 (16), -0.51971 (16), -0.51905 (16), -0.51901 (16), 
Length of domains: 42062
Time: pickout 0.2421    decision 2.0475    set_bounds 1.9195    solve 5.1742    add 0.1874    
Accumulated time: pickout 0.9418    decision 5.4905    set_bounds 6.0957    solve 16.1409    add 1.8896    
Current (lb-rhs): -0.5349746942520142
93757 domains visited
Cumulative time: 38.595041036605835

BaB round 12
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1636] [/input-8, 218] [/input, 917] [/input-8, 1637] [/input-8, 1883] [/input-8, 222] [/input-8, 1900] [/input-8, 1300] [/input-12, 24] [/input-8, 982] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5373002290725708
10 lb beta sum: 0.7626199126243591, worst -0.5332045555114746
Time: prepare 0.8640    bound 3.4385    transfer 0.1921    finalize 0.2954    func 5.0085    
Accumulated time: func 21.1855    prepare 3.4041    bound 13.5875    transfer 0.8433    finalize 2.0625    
all_split False
======================Cut inference begins======================
max lb tensor(0.53575987) min lb tensor(-0.53319645)
Number of Verified Splits: 3746 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 3.0295891761779785 
BICCOS Cumulative time: 10.688076257705688
Preprocessing time: 1.812680721282959 Inference time: 0.6747612953186035 Add cuts time: 0.5118966102600098 Cut analysis time: 0.03025054931640625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53497 (17), -0.53481 (17), -0.53320 (17), -0.53319 (17), -0.53009 (17), -0.53009 (17), -0.52748 (18), -0.52629 (18), -0.52526 (18), -0.52372 (18), -0.52216 (18), -0.52125 (18), -0.52062 (18), -0.51963 (18), -0.51905 (17), -0.51896 (18), -0.51892 (17), -0.51877 (18), -0.51819 (18), -0.51742 (17), 
Length of domains: 54700
Time: pickout 0.2521    decision 1.6602    set_bounds 2.1332    solve 5.0166    add 0.1376    
Accumulated time: pickout 1.1939    decision 7.1507    set_bounds 8.2289    solve 21.1575    add 2.0272    
Current (lb-rhs): -0.5349746942520142
122779 domains visited
Cumulative time: 50.92191219329834

BaB round 13
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1636] [/input, 1000] [/input, 917] [/input-8, 1500] [/input-8, 1642] [/input-8, 701] [/input-8, 1636] [/input-8, 153] [/input-12, 24] [/input-8, 1636] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5136029124259949
10 lb beta sum: 0.7708203792572021, worst -0.5093564987182617
Time: prepare 0.8712    bound 3.5744    transfer 0.1991    finalize 0.2543    func 5.8872    
Accumulated time: func 27.0727    prepare 4.2757    bound 17.1619    transfer 1.0424    finalize 2.3168    
all_split False
======================Cut inference begins======================
max lb tensor(0.52960438) min lb tensor(-0.50930107)
Number of Verified Splits: 4546 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.0010993480682373047 
BICCOS Cumulative time: 10.689175605773926
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53497 (17), -0.53481 (17), -0.53320 (17), -0.53319 (17), -0.53009 (17), -0.53009 (17), -0.52748 (18), -0.52629 (18), -0.52526 (18), -0.52372 (18), -0.52216 (18), -0.52125 (18), -0.52062 (18), -0.51963 (18), -0.51905 (17), -0.51896 (18), -0.51892 (17), -0.51877 (18), -0.51819 (18), -0.51742 (17), 
Length of domains: 66538
Time: pickout 0.2575    decision 1.6692    set_bounds 2.2167    solve 5.8945    add 0.2429    
Accumulated time: pickout 1.4514    decision 8.8199    set_bounds 10.4456    solve 27.0521    add 2.2701    
Current (lb-rhs): -0.5349746942520142
151001 domains visited
Cumulative time: 61.28158760070801

BaB round 14
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 917] [/input, 712] [/input-12, 46] [/input-12, 24] [/input-8, 716] [/input-8, 1900] [/input-8, 716] [/input-12, 24] [/input, 2712] [/input-8, 1297] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5347117185592651
10 lb beta sum: 0.7566447854042053, worst -0.5305920839309692
Time: prepare 0.8652    bound 3.5742    transfer 0.1897    finalize 0.2733    func 5.1230    
Accumulated time: func 32.1957    prepare 5.1413    bound 20.7361    transfer 1.2321    finalize 2.5900    
all_split False
======================Cut inference begins======================
max lb tensor(0.52090496) min lb tensor(-0.53058177)
Number of Verified Splits: 3493 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.001493692398071289 
BICCOS Cumulative time: 10.690669298171997
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53320 (17), -0.53319 (17), -0.53058 (18), -0.52940 (18), -0.52748 (18), -0.52629 (18), -0.52595 (18), -0.52526 (18), -0.52372 (18), -0.52216 (18), -0.52211 (18), -0.52206 (18), -0.52125 (18), -0.52062 (18), -0.51963 (18), -0.51935 (18), -0.51905 (17), -0.51896 (18), -0.51892 (17), -0.51877 (18), 
Length of domains: 79429
Time: pickout 0.2592    decision 1.6691    set_bounds 2.3142    solve 5.1329    add 0.1892    
Accumulated time: pickout 1.7106    decision 10.4890    set_bounds 12.7599    solve 32.1850    add 2.4593    
Current (lb-rhs): -0.5331964492797852
180276 domains visited
Cumulative time: 70.92590570449829

BaB round 15
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1000] [/input-8, 1297] [/input-8, 1873] [/input-8, 982] [/input, 900] [/input-8, 1883] [/input-8, 1309] [/input-8, 229] [/input, 712] [/input-8, 1901] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5332062244415283
10 lb beta sum: 0.7491475939750671, worst -0.5290701985359192
Time: prepare 0.8933    bound 3.5741    transfer 0.1906    finalize 0.2852    func 5.1642    
Accumulated time: func 37.3599    prepare 6.0350    bound 24.3102    transfer 1.4227    finalize 2.8753    
all_split False
======================Cut inference begins======================
max lb tensor(0.53974813) min lb tensor(-0.52903563)
Number of Verified Splits: 3418 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.0013513565063476562 
BICCOS Cumulative time: 10.692020654678345
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53058 (18), -0.52940 (18), -0.52904 (18), -0.52595 (18), -0.52517 (18), -0.52372 (18), -0.52296 (19), -0.52249 (18), -0.52211 (18), -0.52206 (18), -0.52175 (19), -0.52075 (19), -0.52062 (18), -0.51935 (18), -0.51767 (19), -0.51716 (18), -0.51665 (19), -0.51628 (19), -0.51511 (19), -0.51504 (19), 
Length of domains: 92395
Time: pickout 0.2572    decision 1.6602    set_bounds 2.3354    solve 5.1748    add 0.1180    
Accumulated time: pickout 1.9677    decision 12.1493    set_bounds 15.0953    solve 37.3598    add 2.5773    
Current (lb-rhs): -0.5305817723274231
209626 domains visited
Cumulative time: 80.56021523475647

BaB round 16
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2712] [/input, 917] [/input, 917] [/input-8, 490] [/input-12, 24] [/input-8, 1900] [/input, 712] [/input, 1000] [/input-8, 1636] [/input-8, 1900] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6019547581672668, worst -0.5233935117721558
10 lb beta sum: 0.8571427464485168, worst -0.5192468762397766
Time: prepare 1.4652    bound 3.5750    transfer 0.1922    finalize 1.2920    func 6.7441    
Accumulated time: func 44.1040    prepare 7.5007    bound 27.8852    transfer 1.6149    finalize 4.1673    
all_split False
======================Cut inference begins======================
max lb tensor(0.57466865) min lb tensor(-0.51919407)
Number of Verified Splits: 3753 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.0010755062103271484 
BICCOS Cumulative time: 10.693096160888672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53058 (18), -0.52940 (18), -0.52904 (18), -0.52595 (18), -0.52517 (18), -0.52296 (19), -0.52249 (18), -0.52211 (18), -0.52206 (18), -0.52175 (19), -0.52075 (19), -0.51935 (18), -0.51919 (19), -0.51767 (19), -0.51665 (19), -0.51628 (19), -0.51610 (19), -0.51511 (19), -0.51504 (19), -0.51450 (18), 
Length of domains: 105026
Time: pickout 0.2703    decision 2.5552    set_bounds 1.5166    solve 6.7524    add 0.1145    
Accumulated time: pickout 2.2381    decision 14.7045    set_bounds 16.6119    solve 44.1122    add 2.6918    
Current (lb-rhs): -0.5305817723274231
238641 domains visited
Cumulative time: 91.85484313964844

BaB round 17
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 982] [/input-8, 982] [/input, 1000] [/input, 1000] [/input-12, 24] [/input-12, 24] [/input, 1000] [/input-8, 218] [/input-8, 1873] [/input-8, 1900] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8934910297393799, worst -0.5048397779464722
10 lb beta sum: 0.896847128868103, worst -0.5048460960388184
Time: prepare 1.6915    bound 3.5772    transfer 0.1917    finalize 0.3018    func 5.9834    
Accumulated time: func 50.0873    prepare 9.1926    bound 31.4624    transfer 1.8066    finalize 4.4691    
all_split False
======================Cut inference begins======================
max lb tensor(0.54805583) min lb tensor(-0.50477481)
Number of Verified Splits: 3875 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.001222848892211914 
BICCOS Cumulative time: 10.694319009780884
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53058 (18), -0.52940 (18), -0.52904 (18), -0.52595 (18), -0.52517 (18), -0.52296 (19), -0.52249 (18), -0.52211 (18), -0.52206 (18), -0.52175 (19), -0.52075 (19), -0.51935 (18), -0.51919 (19), -0.51767 (19), -0.51665 (19), -0.51628 (19), -0.51610 (19), -0.51511 (19), -0.51504 (19), -0.51450 (18), 
Length of domains: 117535
Time: pickout 0.2681    decision 1.6959    set_bounds 2.8554    solve 5.9916    add 0.1164    
Accumulated time: pickout 2.5062    decision 16.4004    set_bounds 19.4673    solve 50.1038    add 2.8082    
Current (lb-rhs): -0.5305817723274231
267534 domains visited
Cumulative time: 102.87574911117554

BaB round 18
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-8, 1900] [/input-8, 1933] [/input-8, 1140] [/input-8, 982] [/input-8, 1874] [/input-8, 1496] [/input-8, 716] [/input, 712] [/input, 2712] 
cut re-enabled after branching node selection
0 lb beta sum: 0.891376256942749, worst -0.517605721950531
10 lb beta sum: 0.8954668045043945, worst -0.517547070980072
Time: prepare 1.7007    bound 3.5729    transfer 0.1923    finalize 0.3226    func 6.0092    
Accumulated time: func 56.0965    prepare 10.8937    bound 35.0353    transfer 1.9989    finalize 4.7917    
all_split False
======================Cut inference begins======================
max lb tensor(0.56441730) min lb tensor(-0.51753360)
Number of Verified Splits: 3569 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.001983165740966797 
BICCOS Cumulative time: 10.69630217552185
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53058 (18), -0.52940 (18), -0.52904 (18), -0.52595 (18), -0.52517 (18), -0.52296 (19), -0.52249 (18), -0.52175 (19), -0.52075 (19), -0.51935 (18), -0.51919 (19), -0.51767 (19), -0.51753 (19), -0.51731 (19), -0.51665 (19), -0.51628 (19), -0.51610 (19), -0.51511 (19), -0.51504 (19), -0.51450 (18), 
Length of domains: 130350
Time: pickout 0.2742    decision 1.6720    set_bounds 2.7061    solve 6.0277    add 0.1360    
Accumulated time: pickout 2.7804    decision 18.0724    set_bounds 22.1734    solve 56.1315    add 2.9442    
Current (lb-rhs): -0.5305817723274231
296733 domains visited
Cumulative time: 113.82606291770935

BaB round 19
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 982] [/input-8, 490] [/input-8, 1500] [/input-8, 1866] [/input-8, 1901] [/input-8, 1866] [/input-8, 1496] [/input-8, 1901] [/input-8, 218] [/input-12, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.877056360244751, worst -0.526121199131012
10 lb beta sum: 0.8803568482398987, worst -0.5260688662528992
Time: prepare 1.7409    bound 3.5724    transfer 0.1944    finalize 0.3092    func 6.0387    
Accumulated time: func 62.1352    prepare 12.6351    bound 38.6077    transfer 2.1932    finalize 5.1009    
all_split False
======================Cut inference begins======================
max lb tensor(0.58442867) min lb tensor(-0.52605277)
Number of Verified Splits: 3420 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.0016512870788574219 
BICCOS Cumulative time: 10.697953462600708
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52904 (18), -0.52605 (19), -0.52517 (18), -0.52487 (19), -0.52296 (19), -0.52249 (18), -0.52175 (19), -0.52141 (19), -0.52075 (19), -0.51950 (19), -0.51919 (19), -0.51834 (19), -0.51767 (19), -0.51753 (19), -0.51731 (19), -0.51665 (19), -0.51628 (19), -0.51610 (19), -0.51511 (19), -0.51504 (19), 
Length of domains: 143314
Time: pickout 0.2807    decision 1.6935    set_bounds 2.9590    solve 6.0505    add 0.2666    
Accumulated time: pickout 3.0611    decision 19.7659    set_bounds 25.1324    solve 62.1820    add 3.2108    
Current (lb-rhs): -0.5290356278419495
326081 domains visited
Cumulative time: 125.21133089065552

BaB round 20
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1642] [/input, 712] [/input-8, 1636] [/input-8, 985] [/input-8, 1636] [/input-8, 985] [/input-8, 1933] [/input-8, 1900] [/input-12, 24] [/input-8, 1900] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8820278644561768, worst -0.5206665992736816
10 lb beta sum: 0.8856027722358704, worst -0.520605206489563
Time: prepare 1.7135    bound 3.5745    transfer 0.1910    finalize 1.7093    func 7.4045    
Accumulated time: func 69.5397    prepare 14.3490    bound 42.1822    transfer 2.3842    finalize 6.8102    
all_split False
======================Cut inference begins======================
max lb tensor(0.56285131) min lb tensor(-0.52059388)
Number of Verified Splits: 3569 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.0010652542114257812 
BICCOS Cumulative time: 10.699018716812134
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52904 (18), -0.52605 (19), -0.52487 (19), -0.52296 (19), -0.52249 (18), -0.52175 (19), -0.52141 (19), -0.52075 (19), -0.52059 (19), -0.51950 (19), -0.51919 (19), -0.51834 (19), -0.51767 (19), -0.51753 (19), -0.51731 (19), -0.51610 (19), -0.51474 (19), -0.51473 (19), -0.51450 (18), -0.51423 (19), 
Length of domains: 156129
Time: pickout 0.2794    decision 1.6851    set_bounds 1.5991    solve 7.4123    add 0.1612    
Accumulated time: pickout 3.3406    decision 21.4510    set_bounds 26.7315    solve 69.5943    add 3.3720    
Current (lb-rhs): -0.5290356278419495
355280 domains visited
Cumulative time: 136.42752885818481

BaB round 21
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2712] [/input-8, 1900] [/input-8, 1500] [/input-8, 1874] [/input, 900] [/input-8, 1642] [/input-8, 218] [/input-8, 1636] [/input-8, 1306] [/input-8, 1651] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8758207559585571, worst -0.5245748162269592
10 lb beta sum: 0.8787482380867004, worst -0.5245072245597839
Time: prepare 1.9603    bound 3.5891    transfer 0.1963    finalize 0.3154    func 6.2837    
Accumulated time: func 75.8234    prepare 16.3097    bound 45.7713    transfer 2.5806    finalize 7.1256    
all_split False
======================Cut inference begins======================
max lb tensor(0.56799936) min lb tensor(-0.52449399)
Number of Verified Splits: 3588 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.0017881393432617188 
BICCOS Cumulative time: 10.700806856155396
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52605 (19), -0.52487 (19), -0.52449 (19), -0.52141 (19), -0.52059 (19), -0.51950 (19), -0.51919 (19), -0.51834 (19), -0.51796 (19), -0.51789 (19), -0.51753 (19), -0.51731 (19), -0.51610 (19), -0.51502 (20), -0.51474 (19), -0.51473 (19), -0.51407 (19), -0.51376 (20), -0.51262 (19), -0.51254 (20), 
Length of domains: 168925
Time: pickout 0.2675    decision 1.6771    set_bounds 1.6165    solve 6.2967    add 0.1211    
Accumulated time: pickout 3.6081    decision 23.1280    set_bounds 28.3480    solve 75.8909    add 3.4931    
Current (lb-rhs): -0.5260527729988098
384460 domains visited
Cumulative time: 146.55114006996155

BaB round 22
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1642] [/input-8, 1900] [/input-8, 1900] [/input, 900] [/input, 900] [/input-8, 1900] [/input-8, 1900] [/input-8, 153] [/input-8, 218] [/input-8, 1933] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8926970958709717, worst -0.5110600590705872
10 lb beta sum: 0.8954575061798096, worst -0.5110160708427429
Time: prepare 1.7329    bound 3.5744    transfer 0.1917    finalize 0.2952    func 6.0179    
Accumulated time: func 81.8412    prepare 18.0431    bound 49.3458    transfer 2.7722    finalize 7.4208    
all_split False
======================Cut inference begins======================
max lb tensor(0.56264305) min lb tensor(-0.51097554)
Number of Verified Splits: 3783 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.0014603137969970703 
BICCOS Cumulative time: 10.702267169952393
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52605 (19), -0.52487 (19), -0.52449 (19), -0.52141 (19), -0.52059 (19), -0.51950 (19), -0.51834 (19), -0.51796 (19), -0.51789 (19), -0.51753 (19), -0.51731 (19), -0.51502 (20), -0.51474 (19), -0.51473 (19), -0.51407 (19), -0.51376 (20), -0.51254 (20), -0.51244 (20), -0.51143 (19), -0.51123 (20), 
Length of domains: 181526
Time: pickout 0.3074    decision 3.2718    set_bounds 1.6591    solve 6.0298    add 0.1328    
Accumulated time: pickout 3.9155    decision 26.3998    set_bounds 30.0071    solve 81.9207    add 3.6259    
Current (lb-rhs): -0.5260527729988098
413445 domains visited
Cumulative time: 158.07419347763062

BaB round 23
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2712] [/input, 900] [/input-8, 1500] [/input-12, 24] [/input, 1000] [/input-8, 1642] [/input, 2712] [/input-12, 24] [/input-8, 982] [/input, 2216] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8926787376403809, worst -0.4934677183628082
10 lb beta sum: 0.8953614234924316, worst -0.4934197962284088
Time: prepare 1.7627    bound 3.5757    transfer 0.1876    finalize 0.3047    func 6.0409    
Accumulated time: func 87.8822    prepare 19.8064    bound 52.9215    transfer 2.9598    finalize 7.7255    
all_split False
======================Cut inference begins======================
max lb tensor(0.55647111) min lb tensor(-0.49339476)
Number of Verified Splits: 3957 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.0016849040985107422 
BICCOS Cumulative time: 10.703952074050903
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52605 (19), -0.52487 (19), -0.52449 (19), -0.52141 (19), -0.52059 (19), -0.51950 (19), -0.51834 (19), -0.51796 (19), -0.51789 (19), -0.51753 (19), -0.51731 (19), -0.51502 (20), -0.51474 (19), -0.51473 (19), -0.51407 (19), -0.51376 (20), -0.51254 (20), -0.51244 (20), -0.51143 (19), -0.51123 (20), 
Length of domains: 193953
Time: pickout 0.3152    decision 3.3928    set_bounds 1.5580    solve 6.0520    add 0.1258    
Accumulated time: pickout 4.2306    decision 29.7926    set_bounds 31.5651    solve 87.9727    add 3.7517    
Current (lb-rhs): -0.5260527729988098
442256 domains visited
Cumulative time: 169.73552107810974

BaB round 24
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 900] [/input, 2712] [/input-12, 24] [/input-8, 982] [/input-8, 490] [/input-12, 46] [/input-8, 1309] [/input-8, 715] [/input-8, 1900] [/input-8, 1873] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8868558406829834, worst -0.49575307965278625
10 lb beta sum: 0.889203667640686, worst -0.49570438265800476
Time: prepare 1.8628    bound 3.5772    transfer 0.1879    finalize 0.3188    func 6.1559    
Accumulated time: func 94.0380    prepare 21.6697    bound 56.4987    transfer 3.1477    finalize 8.0443    
all_split False
======================Cut inference begins======================
max lb tensor(0.55809665) min lb tensor(-0.49564698)
Number of Verified Splits: 3569 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.0015294551849365234 
BICCOS Cumulative time: 10.70548152923584
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52605 (19), -0.52487 (19), -0.52449 (19), -0.52141 (19), -0.52059 (19), -0.51950 (19), -0.51834 (19), -0.51796 (19), -0.51789 (19), -0.51753 (19), -0.51731 (19), -0.51502 (20), -0.51474 (19), -0.51473 (19), -0.51407 (19), -0.51376 (20), -0.51254 (20), -0.51244 (20), -0.51143 (19), -0.51123 (20), 
Length of domains: 206768
Time: pickout 0.3440    decision 1.7521    set_bounds 3.6050    solve 6.1677    add 0.1410    
Accumulated time: pickout 4.5746    decision 31.5447    set_bounds 35.1700    solve 94.1405    add 3.8927    
Current (lb-rhs): -0.5260527729988098
471455 domains visited
Cumulative time: 181.88309407234192

BaB round 25
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1306] [/input, 2712] [/input-12, 10] [/input-12, 24] [/input-8, 218] [/input-8, 1901] [/input-8, 218] [/input, 917] [/input-8, 982] [/input, 917] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8836672306060791, worst -0.5043285489082336
10 lb beta sum: 0.8866199254989624, worst -0.5042539238929749
Time: prepare 1.7582    bound 3.5749    transfer 0.1982    finalize 0.3317    func 6.0736    
Accumulated time: func 100.1116    prepare 23.4283    bound 60.0736    transfer 3.3459    finalize 8.3760    
all_split False
======================Cut inference begins======================
max lb tensor(0.54635108) min lb tensor(-0.50422043)
Number of Verified Splits: 3659 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.0017371177673339844 
BICCOS Cumulative time: 10.707218647003174
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52605 (19), -0.52487 (19), -0.52449 (19), -0.52141 (19), -0.52059 (19), -0.51950 (19), -0.51834 (19), -0.51796 (19), -0.51789 (19), -0.51753 (19), -0.51731 (19), -0.51502 (20), -0.51474 (19), -0.51473 (19), -0.51407 (19), -0.51376 (20), -0.51254 (20), -0.51244 (20), -0.51143 (19), -0.51123 (20), 
Length of domains: 219493
Time: pickout 0.3301    decision 1.7094    set_bounds 1.6453    solve 6.0847    add 0.2654    
Accumulated time: pickout 4.9047    decision 33.2540    set_bounds 36.8153    solve 100.2251    add 4.1581    
Current (lb-rhs): -0.5260527729988098
500564 domains visited
Cumulative time: 192.08583879470825

BaB round 26
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 663] [/input-12, 24] [/input-8, 1496] [/input, 1000] [/input, 917] [/input, 900] [/input-8, 490] [/input, 2699] [/input, 633] [/input-8, 1500] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8870179653167725, worst -0.5109860301017761
10 lb beta sum: 0.889491081237793, worst -0.5109348893165588
Time: prepare 1.7417    bound 3.5756    transfer 0.2368    finalize 0.3456    func 6.1105    
Accumulated time: func 106.2221    prepare 25.1705    bound 63.6492    transfer 3.5827    finalize 8.7216    
all_split False
======================Cut inference begins======================
max lb tensor(0.58172989) min lb tensor(-0.51090771)
Number of Verified Splits: 3250 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 532.
#cuts 1-3: 6
#cuts 4-6: 196
#cuts 7-9: 226
#cuts 10-12: 100
#cuts 13-15: 4
#cuts >= 20: 0
BICCOS time: 0.0017096996307373047 
BICCOS Cumulative time: 10.708928346633911
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52605 (19), -0.52487 (19), -0.52449 (19), -0.52141 (19), -0.52059 (19), -0.51950 (19), -0.51834 (19), -0.51796 (19), -0.51789 (19), -0.51502 (20), -0.51474 (19), -0.51473 (19), -0.51407 (19), -0.51376 (20), -0.51254 (20), -0.51244 (20), -0.51143 (19), -0.51123 (20), -0.51101 (20), -0.51098 (20), 
Length of domains: 232627
Time: pickout 0.3069    decision 3.4502    set_bounds 1.6621    solve 6.1218    add 0.2709    
Accumulated time: pickout 5.2116    decision 36.7042    set_bounds 38.4774    solve 106.3469    add 4.4290    
Current (lb-rhs): -0.5260527729988098
530082 domains visited
Time out!!!!!!!!
Result: unknown in 209.4067 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 61, vnnlib ID: 61 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.18073654, -29.76648331, -32.32810211, -33.49755859, -30.58907127,
         -34.12847900, -32.73659134, -32.85525131, -28.91254807, -30.01836205]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1044]; unstable size 1044; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 464, 1, 1044] with unstable size 463 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 50, 1, 1044] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1044] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [463]; unstable size 463; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 50, 1, 463] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 463] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [49]; unstable size 49; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 49] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.72585297, -1.56353331,  0.23517311, -2.48156214,  0.16465902,
         -1.15708256, -1.36145926, -3.96656680, -3.41904497]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.18073654, -29.76648331, -32.32810211, -33.49755859, -30.58907127,
         -34.12847900, -32.73659134, -32.85525131, -28.91254807, -30.01836205]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.18073654, -29.76648521, -32.32810211, -33.49755859, -30.58906746,
          -34.12847519, -32.73659515, -32.85525513, -28.91254997, -30.01836395],
         [-29.18073654, -29.76648521, -32.32810211, -33.49755859, -30.58906746,
          -34.12847519, -32.73659515, -32.85525513, -28.91254997, -30.01836395]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.58574867,  3.14736557,  1.40833092,  3.55585861,  3.67451859,
          -0.26818657,  0.83762741]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         ...,


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]]]], device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0966 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 62, vnnlib ID: 62 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-38.53828049, -44.05453110, -42.77738190, -46.52003098, -44.01457977,
         -48.59654236, -48.82781601, -47.22973251, -34.81296158, -43.69131088]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [976]; unstable size 976; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 278, 1, 976] with unstable size 277 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 976] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 976] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [277]; unstable size 277; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 277] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 277] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.85023969,  6.33860779,  4.92908669,  9.04561138,  5.72052765,
         10.83638096, 10.76043129,  8.57081413,  6.71194172]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0863 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 63, vnnlib ID: 63 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.81975937, -36.43883896, -29.57433510, -32.65721893, -31.49572563,
         -32.44165039, -34.07020187, -33.35060120, -34.74016571, -37.33201218]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [841]; unstable size 841; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 214, 1, 841] with unstable size 213 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 841] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 841] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [213]; unstable size 213; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 213] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 213] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.17075586,  0.24043179, -6.22217846, -3.12422705, -4.53123474,
         -3.54438496, -2.61268520, -1.16928148,  1.26802588]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.81975937, -36.43883896, -29.57433510, -32.65721893, -31.49572563,
         -32.44165039, -34.07020187, -33.35060120, -34.74016571, -37.33201218]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.81976318, -36.43883896, -29.57433701, -32.65722656, -31.49572945,
          -32.44165421, -34.07020187, -33.35060501, -34.74016190, -37.33201599],
         [-33.81976318, -36.43883896, -29.57433701, -32.65722656, -31.49572945,
          -32.44165421, -34.07020187, -33.35060501, -34.74016190, -37.33201599]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.25043869, -4.49586487, -1.41297531, -2.57447243, -1.62854767,
          -0.71959686,  0.66996002]]], device='cuda:0')
number of violation:  6
clean attack image tensor([[[[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         ...,


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]]]],
       device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1055 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 64, vnnlib ID: 64 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.73417854, -31.04703522, -19.36839294, -24.20675468, -21.90277672,
         -24.69128418, -24.47218132, -25.56195450, -27.82051659, -29.99766159]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1126]; unstable size 1126; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 359, 1, 1126] with unstable size 358 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 48, 1, 1126] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1126] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [358]; unstable size 358; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 48, 1, 358] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 358] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [47]; unstable size 47; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 47] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.85826731,  8.38900375,  1.67787647, -0.37498760,  1.50726509,
          1.36855555,  2.26403093,  4.66877556,  6.87830973]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.73417854, -31.04703522, -19.36839294, -24.20675468, -21.90277672,
         -24.69128418, -24.47218132, -25.56195450, -27.82051659, -29.99766159]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.40it/s]100%|██████████| 1/1 [00:00<00:00,  8.39it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.49887466, -30.65604210, -19.34844017, -23.68407249, -20.92043114,
          -24.12589836, -23.93456841, -25.01297379, -27.36679268, -29.54637527]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.57199097]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1224 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 32.43248748779297
alpha/beta optimization time: 1.2592909336090088
initial alpha-crown bounds: tensor([[ 4.16221714,  8.62662697,  1.84565830, -0.20412302,  1.71692014,
          1.59309101,  2.52981710,  5.01515579,  7.14712143]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.20412302017211914
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.52426600456238
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.52422618865967
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.52419018745422
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.52416849136353
Verifying property 3 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.20412302]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.73417854, -31.04703522, -19.36839294, -24.20675468, -21.90277672,
        -24.69128418, -24.47218132, -25.56195450, -27.82051659, -29.99766159],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.20412302]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1126
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 351
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1524
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001049041748046875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20412302017211914
10 lb beta sum: 0.0, worst -0.20412826538085938
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0537    transfer 0.0001    finalize 0.0001    func 0.0542    
Accumulated time: func 0.0542    prepare 0.0002    bound 0.0537    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] 
split level 1: [/input-12, 95] 
split level 2: [/input-12, 61] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 78] 
split level 5: [/input-12, 40] 
split level 6: [/input-12, 36] 
split level 7: [/input-12, 29] 
split level 8: [/input-12, 73] 
split level 9: [/input-12, 81] 
split level 10: [/input-12, 54] 
split level 11: [/input-12, 82] 
split level 12: [/input-12, 94] 
split level 13: [/input-8, 1514] 
split level 14: [/input-8, 1525] 
split level 15: [/input-8, 1524] 
split level 16: [/input-8, 2018] 
split level 17: [/input-12, 8] 
split level 18: [/input-12, 89] 
split level 19: [/input-12, 67] 
split level 20: [/input-8, 1516] 
split level 21: [/input-8, 1522] 
split level 22: [/input-8, 2002] 
split level 23: [/input-8, 1517] 
split level 24: [/input, 2167] 
split level 25: [/input-8, 1474] 
split level 26: [/input-8, 1995] 
split level 27: [/input-8, 378] 
split level 28: [/input-12, 0] 
split level 29: [/input-8, 848] 
split level 30: [/input-8, 1925] 
split level 31: [/input-12, 60] 
split level 32: [/input, 3176] 
split level 33: [/input-8, 1482] 
split level 34: [/input-8, 410] 
split level 35: [/input-8, 136] 
split level 36: [/input, 2168] 
split level 37: [/input-8, 1533] 
split level 38: [/input-8, 1653] 
split level 39: [/input, 2267] 
split level 40: [/input-8, 1933] 
split level 41: [/input-8, 356] 
split level 42: [/input-8, 1473] 
split level 43: [/input, 968] 
split level 44: [/input-8, 1391] 
split level 45: [/input-8, 1948] 
split level 46: [/input-8, 1963] 
split level 47: [/input-8, 357] 
split level 48: [/input, 2680] 
split level 49: [/input-8, 1369] 
split level 50: [/input, 2134] 
split level 51: [/input-8, 2024] 
split level 52: [/input-8, 1069] 
split level 53: [/input-8, 856] 
split level 54: [/input-8, 1483] 
split level 55: [/input-8, 1532] 
split level 56: [/input-8, 419] 
split level 57: [/input-12, 35] 
split level 58: [/input-8, 1926] 
split level 59: [/input-8, 1962] 
split level 60: [/input-8, 1910] 
split level 61: [/input, 2198] 
split level 62: [/input-8, 1359] 
split level 63: [/input, 969] 
split level 64: [/input-8, 1365] 
split level 65: [/input, 3207] 
split level 66: [/input-8, 260] 
split level 67: [/input, 3128] 
split level 68: [/input-8, 1940] 
split level 69: [/input-8, 972] 
split level 70: [/input-8, 849] 
split level 71: [/input, 2776] 
split level 72: [/input-8, 261] 
split level 73: [/input-8, 853] 
split level 74: [/input, 2103] 
split level 75: [/input, 872] 
split level 76: [/input-8, 1956] 
split level 77: [/input-8, 1068] 
split level 78: [/input, 2135] 
split level 79: [/input-8, 1255] 
split level 80: [/input, 2729] 
split level 81: [/input-8, 428] 
split level 82: [/input, 647] 
split level 83: [/input-8, 857] 
split level 84: [/input, 2648] 
split level 85: [/input, 1126] 
split level 86: [/input-8, 1939] 
split level 87: [/input, 2153] 
split level 88: [/input-8, 1362] 
split level 89: [/input, 3177] 
split level 90: [/input-8, 377] 
split level 91: [/input, 2743] 
split level 92: [/input-8, 1326] 
split level 93: [/input-8, 1147] 
split level 94: [/input-8, 402] 
split level 95: [/input-8, 2028] 
split level 96: [/input, 2813] 
split level 97: [/input, 2679] 
split level 98: [/input, 2201] 
split level 99: [/input, 2748] 
split level 100: [/input, 3146] 
split level 101: [/input, 2649] 
split level 102: [/input-8, 1526] 
split level 103: [/input-8, 1062] 
split level 104: [/input, 2269] 
split level 105: [/input, 792] 
split level 106: [/input, 2937] 
split level 107: [/input-8, 2025] 
split level 108: [/input-8, 2012] 
split level 109: [/input-8, 2029] 
split level 110: [/input-8, 368] 
split level 111: [/input, 1157] 
split level 112: [/input, 922] 
split level 113: [/input-12, 49] 
split level 114: [/input-8, 973] 
split level 115: [/input, 2762] 
split level 116: [/input, 3130] 
split level 117: [/input-8, 2031] 
split level 118: [/input-8, 2027] 
split level 119: [/input, 699] 
split level 120: [/input, 2692] 
split level 121: [/input-8, 1949] 
split level 122: [/input, 3112] 
split level 123: [/input, 1125] 
split level 124: [/input, 1140] 
split level 125: [/input, 3158] 
split level 126: [/input, 601] 
split level 127: [/input-8, 1097] 
split level 128: [/input, 2633] 
split level 129: [/input-8, 2040] 
split level 130: [/input-8, 1368] 
split level 131: [/input-12, 43] 
split level 132: [/input-8, 981] 
split level 133: [/input, 2732] 
split level 134: [/input, 809] 
split level 135: [/input-8, 1092] 
split level 136: [/input, 856] 
split level 137: [/input, 600] 
split level 138: [/input-8, 846] 
split level 139: [/input-8, 1054] 
split level 140: [/input-8, 1064] 
split level 141: [/input-8, 2046] 
split level 142: [/input, 3153] 
split level 143: [/input, 602] 
split level 144: [/input, 714] 
split level 145: [/input-8, 1975] 
split level 146: [/input, 536] 
split level 147: [/input, 2708] 
split level 148: [/input-8, 436] 
split level 149: [/input, 124] 
split level 150: [/input-8, 865] 
split level 151: [/input, 537] 
split level 152: [/input, 569] 
split level 153: [/input, 826] 
split level 154: [/input, 2782] 
split level 155: [/input, 3169] 
split level 156: [/input, 2749] 
split level 157: [/input, 617] 
split level 158: [/input, 2750] 
split level 159: [/input, 553] 
split level 160: [/input, 2411] 
split level 161: [/input, 1156] 
split level 162: [/input, 2676] 
split level 163: [/input, 618] 
split level 164: [/input-8, 1372] 
split level 165: [/input, 700] 
split level 166: [/input, 2766] 
split level 167: [/input, 635] 
split level 168: [/input, 570] 
split level 169: [/input-8, 1838] 
split level 170: [/input, 90] 
split level 171: [/input, 2724] 
split level 172: [/input, 2412] 
split level 173: [/input, 3154] 
split level 174: [/input, 3170] 
split level 175: [/input, 108] 
split level 176: [/input, 2426] 
split level 177: [/input, 697] 
split level 178: [/input, 619] 
split level 179: [/input-8, 1093] 
split level 180: [/input, 564] 
split level 181: [/input, 793] 
split level 182: [/input, 636] 
split level 183: [/input, 586] 
split level 184: [/input, 818] 
split level 185: [/input, 2380] 
split level 186: [/input, 842] 
split level 187: [/input, 2427] 
split level 188: [/input, 603] 
split level 189: [/input-8, 1812] 
split level 190: [/input, 562] 
split level 191: [/input, 2379] 
split level 192: [/input, 2428] 
split level 193: [/input, 2396] 
split level 194: [/input, 2429] 
split level 195: [/input, 91] 
split level 196: [/input, 2395] 
split level 197: [/input, 651] 
split level 198: [/input, 2413] 
split level 199: [/input, 949] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2034764289855957
10 lb beta sum: 0.0, worst -0.20347118377685547
Time: prepare 0.0114    bound 0.0989    transfer 0.0027    finalize 0.0034    func 0.1191    
Accumulated time: func 0.1732    prepare 0.0215    bound 0.1526    transfer 0.0028    finalize 0.0036    
all_split False
======================Cut inference begins======================
max lb tensor(0.29664314) min lb tensor(-0.20345473)
Number of Verified Splits: 11 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011034965515136719 
BICCOS Cumulative time: 0.011034965515136719
Preprocessing time: 0.010251760482788086 Inference time: 0.0004487037658691406 Add cuts time: 0.0001659393310546875 Cut analysis time: 0.0001685619354248047
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5293    set_bounds 0.0089    solve 0.1192    add 0.0101    
Accumulated time: pickout 0.0003    decision 0.5293    set_bounds 0.0089    solve 0.1192    add 0.0101    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 88] 
split level 1: [/input-12, 95] 
split level 2: [/input-12, 61] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 78] 
split level 5: [/input-12, 40] 
split level 6: [/input-12, 29] 
split level 7: [/input-12, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.6340205669403076

all verified at 0th iter
Time: prepare 0.0036    bound 0.0041    transfer 0.0015    finalize 0.0014    func 0.0123    
Accumulated time: func 0.1855    prepare 0.0255    bound 0.1567    transfer 0.0044    finalize 0.0050    
all_split False
======================Cut inference begins======================
max lb tensor(1.93696094) min lb tensor(0.63402057)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006262779235839844 
BICCOS Cumulative time: 0.017297744750976562
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0216    set_bounds 0.0165    solve 0.0123    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.5510    set_bounds 0.0254    solve 0.1315    add 0.0101    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.8194069862365723


Properties batch 4, size 1
Remaining timeout: 197.45052099227905
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.4504518508911
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.4504280090332
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.45040774345398
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.45038866996765
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.5497 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 65, vnnlib ID: 65 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-39.89600754, -41.55519104, -40.10262680, -36.19924164, -38.89497757,
         -37.09645462, -36.36360931, -38.93479156, -38.74737930, -40.88636780]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [906]; unstable size 906; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 221, 1, 906] with unstable size 220 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 906] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 906] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [220]; unstable size 220; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 220] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 220] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.01561761,  2.55555820,  1.01025867, -2.21486950, -0.09316301,
         -1.54890239, -0.71730620, -1.35001135,  1.06810319]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-39.89600754, -41.55519104, -40.10262680, -36.19924164, -38.89497757,
         -37.09645462, -36.36360931, -38.93479156, -38.74737930, -40.88636780]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.89600754, -41.55518723, -40.10262680, -36.19923401, -38.89497757,
          -37.09645462, -36.36361313, -38.93479156, -38.74737549, -40.88637161],
         [-39.89600754, -41.55518723, -40.10262680, -36.19923401, -38.89497757,
          -37.09645462, -36.36361313, -38.93479156, -38.74737549, -40.88637161]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.16437912,  2.53136444,  0.73284149,  2.57117844,  2.38376236]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1153 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 66, vnnlib ID: 66 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.92585945, -29.99271584, -22.42035866, -24.01302910, -20.54305840,
         -23.95152473, -21.55704117, -26.14271545, -27.15402794, -29.58119965]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [624]; unstable size 624; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 385, 1, 624] with unstable size 384 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 52, 1, 624] with unstable size 51 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 624] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [384]; unstable size 384; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 52, 1, 384] with unstable size 51 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 384] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [51]; unstable size 51; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 51] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.93138695,  4.10835266, -1.95389962,  0.46729898,  0.03578782,
         -2.48424101,  1.92781401,  1.65242112,  4.12886047]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.92585945, -29.99271584, -22.42035866, -24.01302910, -20.54305840,
         -23.95152473, -21.55704117, -26.14271545, -27.15402794, -29.58119965]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.49304581, -30.37638092, -22.78937721, -24.51169395, -21.41290283,
          -24.46124458, -21.29718971, -26.88644218, -27.78062057, -30.07426834],
         [-26.49304581, -30.37638092, -22.78937721, -24.51169395, -21.41290283,
          -24.46124458, -21.29718971, -26.88644218, -27.78062057, -30.07426834]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.37647438, -0.11571312]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0075 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0981 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 67, vnnlib ID: 67 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.21340942, -36.28258133, -25.40135384, -29.43562508, -26.59591866,
         -29.41502953, -28.84910965, -29.77495003, -32.57234192, -35.39523697]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1171]; unstable size 1171; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 365, 1, 1171] with unstable size 364 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 45, 1, 1171] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1171] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [364]; unstable size 364; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 45, 1, 364] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 364] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [44]; unstable size 44; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.54251337,  7.40787554,  1.51658440, -1.42077017,  0.97305030,
          0.07297087,  1.12253249,  3.39217019,  6.35164356]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.21340942, -36.28258133, -25.40135384, -29.43562508, -26.59591866,
         -29.41502953, -28.84910965, -29.77495003, -32.57234192, -35.39523697]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.48it/s]100%|██████████| 1/1 [00:00<00:00,  8.47it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.78242302, -35.96145630, -25.32014275, -29.11478996, -25.77646065,
          -29.07756615, -28.35402870, -29.25574303, -32.20336533, -34.98242569]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.45631790]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1209 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 24.69735336303711
alpha/beta optimization time: 1.3005027770996094
initial alpha-crown bounds: tensor([[ 3.75758028,  7.58727646,  1.66990376, -1.27737808,  1.16185844,
          0.29809976,  1.31842947,  3.61033130,  6.57125521]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -1.2773780822753906
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.49795770645142
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.4978985786438
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.4978630542755
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.49784016609192
Verifying property 3 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.27737808]], device='cuda:0') need to verify.
Model prediction is: tensor([-32.21340942, -36.28258133, -25.40135384, -29.43562508, -26.59591866,
        -29.41502953, -28.84910965, -29.77495003, -32.57234192, -35.39523697],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.27737808]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1171
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 352
Node /15 input 0: size torch.Size([100]) unstable 42
-----------------
# of unstable neurons: 1565
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010895729064941406
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.277376651763916
10 lb beta sum: 0.0, worst -1.277390480041504
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0541    transfer 0.0001    finalize 0.0001    func 0.0546    
Accumulated time: func 0.0546    prepare 0.0002    bound 0.0541    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 71] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 40] 
split level 5: [/input-12, 54] 
split level 6: [/input-12, 80] 
split level 7: [/input-12, 29] 
split level 8: [/input-12, 73] 
split level 9: [/input-12, 53] 
split level 10: [/input-12, 81] 
split level 11: [/input-12, 36] 
split level 12: [/input-12, 82] 
split level 13: [/input-8, 354] 
split level 14: [/input-8, 1291] 
split level 15: [/input-8, 1521] 
split level 16: [/input-8, 1126] 
split level 17: [/input-8, 1386] 
split level 18: [/input-8, 1700] 
split level 19: [/input-8, 1355] 
split level 20: [/input-8, 338] 
split level 21: [/input-12, 60] 
split level 22: [/input-8, 1483] 
split level 23: [/input-8, 1513] 
split level 24: [/input-8, 1525] 
split level 25: [/input-8, 1662] 
split level 26: [/input-8, 1524] 
split level 27: [/input-8, 1369] 
split level 28: [/input-8, 420] 
split level 29: [/input-8, 1058] 
split level 30: [/input-12, 0] 
split level 31: [/input-8, 2005] 
split level 32: [/input-8, 2004] 
split level 33: [/input-8, 347] 
split level 34: [/input-8, 1134] 
split level 35: [/input-8, 1370] 
split level 36: [/input-8, 1393] 
split level 37: [/input-8, 1362] 
split level 38: [/input-8, 1934] 
split level 39: [/input-8, 1378] 
split level 40: [/input-8, 1701] 
split level 41: [/input-8, 1354] 
split level 42: [/input-8, 1956] 
split level 43: [/input-8, 1049] 
split level 44: [/input-8, 1050] 
split level 45: [/input-8, 1950] 
split level 46: [/input-8, 1485] 
split level 47: [/input-8, 362] 
split level 48: [/input-8, 1361] 
split level 49: [/input-8, 149] 
split level 50: [/input-8, 371] 
split level 51: [/input, 1930] 
split level 52: [/input-8, 1507] 
split level 53: [/input-8, 1034] 
split level 54: [/input-8, 148] 
split level 55: [/input-8, 1096] 
split level 56: [/input-8, 1042] 
split level 57: [/input-8, 1997] 
split level 58: [/input-8, 1363] 
split level 59: [/input-12, 35] 
split level 60: [/input-8, 101] 
split level 61: [/input-8, 941] 
split level 62: [/input, 697] 
split level 63: [/input-8, 1387] 
split level 64: [/input-8, 891] 
split level 65: [/input-8, 1368] 
split level 66: [/input-8, 1517] 
split level 67: [/input, 1163] 
split level 68: [/input-8, 1353] 
split level 69: [/input, 3212] 
split level 70: [/input-8, 995] 
split level 71: [/input-8, 1118] 
split level 72: [/input, 2332] 
split level 73: [/input, 1914] 
split level 74: [/input, 2121] 
split level 75: [/input, 2618] 
split level 76: [/input-8, 2040] 
split level 77: [/input-8, 781] 
split level 78: [/input-8, 1066] 
split level 79: [/input, 1164] 
split level 80: [/input-8, 1951] 
split level 81: [/input-12, 43] 
split level 82: [/input, 3451] 
split level 83: [/input-8, 934] 
split level 84: [/input, 932] 
split level 85: [/input, 1147] 
split level 86: [/input, 1146] 
split level 87: [/input, 1160] 
split level 88: [/input, 793] 
split level 89: [/input-8, 1813] 
split level 90: [/input-8, 1375] 
split level 91: [/input-8, 368] 
split level 92: [/input, 2409] 
split level 93: [/input-8, 759] 
split level 94: [/input, 538] 
split level 95: [/input, 140] 
split level 96: [/input, 3514] 
split level 97: [/input-8, 1360] 
split level 98: [/input, 537] 
split level 99: [/input, 3180] 
split level 100: [/input-8, 1905] 
split level 101: [/input-8, 506] 
split level 102: [/input-8, 1491] 
split level 103: [/input, 3197] 
split level 104: [/input, 570] 
split level 105: [/input, 2436] 
split level 106: [/input-8, 986] 
split level 107: [/input, 155] 
split level 108: [/input, 123] 
split level 109: [/input, 1165] 
split level 110: [/input, 2764] 
split level 111: [/input, 114] 
split level 112: [/input, 2426] 
split level 113: [/input, 2444] 
split level 114: [/input, 1912] 
split level 115: [/input-8, 1949] 
split level 116: [/input-8, 892] 
split level 117: [/input, 2418] 
split level 118: [/input, 536] 
split level 119: [/input-8, 2022] 
split level 120: [/input, 3466] 
split level 121: [/input-8, 1547] 
split level 122: [/input, 2634] 
split level 123: [/input, 1150] 
split level 124: [/input, 3198] 
split level 125: [/input-8, 1072] 
split level 126: [/input, 2251] 
split level 127: [/input, 2331] 
split level 128: [/input, 2329] 
split level 129: [/input, 130] 
split level 130: [/input, 2124] 
split level 131: [/input-8, 2030] 
split level 132: [/input, 28] 
split level 133: [/input, 138] 
split level 134: [/input, 2435] 
split level 135: [/input-8, 1231] 
split level 136: [/input, 709] 
split level 137: [/input, 2404] 
split level 138: [/input, 1127] 
split level 139: [/input, 2420] 
split level 140: [/input, 2746] 
split level 141: [/input, 2108] 
split level 142: [/input, 2771] 
split level 143: [/input, 683] 
split level 144: [/input, 661] 
split level 145: [/input-8, 344] 
split level 146: [/input, 715] 
split level 147: [/input, 1132] 
split level 148: [/input, 2763] 
split level 149: [/input, 132] 
split level 150: [/input-8, 318] 
split level 151: [/input, 567] 
split level 152: [/input, 1159] 
split level 153: [/input, 54] 
split level 154: [/input, 2434] 
split level 155: [/input, 2437] 
split level 156: [/input, 2451] 
split level 157: [/input, 2348] 
split level 158: [/input, 2989] 
split level 159: [/input, 917] 
split level 160: [/input, 662] 
split level 161: [/input, 2427] 
split level 162: [/input-8, 847] 
split level 163: [/input, 113] 
split level 164: [/input, 3972] 
split level 165: [/input, 2316] 
split level 166: [/input, 115] 
split level 167: [/input, 116] 
split level 168: [/input, 933] 
split level 169: [/input, 3877] 
split level 170: [/input, 678] 
split level 171: [/input-8, 1064] 
split level 172: [/input, 2136] 
split level 173: [/input, 2419] 
split level 174: [/input-8, 1839] 
split level 175: [/input, 1577] 
split level 176: [/input, 1949] 
split level 177: [/input, 677] 
split level 178: [/input, 149] 
split level 179: [/input, 2762] 
split level 180: [/input-8, 360] 
split level 181: [/input, 693] 
split level 182: [/input, 2421] 
split level 183: [/input, 675] 
split level 184: [/input-8, 1405] 
split level 185: [/input-8, 284] 
split level 186: [/input-8, 1388] 
split level 187: [/input, 2450] 
split level 188: [/input, 106] 
split level 189: [/input, 133] 
split level 190: [/input, 3084] 
split level 191: [/input, 10] 
split level 192: [/input, 3182] 
split level 193: [/input, 84] 
split level 194: [/input, 2314] 
split level 195: [/input, 2693] 
split level 196: [/input, 2388] 
split level 197: [/input, 3861] 
split level 198: [/input, 918] 
split level 199: [/input, 2403] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.277318000793457
10 lb beta sum: 0.0, worst -1.2773332595825195
Time: prepare 0.0114    bound 0.1022    transfer 0.0018    finalize 0.0035    func 0.1216    
Accumulated time: func 0.1761    prepare 0.0216    bound 0.1563    transfer 0.0019    finalize 0.0037    
all_split False
======================Cut inference begins======================
max lb tensor(-0.73910022) min lb tensor(-1.27731419)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010430574417114258 
BICCOS Cumulative time: 0.010430574417114258
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.25944 (1), -1.25944 (1), -1.25904 (1), -1.25778 (1), -1.25569 (1), -1.25532 (1), -1.25460 (1), -1.25424 (1), -1.25235 (1), -1.25221 (1), -1.25118 (1), -1.25090 (1), -1.25089 (1), -1.24941 (1), -1.24916 (1), -1.24786 (1), -1.24777 (1), -1.24777 (1), -1.24771 (1), -1.24543 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5287    set_bounds 0.0089    solve 0.1217    add 0.0907    
Accumulated time: pickout 0.0003    decision 0.5287    set_bounds 0.0089    solve 0.1217    add 0.0907    
Current (lb-rhs): -1.2594435214996338
50 domains visited
Cumulative time: 0.8376731872558594

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] [/input-12, 61] [/input-12, 58] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 1: [/input-12, 58] [/input-12, 58] [/input-12, 71] [/input-12, 58] [/input-12, 58] [/input-12, 71] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 2: [/input-12, 71] [/input-12, 71] [/input-12, 78] [/input-12, 71] [/input-12, 71] [/input-12, 78] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 78] 
split level 3: [/input-12, 78] [/input-12, 78] [/input-12, 29] [/input-12, 78] [/input-12, 78] [/input-12, 29] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.189293622970581
10 lb beta sum: 0.0, worst -1.1882376670837402
Time: prepare 0.0125    bound 0.1009    transfer 0.0020    finalize 0.0026    func 0.1206    
Accumulated time: func 0.2967    prepare 0.0344    bound 0.2572    transfer 0.0039    finalize 0.0062    
all_split False
======================Cut inference begins======================
max lb tensor(0.10461807) min lb tensor(-1.18811679)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.012796401977539062 
BICCOS Cumulative time: 0.02322697639465332
Preprocessing time: 0.012325048446655273 Inference time: 0.0001442432403564453 Add cuts time: 6.246566772460938e-05 Cut analysis time: 0.0002646446228027344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.70888 (2), -0.70794 (2), -0.70067 (2), -0.69705 (2), -0.69583 (2), -0.69208 (2), -0.69191 (2), -0.68493 (2), -0.67518 (2), -0.67177 (2), -0.63920 (2), -0.63713 (2), -0.62850 (2), -0.62051 (2), -0.61489 (2), -0.61295 (2), -0.61239 (2), -0.60140 (2), -0.58593 (2), -0.58548 (2), 
Length of domains: 50
Time: pickout 0.0016    decision 0.0231    set_bounds 0.0138    solve 0.1207    add 0.0817    
Accumulated time: pickout 0.0019    decision 0.5518    set_bounds 0.0226    solve 0.2423    add 0.1725    
Current (lb-rhs): -0.7088820934295654
100 domains visited
Cumulative time: 1.0915896892547607

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 58] [/input-12, 61] 
split level 1: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 58] [/input-12, 71] [/input-12, 71] [/input-12, 58] 
split level 2: [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] 
split level 3: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.66404128074646
10 lb beta sum: 0.04549475386738777, worst -0.6500626802444458
Time: prepare 0.0059    bound 0.1201    transfer 0.0050    finalize 0.0027    func 0.1369    
Accumulated time: func 0.4337    prepare 0.0406    bound 0.3772    transfer 0.0088    finalize 0.0090    
all_split False
======================Cut inference begins======================
max lb tensor(0.32049322) min lb tensor(-0.64556909)
Number of Verified Splits: 32 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 4
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.014432907104492188 
BICCOS Cumulative time: 0.03765988349914551
Preprocessing time: 0.011979103088378906 Inference time: 0.001538991928100586 Add cuts time: 0.0005543231964111328 Cut analysis time: 0.0003604888916015625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18075 (3), -0.18004 (3), -0.17907 (3), -0.17785 (3), -0.17308 (3), -0.17285 (3), -0.16935 (3), -0.16886 (3), -0.15949 (3), -0.15890 (3), -0.15838 (3), -0.15748 (3), -0.15114 (3), -0.15060 (3), -0.14570 (3), -0.14433 (3), -0.14238 (3), -0.14155 (3), -0.14081 (3), -0.13811 (3), 
Length of domains: 50
Time: pickout 0.0009    decision 0.0196    set_bounds 0.0159    solve 0.1370    add 0.0905    
Accumulated time: pickout 0.0029    decision 0.5713    set_bounds 0.0385    solve 0.3794    add 0.2629    
Current (lb-rhs): -0.18075013160705566
150 domains visited
Cumulative time: 1.3702242374420166

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 71] [/input-12, 71] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-12, 71] [/input-12, 71] [/input-12, 78] [/input-12, 71] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] 
split level 2: [/input-12, 29] [/input-12, 78] [/input-12, 29] [/input-12, 78] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 3: [/input-8, 860] [/input-8, 860] [/input-12, 36] [/input-8, 860] [/input-12, 36] [/input-12, 36] [/input-8, 860] [/input-12, 36] [/input-12, 36] [/input-12, 36] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20314598083496094
10 lb beta sum: 0.0553269237279892, worst -0.2505717873573303
Time: prepare 0.0060    bound 0.1216    transfer 0.0013    finalize 0.0025    func 0.1340    
Accumulated time: func 0.5677    prepare 0.0468    bound 0.4989    transfer 0.0101    finalize 0.0115    
all_split False
======================Cut inference begins======================
max lb tensor(0.33591938) min lb tensor(-0.16187191)
Number of Verified Splits: 298 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 12
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.03507852554321289 
BICCOS Cumulative time: 0.0727384090423584
Preprocessing time: 0.012194633483886719 Inference time: 0.01590895652770996 Add cuts time: 0.0063953399658203125 Cut analysis time: 0.0005795955657958984
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0018    decision 0.0198    set_bounds 0.0158    solve 0.1342    add 0.0247    
Accumulated time: pickout 0.0047    decision 0.5911    set_bounds 0.0543    solve 0.5135    add 0.2876    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 71] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 40] 
split level 5: [/input-12, 29] 
split level 6: [/input-12, 53] 
split level 7: [/input-12, 36] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4279000759124756
10 lb beta sum: 0.40463489294052124, worst -0.4008232653141022
Time: prepare 0.0037    bound 0.1199    transfer 0.0027    finalize 0.0022    func 0.1302    
Accumulated time: func 0.6979    prepare 0.0509    bound 0.6188    transfer 0.0128    finalize 0.0137    
all_split False
======================Cut inference begins======================
max lb tensor(0.83197737) min lb tensor(-0.39783698)
Number of Verified Splits: 185 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9535481929779053
10 lb beta sum: 0.5121275186538696, worst -0.9349727630615234
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 12
#cuts 4-6: 15
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.41301703453063965 
BICCOS Cumulative time: 0.48575544357299805
Preprocessing time: 0.00672459602355957 Inference time: 0.4009726047515869 Add cuts time: 0.003987789154052734 Cut analysis time: 0.0013320446014404297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39784 (8), -0.39377 (8), -0.37194 (8), -0.35523 (8), -0.33799 (8), -0.33570 (8), -0.33046 (8), -0.31596 (8), -0.31565 (8), -0.30494 (8), -0.29302 (8), -0.28072 (8), -0.27963 (8), -0.27414 (8), -0.25682 (8), -0.25547 (8), -0.25402 (8), -0.24578 (8), -0.23711 (8), -0.23321 (8), 
Length of domains: 71
Time: pickout 0.0006    decision 0.0228    set_bounds 0.0169    solve 0.1303    add 0.0833    
Accumulated time: pickout 0.0053    decision 0.6139    set_bounds 0.0713    solve 0.6438    add 0.3710    
Current (lb-rhs): -0.39783698320388794
221 domains visited
Cumulative time: 2.2803845405578613

BaB round 2
batch: 71
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] [/input-12, 80] [/input-12, 54] [/input-12, 80] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
split level 1: [/input-12, 80] [/input-12, 54] [/input-12, 80] [/input-12, 82] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3868072032928467
10 lb beta sum: 0.31958284974098206, worst -0.3737058639526367
Time: prepare 0.0042    bound 0.1265    transfer 0.0018    finalize 0.0019    func 0.1361    
Accumulated time: func 0.8340    prepare 0.0553    bound 0.7453    transfer 0.0146    finalize 0.0156    
all_split False
======================Cut inference begins======================
max lb tensor(0.94171065) min lb tensor(-0.37215447)
Number of Verified Splits: 204 of 284
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9044601917266846
10 lb beta sum: 0.5457900166511536, worst -0.6257653832435608
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 61.
#cuts 1-3: 12
#cuts 4-6: 29
#cuts 7-9: 20
#cuts >= 20: 0
BICCOS time: 0.26035261154174805 
BICCOS Cumulative time: 0.7461080551147461
Preprocessing time: 0.008934974670410156 Inference time: 0.23929286003112793 Add cuts time: 0.00952005386352539 Cut analysis time: 0.0026047229766845703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.37215 (10), -0.37159 (10), -0.34790 (10), -0.32769 (10), -0.31375 (10), -0.31194 (10), -0.29454 (10), -0.29183 (10), -0.29178 (10), -0.28225 (10), -0.25627 (10), -0.25058 (10), -0.24315 (10), -0.22895 (10), -0.22340 (10), -0.22026 (10), -0.22002 (10), -0.21121 (10), -0.20502 (10), -0.20461 (10), 
Length of domains: 80
Time: pickout 0.0200    decision 0.0181    set_bounds 0.0138    solve 0.1363    add 0.0876    
Accumulated time: pickout 0.0253    decision 0.6320    set_bounds 0.0851    solve 0.7801    add 0.4586    
Current (lb-rhs): -0.37215447425842285
301 domains visited
Cumulative time: 2.8273398876190186

BaB round 3
batch: 80
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 1: [/input-12, 81] [/input-12, 81] [/input-8, 1521] [/input-8, 1126] [/input-8, 1126] [/input-8, 1126] [/input-12, 81] [/input-8, 1126] [/input-8, 1521] [/input-8, 1521] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34360504150390625
10 lb beta sum: 0.2158052772283554, worst -0.3418741226196289
Time: prepare 0.0055    bound 0.1198    transfer 0.0026    finalize 0.0027    func 0.1327    
Accumulated time: func 0.9667    prepare 0.0610    bound 0.8651    transfer 0.0172    finalize 0.0183    
all_split False
======================Cut inference begins======================
max lb tensor(0.73846883) min lb tensor(-0.34121561)
Number of Verified Splits: 208 of 320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 12
#cuts 4-6: 1
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.034430742263793945 
BICCOS Cumulative time: 0.78053879737854
Preprocessing time: 0.009494543075561523 Inference time: 0.02077460289001465 Add cuts time: 0.0036318302154541016 Cut analysis time: 0.0005297660827636719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34122 (12), -0.33028 (12), -0.32554 (12), -0.32029 (12), -0.30598 (12), -0.29754 (12), -0.29283 (12), -0.28155 (12), -0.27748 (12), -0.27205 (12), -0.26150 (12), -0.26097 (12), -0.25809 (12), -0.25207 (12), -0.25114 (12), -0.24909 (12), -0.24778 (12), -0.24776 (12), -0.24416 (12), -0.23990 (12), 
Length of domains: 112
Time: pickout 0.0028    decision 0.0167    set_bounds 0.0173    solve 0.1328    add 0.0766    
Accumulated time: pickout 0.0281    decision 0.6487    set_bounds 0.1023    solve 0.9128    add 0.5352    
Current (lb-rhs): -0.3412156105041504
413 domains visited
Cumulative time: 3.1161274909973145

BaB round 4
batch: 112
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1521] [/input-12, 81] [/input-8, 1521] [/input-8, 1126] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-8, 1521] [/input-12, 81] [/input-8, 1126] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.33088135719299316
10 lb beta sum: 0.3865657150745392, worst -0.33030128479003906
Time: prepare 0.0043    bound 0.1179    transfer 0.0035    finalize 0.0015    func 0.1286    
Accumulated time: func 1.0953    prepare 0.0655    bound 0.9829    transfer 0.0206    finalize 0.0198    
all_split False
======================Cut inference begins======================
max lb tensor(0.57495415) min lb tensor(-0.32996726)
Number of Verified Splits: 148 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 13
#cuts >= 20: 0
BICCOS time: 0.02323007583618164 
BICCOS Cumulative time: 0.8037688732147217
Preprocessing time: 0.006745338439941406 Inference time: 0.014767885208129883 Add cuts time: 0.0013458728790283203 Cut analysis time: 0.00037097930908203125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32997 (13), -0.31934 (13), -0.31451 (13), -0.30898 (13), -0.26155 (13), -0.26055 (13), -0.25793 (13), -0.25515 (13), -0.25079 (13), -0.25050 (13), -0.23740 (13), -0.23176 (13), -0.22975 (13), -0.22670 (13), -0.22453 (13), -0.22313 (13), -0.22266 (13), -0.22241 (13), -0.20854 (13), -0.20350 (13), 
Length of domains: 76
Time: pickout 0.0143    decision 0.0157    set_bounds 0.0084    solve 0.1287    add 0.0754    
Accumulated time: pickout 0.0424    decision 0.6644    set_bounds 0.1107    solve 1.0415    add 0.6106    
Current (lb-rhs): -0.3299672603607178
489 domains visited
Cumulative time: 3.3902478218078613

BaB round 5
batch: 76
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1126] [/input-8, 1126] [/input-12, 73] [/input-12, 73] [/input-8, 1521] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-8, 1521] 
split level 1: [/input-8, 1513] [/input-8, 1513] [/input-8, 1521] [/input-8, 1521] [/input-8, 1513] [/input-8, 1524] [/input-8, 1513] [/input-8, 1521] [/input-8, 1524] [/input-8, 1513] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2993354797363281
10 lb beta sum: 0.7096958756446838, worst -0.29414668679237366
Time: prepare 0.0061    bound 0.1343    transfer 0.0034    finalize 0.0023    func 0.1481    
Accumulated time: func 1.2435    prepare 0.0718    bound 1.1173    transfer 0.0241    finalize 0.0221    
all_split False
======================Cut inference begins======================
max lb tensor(0.74426305) min lb tensor(-0.29379731)
Number of Verified Splits: 232 of 304
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.03785252571105957 
BICCOS Cumulative time: 0.8416213989257812
Preprocessing time: 0.010970592498779297 Inference time: 0.024827003479003906 Add cuts time: 0.0013720989227294922 Cut analysis time: 0.000682830810546875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29380 (15), -0.29139 (15), -0.29017 (15), -0.28834 (15), -0.27909 (15), -0.27701 (15), -0.27563 (15), -0.27506 (15), -0.23858 (15), -0.23687 (15), -0.23621 (15), -0.23607 (15), -0.23399 (15), -0.23168 (15), -0.21705 (15), -0.21504 (15), -0.21455 (15), -0.21427 (15), -0.21394 (15), -0.21296 (15), 
Length of domains: 72
Time: pickout 0.0145    decision 0.0155    set_bounds 0.0187    solve 0.1482    add 0.0809    
Accumulated time: pickout 0.0569    decision 0.6799    set_bounds 0.1295    solve 1.1898    add 0.6915    
Current (lb-rhs): -0.2937973141670227
561 domains visited
Cumulative time: 3.7132461071014404

BaB round 6
batch: 72
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 73] [/input-8, 1386] [/input-8, 1126] [/input-8, 1386] [/input-12, 73] [/input-8, 1483] [/input-8, 1126] [/input-8, 1386] [/input-8, 1126] [/input-8, 1483] 
split level 1: [/input-8, 1524] [/input-8, 1126] [/input-8, 1524] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 347] [/input-8, 1513] [/input-8, 1524] [/input-8, 1513] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2792792320251465
10 lb beta sum: 0.7560201287269592, worst -0.27424874901771545
Time: prepare 0.0058    bound 0.1339    transfer 0.0029    finalize 0.0018    func 0.1462    
Accumulated time: func 1.3896    prepare 0.0779    bound 1.2511    transfer 0.0270    finalize 0.0239    
all_split False
======================Cut inference begins======================
max lb tensor(0.69252670) min lb tensor(-0.27404767)
Number of Verified Splits: 179 of 288
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 16
#cuts >= 20: 0
BICCOS time: 0.030925273895263672 
BICCOS Cumulative time: 0.8725466728210449
Preprocessing time: 0.008699655532836914 Inference time: 0.020479202270507812 Add cuts time: 0.001321554183959961 Cut analysis time: 0.0004248619079589844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27405 (17), -0.27146 (17), -0.27112 (17), -0.26859 (17), -0.25747 (17), -0.25515 (17), -0.25221 (17), -0.24995 (17), -0.22429 (17), -0.22173 (17), -0.22038 (17), -0.21777 (17), -0.21703 (17), -0.21444 (17), -0.21227 (17), -0.20981 (17), -0.20555 (17), -0.20398 (17), -0.20327 (17), -0.20210 (17), 
Length of domains: 109
Time: pickout 0.0146    decision 0.0180    set_bounds 0.0156    solve 0.1463    add 0.0828    
Accumulated time: pickout 0.0715    decision 0.6979    set_bounds 0.1451    solve 1.3361    add 0.7743    
Current (lb-rhs): -0.2740476727485657
670 domains visited
Cumulative time: 4.032907962799072

BaB round 7
batch: 109
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 0] [/input-8, 1483] [/input-8, 347] [/input-12, 0] [/input-8, 1126] [/input-8, 1483] [/input-8, 347] [/input-12, 0] [/input-8, 1483] [/input-8, 1126] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2670431137084961
10 lb beta sum: 0.6685723066329956, worst -0.2622784972190857
Time: prepare 0.0046    bound 0.1331    transfer 0.0018    finalize 0.0014    func 0.1423    
Accumulated time: func 1.5320    prepare 0.0827    bound 1.3842    transfer 0.0287    finalize 0.0253    
all_split False
======================Cut inference begins======================
max lb tensor(0.02447127) min lb tensor(-0.26219732)
Number of Verified Splits: 25 of 218
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 16
#cuts >= 20: 0
BICCOS time: 0.010454654693603516 
BICCOS Cumulative time: 0.8830013275146484
Preprocessing time: 0.006680488586425781 Inference time: 0.0029892921447753906 Add cuts time: 0.0003604888916015625 Cut analysis time: 0.00042438507080078125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26220 (18), -0.25974 (18), -0.25934 (18), -0.25695 (18), -0.25345 (18), -0.25171 (18), -0.24918 (18), -0.24760 (18), -0.24493 (18), -0.24274 (18), -0.23952 (18), -0.23743 (18), -0.23605 (18), -0.23193 (18), -0.23177 (18), -0.22793 (18), -0.21519 (18), -0.21444 (18), -0.21358 (18), -0.21227 (18), 
Length of domains: 193
Time: pickout 0.0132    decision 0.0191    set_bounds 0.0094    solve 0.1424    add 0.0762    
Accumulated time: pickout 0.0847    decision 0.7170    set_bounds 0.1545    solve 1.4784    add 0.8505    
Current (lb-rhs): -0.2621973156929016
863 domains visited
Cumulative time: 4.310960292816162

BaB round 8
batch: 193
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1134] [/input-8, 1393] [/input-8, 1058] [/input-8, 1134] [/input-12, 0] [/input-8, 1393] [/input-8, 2004] [/input-8, 1126] [/input-8, 1058] [/input-12, 0] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7539058923721313, worst -0.2621973156929016
10 lb beta sum: 0.7539058923721313, worst -0.26212960481643677
Time: prepare 0.0170    bound 0.1482    transfer 0.0017    finalize 0.0028    func 0.1723    
Accumulated time: func 1.7043    prepare 0.1000    bound 1.5324    transfer 0.0304    finalize 0.0280    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00036064) min lb tensor(-0.26208717)
Number of Verified Splits: 0 of 386
No cut inferred: All or none verified.
Total number of valid cuts: 16.
#cuts 1-3: 16
#cuts >= 20: 0
BICCOS time: 0.012558698654174805 
BICCOS Cumulative time: 0.8955600261688232
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26209 (19), -0.25963 (19), -0.25932 (19), -0.25693 (19), -0.25294 (19), -0.25138 (19), -0.24853 (19), -0.24721 (19), -0.24462 (19), -0.24242 (19), -0.24196 (19), -0.23953 (19), -0.23929 (19), -0.23889 (19), -0.23717 (19), -0.23658 (19), -0.23513 (19), -0.23103 (19), -0.23103 (19), -0.22992 (19), 
Length of domains: 386
Time: pickout 0.0168    decision 0.0203    set_bounds 0.0164    solve 0.1725    add 0.0160    
Accumulated time: pickout 0.1015    decision 0.7373    set_bounds 0.1709    solve 1.6509    add 0.8665    
Current (lb-rhs): -0.2620871663093567
1249 domains visited
Cumulative time: 4.566983222961426

BaB round 9
batch: 386
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 347] [/input-12, 0] [/input-8, 2004] [/input-8, 347] [/input-8, 347] [/input-12, 0] [/input-8, 1058] [/input-8, 347] [/input-8, 1393] [/input-8, 347] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7539058327674866, worst -0.2536523938179016
10 lb beta sum: 0.7539058327674866, worst -0.253423273563385
Time: prepare 0.0339    bound 0.1385    transfer 0.0061    finalize 0.0045    func 0.1881    
Accumulated time: func 1.8924    prepare 0.1341    bound 1.6709    transfer 0.0365    finalize 0.0326    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00036064) min lb tensor(-0.25334364)
Number of Verified Splits: 0 of 772
No cut inferred: All or none verified.
Total number of valid cuts: 16.
#cuts 1-3: 16
#cuts >= 20: 0
BICCOS time: 0.023151874542236328 
BICCOS Cumulative time: 0.9187119007110596
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25334 (20), -0.25089 (20), -0.25057 (20), -0.24819 (20), -0.24756 (20), -0.24701 (20), -0.24554 (20), -0.24516 (20), -0.24479 (20), -0.24262 (20), -0.24242 (20), -0.24125 (20), -0.23588 (20), -0.23580 (20), -0.23355 (20), -0.23355 (20), -0.23277 (20), -0.23249 (20), -0.23085 (20), -0.23055 (20), 
Length of domains: 772
Time: pickout 0.0093    decision 0.0313    set_bounds 0.0336    solve 0.1891    add 0.0070    
Accumulated time: pickout 0.1107    decision 0.7686    set_bounds 0.2045    solve 1.8400    add 0.8736    
Current (lb-rhs): -0.2533436417579651
2021 domains visited
Cumulative time: 4.861250877380371

BaB round 10
batch: 772
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1483] [/input-8, 2004] [/input-12, 0] [/input-8, 2004] [/input-8, 2004] [/input-8, 2004] [/input-12, 0] [/input-8, 1058] [/input-12, 0] [/input-8, 2004] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7539058923721313, worst -0.24788910150527954
10 lb beta sum: 0.7539058923721313, worst -0.24783951044082642
Time: prepare 0.0674    bound 0.1539    transfer 0.0165    finalize 0.0092    func 0.2571    
Accumulated time: func 2.1494    prepare 0.2017    bound 1.8248    transfer 0.0530    finalize 0.0417    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00036064) min lb tensor(-0.24782163)
Number of Verified Splits: 0 of 1544
No cut inferred: All or none verified.
Total number of valid cuts: 16.
#cuts 1-3: 16
#cuts >= 20: 0
BICCOS time: 0.04821896553039551 
BICCOS Cumulative time: 0.9669308662414551
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24782 (21), -0.24538 (21), -0.24504 (21), -0.24267 (21), -0.24175 (21), -0.24134 (21), -0.24018 (21), -0.23895 (21), -0.23854 (21), -0.23734 (21), -0.23618 (21), -0.23593 (21), -0.23094 (21), -0.23004 (21), -0.22948 (21), -0.22846 (21), -0.22817 (21), -0.22777 (21), -0.22774 (21), -0.22735 (21), 
Length of domains: 1544
Time: pickout 0.0117    decision 0.0541    set_bounds 0.0655    solve 0.2574    add 0.0135    
Accumulated time: pickout 0.1224    decision 0.8227    set_bounds 0.2700    solve 2.0974    add 0.8871    
Current (lb-rhs): -0.2478216290473938
3565 domains visited
Cumulative time: 5.313229084014893

BaB round 11
batch: 1544
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2004] [/input-8, 1361] [/input-8, 1483] [/input-8, 1483] [/input-8, 1393] [/input-8, 1361] [/input-8, 1483] [/input-8, 2004] [/input-8, 1361] [/input-8, 1058] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7539058923721313, worst -0.2427108883857727
10 lb beta sum: 0.7539058923721313, worst -0.2426627278327942
Time: prepare 0.1376    bound 0.2357    transfer 0.0237    finalize 0.0174    func 0.4360    
Accumulated time: func 2.5855    prepare 0.3395    bound 2.0605    transfer 0.0766    finalize 0.0592    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00036064) min lb tensor(-0.24263531)
Number of Verified Splits: 0 of 3088
No cut inferred: All or none verified.
Total number of valid cuts: 16.
#cuts 1-3: 16
#cuts >= 20: 0
BICCOS time: 0.09580230712890625 
BICCOS Cumulative time: 1.0627331733703613
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24264 (22), -0.24020 (22), -0.23990 (22), -0.23754 (22), -0.23582 (22), -0.23342 (22), -0.23311 (22), -0.23244 (22), -0.23093 (22), -0.23076 (22), -0.23075 (22), -0.22835 (22), -0.22788 (22), -0.22775 (22), -0.22767 (22), -0.22659 (22), -0.22587 (22), -0.22546 (22), -0.22491 (22), -0.22452 (22), 
Length of domains: 3088
Time: pickout 0.0258    decision 0.2650    set_bounds 0.1339    solve 0.4369    add 0.0144    
Accumulated time: pickout 0.1482    decision 1.0878    set_bounds 0.4038    solve 2.5343    add 0.9015    
Current (lb-rhs): -0.2426353096961975
6653 domains visited
Cumulative time: 6.28822660446167

BaB round 12
batch: 3088
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1386] [/input-8, 1058] [/input-8, 1701] [/input-8, 1386] [/input-8, 1058] [/input-8, 1058] [/input-8, 1701] [/input-8, 1483] [/input-8, 2004] [/input-8, 1393] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7539058923721313, worst -0.23578506708145142
10 lb beta sum: 0.7539058923721313, worst -0.23574215173721313
Time: prepare 0.2736    bound 0.4069    transfer 0.0468    finalize 0.0327    func 0.8005    
Accumulated time: func 3.3860    prepare 0.6136    bound 2.4674    transfer 0.1234    finalize 0.0919    
all_split False
======================Cut inference begins======================
max lb tensor(0.00762999) min lb tensor(-0.23571140)
Number of Verified Splits: 6 of 6176
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 16
#cuts >= 20: 0
BICCOS time: 0.20064806938171387 
BICCOS Cumulative time: 1.2633812427520752
Preprocessing time: 0.19662785530090332 Inference time: 0.0010936260223388672 Add cuts time: 0.002368927001953125 Cut analysis time: 0.0005576610565185547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23571 (23), -0.23393 (23), -0.23330 (23), -0.23157 (23), -0.22867 (23), -0.22854 (23), -0.22686 (23), -0.22629 (23), -0.22614 (23), -0.22595 (23), -0.22534 (23), -0.22478 (23), -0.22451 (23), -0.22371 (23), -0.22243 (23), -0.22163 (23), -0.22150 (23), -0.22141 (23), -0.22134 (23), -0.22100 (23), 
Length of domains: 6170
Time: pickout 0.0500    decision 0.1863    set_bounds 0.4479    solve 0.8025    add 0.0635    
Accumulated time: pickout 0.1982    decision 1.2740    set_bounds 0.8518    solve 3.3368    add 0.9650    
Current (lb-rhs): -0.23571139574050903
12823 domains visited
Cumulative time: 8.04906439781189

BaB round 13
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1058] [/input-8, 1507] [/input-8, 1386] [/input-8, 1058] [/input-8, 1369] [/input-8, 1507] [/input-8, 1386] [/input-8, 1393] [/input-8, 1369] [/input-8, 1483] 
cut re-enabled after branching node selection
0 lb beta sum: 0.754636287689209, worst -0.2323790192604065
10 lb beta sum: 0.754636287689209, worst -0.23234635591506958
Time: prepare 0.4135    bound 0.5205    transfer 0.0422    finalize 0.3131    func 1.3451    
Accumulated time: func 4.7311    prepare 1.0276    bound 2.9879    transfer 0.1656    finalize 0.4050    
all_split False
======================Cut inference begins======================
max lb tensor(0.00888121) min lb tensor(-0.23232085)
Number of Verified Splits: 3 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 16
#cuts >= 20: 0
BICCOS time: 0.2758512496948242 
BICCOS Cumulative time: 1.5392324924468994
Preprocessing time: 0.27071237564086914 Inference time: 0.0006113052368164062 Add cuts time: 0.003961086273193359 Cut analysis time: 0.0005664825439453125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23232 (24), -0.23050 (24), -0.22990 (24), -0.22867 (23), -0.22814 (24), -0.22686 (23), -0.22629 (23), -0.22502 (24), -0.22451 (23), -0.22371 (23), -0.22261 (24), -0.22235 (24), -0.22165 (24), -0.22163 (23), -0.22134 (23), -0.22082 (24), -0.22072 (23), -0.21983 (23), -0.21936 (23), -0.21847 (24), 
Length of domains: 10263
Time: pickout 0.0794    decision 0.5226    set_bounds 0.4694    solve 1.3470    add 0.2016    
Accumulated time: pickout 0.2776    decision 1.7967    set_bounds 1.3211    solve 4.6838    add 1.1666    
Current (lb-rhs): -0.2323208451271057
21012 domains visited
current_vram/total_varm: 11.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 10.962968826293945

BaB round 14
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1369] [/input-8, 1369] [/input-8, 1662] [/input-8, 1369] [/input-8, 1386] [/input-8, 1507] [/input-8, 1386] [/input-8, 1058] [/input-8, 1369] [/input-8, 1507] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7540223598480225, worst -0.22540003061294556
10 lb beta sum: 0.7540223598480225, worst -0.2252827286720276
Time: prepare 0.7601    bound 0.9502    transfer 0.0950    finalize 0.0927    func 2.0073    
Accumulated time: func 6.7384    prepare 1.7880    bound 3.9381    transfer 0.2606    finalize 0.4976    
all_split False
======================Cut inference begins======================
max lb tensor(0.01169407) min lb tensor(-0.22518283)
Number of Verified Splits: 11 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 16
#cuts >= 20: 0
BICCOS time: 0.5403788089752197 
BICCOS Cumulative time: 2.079611301422119
Preprocessing time: 0.5274019241333008 Inference time: 0.0037169456481933594 Add cuts time: 0.008653640747070312 Cut analysis time: 0.0006062984466552734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23232 (24), -0.23050 (24), -0.22990 (24), -0.22814 (24), -0.22518 (24), -0.22329 (24), -0.22274 (24), -0.22109 (25), -0.22096 (24), -0.22014 (24), -0.21871 (25), -0.21803 (24), -0.21775 (24), -0.21683 (24), -0.21674 (25), -0.21637 (25), -0.21581 (24), -0.21574 (24), -0.21567 (25), -0.21440 (25), 
Length of domains: 18444
Time: pickout 0.1390    decision 0.6696    set_bounds 0.9991    solve 2.0104    add 0.1793    
Accumulated time: pickout 0.4166    decision 2.4662    set_bounds 2.3203    solve 6.6942    add 1.3460    
Current (lb-rhs): -0.2323208451271057
37385 domains visited
current_vram/total_varm: 18.9GB/99.9GB, batch_size increase to 16384
Cumulative time: 15.523329734802246

BaB round 15
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1507] [/input-8, 1701] [/input-8, 1369] [/input-8, 1507] [/input-8, 1701] [/input-8, 1369] [/input-8, 1386] [/input-8, 1701] [/input-8, 1701] [/input-8, 1369] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7539762258529663, worst -0.2284737229347229
10 lb beta sum: 0.7539762258529663, worst -0.22846752405166626
Time: prepare 1.4575    bound 1.8208    transfer 0.2025    finalize 0.5419    func 4.2333    
Accumulated time: func 10.9717    prepare 3.2460    bound 5.7588    transfer 0.4631    finalize 1.0395    
all_split False
======================Cut inference begins======================
max lb tensor(0.01684368) min lb tensor(-0.22844511)
Number of Verified Splits: 136 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 16
#cuts >= 20: 0
BICCOS time: 1.1497352123260498 
BICCOS Cumulative time: 3.229346513748169
Preprocessing time: 1.0637755393981934 Inference time: 0.06458687782287598 Add cuts time: 0.02077317237854004 Cut analysis time: 0.0005996227264404297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22845 (25), -0.22656 (25), -0.22606 (25), -0.22424 (25), -0.22121 (25), -0.21924 (25), -0.21883 (25), -0.21697 (25), -0.21665 (26), -0.21617 (25), -0.21427 (26), -0.21401 (25), -0.21385 (25), -0.21279 (25), -0.21252 (26), -0.21220 (26), -0.21180 (25), -0.21168 (25), -0.21141 (26), -0.21141 (25), 
Length of domains: 34692
Time: pickout 0.2662    decision 1.8998    set_bounds 2.0826    solve 4.2388    add 0.3455    
Accumulated time: pickout 0.6828    decision 4.3661    set_bounds 4.4029    solve 10.9330    add 1.6914    
Current (lb-rhs): -0.2284451127052307
70017 domains visited
current_vram/total_varm: 28.0GB/99.9GB, batch_size increase to 32768
Cumulative time: 25.586617946624756

BaB round 16
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1386] [/input-8, 1483] [/input-8, 1507] [/input-8, 1662] [/input-8, 1701] [/input-8, 1507] [/input-8, 891] [/input-8, 1525] [/input-8, 1517] [/input-8, 891] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7537825107574463, worst -0.22410303354263306
10 lb beta sum: 0.7537825107574463, worst -0.22406059503555298
Time: prepare 2.9190    bound 8.7643    transfer 0.5905    finalize 0.5305    func 13.7145    
Accumulated time: func 24.6862    prepare 6.1660    bound 14.5231    transfer 1.0536    finalize 1.5701    
all_split False
======================Cut inference begins======================
max lb tensor(0.01865494) min lb tensor(-0.22403628)
Number of Verified Splits: 890 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 16
#cuts 7-9: 2
#cuts 10-12: 7
#cuts >= 20: 0
BICCOS time: 3.173123836517334 
BICCOS Cumulative time: 6.402470350265503
Preprocessing time: 2.2203266620635986 Inference time: 0.9207334518432617 Add cuts time: 0.030671119689941406 Cut analysis time: 0.0013926029205322266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22404 (26), -0.22206 (26), -0.22167 (26), -0.21977 (26), -0.21674 (26), -0.21640 (26), -0.21471 (26), -0.21452 (26), -0.21441 (26), -0.21400 (26), -0.21247 (26), -0.21220 (26), -0.21164 (26), -0.21141 (26), -0.21141 (26), -0.21141 (26), -0.21141 (26), -0.21088 (27), -0.20947 (26), -0.20935 (26), 
Length of domains: 66570
Time: pickout 0.5147    decision 3.7010    set_bounds 3.9672    solve 13.7239    add 27.6209    
Accumulated time: pickout 1.1976    decision 8.0671    set_bounds 8.3700    solve 24.6569    add 29.3123    
Current (lb-rhs): -0.22403627634048462
134663 domains visited
Cumulative time: 78.42474937438965

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1701] [/input-8, 1354] [/input-8, 1525] [/input-8, 1517] [/input-8, 1354] [/input-8, 1386] [/input-8, 1517] [/input-8, 1662] [/input-8, 1354] [/input-8, 1701] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2107560634613037
10 lb beta sum: 0.5371264815330505, worst -0.21072006225585938
Time: prepare 1.4186    bound 8.7825    transfer 0.6200    finalize 0.5736    func 11.8271    
Accumulated time: func 36.5133    prepare 7.5850    bound 23.3056    transfer 1.6735    finalize 2.1437    
all_split False
======================Cut inference begins======================
max lb tensor(0.13128035) min lb tensor(-0.21066189)
Number of Verified Splits: 23542 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 16
#cuts 7-9: 6
#cuts 10-12: 14
#cuts >= 20: 0
BICCOS time: 9.40042519569397 
BICCOS Cumulative time: 15.802895545959473
Preprocessing time: 3.0305047035217285 Inference time: 5.938851594924927 Add cuts time: 0.4288935661315918 Cut analysis time: 0.0021753311157226562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22404 (26), -0.22206 (26), -0.22167 (26), -0.21977 (26), -0.21674 (26), -0.21471 (26), -0.21441 (26), -0.21247 (26), -0.21164 (26), -0.21141 (26), -0.21141 (26), -0.21141 (26), -0.21088 (27), -0.21066 (27), -0.20947 (26), -0.20935 (27), -0.20935 (26), -0.20901 (26), -0.20901 (26), -0.20901 (26), 
Length of domains: 75796
Time: pickout 0.5325    decision 3.3593    set_bounds 4.3719    solve 11.8385    add 0.5820    
Accumulated time: pickout 1.7301    decision 11.4264    set_bounds 12.7420    solve 36.4954    add 29.8943    
Current (lb-rhs): -0.22403627634048462
176657 domains visited
Cumulative time: 108.93475794792175

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1525] [/input-8, 1517] [/input-8, 1662] [/input-8, 1662] [/input-8, 1525] [/input-8, 1361] [/input-8, 1525] [/input-8, 1662] [/input-8, 1361] [/input-8, 1354] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21837544441223145
10 lb beta sum: 0.5185649394989014, worst -0.21832489967346191
Time: prepare 1.5536    bound 8.8072    transfer 0.6316    finalize 1.6174    func 13.0392    
Accumulated time: func 49.5525    prepare 9.1392    bound 32.1128    transfer 2.3052    finalize 3.7611    
all_split False
======================Cut inference begins======================
max lb tensor(0.13462445) min lb tensor(-0.21827388)
Number of Verified Splits: 28555 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 53.
#cuts 1-3: 16
#cuts 7-9: 22
#cuts 10-12: 15
#cuts >= 20: 0
BICCOS time: 12.381871700286865 
BICCOS Cumulative time: 28.184767246246338
Preprocessing time: 2.9468977451324463 Inference time: 8.823802947998047 Add cuts time: 0.6073181629180908 Cut analysis time: 0.00385284423828125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21827 (27), -0.21628 (27), -0.21592 (27), -0.21400 (27), -0.21325 (27), -0.21120 (27), -0.21094 (27), -0.21089 (27), -0.21066 (27), -0.20935 (27), -0.20893 (27), -0.20888 (27), -0.20862 (27), -0.20827 (27), -0.20704 (27), -0.20663 (27), -0.20586 (27), -0.20549 (27), -0.20514 (28), -0.20406 (27), 
Length of domains: 80009
Time: pickout 0.6115    decision 3.4324    set_bounds 4.3972    solve 13.0487    add 0.5839    
Accumulated time: pickout 2.3416    decision 14.8588    set_bounds 17.1392    solve 49.5441    add 30.4782    
Current (lb-rhs): -0.21827387809753418
213638 domains visited
Cumulative time: 144.66134905815125

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1126] [/input-8, 1525] [/input-8, 1361] [/input-8, 1701] [/input-8, 1483] [/input-8, 1361] [/input-8, 1701] [/input-8, 1378] [/input-8, 1525] [/input-8, 1118] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2058866024017334
10 lb beta sum: 0.46324700117111206, worst -0.20586323738098145
Time: prepare 1.6684    bound 8.8899    transfer 0.3111    finalize 0.6106    func 11.9226    
Accumulated time: func 61.4751    prepare 10.8094    bound 41.0026    transfer 2.6163    finalize 4.3717    
all_split False
======================Cut inference begins======================
max lb tensor(0.12831566) min lb tensor(-0.20580602)
Number of Verified Splits: 7239 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 65.
#cuts 1-3: 16
#cuts 7-9: 24
#cuts 10-12: 25
#cuts >= 20: 0
BICCOS time: 6.3708250522613525 
BICCOS Cumulative time: 34.55559229850769
Preprocessing time: 3.8689961433410645 Inference time: 2.290404796600342 Add cuts time: 0.20616698265075684 Cut analysis time: 0.005257129669189453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21827 (27), -0.21628 (27), -0.21592 (27), -0.21400 (27), -0.21325 (27), -0.21120 (27), -0.21094 (27), -0.21089 (27), -0.20893 (27), -0.20888 (27), -0.20862 (27), -0.20663 (27), -0.20586 (27), -0.20581 (28), -0.20549 (27), -0.20514 (28), -0.20366 (27), -0.20364 (28), -0.20356 (27), -0.20342 (27), 
Length of domains: 105538
Time: pickout 0.7298    decision 3.6299    set_bounds 6.5213    solve 11.9380    add 0.3221    
Accumulated time: pickout 3.0714    decision 18.4887    set_bounds 23.6605    solve 61.4821    add 30.8003    
Current (lb-rhs): -0.21827387809753418
271935 domains visited
Cumulative time: 174.56560349464417

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1483] [/input-8, 1378] [/input-8, 1662] [/input-8, 1525] [/input-8, 1662] [/input-8, 1662] [/input-8, 1525] [/input-8, 1700] [/input-8, 1701] [/input-8, 1368] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2125988006591797
10 lb beta sum: 0.44770389795303345, worst -0.21254467964172363
Time: prepare 1.8555    bound 8.9201    transfer 0.3175    finalize 2.0143    func 13.5397    
Accumulated time: func 75.0148    prepare 12.6661    bound 49.9228    transfer 2.9338    finalize 6.3859    
all_split False
======================Cut inference begins======================
max lb tensor(0.04456219) min lb tensor(-0.21252513)
Number of Verified Splits: 6050 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 83.
#cuts 1-3: 16
#cuts 7-9: 35
#cuts 10-12: 32
#cuts >= 20: 0
BICCOS time: 6.531923294067383 
BICCOS Cumulative time: 41.08751559257507
Preprocessing time: 2.706746816635132 Inference time: 3.639261484146118 Add cuts time: 0.17956256866455078 Cut analysis time: 0.006352424621582031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21253 (28), -0.21154 (28), -0.21094 (27), -0.21016 (28), -0.20888 (27), -0.20862 (27), -0.20826 (28), -0.20746 (28), -0.20663 (27), -0.20631 (28), -0.20586 (27), -0.20581 (28), -0.20509 (28), -0.20401 (28), -0.20366 (27), -0.20364 (28), -0.20356 (27), -0.20340 (28), -0.20149 (27), -0.20132 (28), 
Length of domains: 132256
Time: pickout 0.7379    decision 3.5642    set_bounds 5.3668    solve 13.5537    add 0.2909    
Accumulated time: pickout 3.8092    decision 22.0529    set_bounds 29.0273    solve 75.0358    add 31.0912    
Current (lb-rhs): -0.2125251293182373
331421 domains visited
Time out!!!!!!!!
Result: unknown in 208.1916 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 68, vnnlib ID: 68 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-43.65251541, -49.87659836, -42.96482086, -42.46868134, -38.64110184,
         -41.59708786, -44.30360794, -35.62705994, -49.10974503, -48.17938614]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [835]; unstable size 835; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 339, 1, 835] with unstable size 338 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 41, 1, 835] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 835] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [338]; unstable size 338; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 41, 1, 338] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 338] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [40]; unstable size 40; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.96898890,  9.28897858,  2.55988646,  2.80062580, -0.02810383,
          2.22952557,  3.91420937,  8.81061554,  7.73016930]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-43.65251541, -49.87659836, -42.96482086, -42.46868134, -38.64110184,
         -41.59708786, -44.30360794, -35.62705994, -49.10974503, -48.17938614]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.24it/s]100%|██████████| 1/1 [00:00<00:00,  8.23it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-41.77414703, -47.81754684, -40.88289642, -40.50918961, -36.43015289,
          -39.79555511, -42.14548874, -34.65322113, -47.04720688, -46.21386719]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.77693176]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1249 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 1th iter
best_l after optimization: 41.6418571472168
alpha/beta optimization time: 0.028975486755371094
initial alpha-crown bounds: tensor([[4.01777363e+00, 9.33761215e+00, 2.60239410e+00, 2.83630371e+00,
         3.19623947e-03, 2.26350164e+00, 3.95734549e+00, 8.85216522e+00,
         7.77156401e+00]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.003196239471435547
verified with init bound!
Result: safe-incomplete in 0.2316 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 69, vnnlib ID: 69 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-39.89593124, -43.89597321, -43.62707138, -44.10583496, -42.57754135,
         -45.69538116, -45.90080643, -44.32054138, -39.53283310, -43.30187607]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1121]; unstable size 1121; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 314, 1, 1121] with unstable size 313 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 1121] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1121] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [313]; unstable size 313; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 313] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 313] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.02034092,  1.96609449,  1.01814270,  1.98155558, -0.38826060,
          3.03331375,  2.98171020,  1.46504247,  0.82156515]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-39.89593124, -43.89597321, -43.62707138, -44.10583496, -42.57754135,
         -45.69538116, -45.90080643, -44.32054138, -39.53283310, -43.30187607]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-38.42604446, -43.03944778, -42.14200211, -43.07450867, -41.17562485,
          -44.58665466, -44.85495758, -42.87013626, -39.13361740, -42.32049561],
         [-38.42604446, -43.03944778, -42.14200211, -43.07450867, -41.17562485,
          -44.58665466, -44.85495758, -42.87013626, -39.13361740, -42.32049561]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.70757294,  2.04200745]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0061 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0442 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 70, vnnlib ID: 70 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-34.88838577, -35.64988708, -32.28656769, -32.71906662, -30.41603279,
         -33.34217834, -28.01378250, -34.99840927, -37.12889099, -37.44083023]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [955]; unstable size 955; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 291, 1, 955] with unstable size 290 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 41, 1, 955] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 955] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [290]; unstable size 290; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 41, 1, 290] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 290] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [40]; unstable size 40; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.19990277,  4.22351837,  0.38590765,  2.28364086, -0.62216568,
          2.44576979,  3.24029589,  4.99400616,  5.72119427]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-34.88838577, -35.64988708, -32.28656769, -32.71906662, -30.41603279,
         -33.34217834, -28.01378250, -34.99840927, -37.12889099, -37.44083023]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.06it/s]100%|██████████| 1/1 [00:00<00:00,  8.06it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.31023788, -35.29534531, -31.60173798, -31.96641731, -29.28048897,
          -32.45249176, -28.02684021, -33.85700607, -36.77968979, -36.80704117]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.25364876]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1270 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 27.871089935302734
alpha/beta optimization time: 1.3181734085083008
initial alpha-crown bounds: tensor([[ 3.44208288,  4.44459867,  0.61068630,  2.46917653, -0.44136477,
          2.64074206,  3.45147800,  5.23632622,  6.01736307]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.44136476516723633
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.51225399971008
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.51221227645874
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.5121715068817
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.51214742660522
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.51212739944458
Verifying property 4 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.44136477]], device='cuda:0') need to verify.
Model prediction is: tensor([-34.88838577, -35.64988708, -32.28656769, -32.71906662, -30.41603279,
        -33.34217834, -28.01378250, -34.99840927, -37.12889099, -37.44083023],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.44136477]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 955
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 288
Node /15 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 1281
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00012040138244628906
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4413595199584961
10 lb beta sum: 0.0, worst -0.4413771629333496
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0562    transfer 0.0001    finalize 0.0002    func 0.0567    
Accumulated time: func 0.0567    prepare 0.0002    bound 0.0562    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] 
split level 1: [/input-12, 71] 
split level 2: [/input-12, 38] 
split level 3: [/input-12, 40] 
split level 4: [/input-12, 58] 
split level 5: [/input-12, 8] 
split level 6: [/input-12, 62] 
split level 7: [/input-12, 49] 
split level 8: [/input-12, 29] 
split level 9: [/input-12, 19] 
split level 10: [/input-12, 31] 
split level 11: [/input-12, 15] 
split level 12: [/input-8, 1509] 
split level 13: [/input-12, 82] 
split level 14: [/input-12, 60] 
split level 15: [/input-12, 30] 
split level 16: [/input-8, 1499] 
split level 17: [/input-8, 997] 
split level 18: [/input-8, 1507] 
split level 19: [/input-8, 1500] 
split level 20: [/input-8, 1141] 
split level 21: [/input-8, 989] 
split level 22: [/input-8, 998] 
split level 23: [/input-8, 1501] 
split level 24: [/input-12, 14] 
split level 25: [/input-8, 1116] 
split level 26: [/input-8, 861] 
split level 27: [/input-8, 1454] 
split level 28: [/input-8, 1530] 
split level 29: [/input-8, 1489] 
split level 30: [/input-8, 1378] 
split level 31: [/input-8, 986] 
split level 32: [/input-8, 940] 
split level 33: [/input-8, 116] 
split level 34: [/input-8, 1699] 
split level 35: [/input-8, 1839] 
split level 36: [/input-12, 92] 
split level 37: [/input-8, 194] 
split level 38: [/input, 2696] 
split level 39: [/input-8, 890] 
split level 40: [/input-8, 425] 
split level 41: [/input, 3195] 
split level 42: [/input-8, 1517] 
split level 43: [/input-8, 1938] 
split level 44: [/input-8, 1829] 
split level 45: [/input-8, 1005] 
split level 46: [/input-8, 889] 
split level 47: [/input, 2162] 
split level 48: [/input-8, 1446] 
split level 49: [/input-8, 1660] 
split level 50: [/input-8, 893] 
split level 51: [/input, 2691] 
split level 52: [/input-8, 990] 
split level 53: [/input-8, 1525] 
split level 54: [/input-8, 1306] 
split level 55: [/input, 2179] 
split level 56: [/input, 949] 
split level 57: [/input-8, 1841] 
split level 58: [/input-8, 1259] 
split level 59: [/input-8, 1754] 
split level 60: [/input, 4090] 
split level 61: [/input-8, 1390] 
split level 62: [/input-8, 1069] 
split level 63: [/input-8, 894] 
split level 64: [/input-8, 1790] 
split level 65: [/input, 1180] 
split level 66: [/input-8, 1060] 
split level 67: [/input-8, 1762] 
split level 68: [/input-8, 1366] 
split level 69: [/input-8, 1137] 
split level 70: [/input-8, 1770] 
split level 71: [/input, 2168] 
split level 72: [/input-12, 85] 
split level 73: [/input, 4073] 
split level 74: [/input, 714] 
split level 75: [/input-8, 981] 
split level 76: [/input-8, 476] 
split level 77: [/input, 2146] 
split level 78: [/input-8, 1316] 
split level 79: [/input-8, 1068] 
split level 80: [/input-8, 1298] 
split level 81: [/input, 693] 
split level 82: [/input-8, 1697] 
split level 83: [/input-8, 848] 
split level 84: [/input, 2166] 
split level 85: [/input-8, 1755] 
split level 86: [/input, 709] 
split level 87: [/input-8, 1260] 
split level 88: [/input, 3179] 
split level 89: [/input-8, 1830] 
split level 90: [/input, 729] 
split level 91: [/input-8, 1358] 
split level 92: [/input, 2742] 
split level 93: [/input, 920] 
split level 94: [/input, 2199] 
split level 95: [/input, 2215] 
split level 96: [/input, 2231] 
split level 97: [/input, 2217] 
split level 98: [/input-8, 649] 
split level 99: [/input, 1996] 
split level 100: [/input, 745] 
split level 101: [/input-8, 641] 
split level 102: [/input, 698] 
split level 103: [/input-8, 1252] 
split level 104: [/input-8, 1150] 
split level 105: [/input-8, 111] 
split level 106: [/input, 4026] 
split level 107: [/input-8, 1864] 
split level 108: [/input-8, 616] 
split level 109: [/input-8, 608] 
split level 110: [/input-8, 888] 
split level 111: [/input, 2177] 
split level 112: [/input, 2185] 
split level 113: [/input-8, 1250] 
split level 114: [/input, 2935] 
split level 115: [/input-8, 1146] 
split level 116: [/input-8, 447] 
split level 117: [/input-8, 153] 
split level 118: [/input-8, 726] 
split level 119: [/input, 2697] 
split level 120: [/input, 3207] 
split level 121: [/input, 952] 
split level 122: [/input-8, 146] 
split level 123: [/input-8, 1058] 
split level 124: [/input-8, 1842] 
split level 125: [/input, 2197] 
split level 126: [/input, 2137] 
split level 127: [/input-8, 1488] 
split level 128: [/input, 3161] 
split level 129: [/input, 2933] 
split level 130: [/input-8, 1955] 
split level 131: [/input, 981] 
split level 132: [/input-8, 2037] 
split level 133: [/input-8, 1782] 
split level 134: [/input-8, 881] 
split level 135: [/input, 1642] 
split level 136: [/input-8, 145] 
split level 137: [/input-8, 1357] 
split level 138: [/input, 1163] 
split level 139: [/input, 2950] 
split level 140: [/input, 856] 
split level 141: [/input, 2987] 
split level 142: [/input, 2247] 
split level 143: [/input, 2952] 
split level 144: [/input, 2682] 
split level 145: [/input, 3191] 
split level 146: [/input, 647] 
split level 147: [/input, 3230] 
split level 148: [/input, 725] 
split level 149: [/input-8, 320] 
split level 150: [/input, 2649] 
split level 151: [/input, 2988] 
split level 152: [/input, 1640] 
split level 153: [/input, 3905] 
split level 154: [/input, 692] 
split level 155: [/input, 2665] 
split level 156: [/input, 761] 
split level 157: [/input-8, 167] 
split level 158: [/input-8, 721] 
split level 159: [/input-8, 925] 
split level 160: [/input-8, 718] 
split level 161: [/input, 747] 
split level 162: [/input, 715] 
split level 163: [/input, 2706] 
split level 164: [/input, 4061] 
split level 165: [/input, 3517] 
split level 166: [/input-8, 1356] 
split level 167: [/input, 2953] 
split level 168: [/input, 2969] 
split level 169: [/input, 845] 
split level 170: [/input, 2970] 
split level 171: [/input, 3229] 
split level 172: [/input-8, 1033] 
split level 173: [/input, 3786] 
split level 174: [/input, 970] 
split level 175: [/input, 1660] 
split level 176: [/input, 2380] 
split level 177: [/input, 1507] 
split level 178: [/input, 2377] 
split level 179: [/input, 1676] 
split level 180: [/input-8, 1070] 
split level 181: [/input, 2363] 
split level 182: [/input, 780] 
split level 183: [/input, 2990] 
split level 184: [/input, 2882] 
split level 185: [/input-12, 84] 
split level 186: [/input, 2650] 
split level 187: [/input, 1194] 
split level 188: [/input, 3636] 
split level 189: [/input, 2666] 
split level 190: [/input, 2643] 
split level 191: [/input-8, 506] 
split level 192: [/input, 539] 
split level 193: [/input, 797] 
split level 194: [/input-8, 1022] 
split level 195: [/input, 2156] 
split level 196: [/input, 2347] 
split level 197: [/input, 2677] 
split level 198: [/input, 2381] 
split level 199: [/input-8, 1875] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.44098520278930664
10 lb beta sum: 0.0, worst -0.44097232818603516
Time: prepare 0.0114    bound 0.1088    transfer 0.0022    finalize 0.0031    func 0.1281    
Accumulated time: func 0.1848    prepare 0.0218    bound 0.1650    transfer 0.0023    finalize 0.0032    
all_split False
======================Cut inference begins======================
max lb tensor(0.40341997) min lb tensor(-0.44095659)
Number of Verified Splits: 4 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.01139211654663086 
BICCOS Cumulative time: 0.01139211654663086
Preprocessing time: 0.010413646697998047 Inference time: 0.0002067089080810547 Add cuts time: 9.679794311523438e-05 Cut analysis time: 0.0006749629974365234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.41427 (1), -0.41395 (1), -0.41362 (1), -0.41325 (1), -0.41221 (1), -0.41129 (1), -0.41107 (1), -0.41069 (1), -0.41035 (1), -0.40764 (1), -0.40584 (1), -0.40550 (1), -0.40475 (1), -0.40443 (1), -0.40324 (1), -0.40250 (1), -0.40196 (1), -0.40063 (1), -0.39918 (1), -0.39860 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5536    set_bounds 0.0090    solve 0.1282    add 0.1259    
Accumulated time: pickout 0.0004    decision 0.5536    set_bounds 0.0090    solve 0.1282    add 0.1259    
Current (lb-rhs): -0.41427183151245117
50 domains visited
Cumulative time: 0.9007484912872314

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
split level 1: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
split level 2: [/input-12, 40] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 40] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
split level 3: [/input-12, 8] [/input-12, 40] [/input-12, 8] [/input-12, 40] [/input-12, 40] [/input-12, 8] [/input-12, 40] [/input-12, 8] [/input-12, 40] [/input-12, 40] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34406471252441406
10 lb beta sum: 0.6109335422515869, worst -0.23236453533172607
Time: prepare 0.0067    bound 0.1283    transfer 0.0007    finalize 0.0024    func 0.1407    
Accumulated time: func 0.3255    prepare 0.0288    bound 0.2933    transfer 0.0030    finalize 0.0056    
all_split False
======================Cut inference begins======================
max lb tensor(0.62152529) min lb tensor(-0.23189843)
Number of Verified Splits: 252 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.026239395141601562 
BICCOS Cumulative time: 0.03763151168823242
Preprocessing time: 0.012096643447875977 Inference time: 0.010128974914550781 Add cuts time: 0.0038263797760009766 Cut analysis time: 0.00018739700317382812
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0212    set_bounds 0.0133    solve 0.1408    add 0.0159    
Accumulated time: pickout 0.0016    decision 0.5748    set_bounds 0.0223    solve 0.2690    add 0.1418    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 88] 
split level 1: [/input-12, 71] 
split level 2: [/input-12, 38] 
split level 3: [/input-12, 40] 
split level 4: [/input-12, 8] 
split level 5: [/input-12, 62] 
split level 6: [/input-12, 49] 
split level 7: [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.3940906524658203

all verified at 0th iter
Time: prepare 0.0037    bound 0.0044    transfer 0.0010    finalize 0.0013    func 0.0120    
Accumulated time: func 0.3375    prepare 0.0329    bound 0.2977    transfer 0.0040    finalize 0.0069    
all_split False
======================Cut inference begins======================
max lb tensor(1.90411305) min lb tensor(0.39409065)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006410121917724609 
BICCOS Cumulative time: 0.04404163360595703
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0240    set_bounds 0.0166    solve 0.0121    add 0.0002    
Accumulated time: pickout 0.0020    decision 0.5988    set_bounds 0.0389    solve 0.2811    add 0.1420    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.1825406551361084


Properties batch 5, size 1
Remaining timeout: 197.08917903900146
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.0890965461731
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.0890724658966
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.0885112285614
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.9116 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 71, vnnlib ID: 71 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.73988342, -44.90495300, -42.57281494, -43.19441986, -42.42295837,
         -44.41451645, -42.89606857, -44.83096695, -43.47343445, -44.48474503]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [743]; unstable size 743; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 241, 1, 743] with unstable size 240 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 31, 1, 743] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 743] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [240]; unstable size 240; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 31, 1, 240] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 240] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.51237631, 3.42380571, 3.26465416, 2.63927269, 4.21023846, 3.15029860,
         4.44626617, 4.11060095, 4.58525848]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0768 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 72, vnnlib ID: 72 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.94670296, -34.74698257, -29.07269859, -27.76113129, -29.39775276,
         -27.53262520, -30.03129578, -30.03444099, -31.61985016, -32.52929306]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [773]; unstable size 773; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 296, 1, 773] with unstable size 295 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 46, 1, 773] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 773] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [295]; unstable size 295; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 46, 1, 295] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 295] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [45]; unstable size 45; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 45] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.96560740,  3.50033903, -1.25553465, -0.76525366, -1.29222584,
         -0.11852962, -0.93298769,  0.10605782,  0.99898386]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.94670296, -34.74698257, -29.07269859, -27.76113129, -29.39775276,
         -27.53262520, -30.03129578, -30.03444099, -31.61985016, -32.52929306]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.94670486, -34.74698257, -29.07270241, -27.76113129, -29.39775085,
          -27.53262711, -30.03129959, -30.03444099, -31.61984634, -32.52929688],
         [-29.94670486, -34.74698257, -29.07270241, -27.76113129, -29.39775085,
          -27.53262711, -30.03129959, -30.03444099, -31.61984634, -32.52929688]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.18557358,  1.31157112,  1.63661957, -0.22850418,  2.27016830,
           2.27330971]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[1.64603198, 1.59841299, 1.61428595,  ..., 1.72539711,
            1.70952404, 1.80476213],
           [1.59841299, 1.55079389, 1.55079389,  ..., 1.67777801,
            1.67777801, 1.74127007],
           [1.59841299, 1.56666696, 1.56666696,  ..., 1.69365108,
            1.69365108, 1.75714314],
           ...,
           [1.26507962, 1.34444475, 1.47142887,  ..., 1.88412726,
            1.96349227, 2.04285717],
           [1.36031771, 1.32857168, 1.48730183,  ..., 1.86825418,
            1.97936535, 2.04285717],
           [1.59841299, 1.34444475, 1.21746063,  ..., 1.90000021,
            1.96349227, 2.04285717]],

          [[1.49758482, 1.46537876, 1.46537876,  ..., 1.61030626,
            1.59420323, 1.67471850],
           [1.46537876, 1.41706955, 1.41706955,  ..., 1.56199706,
            1.56199706, 1.62640929],
           [1.46537876, 1.43317258, 1.43317258,  ..., 1.57810009,
            1.57810009, 1.62640929],
           ...,
           [1.22383285, 1.15942061, 1.22383285,  ..., 1.90016127,
            2.01288271, 2.09339786],
           [1.75523376, 1.65861547, 1.67471850,  ..., 1.93236744,
            2.06119204, 2.10950065],
           [1.99677968, 1.75523376, 1.59420323,  ..., 2.01288271,
            2.07729483, 2.10950065]],

          [[1.72563756, 1.68066013, 1.69565260,  ..., 1.84557760,
            1.83058512, 1.92054021],
           [1.68066013, 1.63568258, 1.63568258,  ..., 1.80060017,
            1.80060017, 1.86057019],
           [1.68066013, 1.65067506, 1.66566753,  ..., 1.81559265,
            1.81559265, 1.87556267],
           ...,
           [1.59070504, 1.38081002, 1.45577252,  ..., 2.07046509,
            2.08545780, 2.10045004],
           [2.09295392, 2.08545780, 2.09295392,  ..., 1.99550271,
            2.02548766, 2.10045004],
           [2.10045004, 1.99550271, 1.99550271,  ..., 2.01049519,
            2.05547261, 2.10045004]]],


         [[[1.64603198, 1.59841299, 1.61428595,  ..., 1.72539711,
            1.70952404, 1.80476213],
           [1.59841299, 1.55079389, 1.55079389,  ..., 1.67777801,
            1.67777801, 1.74127007],
           [1.59841299, 1.56666696, 1.56666696,  ..., 1.69365108,
            1.69365108, 1.75714314],
           ...,
           [1.26507962, 1.34444475, 1.47142887,  ..., 1.88412726,
            1.96349227, 2.04285717],
           [1.36031771, 1.32857168, 1.48730183,  ..., 1.86825418,
            1.97936535, 2.04285717],
           [1.59841299, 1.34444475, 1.21746063,  ..., 1.90000021,
            1.96349227, 2.04285717]],

          [[1.49758482, 1.46537876, 1.46537876,  ..., 1.61030626,
            1.59420323, 1.67471850],
           [1.46537876, 1.41706955, 1.41706955,  ..., 1.56199706,
            1.56199706, 1.62640929],
           [1.46537876, 1.43317258, 1.43317258,  ..., 1.57810009,
            1.57810009, 1.62640929],
           ...,
           [1.22383285, 1.15942061, 1.22383285,  ..., 1.90016127,
            2.01288271, 2.09339786],
           [1.75523376, 1.65861547, 1.67471850,  ..., 1.93236744,
            2.06119204, 2.10950065],
           [1.99677968, 1.75523376, 1.59420323,  ..., 2.01288271,
            2.07729483, 2.10950065]],

          [[1.72563756, 1.68066013, 1.69565260,  ..., 1.84557760,
            1.83058512, 1.92054021],
           [1.68066013, 1.63568258, 1.63568258,  ..., 1.80060017,
            1.80060017, 1.86057019],
           [1.68066013, 1.65067506, 1.66566753,  ..., 1.81559265,
            1.81559265, 1.87556267],
           ...,
           [1.59070504, 1.38081002, 1.45577252,  ..., 2.07046509,
            2.08545780, 2.10045004],
           [2.09295392, 2.08545780, 2.09295392,  ..., 1.99550271,
            2.02548766, 2.10045004],
           [2.10045004, 1.99550271, 1.99550271,  ..., 2.01049519,
            2.05547261, 2.10045004]]],


         [[[1.64603198, 1.59841299, 1.61428595,  ..., 1.72539711,
            1.70952404, 1.80476213],
           [1.59841299, 1.55079389, 1.55079389,  ..., 1.67777801,
            1.67777801, 1.74127007],
           [1.59841299, 1.56666696, 1.56666696,  ..., 1.69365108,
            1.69365108, 1.75714314],
           ...,
           [1.26507962, 1.34444475, 1.47142887,  ..., 1.88412726,
            1.96349227, 2.04285717],
           [1.36031771, 1.32857168, 1.48730183,  ..., 1.86825418,
            1.97936535, 2.04285717],
           [1.59841299, 1.34444475, 1.21746063,  ..., 1.90000021,
            1.96349227, 2.04285717]],

          [[1.49758482, 1.46537876, 1.46537876,  ..., 1.61030626,
            1.59420323, 1.67471850],
           [1.46537876, 1.41706955, 1.41706955,  ..., 1.56199706,
            1.56199706, 1.62640929],
           [1.46537876, 1.43317258, 1.43317258,  ..., 1.57810009,
            1.57810009, 1.62640929],
           ...,
           [1.22383285, 1.15942061, 1.22383285,  ..., 1.90016127,
            2.01288271, 2.09339786],
           [1.75523376, 1.65861547, 1.67471850,  ..., 1.93236744,
            2.06119204, 2.10950065],
           [1.99677968, 1.75523376, 1.59420323,  ..., 2.01288271,
            2.07729483, 2.10950065]],

          [[1.72563756, 1.68066013, 1.69565260,  ..., 1.84557760,
            1.83058512, 1.92054021],
           [1.68066013, 1.63568258, 1.63568258,  ..., 1.80060017,
            1.80060017, 1.86057019],
           [1.68066013, 1.65067506, 1.66566753,  ..., 1.81559265,
            1.81559265, 1.87556267],
           ...,
           [1.59070504, 1.38081002, 1.45577252,  ..., 2.07046509,
            2.08545780, 2.10045004],
           [2.09295392, 2.08545780, 2.09295392,  ..., 1.99550271,
            2.02548766, 2.10045004],
           [2.10045004, 1.99550271, 1.99550271,  ..., 2.01049519,
            2.05547261, 2.10045004]]],


         [[[1.64603198, 1.59841299, 1.61428595,  ..., 1.72539711,
            1.70952404, 1.80476213],
           [1.59841299, 1.55079389, 1.55079389,  ..., 1.67777801,
            1.67777801, 1.74127007],
           [1.59841299, 1.56666696, 1.56666696,  ..., 1.69365108,
            1.69365108, 1.75714314],
           ...,
           [1.26507962, 1.34444475, 1.47142887,  ..., 1.88412726,
            1.96349227, 2.04285717],
           [1.36031771, 1.32857168, 1.48730183,  ..., 1.86825418,
            1.97936535, 2.04285717],
           [1.59841299, 1.34444475, 1.21746063,  ..., 1.90000021,
            1.96349227, 2.04285717]],

          [[1.49758482, 1.46537876, 1.46537876,  ..., 1.61030626,
            1.59420323, 1.67471850],
           [1.46537876, 1.41706955, 1.41706955,  ..., 1.56199706,
            1.56199706, 1.62640929],
           [1.46537876, 1.43317258, 1.43317258,  ..., 1.57810009,
            1.57810009, 1.62640929],
           ...,
           [1.22383285, 1.15942061, 1.22383285,  ..., 1.90016127,
            2.01288271, 2.09339786],
           [1.75523376, 1.65861547, 1.67471850,  ..., 1.93236744,
            2.06119204, 2.10950065],
           [1.99677968, 1.75523376, 1.59420323,  ..., 2.01288271,
            2.07729483, 2.10950065]],

          [[1.72563756, 1.68066013, 1.69565260,  ..., 1.84557760,
            1.83058512, 1.92054021],
           [1.68066013, 1.63568258, 1.63568258,  ..., 1.80060017,
            1.80060017, 1.86057019],
           [1.68066013, 1.65067506, 1.66566753,  ..., 1.81559265,
            1.81559265, 1.87556267],
           ...,
           [1.59070504, 1.38081002, 1.45577252,  ..., 2.07046509,
            2.08545780, 2.10045004],
           [2.09295392, 2.08545780, 2.09295392,  ..., 1.99550271,
            2.02548766, 2.10045004],
           [2.10045004, 1.99550271, 1.99550271,  ..., 2.01049519,
            2.05547261, 2.10045004]]],


         [[[1.64603198, 1.59841299, 1.61428595,  ..., 1.72539711,
            1.70952404, 1.80476213],
           [1.59841299, 1.55079389, 1.55079389,  ..., 1.67777801,
            1.67777801, 1.74127007],
           [1.59841299, 1.56666696, 1.56666696,  ..., 1.69365108,
            1.69365108, 1.75714314],
           ...,
           [1.26507962, 1.34444475, 1.47142887,  ..., 1.88412726,
            1.96349227, 2.04285717],
           [1.36031771, 1.32857168, 1.48730183,  ..., 1.86825418,
            1.97936535, 2.04285717],
           [1.59841299, 1.34444475, 1.21746063,  ..., 1.90000021,
            1.96349227, 2.04285717]],

          [[1.49758482, 1.46537876, 1.46537876,  ..., 1.61030626,
            1.59420323, 1.67471850],
           [1.46537876, 1.41706955, 1.41706955,  ..., 1.56199706,
            1.56199706, 1.62640929],
           [1.46537876, 1.43317258, 1.43317258,  ..., 1.57810009,
            1.57810009, 1.62640929],
           ...,
           [1.22383285, 1.15942061, 1.22383285,  ..., 1.90016127,
            2.01288271, 2.09339786],
           [1.75523376, 1.65861547, 1.67471850,  ..., 1.93236744,
            2.06119204, 2.10950065],
           [1.99677968, 1.75523376, 1.59420323,  ..., 2.01288271,
            2.07729483, 2.10950065]],

          [[1.72563756, 1.68066013, 1.69565260,  ..., 1.84557760,
            1.83058512, 1.92054021],
           [1.68066013, 1.63568258, 1.63568258,  ..., 1.80060017,
            1.80060017, 1.86057019],
           [1.68066013, 1.65067506, 1.66566753,  ..., 1.81559265,
            1.81559265, 1.87556267],
           ...,
           [1.59070504, 1.38081002, 1.45577252,  ..., 2.07046509,
            2.08545780, 2.10045004],
           [2.09295392, 2.08545780, 2.09295392,  ..., 1.99550271,
            2.02548766, 2.10045004],
           [2.10045004, 1.99550271, 1.99550271,  ..., 2.01049519,
            2.05547261, 2.10045004]]],


         [[[1.64603198, 1.59841299, 1.61428595,  ..., 1.72539711,
            1.70952404, 1.80476213],
           [1.59841299, 1.55079389, 1.55079389,  ..., 1.67777801,
            1.67777801, 1.74127007],
           [1.59841299, 1.56666696, 1.56666696,  ..., 1.69365108,
            1.69365108, 1.75714314],
           ...,
           [1.26507962, 1.34444475, 1.47142887,  ..., 1.88412726,
            1.96349227, 2.04285717],
           [1.36031771, 1.32857168, 1.48730183,  ..., 1.86825418,
            1.97936535, 2.04285717],
           [1.59841299, 1.34444475, 1.21746063,  ..., 1.90000021,
            1.96349227, 2.04285717]],

          [[1.49758482, 1.46537876, 1.46537876,  ..., 1.61030626,
            1.59420323, 1.67471850],
           [1.46537876, 1.41706955, 1.41706955,  ..., 1.56199706,
            1.56199706, 1.62640929],
           [1.46537876, 1.43317258, 1.43317258,  ..., 1.57810009,
            1.57810009, 1.62640929],
           ...,
           [1.22383285, 1.15942061, 1.22383285,  ..., 1.90016127,
            2.01288271, 2.09339786],
           [1.75523376, 1.65861547, 1.67471850,  ..., 1.93236744,
            2.06119204, 2.10950065],
           [1.99677968, 1.75523376, 1.59420323,  ..., 2.01288271,
            2.07729483, 2.10950065]],

          [[1.72563756, 1.68066013, 1.69565260,  ..., 1.84557760,
            1.83058512, 1.92054021],
           [1.68066013, 1.63568258, 1.63568258,  ..., 1.80060017,
            1.80060017, 1.86057019],
           [1.68066013, 1.65067506, 1.66566753,  ..., 1.81559265,
            1.81559265, 1.87556267],
           ...,
           [1.59070504, 1.38081002, 1.45577252,  ..., 2.07046509,
            2.08545780, 2.10045004],
           [2.09295392, 2.08545780, 2.09295392,  ..., 1.99550271,
            2.02548766, 2.10045004],
           [2.10045004, 1.99550271, 1.99550271,  ..., 2.01049519,
            2.05547261, 2.10045004]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0845 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 73, vnnlib ID: 73 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-41.68320847, -43.03181839, -36.69641876, -36.70984650, -36.74740601,
         -37.63648987, -33.20311356, -40.16154480, -43.11959457, -41.25477982]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [776]; unstable size 776; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 384, 1, 776] with unstable size 383 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 50, 1, 776] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 776] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [383]; unstable size 383; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 50, 1, 383] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 383] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [49]; unstable size 49; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 49] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.98842311,  3.91210151, -0.14699078,  0.37333703,  0.28826761,
          0.71626139,  1.72726870,  4.26234579,  2.05251503]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-41.68320847, -43.03181839, -36.69641876, -36.70984650, -36.74740601,
         -37.63648987, -33.20311356, -40.16154480, -43.11959457, -41.25477982]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.74it/s]100%|██████████| 1/1 [00:00<00:00,  7.73it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-40.02606201, -41.97726059, -34.80727005, -35.40822983, -35.44100189,
          -36.18209839, -32.54626465, -38.51554489, -41.82893372, -40.14699554]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.26100540]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1325 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 5th iter
best_l after optimization: 18.770761489868164
alpha/beta optimization time: 0.0871419906616211
initial alpha-crown bounds: tensor([[4.16247225e+00, 4.10197735e+00, 8.95500183e-04, 4.90264416e-01,
         4.44733143e-01, 8.86319041e-01, 1.96309280e+00, 4.46908236e+00,
         2.25192499e+00]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.0008955001831054688
verified with init bound!
Result: safe-incomplete in 0.2897 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 74, vnnlib ID: 74 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-49.29329300, -51.40587997, -49.14332581, -49.03775024, -47.72660065,
         -48.79235458, -49.15090179, -41.94327927, -53.05025101, -49.25228882]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [782]; unstable size 782; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 298, 1, 782] with unstable size 297 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 40, 1, 782] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 782] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [297]; unstable size 297; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 40, 1, 297] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 297] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [39]; unstable size 39; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.62908649, 4.64758158, 3.31168842, 3.10930943, 2.92279863, 2.93876195,
         2.97699547, 6.57648325, 2.71405077]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0905 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 75, vnnlib ID: 75 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-44.36121368, -47.81798935, -48.47995377, -49.53614044, -47.34692764,
         -51.11924362, -49.04803467, -50.49164963, -47.08547592, -48.11017227]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [849]; unstable size 849; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 284, 1, 849] with unstable size 283 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 34, 1, 849] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 849] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [283]; unstable size 283; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 34, 1, 283] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 283] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.10291648,  0.96457314,  1.55438328, -0.18015069,  2.57736802,
          0.84608495,  1.82613420, -0.22711486, -0.13033700]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-44.36121368, -47.81798935, -48.47995377, -49.53614044, -47.34692764,
         -51.11924362, -49.04803467, -50.49164963, -47.08547592, -48.11017227]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.84it/s]100%|██████████| 1/1 [00:00<00:00,  7.83it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-43.66140366, -46.52869034, -47.40794754, -48.08189774, -46.21422958,
          -49.73670197, -47.56120682, -49.48558044, -45.16960144, -46.92199326],
         [-43.66140366, -46.52869034, -47.40794754, -48.08189774, -46.21422958,
          -49.73670197, -47.56120682, -49.48558044, -45.16960144, -46.92199326]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.86728668, 2.55282593, 1.50819778, 3.26058960]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1307 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 8.711433410644531
alpha/beta optimization time: 1.3295388221740723
initial alpha-crown bounds: tensor([[ 0.04950273,  1.11143863,  1.71740437, -0.04957843,  2.76754189,
          1.07160115,  2.03528428, -0.10799617,  0.11623526]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.10799616575241089
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.47784566879272
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.4778027534485
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.47777366638184
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.4777488708496
Verifying property 3 with 1 instances.
##### Instance 75 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04957843]], device='cuda:0') need to verify.
Model prediction is: tensor([-44.36121368, -47.81798935, -48.47995377, -49.53614044, -47.34692764,
        -51.11924362, -49.04803467, -50.49164963, -47.08547592, -48.11017227],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04957843]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 849
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 281
Node /15 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 1162
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011444091796875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.049575626850128174
10 lb beta sum: 0.0, worst -0.04959285259246826
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0561    transfer 0.0001    finalize 0.0001    func 0.0566    
Accumulated time: func 0.0566    prepare 0.0002    bound 0.0561    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 77] 
split level 1: [/input-12, 71] 
split level 2: [/input-12, 83] 
split level 3: [/input-12, 19] 
split level 4: [/input-12, 15] 
split level 5: [/input-12, 70] 
split level 6: [/input-12, 56] 
split level 7: [/input-12, 44] 
split level 8: [/input-12, 33] 
split level 9: [/input-12, 54] 
split level 10: [/input-12, 29] 
split level 11: [/input-12, 35] 
split level 12: [/input-8, 1011] 
split level 13: [/input-12, 94] 
split level 14: [/input-12, 82] 
split level 15: [/input-8, 1516] 
split level 16: [/input-8, 1771] 
split level 17: [/input-8, 1574] 
split level 18: [/input-8, 686] 
split level 19: [/input, 999] 
split level 20: [/input-8, 1506] 
split level 21: [/input-8, 1315] 
split level 22: [/input-8, 1825] 
split level 23: [/input-12, 89] 
split level 24: [/input-8, 1316] 
split level 25: [/input-8, 1331] 
split level 26: [/input-8, 1513] 
split level 27: [/input-8, 2037] 
split level 28: [/input-8, 2028] 
split level 29: [/input-8, 1514] 
split level 30: [/input, 745] 
split level 31: [/input-8, 98] 
split level 32: [/input-8, 1925] 
split level 33: [/input-8, 318] 
split level 34: [/input-8, 764] 
split level 35: [/input-8, 1508] 
split level 36: [/input, 994] 
split level 37: [/input-8, 1306] 
split level 38: [/input-8, 1314] 
split level 39: [/input-8, 1517] 
split level 40: [/input-8, 762] 
split level 41: [/input-8, 1521] 
split level 42: [/input-8, 1515] 
split level 43: [/input-8, 674] 
split level 44: [/input-8, 1284] 
split level 45: [/input-8, 1906] 
split level 46: [/input-8, 1335] 
split level 47: [/input-8, 754] 
split level 48: [/input-8, 765] 
split level 49: [/input, 2535] 
split level 50: [/input-8, 2033] 
split level 51: [/input, 1011] 
split level 52: [/input-8, 1525] 
split level 53: [/input-8, 550] 
split level 54: [/input-8, 753] 
split level 55: [/input-8, 1392] 
split level 56: [/input-8, 1642] 
split level 57: [/input-8, 557] 
split level 58: [/input-8, 304] 
split level 59: [/input-8, 763] 
split level 60: [/input-8, 2025] 
split level 61: [/input, 1430] 
split level 62: [/input, 209] 
split level 63: [/input, 993] 
split level 64: [/input, 746] 
split level 65: [/input, 40] 
split level 66: [/input, 1002] 
split level 67: [/input-8, 2034] 
split level 68: [/input-8, 313] 
split level 69: [/input, 747] 
split level 70: [/input, 1000] 
split level 71: [/input, 958] 
split level 72: [/input, 977] 
split level 73: [/input-8, 758] 
split level 74: [/input, 748] 
split level 75: [/input-8, 1864] 
split level 76: [/input-8, 1297] 
split level 77: [/input-8, 1914] 
split level 78: [/input, 2152] 
split level 79: [/input, 2541] 
split level 80: [/input-8, 610] 
split level 81: [/input-8, 1932] 
split level 82: [/input, 721] 
split level 83: [/input, 2542] 
split level 84: [/input, 737] 
split level 85: [/input-8, 1361] 
split level 86: [/input, 739] 
split level 87: [/input, 25] 
split level 88: [/input, 2539] 
split level 89: [/input, 1428] 
split level 90: [/input-8, 2017] 
split level 91: [/input, 730] 
split level 92: [/input, 3880] 
split level 93: [/input, 2781] 
split level 94: [/input, 1012] 
split level 95: [/input, 2529] 
split level 96: [/input, 2789] 
split level 97: [/input-8, 1712] 
split level 98: [/input-8, 1638] 
split level 99: [/input-8, 317] 
split level 100: [/input-8, 1910] 
split level 101: [/input, 3896] 
split level 102: [/input, 2427] 
split level 103: [/input, 757] 
split level 104: [/input-8, 2032] 
split level 105: [/input-8, 1893] 
split level 106: [/input, 230] 
split level 107: [/input, 2513] 
split level 108: [/input, 2329] 
split level 109: [/input-8, 667] 
split level 110: [/input-8, 1651] 
split level 111: [/input, 1017] 
split level 112: [/input, 1384] 
split level 113: [/input-8, 959] 
split level 114: [/input-8, 766] 
split level 115: [/input, 2360] 
split level 116: [/input, 2118] 
split level 117: [/input, 996] 
split level 118: [/input, 760] 
split level 119: [/input, 732] 
split level 120: [/input-8, 701] 
split level 121: [/input, 1013] 
split level 122: [/input-8, 802] 
split level 123: [/input, 85] 
split level 124: [/input-8, 1476] 
split level 125: [/input, 56] 
split level 126: [/input, 1988] 
split level 127: [/input, 2545] 
split level 128: [/input, 2547] 
split level 129: [/input, 930] 
split level 130: [/input-8, 183] 
split level 131: [/input, 729] 
split level 132: [/input, 252] 
split level 133: [/input, 2252] 
split level 134: [/input-8, 1898] 
split level 135: [/input, 755] 
split level 136: [/input, 568] 
split level 137: [/input-8, 30] 
split level 138: [/input, 1010] 
split level 139: [/input, 2441] 
split level 140: [/input-8, 32] 
split level 141: [/input, 1018] 
split level 142: [/input, 2649] 
split level 143: [/input, 3863] 
split level 144: [/input-8, 1339] 
split level 145: [/input, 1004] 
split level 146: [/input, 753] 
split level 147: [/input, 940] 
split level 148: [/input, 2268] 
split level 149: [/input, 242] 
split level 150: [/input, 2344] 
split level 151: [/input, 2775] 
split level 152: [/input-8, 1793] 
split level 153: [/input-8, 33] 
split level 154: [/input, 756] 
split level 155: [/input-8, 1246] 
split level 156: [/input, 89] 
split level 157: [/input, 3879] 
split level 158: [/input, 55] 
split level 159: [/input-8, 1477] 
split level 160: [/input-8, 1594] 
split level 161: [/input, 552] 
split level 162: [/input, 2713] 
split level 163: [/input, 136] 
split level 164: [/input-8, 1142] 
split level 165: [/input, 4019] 
split level 166: [/input, 249] 
split level 167: [/input, 23] 
split level 168: [/input, 24] 
split level 169: [/input-8, 609] 
split level 170: [/input-8, 19] 
split level 171: [/input, 535] 
split level 172: [/input, 4073] 
split level 173: [/input, 749] 
split level 174: [/input-8, 1150] 
split level 175: [/input, 2551] 
split level 176: [/input, 1431] 
split level 177: [/input, 989] 
split level 178: [/input, 254] 
split level 179: [/input, 762] 
split level 180: [/input, 2328] 
split level 181: [/input, 2116] 
split level 182: [/input, 2269] 
split level 183: [/input, 536] 
split level 184: [/input, 2556] 
split level 185: [/input, 2412] 
split level 186: [/input, 2558] 
split level 187: [/input, 2550] 
split level 188: [/input, 2396] 
split level 189: [/input, 551] 
split level 190: [/input-8, 1905] 
split level 191: [/input, 2428] 
split level 192: [/input, 763] 
split level 193: [/input, 2553] 
split level 194: [/input, 2359] 
split level 195: [/input, 808] 
split level 196: [/input, 2526] 
split level 197: [/input, 3895] 
split level 198: [/input, 567] 
split level 199: [/input, 796] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0489424467086792
10 lb beta sum: 0.0, worst -0.048955321311950684
Time: prepare 0.0123    bound 0.1050    transfer 0.0019    finalize 0.0031    func 0.1250    
Accumulated time: func 0.1817    prepare 0.0226    bound 0.1611    transfer 0.0020    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(0.45672870) min lb tensor(-0.04894078)
Number of Verified Splits: 24 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011899232864379883 
BICCOS Cumulative time: 0.011899232864379883
Preprocessing time: 0.010486125946044922 Inference time: 0.0009219646453857422 Add cuts time: 0.00031304359436035156 Cut analysis time: 0.0001780986785888672
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5477    set_bounds 0.0098    solve 0.1251    add 0.0107    
Accumulated time: pickout 0.0003    decision 0.5477    set_bounds 0.0098    solve 0.1251    add 0.0107    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 77] 
split level 1: [/input-12, 71] 
split level 2: [/input-12, 83] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 70] 
split level 5: [/input-12, 56] 
split level 6: [/input-12, 44] 
split level 7: [/input-12, 35] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.5375934839248657

all verified at 0th iter
Time: prepare 0.0036    bound 0.0044    transfer 0.0021    finalize 0.0013    func 0.0130    
Accumulated time: func 0.1947    prepare 0.0266    bound 0.1655    transfer 0.0041    finalize 0.0046    
all_split False
======================Cut inference begins======================
max lb tensor(1.53738999) min lb tensor(0.53759348)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.0063152313232421875 
BICCOS Cumulative time: 0.01821446418762207
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0167    solve 0.0131    add 0.0002    
Accumulated time: pickout 0.0008    decision 0.5711    set_bounds 0.0266    solve 0.1382    add 0.0109    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.8428387641906738


Properties batch 4, size 1
Remaining timeout: 197.40249490737915
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.40242409706116
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.40239930152893
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.4023780822754
Verifying property 7 with 1 instances.
##### Instance 75 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.10799617]], device='cuda:0') need to verify.
Model prediction is: tensor([-44.36121368, -47.81798935, -48.47995377, -49.53614044, -47.34692764,
        -51.11924362, -49.04803467, -50.49164963, -47.08547592, -48.11017227],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.10799617]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 849
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 281
Node /15 input 0: size torch.Size([100]) unstable 32
-----------------
# of unstable neurons: 1162
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010704994201660156
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10799184441566467
10 lb beta sum: 0.0, worst -0.10800638794898987
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0561    transfer 0.0001    finalize 0.0001    func 0.0565    
Accumulated time: func 0.0565    prepare 0.0002    bound 0.0561    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 0] 
split level 1: [/input-12, 84] 
split level 2: [/input-12, 19] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 6] 
split level 5: [/input-12, 35] 
split level 6: [/input-12, 70] 
split level 7: [/input-12, 44] 
split level 8: [/input-8, 1577] 
split level 9: [/input-12, 82] 
split level 10: [/input-12, 33] 
split level 11: [/input-8, 764] 
split level 12: [/input-8, 1843] 
split level 13: [/input-8, 1011] 
split level 14: [/input-8, 1825] 
split level 15: [/input-12, 92] 
split level 16: [/input-12, 94] 
split level 17: [/input-8, 291] 
split level 18: [/input-8, 754] 
split level 19: [/input-8, 619] 
split level 20: [/input-8, 765] 
split level 21: [/input-8, 1771] 
split level 22: [/input-8, 1273] 
split level 23: [/input-8, 686] 
split level 24: [/input-8, 753] 
split level 25: [/input-8, 762] 
split level 26: [/input-8, 758] 
split level 27: [/input-8, 763] 
split level 28: [/input-12, 25] 
split level 29: [/input-8, 1440] 
split level 30: [/input-8, 874] 
split level 31: [/input-8, 1284] 
split level 32: [/input-8, 1649] 
split level 33: [/input-8, 1642] 
split level 34: [/input-8, 766] 
split level 35: [/input-8, 739] 
split level 36: [/input-8, 1143] 
split level 37: [/input-8, 674] 
split level 38: [/input-8, 1914] 
split level 39: [/input-8, 1595] 
split level 40: [/input-8, 1568] 
split level 41: [/input, 4052] 
split level 42: [/input-8, 1785] 
split level 43: [/input-8, 1569] 
split level 44: [/input-8, 1917] 
split level 45: [/input-8, 1594] 
split level 46: [/input-8, 701] 
split level 47: [/input-8, 1910] 
split level 48: [/input-8, 731] 
split level 49: [/input-8, 1878] 
split level 50: [/input-8, 1780] 
split level 51: [/input, 1430] 
split level 52: [/input-8, 474] 
split level 53: [/input-8, 1886] 
split level 54: [/input-8, 508] 
split level 55: [/input-8, 183] 
split level 56: [/input-8, 318] 
split level 57: [/input-8, 485] 
split level 58: [/input, 1002] 
split level 59: [/input-8, 304] 
split level 60: [/input-8, 502] 
split level 61: [/input-8, 1906] 
split level 62: [/input, 4033] 
split level 63: [/input-8, 1506] 
split level 64: [/input-8, 1335] 
split level 65: [/input-8, 610] 
split level 66: [/input-8, 1476] 
split level 67: [/input-8, 713] 
split level 68: [/input-8, 959] 
split level 69: [/input-8, 284] 
split level 70: [/input-8, 557] 
split level 71: [/input, 977] 
split level 72: [/input, 1384] 
split level 73: [/input-12, 71] 
split level 74: [/input-8, 883] 
split level 75: [/input-8, 1913] 
split level 76: [/input, 1004] 
split level 77: [/input, 990] 
split level 78: [/input-8, 609] 
split level 79: [/input-8, 1278] 
split level 80: [/input, 1988] 
split level 81: [/input-8, 1869] 
split level 82: [/input-8, 1151] 
split level 83: [/input-8, 1786] 
split level 84: [/input, 2750] 
split level 85: [/input-8, 475] 
split level 86: [/input-8, 1274] 
split level 87: [/input-8, 667] 
split level 88: [/input, 3017] 
split level 89: [/input, 1428] 
split level 90: [/input, 994] 
split level 91: [/input-8, 1513] 
split level 92: [/input, 721] 
split level 93: [/input, 1480] 
split level 94: [/input, 1464] 
split level 95: [/input-8, 476] 
split level 96: [/input, 1105] 
split level 97: [/input-8, 1277] 
split level 98: [/input, 2798] 
split level 99: [/input, 958] 
split level 100: [/input-8, 915] 
split level 101: [/input, 993] 
split level 102: [/input, 750] 
split level 103: [/input, 989] 
split level 104: [/input, 824] 
split level 105: [/input-8, 653] 
split level 106: [/input-8, 1905] 
split level 107: [/input, 861] 
split level 108: [/input, 877] 
split level 109: [/input-8, 506] 
split level 110: [/input, 3880] 
split level 111: [/input, 3016] 
split level 112: [/input-8, 1072] 
split level 113: [/input-8, 2034] 
split level 114: [/input, 4019] 
split level 115: [/input, 40] 
split level 116: [/input, 1093] 
split level 117: [/input, 2782] 
split level 118: [/input-8, 944] 
split level 119: [/input-8, 2007] 
split level 120: [/input, 56] 
split level 121: [/input, 3781] 
split level 122: [/input, 568] 
split level 123: [/input, 862] 
split level 124: [/input, 2781] 
split level 125: [/input, 1159] 
split level 126: [/input-8, 1514] 
split level 127: [/input, 3033] 
split level 128: [/input, 3034] 
split level 129: [/input, 230] 
split level 130: [/input, 1721] 
split level 131: [/input, 749] 
split level 132: [/input, 2427] 
split level 133: [/input, 1737] 
split level 134: [/input, 996] 
split level 135: [/input, 54] 
split level 136: [/input, 1834] 
split level 137: [/input-8, 1712] 
split level 138: [/input, 1898] 
split level 139: [/input, 1907] 
split level 140: [/input-8, 1870] 
split level 141: [/input, 3896] 
split level 142: [/input-8, 34] 
split level 143: [/input, 894] 
split level 144: [/input, 621] 
split level 145: [/input-8, 288] 
split level 146: [/input, 3042] 
split level 147: [/input-8, 917] 
split level 148: [/input, 2252] 
split level 149: [/input, 2999] 
split level 150: [/input-8, 1092] 
split level 151: [/input-8, 1477] 
split level 152: [/input, 1256] 
split level 153: [/input, 3156] 
split level 154: [/input-8, 107] 
split level 155: [/input-8, 32] 
split level 156: [/input, 2360] 
split level 157: [/input, 3257] 
split level 158: [/input, 605] 
split level 159: [/input, 622] 
split level 160: [/input, 606] 
split level 161: [/input, 1193] 
split level 162: [/input, 892] 
split level 163: [/input, 3879] 
split level 164: [/input-12, 97] 
split level 165: [/input, 3895] 
split level 166: [/input, 1018] 
split level 167: [/input-8, 2028] 
split level 168: [/input, 124] 
split level 169: [/input, 2116] 
split level 170: [/input, 1722] 
split level 171: [/input-8, 313] 
split level 172: [/input-8, 517] 
split level 173: [/input, 2428] 
split level 174: [/input, 1864] 
split level 175: [/input, 2526] 
split level 176: [/input, 1125] 
split level 177: [/input, 3004] 
split level 178: [/input, 1431] 
split level 179: [/input-8, 649] 
split level 180: [/input, 1718] 
split level 181: [/input, 552] 
split level 182: [/input, 136] 
split level 183: [/input, 2398] 
split level 184: [/input, 2412] 
split level 185: [/input-8, 33] 
split level 186: [/input, 1736] 
split level 187: [/input-8, 1472] 
split level 188: [/input, 551] 
split level 189: [/input, 3729] 
split level 190: [/input, 766] 
split level 191: [/input, 2397] 
split level 192: [/input, 940] 
split level 193: [/input, 567] 
split level 194: [/input, 123] 
split level 195: [/input, 3409] 
split level 196: [/input-8, 303] 
split level 197: [/input, 2541] 
split level 198: [/input, 24] 
split level 199: [/input, 3894] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1079145073890686
10 lb beta sum: 0.0, worst -0.10791260004043579
Time: prepare 0.0128    bound 0.1053    transfer 0.0024    finalize 0.0031    func 0.1262    
Accumulated time: func 0.1828    prepare 0.0229    bound 0.1613    transfer 0.0025    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(0.60967129) min lb tensor(-0.10790437)
Number of Verified Splits: 15 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011271476745605469 
BICCOS Cumulative time: 0.011271476745605469
Preprocessing time: 0.01031351089477539 Inference time: 0.0005819797515869141 Add cuts time: 0.00019884109497070312 Cut analysis time: 0.00017714500427246094
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5477    set_bounds 0.0099    solve 0.1263    add 0.0106    
Accumulated time: pickout 0.0003    decision 0.5477    set_bounds 0.0099    solve 0.1263    add 0.0106    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 0] 
split level 1: [/input-12, 84] 
split level 2: [/input-12, 19] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 6] 
split level 5: [/input-12, 35] 
split level 6: [/input-12, 44] 
split level 7: [/input-12, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.6873316168785095

all verified at 0th iter
Time: prepare 0.0039    bound 0.0045    transfer 0.0019    finalize 0.0013    func 0.0133    
Accumulated time: func 0.1960    prepare 0.0272    bound 0.1658    transfer 0.0045    finalize 0.0046    
all_split False
======================Cut inference begins======================
max lb tensor(1.77685916) min lb tensor(0.68733162)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006433963775634766 
BICCOS Cumulative time: 0.017705440521240234
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0175    solve 0.0133    add 0.0003    
Accumulated time: pickout 0.0007    decision 0.5715    set_bounds 0.0274    solve 0.1396    add 0.0109    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.8373854160308838


Properties batch 8, size 1
Remaining timeout: 196.38753533363342
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.6126 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 76, vnnlib ID: 76 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-39.83137894, -39.86856461, -34.91202164, -34.49298859, -35.65726471,
         -32.62217331, -35.95153046, -37.22127151, -39.32806778, -39.51536560]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [692]; unstable size 692; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 274, 1, 692] with unstable size 273 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 48, 1, 692] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 692] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [273]; unstable size 273; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 48, 1, 273] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 273] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [47]; unstable size 47; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 47] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.73324656,  2.30808735, -1.26376247,  0.35634792,  0.21860123,
          0.03013659,  1.51504302,  2.15771961,  2.09994221]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-39.83137894, -39.86856461, -34.91202164, -34.49298859, -35.65726471,
         -32.62217331, -35.95153046, -37.22127151, -39.32806778, -39.51536560]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.13it/s]100%|██████████| 1/1 [00:00<00:00,  8.12it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.72060013, -38.36655807, -32.88836288, -33.29510498, -33.96430588,
          -31.75039482, -34.42784119, -35.94613266, -37.83031845, -38.14042282]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.13796806]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1260 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.140681266784668
alpha/beta optimization time: 1.3147790431976318
initial alpha-crown bounds: tensor([[ 2.97432613,  2.58387423, -1.05765772,  0.45920801,  0.37780762,
          0.18735957,  1.73898244,  2.42312288,  2.45365715]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -1.0576577186584473
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.4852693080902
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.4852237701416
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.48519349098206
Verifying property 2 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.05765772]], device='cuda:0') need to verify.
Model prediction is: tensor([-39.83137894, -39.86856461, -34.91202164, -34.49298859, -35.65726471,
        -32.62217331, -35.95153046, -37.22127151, -39.32806778, -39.51536560],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.05765772]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 692
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 271
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1010
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010633468627929688
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0576558113098145
10 lb beta sum: 0.0, worst -1.057661533355713
Time: prepare 0.0002    bound 0.0937    transfer 0.0001    finalize 0.0001    func 0.0941    
Accumulated time: func 0.0941    prepare 0.0002    bound 0.0937    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] 
split level 1: [/input-12, 92] 
split level 2: [/input-12, 30] 
split level 3: [/input-12, 22] 
split level 4: [/input-12, 66] 
split level 5: [/input-12, 7] 
split level 6: [/input-12, 49] 
split level 7: [/input-12, 28] 
split level 8: [/input-12, 15] 
split level 9: [/input-12, 56] 
split level 10: [/input-12, 83] 
split level 11: [/input-12, 61] 
split level 12: [/input-12, 36] 
split level 13: [/input-12, 47] 
split level 14: [/input-12, 71] 
split level 15: [/input-12, 4] 
split level 16: [/input-12, 31] 
split level 17: [/input-12, 76] 
split level 18: [/input-12, 16] 
split level 19: [/input-8, 540] 
split level 20: [/input-8, 1126] 
split level 21: [/input-8, 1565] 
split level 22: [/input-8, 602] 
split level 23: [/input-12, 50] 
split level 24: [/input-8, 469] 
split level 25: [/input-12, 37] 
split level 26: [/input-8, 541] 
split level 27: [/input-8, 1052] 
split level 28: [/input-8, 610] 
split level 29: [/input-8, 1939] 
split level 30: [/input-8, 423] 
split level 31: [/input-8, 415] 
split level 32: [/input-8, 476] 
split level 33: [/input-8, 702] 
split level 34: [/input-8, 1134] 
split level 35: [/input-12, 97] 
split level 36: [/input-8, 1500] 
split level 37: [/input-8, 29] 
split level 38: [/input-8, 1429] 
split level 39: [/input-8, 532] 
split level 40: [/input-8, 946] 
split level 41: [/input-8, 1876] 
split level 42: [/input-8, 92] 
split level 43: [/input, 2776] 
split level 44: [/input-8, 1916] 
split level 45: [/input-8, 1140] 
split level 46: [/input-8, 1139] 
split level 47: [/input-8, 1044] 
split level 48: [/input, 984] 
split level 49: [/input-8, 1740] 
split level 50: [/input-8, 921] 
split level 51: [/input-8, 1053] 
split level 52: [/input-8, 1571] 
split level 53: [/input-8, 1908] 
split level 54: [/input-8, 284] 
split level 55: [/input, 1638] 
split level 56: [/input-8, 910] 
split level 57: [/input, 681] 
split level 58: [/input-8, 474] 
split level 59: [/input, 1654] 
split level 60: [/input-8, 1014] 
split level 61: [/input-8, 409] 
split level 62: [/input-8, 1530] 
split level 63: [/input, 1608] 
split level 64: [/input-8, 107] 
split level 65: [/input-12, 73] 
split level 66: [/input, 983] 
split level 67: [/input-8, 1941] 
split level 68: [/input, 969] 
split level 69: [/input-8, 1923] 
split level 70: [/input-8, 1907] 
split level 71: [/input-8, 1435] 
split level 72: [/input-8, 954] 
split level 73: [/input, 711] 
split level 74: [/input, 1670] 
split level 75: [/input, 1000] 
split level 76: [/input-8, 1437] 
split level 77: [/input-8, 1299] 
split level 78: [/input, 1123] 
split level 79: [/input-8, 1525] 
split level 80: [/input, 2263] 
split level 81: [/input-8, 887] 
split level 82: [/input-8, 370] 
split level 83: [/input-8, 4] 
split level 84: [/input, 3115] 
split level 85: [/input-8, 1268] 
split level 86: [/input-8, 1763] 
split level 87: [/input, 2775] 
split level 88: [/input-8, 781] 
split level 89: [/input-8, 45] 
split level 90: [/input-8, 3] 
split level 91: [/input, 1718] 
split level 92: [/input-8, 535] 
split level 93: [/input-8, 1884] 
split level 94: [/input, 1643] 
split level 95: [/input, 2077] 
split level 96: [/input-8, 1548] 
split level 97: [/input, 2589] 
split level 98: [/input-8, 543] 
split level 99: [/input, 1668] 
split level 100: [/input, 1847] 
split level 101: [/input-8, 452] 
split level 102: [/input, 1720] 
split level 103: [/input, 1042] 
split level 104: [/input-8, 429] 
split level 105: [/input, 1843] 
split level 106: [/input, 2460] 
split level 107: [/input-8, 1490] 
split level 108: [/input, 1121] 
split level 109: [/input-8, 470] 
split level 110: [/input, 1701] 
split level 111: [/input, 2260] 
split level 112: [/input, 1873] 
split level 113: [/input, 1623] 
split level 114: [/input, 2787] 
split level 115: [/input, 1653] 
split level 116: [/input-8, 451] 
split level 117: [/input, 728] 
split level 118: [/input, 695] 
split level 119: [/input-8, 1580] 
split level 120: [/input, 3198] 
split level 121: [/input, 1702] 
split level 122: [/input-8, 935] 
split level 123: [/input-8, 78] 
split level 124: [/input-8, 1483] 
split level 125: [/input, 1139] 
split level 126: [/input-8, 913] 
split level 127: [/input, 1239] 
split level 128: [/input-8, 524] 
split level 129: [/input, 1957] 
split level 130: [/input-8, 1112] 
split level 131: [/input, 1094] 
split level 132: [/input, 140] 
split level 133: [/input, 1626] 
split level 134: [/input, 2999] 
split level 135: [/input-8, 1739] 
split level 136: [/input, 1166] 
split level 137: [/input, 999] 
split level 138: [/input, 2984] 
split level 139: [/input, 2093] 
split level 140: [/input, 2244] 
split level 141: [/input-8, 1914] 
split level 142: [/input, 2209] 
split level 143: [/input, 2925] 
split level 144: [/input, 24] 
split level 145: [/input, 2257] 
split level 146: [/input, 2983] 
split level 147: [/input, 3462] 
split level 148: [/input, 1686] 
split level 149: [/input-8, 402] 
split level 150: [/input, 546] 
split level 151: [/input, 1925] 
split level 152: [/input, 1220] 
split level 153: [/input, 2009] 
split level 154: [/input, 3236] 
split level 155: [/input, 169] 
split level 156: [/input, 2195] 
split level 157: [/input, 1109] 
split level 158: [/input, 1719] 
split level 159: [/input, 4057] 
split level 160: [/input, 3018] 
split level 161: [/input, 1173] 
split level 162: [/input, 1707] 
split level 163: [/input, 3235] 
split level 164: [/input, 1824] 
split level 165: [/input, 2278] 
split level 166: [/input, 2915] 
split level 167: [/input, 3261] 
split level 168: [/input, 1010] 
split level 169: [/input, 3019] 
split level 170: [/input, 3737] 
split level 171: [/input-8, 1489] 
split level 172: [/input, 730] 
split level 173: [/input, 1142] 
split level 174: [/input, 2279] 
split level 175: [/input, 1655] 
split level 176: [/input, 1124] 
split level 177: [/input, 1057] 
split level 178: [/input, 1198] 
split level 179: [/input, 2255] 
split level 180: [/input, 2473] 
split level 181: [/input, 1950] 
split level 182: [/input, 2982] 
split level 183: [/input, 2150] 
split level 184: [/input, 3133] 
split level 185: [/input, 1017] 
split level 186: [/input-8, 1559] 
split level 187: [/input, 516] 
split level 188: [/input, 1230] 
split level 189: [/input, 3895] 
split level 190: [/input, 1844] 
split level 191: [/input, 3140] 
split level 192: [/input, 520] 
split level 193: [/input, 2027] 
split level 194: [/input, 2519] 
split level 195: [/input, 2965] 
split level 196: [/input-8, 1395] 
split level 197: [/input, 20] 
split level 198: [/input, 2931] 
split level 199: [/input, 1018] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0573678016662598
10 lb beta sum: 0.0, worst -1.0573835372924805
Time: prepare 0.0114    bound 0.1041    transfer 0.0019    finalize 0.0031    func 0.1233    
Accumulated time: func 0.2175    prepare 0.0218    bound 0.1978    transfer 0.0020    finalize 0.0032    
all_split False
======================Cut inference begins======================
max lb tensor(0.18341970) min lb tensor(-1.05736542)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.012108564376831055 
BICCOS Cumulative time: 0.012108564376831055
Preprocessing time: 0.011234521865844727 Inference time: 0.00010895729064941406 Add cuts time: 8.630752563476562e-05 Cut analysis time: 0.0006787776947021484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.02948 (1), -1.02901 (1), -1.02893 (1), -1.02483 (1), -1.01925 (1), -1.01909 (1), -1.01740 (1), -1.01607 (1), -1.01577 (1), -1.01519 (1), -1.01445 (1), -1.01398 (1), -1.01320 (1), -1.01173 (1), -1.01165 (1), -1.01004 (1), -1.00732 (1), -0.99634 (1), -0.99269 (1), -0.99202 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5509    set_bounds 0.0097    solve 0.1234    add 0.1244    
Accumulated time: pickout 0.0004    decision 0.5509    set_bounds 0.0097    solve 0.1234    add 0.1244    
Current (lb-rhs): -1.0294790267944336
50 domains visited
Cumulative time: 0.9309680461883545

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 30] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 1: [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 30] [/input-12, 30] [/input-12, 30] 
split level 2: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 66] 
split level 3: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8428778648376465
10 lb beta sum: 0.1894153505563736, worst -0.8327383995056152
Time: prepare 0.0069    bound 0.1258    transfer 0.0008    finalize 0.0026    func 0.1387    
Accumulated time: func 0.3561    prepare 0.0289    bound 0.3236    transfer 0.0028    finalize 0.0059    
all_split False
======================Cut inference begins======================
max lb tensor(0.57536507) min lb tensor(-0.83225727)
Number of Verified Splits: 16 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.012980937957763672 
BICCOS Cumulative time: 0.025089502334594727
Preprocessing time: 0.011698007583618164 Inference time: 0.0007221698760986328 Add cuts time: 0.0003299713134765625 Cut analysis time: 0.0002307891845703125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.46189 (2), -0.46010 (2), -0.45901 (2), -0.45393 (2), -0.44729 (2), -0.44142 (2), -0.43669 (2), -0.41869 (2), -0.41687 (2), -0.41476 (2), -0.41267 (2), -0.40279 (2), -0.39810 (2), -0.39642 (2), -0.38866 (2), -0.38405 (2), -0.36998 (2), -0.36030 (2), -0.35533 (2), -0.35068 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0206    set_bounds 0.0141    solve 0.1387    add 0.1398    
Accumulated time: pickout 0.0015    decision 0.5715    set_bounds 0.0238    solve 0.2622    add 0.2642    
Current (lb-rhs): -0.461885929107666
100 domains visited
Cumulative time: 1.2654860019683838

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] [/input-12, 66] [/input-12, 92] [/input-12, 92] [/input-12, 30] [/input-12, 30] [/input-12, 92] [/input-12, 92] [/input-12, 30] [/input-12, 30] 
split level 1: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 92] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] 
split level 2: [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 7] [/input-12, 7] [/input-12, 15] [/input-12, 15] [/input-12, 7] [/input-12, 7] 
split level 3: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 28] [/input-12, 28] [/input-12, 15] [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.363767147064209
10 lb beta sum: 0.45726048946380615, worst -0.34589338302612305
Time: prepare 0.0059    bound 0.1237    transfer 0.0018    finalize 0.0023    func 0.1362    
Accumulated time: func 0.4924    prepare 0.0351    bound 0.4473    transfer 0.0046    finalize 0.0081    
all_split False
======================Cut inference begins======================
max lb tensor(0.25674295) min lb tensor(-0.34532881)
Number of Verified Splits: 139 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 14
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.020977497100830078 
BICCOS Cumulative time: 0.046066999435424805
Preprocessing time: 0.011710166931152344 Inference time: 0.007170677185058594 Add cuts time: 0.0015873908996582031 Cut analysis time: 0.0005092620849609375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07511 (3), -0.06927 (3), -0.06847 (3), -0.06734 (3), -0.06696 (3), -0.06680 (3), -0.06679 (3), -0.06525 (3), -0.06523 (3), -0.06510 (3), -0.06490 (3), -0.06332 (3), -0.06260 (3), -0.05972 (3), -0.05953 (3), -0.05828 (3), -0.05756 (3), -0.05717 (3), -0.05658 (3), -0.05652 (3), 
Length of domains: 50
Time: pickout 0.0076    decision 0.0205    set_bounds 0.0152    solve 0.1363    add 0.1128    
Accumulated time: pickout 0.0091    decision 0.5920    set_bounds 0.0390    solve 0.3985    add 0.3770    
Current (lb-rhs): -0.07510757446289062
150 domains visited
Cumulative time: 1.579136610031128

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 92] [/input-12, 30] [/input-12, 92] [/input-12, 30] 
split level 1: [/input-12, 7] [/input-12, 7] [/input-12, 66] [/input-12, 7] [/input-12, 66] [/input-12, 66] [/input-12, 30] [/input-12, 28] [/input-12, 30] [/input-12, 28] 
split level 2: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 28] [/input-12, 15] [/input-12, 28] [/input-12, 15] 
split level 3: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 15] [/input-12, 61] [/input-12, 15] [/input-12, 61] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.02517223358154297

all verified at 0th iter
Time: prepare 0.0057    bound 0.0052    transfer 0.0007    finalize 0.0022    func 0.0163    
Accumulated time: func 0.5087    prepare 0.0410    bound 0.4525    transfer 0.0053    finalize 0.0104    
all_split False
======================Cut inference begins======================
max lb tensor(0.38427448) min lb tensor(0.02517223)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 17
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.04015207290649414 
BICCOS Cumulative time: 0.08621907234191895
Preprocessing time: 0.011559486389160156 Inference time: 0.021589040756225586 Add cuts time: 0.00607752799987793 Cut analysis time: 0.0009260177612304688
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0009    decision 0.0203    set_bounds 0.0153    solve 0.0164    add 0.0247    
Accumulated time: pickout 0.0100    decision 0.6123    set_bounds 0.0542    solve 0.4149    add 0.4018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] 
split level 1: [/input-12, 30] 
split level 2: [/input-12, 66] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 28] 
split level 5: [/input-12, 15] 
split level 6: [/input-12, 61] 
split level 7: [/input-12, 36] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.2702951431274414

all verified at 0th iter
Time: prepare 0.0038    bound 0.0082    transfer 0.0013    finalize 0.0015    func 0.0166    
Accumulated time: func 0.5252    prepare 0.0452    bound 0.4607    transfer 0.0066    finalize 0.0119    
all_split False
======================Cut inference begins======================
max lb tensor(1.12566376) min lb tensor(0.27029514)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 28.
#cuts 1-3: 17
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.006920576095581055 
BICCOS Cumulative time: 0.0931396484375
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.1700    solve 0.0166    add 0.0001    
Accumulated time: pickout 0.0104    decision 0.6353    set_bounds 0.2243    solve 0.4315    add 0.4018    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
Cumulative time: 1.9186084270477295


Properties batch 3, size 1
Remaining timeout: 196.35106706619263
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 196.3509864807129
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 196.35096192359924
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 196.35094022750854
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 196.350919008255
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 196.35030031204224
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.6498 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 77, vnnlib ID: 77 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-39.27479935, -38.06845093, -42.74777985, -39.49841309, -42.33125687,
         -39.82426453, -42.46208191, -42.47674942, -35.16999435, -34.94247818]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [864]; unstable size 864; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 864] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 40, 1, 864] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 864] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 40, 1, 260] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [39]; unstable size 39; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.76546288,  0.90009773,  4.11821747,  1.92595530,  3.57627392,
          1.91846824,  4.20758057,  4.11883068, -2.44119120]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-39.27479935, -38.06845093, -42.74777985, -39.49841309, -42.33125687,
         -39.82426453, -42.46208191, -42.47674942, -35.16999435, -34.94247818]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.01059723, -38.25300598, -42.56039429, -39.38610840, -42.17530060,
          -39.85776138, -42.19974899, -42.56241989, -34.28534698, -35.31712723]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.03178024]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0070 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0721 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 78, vnnlib ID: 78 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.34502411, -33.06935120, -28.57133675, -27.46349335, -28.02586937,
         -28.58547783, -27.54389763, -30.49172211, -33.64065933, -33.91392136]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [713]; unstable size 713; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 401, 1, 713] with unstable size 400 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 56, 1, 713] with unstable size 55 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 713] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [400]; unstable size 400; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 56, 1, 400] with unstable size 55 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 400] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [55]; unstable size 55; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 55] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.25808883, -0.36835194, -2.30449486, -2.31760359, -0.49333605,
         -3.02183127, -0.63732010,  1.25872934,  0.32689810]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.34502411, -33.06935120, -28.57133675, -27.46349335, -28.02586937,
         -28.58547783, -27.54389763, -30.49172211, -33.64065933, -33.91392136]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.08201981, -33.20596695, -28.52576256, -27.97030449, -27.51984978,
          -29.07929993, -27.63040543, -30.44635391, -33.73876190, -33.96608353],
         [-32.08201981, -33.20596695, -28.52576256, -27.97030449, -27.51984978,
          -29.07929993, -27.63040543, -30.44635391, -33.73876190, -33.96608353]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 4.11171532,  5.23566246,  0.55545807, -0.45045471,  1.10899544,
          -0.33989906,  2.47604942]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0132 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0874 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 79, vnnlib ID: 79 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-38.95194626, -40.86716843, -39.11649323, -36.18898010, -36.91442490,
         -35.55133057, -39.04379654, -31.20797348, -41.17644882, -37.16267776]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [567]; unstable size 567; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 331, 1, 567] with unstable size 330 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 35, 1, 567] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 567] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [330]; unstable size 330; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 35, 1, 330] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 330] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [34]; unstable size 34; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.51568151, 4.07738495, 4.19046783, 1.92152905, 2.14419723, 1.12592494,
         3.10727024, 5.34975815, 1.18592906]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0740 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 80, vnnlib ID: 80 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-37.92939377, -43.27896500, -39.96925354, -42.83351898, -39.22983932,
         -43.46310806, -41.61647415, -41.74657059, -40.40455246, -43.10998917]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1213]; unstable size 1213; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 508, 1, 1213] with unstable size 507 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 61, 1, 1213] with unstable size 60 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1213] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [507]; unstable size 507; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 61, 1, 507] with unstable size 60 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 507] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [60]; unstable size 60; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 60] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.50766945, -3.81553078, -1.01219845, -4.28313351, -1.25938463,
         -2.86557484, -3.03982544, -3.18487906, -1.58225083]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-37.92939377, -43.27896500, -39.96925354, -42.83351898, -39.22983932,
         -43.46310806, -41.61647415, -41.74657059, -40.40455246, -43.10998917]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.85193253, -42.95302200, -38.75088882, -41.70172119, -37.60332489,
          -42.18854523, -40.45909882, -40.32160568, -40.23259735, -42.64410400],
         [-37.85193253, -42.95302200, -38.75088882, -41.70172119, -37.60332489,
          -42.18854523, -40.45909882, -40.32160568, -40.23259735, -42.64410400]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 5.10108948,  0.89895630,  3.84978867, -0.24860764,  4.33661270,
           2.60716629,  2.46967316,  2.38066483,  4.79217148]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0128 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0793 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 81, vnnlib ID: 81 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.18074036, -41.92508316, -31.85981178, -35.96245193, -32.51911545,
         -35.23289490, -35.47659683, -36.83747864, -40.17747116, -41.28678131]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [966]; unstable size 966; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 258, 1, 966] with unstable size 257 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 966] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 966] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [257]; unstable size 257; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 257] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 257] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.07192278,  7.68963099,  1.98842657, -1.30144560,  0.72860432,
          1.34726310,  2.08070517,  6.01441765,  7.24928808]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.18074036, -41.92508316, -31.85981178, -35.96245193, -32.51911545,
         -35.23289490, -35.47659683, -36.83747864, -40.17747116, -41.28678131]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.73773956, -40.90391922, -31.31493950, -34.99084473, -31.26045799,
          -34.27458954, -34.36541367, -35.65716171, -39.53968811, -40.25048447]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.05448151]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0067 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0521 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 82, vnnlib ID: 82 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.64513779, -38.28391647, -33.65436554, -32.24381638, -35.00611877,
         -32.02179337, -33.57857513, -36.19041061, -38.33327866, -35.89968872]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1022]; unstable size 1022; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 372, 1, 1022] with unstable size 371 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 51, 1, 1022] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1022] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [371]; unstable size 371; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 51, 1, 371] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 371] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [50]; unstable size 50; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 50] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.57362628,  1.27679729, -2.86274385, -1.52033567, -1.59644604,
         -2.37522769,  0.10948873,  0.70659268, -1.17591047]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.64513779, -38.28391647, -33.65436554, -32.24381638, -35.00611877,
         -32.02179337, -33.57857513, -36.19041061, -38.33327866, -35.89968872]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-36.19272995, -38.05379105, -33.48305511, -32.20722961, -34.98673630,
          -32.42383575, -33.48607635, -36.27874374, -38.09446716, -35.74266434],
         [-36.19272995, -38.05379105, -33.48305511, -32.20722961, -34.98673630,
          -32.42383575, -33.48607635, -36.27874374, -38.09446716, -35.74266434]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 3.76889420,  1.05921936, -0.21660614,  2.56290054,  1.06224060,
           3.31882858]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0072 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0890 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 83, vnnlib ID: 83 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-38.48305130, -38.85184860, -42.37570190, -40.68345261, -40.74557877,
         -41.22026825, -42.77823257, -41.99364090, -38.19508743, -35.93501663]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [773]; unstable size 773; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 340, 1, 773] with unstable size 339 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 51, 1, 773] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 773] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [339]; unstable size 339; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 51, 1, 339] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 339] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [50]; unstable size 50; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 50] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.42512178, -0.51602030,  0.84239674, -0.03159332, -0.42008114,
          0.21640873,  1.81952477,  0.36395645, -2.55338669]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-38.48305130, -38.85184860, -42.37570190, -40.68345261, -40.74557877,
         -41.22026825, -42.77823257, -41.99364090, -38.19508743, -35.93501663]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.04it/s]100%|██████████| 1/1 [00:00<00:00,  7.04it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-38.75802994, -39.35179520, -42.85319138, -40.96068192, -41.04808426,
          -41.63504791, -42.93680573, -42.77149582, -37.66620255, -37.04591370],
         [-38.75802994, -39.35179520, -42.85319138, -40.96068192, -41.04808426,
          -41.63504791, -42.93680573, -42.77149582, -37.66620255, -37.04591370]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.71211624, 2.30588150, 3.91476822, 4.00217056, 0.62028885]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.1456 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 2.8162271976470947
alpha/beta optimization time: 1.3956022262573242
initial alpha-crown bounds: tensor([[-1.04160070, -0.33628249,  1.56039429,  0.53127193,  0.20051956,
          0.80389214,  2.27458572,  0.93539333, -2.11194658]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 3 ; Worst class: (+ rhs) -2.1119465827941895
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.4138514995575
Verifying property 0 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.04160070]], device='cuda:0') need to verify.
Model prediction is: tensor([-38.48305130, -38.85184860, -42.37570190, -40.68345261, -40.74557877,
        -41.22026825, -42.77823257, -41.99364090, -38.19508743, -35.93501663],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.04160070]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 773
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 328
Node /15 input 0: size torch.Size([100]) unstable 49
-----------------
# of unstable neurons: 1150
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011348724365234375
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 36] 
split level 1: [/input-12, 30] 
split level 2: [/input-12, 28] 
split level 3: [/input-12, 48] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 40] 
split level 6: [/input-12, 7] 
split level 7: [/input-12, 20] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18286943435668945
10 lb beta sum: 0.0, worst -0.1753077507019043
Time: prepare 0.0020    bound 0.1022    transfer 0.0015    finalize 0.0018    func 0.1094    
Accumulated time: func 0.1094    prepare 0.0024    bound 0.1022    transfer 0.0015    finalize 0.0018    
all_split False
======================Cut inference begins======================
max lb tensor(2.20952988) min lb tensor(-0.17348528)
Number of Verified Splits: 252 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.041595458984375
10 lb beta sum: 0.0, worst -1.041628360748291
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 5
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.22364401817321777 
BICCOS Cumulative time: 0.22364401817321777
Preprocessing time: 0.007291316986083984 Inference time: 0.21038484573364258 Add cuts time: 0.005541563034057617 Cut analysis time: 0.00042629241943359375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17349 (8), -0.06028 (8), -0.04940 (8), -0.01419 (8), 
Length of domains: 4
Time: pickout 0.0004    decision 0.0240    set_bounds 0.0174    solve 0.1095    add 0.0257    
Accumulated time: pickout 0.0004    decision 0.0240    set_bounds 0.0174    solve 0.1095    add 0.0257    
Current (lb-rhs): -0.17348527908325195
4 domains visited
Cumulative time: 0.4137706756591797

BaB round 2
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 10] [/input-12, 65] [/input-12, 10] 
split level 1: [/input-12, 65] [/input-12, 65] [/input-12, 10] [/input-12, 65] 
split level 2: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 3: [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] 
split level 4: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 5: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.17836618423461914

all verified at 0th iter
Time: prepare 0.0037    bound 0.0049    transfer 0.0005    finalize 0.0015    func 0.0126    
Accumulated time: func 0.1220    prepare 0.0064    bound 0.1071    transfer 0.0020    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(0.72380877) min lb tensor(0.17836618)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 7.
#cuts 1-3: 5
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.007686138153076172 
BICCOS Cumulative time: 0.23133015632629395
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0186    set_bounds 0.0153    solve 0.0127    add 0.0001    
Accumulated time: pickout 0.0016    decision 0.0426    set_bounds 0.0326    solve 0.1222    add 0.0258    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.4703495502471924


Properties batch 1, size 1
Remaining timeout: 197.7266821861267
Verifying property 1 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.33628249]], device='cuda:0') need to verify.
Model prediction is: tensor([-38.48305130, -38.85184860, -42.37570190, -40.68345261, -40.74557877,
        -41.22026825, -42.77823257, -41.99364090, -38.19508743, -35.93501663],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.33628249]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 773
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 328
Node /15 input 0: size torch.Size([100]) unstable 49
-----------------
# of unstable neurons: 1150
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.751319885253906e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 25] 
split level 1: [/input-12, 16] 
split level 2: [/input-12, 2] 
split level 3: [/input-12, 31] 
split level 4: [/input-12, 6] 
split level 5: [/input-12, 48] 
split level 6: [/input-12, 37] 
split level 7: [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.4873678684234619

all verified at 0th iter
Time: prepare 0.0018    bound 0.0043    transfer 0.0013    finalize 0.0016    func 0.0108    
Accumulated time: func 0.0108    prepare 0.0022    bound 0.0043    transfer 0.0013    finalize 0.0016    
all_split False
======================Cut inference begins======================
max lb tensor(2.93099999) min lb tensor(0.48736787)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006916522979736328 
BICCOS Cumulative time: 0.006916522979736328
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0163    solve 0.0109    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0163    solve 0.0109    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06340169906616211


Properties batch 2, size 1
Remaining timeout: 197.49915146827698
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 197.4990804195404
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.49905610084534
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.49903512001038
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.49901461601257
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.4989197254181
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.49889969825745
Verifying property 8 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.11194658]], device='cuda:0') need to verify.
Model prediction is: tensor([-38.48305130, -38.85184860, -42.37570190, -40.68345261, -40.74557877,
        -41.22026825, -42.77823257, -41.99364090, -38.19508743, -35.93501663],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.11194658]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 773
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 328
Node /15 input 0: size torch.Size([100]) unstable 49
-----------------
# of unstable neurons: 1150
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010275840759277344
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 75] 
split level 1: [/input-12, 0] 
split level 2: [/input-12, 47] 
split level 3: [/input-12, 8] 
split level 4: [/input-12, 16] 
split level 5: [/input-12, 31] 
split level 6: [/input-12, 78] 
split level 7: [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7073593139648438
10 lb beta sum: 0.0, worst -0.7043542861938477
Time: prepare 0.0019    bound 0.1009    transfer 0.0005    finalize 0.0016    func 0.1067    
Accumulated time: func 0.1067    prepare 0.0024    bound 0.1009    transfer 0.0005    finalize 0.0016    
all_split False
======================Cut inference begins======================
max lb tensor(0.69337463) min lb tensor(-0.70358610)
Number of Verified Splits: 200 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.6212215423583984
10 lb beta sum: 0.0, worst -1.4791498184204102
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 4-6: 5
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.20155715942382812 
BICCOS Cumulative time: 0.20155715942382812
Preprocessing time: 0.00720977783203125 Inference time: 0.1907951831817627 Add cuts time: 0.0020215511322021484 Cut analysis time: 0.0015306472778320312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.70359 (8), -0.68885 (8), -0.67898 (8), -0.66824 (8), -0.66488 (8), -0.64005 (8), -0.62582 (8), -0.62510 (8), -0.61099 (8), -0.60471 (8), -0.59091 (8), -0.59058 (8), -0.57498 (8), -0.55992 (8), -0.55623 (8), -0.52616 (8), -0.41417 (8), -0.40320 (8), -0.37824 (8), -0.37470 (8), 
Length of domains: 56
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0170    solve 0.1068    add 0.0123    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0170    solve 0.1068    add 0.0123    
Current (lb-rhs): -0.7035861015319824
56 domains visited
Cumulative time: 0.3681786060333252

BaB round 2
batch: 56
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 1: [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5574078559875488
10 lb beta sum: 0.0, worst -0.5561032295227051
Time: prepare 0.0033    bound 0.1217    transfer 0.0017    finalize 0.0014    func 0.1298    
Accumulated time: func 0.2365    prepare 0.0059    bound 0.2226    transfer 0.0022    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.21446419) min lb tensor(-0.55564547)
Number of Verified Splits: 93 of 224
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2215123176574707
10 lb beta sum: 0.07537277787923813, worst -1.030491828918457
Total number of valid cuts: 15.
#cuts 4-6: 5
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.1878066062927246 
BICCOS Cumulative time: 0.38936376571655273
Preprocessing time: 0.007197380065917969 Inference time: 0.1797952651977539 Add cuts time: 0.00052642822265625 Cut analysis time: 0.0002875328063964844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.55565 (10), -0.54708 (10), -0.53412 (10), -0.53350 (10), -0.53173 (10), -0.52417 (10), -0.51582 (10), -0.51568 (10), -0.51471 (10), -0.51402 (10), -0.49461 (10), -0.49364 (10), -0.47747 (10), -0.47698 (10), -0.46878 (10), -0.46543 (10), -0.45799 (10), -0.45626 (10), -0.45424 (10), -0.44796 (10), 
Length of domains: 131
Time: pickout 0.0019    decision 0.0151    set_bounds 0.0078    solve 0.1298    add 0.0056    
Accumulated time: pickout 0.0023    decision 0.0389    set_bounds 0.0248    solve 0.2367    add 0.0179    
Current (lb-rhs): -0.5556454658508301
187 domains visited
Cumulative time: 0.7175209522247314

BaB round 3
batch: 131
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5168094635009766
10 lb beta sum: 0.0, worst -0.5163345336914062
Time: prepare 0.0107    bound 0.1283    transfer 0.0010    finalize 0.0014    func 0.1430    
Accumulated time: func 0.3795    prepare 0.0168    bound 0.3508    transfer 0.0031    finalize 0.0045    
all_split False
======================Cut inference begins======================
max lb tensor(0.23955631) min lb tensor(-0.51606178)
Number of Verified Splits: 113 of 262
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 5
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.02237677574157715 
BICCOS Cumulative time: 0.4117405414581299
Preprocessing time: 0.008372068405151367 Inference time: 0.011861324310302734 Add cuts time: 0.001573801040649414 Cut analysis time: 0.0005695819854736328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.51606 (11), -0.50735 (11), -0.49514 (11), -0.49458 (11), -0.49250 (11), -0.48513 (11), -0.47707 (11), -0.47623 (11), -0.47500 (11), -0.47490 (11), -0.45529 (11), -0.45454 (11), -0.43698 (11), -0.43627 (11), -0.42790 (11), -0.42593 (11), -0.41868 (11), -0.41622 (11), -0.41376 (11), -0.40926 (11), 
Length of domains: 149
Time: pickout 0.0022    decision 0.0196    set_bounds 0.0078    solve 0.1431    add 0.0025    
Accumulated time: pickout 0.0044    decision 0.0585    set_bounds 0.0326    solve 0.3797    add 0.0204    
Current (lb-rhs): -0.5160617828369141
336 domains visited
Cumulative time: 0.9161489009857178

BaB round 4
batch: 149
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.49111127853393555
10 lb beta sum: 0.0675712376832962, worst -0.4907097816467285
Time: prepare 0.0044    bound 0.1293    transfer 0.0015    finalize 0.0018    func 0.1390    
Accumulated time: func 0.5184    prepare 0.0213    bound 0.4801    transfer 0.0046    finalize 0.0063    
all_split False
======================Cut inference begins======================
max lb tensor(0.45402670) min lb tensor(-0.49051094)
Number of Verified Splits: 188 of 298
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.03678536415100098 
BICCOS Cumulative time: 0.44852590560913086
Preprocessing time: 0.009453296661376953 Inference time: 0.019746780395507812 Add cuts time: 0.0022089481353759766 Cut analysis time: 0.005376338958740234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.49051 (12), -0.48116 (12), -0.46987 (12), -0.46728 (12), -0.46465 (12), -0.45922 (12), -0.45014 (12), -0.45000 (12), -0.44816 (12), -0.44716 (12), -0.42946 (12), -0.42816 (12), -0.40986 (12), -0.40775 (12), -0.40069 (12), -0.39759 (12), -0.39010 (12), -0.38732 (12), -0.38373 (12), -0.38122 (12), 
Length of domains: 110
Time: pickout 0.0029    decision 0.0176    set_bounds 0.0088    solve 0.1390    add 0.0162    
Accumulated time: pickout 0.0073    decision 0.0761    set_bounds 0.0414    solve 0.5187    add 0.0367    
Current (lb-rhs): -0.4905109405517578
446 domains visited
Cumulative time: 1.1395106315612793

BaB round 5
batch: 110
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4669623374938965
10 lb beta sum: 0.3334486484527588, worst -0.46661949157714844
Time: prepare 0.0034    bound 0.1266    transfer 0.0019    finalize 0.0013    func 0.1347    
Accumulated time: func 0.6532    prepare 0.0250    bound 0.6068    transfer 0.0066    finalize 0.0075    
all_split False
======================Cut inference begins======================
max lb tensor(0.55717486) min lb tensor(-0.46640158)
Number of Verified Splits: 170 of 220
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.026333093643188477 
BICCOS Cumulative time: 0.47485899925231934
Preprocessing time: 0.0066432952880859375 Inference time: 0.01811051368713379 Add cuts time: 0.0012454986572265625 Cut analysis time: 0.0003337860107421875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.46640 (13), -0.44535 (13), -0.44252 (13), -0.42452 (13), -0.38646 (13), -0.36232 (13), -0.35441 (13), -0.33043 (13), -0.31063 (13), -0.30516 (13), -0.29303 (13), -0.28795 (13), -0.27531 (13), -0.25392 (13), -0.25131 (13), -0.23159 (13), -0.21555 (13), -0.21434 (13), -0.21133 (13), -0.20178 (13), 
Length of domains: 50
Time: pickout 0.0036    decision 0.0181    set_bounds 0.0066    solve 0.1348    add 0.0016    
Accumulated time: pickout 0.0109    decision 0.0942    set_bounds 0.0480    solve 0.6535    add 0.0382    
Current (lb-rhs): -0.4664015769958496
496 domains visited
Cumulative time: 1.3316898345947266

BaB round 6
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] 
split level 1: [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] 
split level 2: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34639930725097656
10 lb beta sum: 0.26279014348983765, worst -0.34577322006225586
Time: prepare 0.0061    bound 0.1247    transfer 0.0038    finalize 0.0018    func 0.1390    
Accumulated time: func 0.7922    prepare 0.0312    bound 0.7314    transfer 0.0104    finalize 0.0093    
all_split False
======================Cut inference begins======================
max lb tensor(0.56202716) min lb tensor(-0.34552145)
Number of Verified Splits: 342 of 400
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 13
#cuts >= 20: 0
BICCOS time: 0.056563615798950195 
BICCOS Cumulative time: 0.5314226150512695
Preprocessing time: 0.011511802673339844 Inference time: 0.04202461242675781 Add cuts time: 0.0026628971099853516 Cut analysis time: 0.0003643035888671875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34552 (16), -0.32729 (16), -0.32147 (16), -0.31704 (16), -0.31088 (16), -0.30446 (16), -0.29491 (16), -0.29410 (16), -0.28465 (16), -0.28443 (16), -0.28174 (16), -0.27785 (16), -0.26610 (16), -0.26241 (16), -0.26043 (16), -0.25820 (16), -0.24378 (16), -0.24331 (16), -0.23615 (16), -0.23044 (16), 
Length of domains: 58
Time: pickout 0.0015    decision 0.0157    set_bounds 0.0156    solve 0.1391    add 0.0020    
Accumulated time: pickout 0.0124    decision 0.1099    set_bounds 0.0637    solve 0.7926    add 0.0403    
Current (lb-rhs): -0.3455214500427246
554 domains visited
Cumulative time: 1.5637786388397217

BaB round 7
batch: 58
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] 
split level 1: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3133573532104492
10 lb beta sum: 0.2786061465740204, worst -0.3131260871887207
Time: prepare 0.0038    bound 0.1198    transfer 0.0006    finalize 0.0012    func 0.1273    
Accumulated time: func 0.9194    prepare 0.0352    bound 0.8512    transfer 0.0110    finalize 0.0106    
all_split False
======================Cut inference begins======================
max lb tensor(1.08239317) min lb tensor(-0.31309366)
Number of Verified Splits: 199 of 232
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.03360104560852051 
BICCOS Cumulative time: 0.56502366065979
Preprocessing time: 0.006931781768798828 Inference time: 0.025046348571777344 Add cuts time: 0.0012302398681640625 Cut analysis time: 0.00039267539978027344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31309 (18), -0.29551 (18), -0.29051 (18), -0.27426 (18), -0.23756 (18), -0.21080 (18), -0.21041 (18), -0.19514 (18), -0.18587 (18), -0.16487 (18), -0.16444 (18), -0.15788 (18), -0.15465 (18), -0.14907 (18), -0.14119 (18), -0.13937 (18), -0.13092 (18), -0.12861 (18), -0.12570 (18), -0.12046 (18), 
Length of domains: 33
Time: pickout 0.0020    decision 0.0143    set_bounds 0.0084    solve 0.1274    add 0.0017    
Accumulated time: pickout 0.0144    decision 0.1242    set_bounds 0.0721    solve 0.9200    add 0.0420    
Current (lb-rhs): -0.3130936622619629
587 domains visited
Cumulative time: 1.7523093223571777

BaB round 8
batch: 33
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] 
split level 1: [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] 
split level 2: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.25038909912109375
10 lb beta sum: 0.2164255678653717, worst -0.25019407272338867
Time: prepare 0.0038    bound 0.1267    transfer 0.0018    finalize 0.0012    func 0.1357    
Accumulated time: func 1.0551    prepare 0.0392    bound 0.9780    transfer 0.0128    finalize 0.0118    
all_split False
======================Cut inference begins======================
max lb tensor(0.86213589) min lb tensor(-0.25012636)
Number of Verified Splits: 217 of 264
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 17
#cuts >= 20: 0
BICCOS time: 0.04117465019226074 
BICCOS Cumulative time: 0.6061983108520508
Preprocessing time: 0.007731437683105469 Inference time: 0.031456947326660156 Add cuts time: 0.0014848709106445312 Cut analysis time: 0.0005013942718505859
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25013 (21), -0.23210 (21), -0.22660 (21), -0.21071 (21), -0.21035 (21), -0.20067 (21), -0.17410 (21), -0.17187 (21), -0.16008 (21), -0.14909 (21), -0.14801 (21), -0.14089 (21), -0.13079 (21), -0.12150 (21), -0.12041 (21), -0.10982 (21), -0.10035 (21), -0.09983 (21), -0.09513 (21), -0.09445 (21), 
Length of domains: 47
Time: pickout 0.0012    decision 0.0157    set_bounds 0.0102    solve 0.1358    add 0.0013    
Accumulated time: pickout 0.0156    decision 0.1399    set_bounds 0.0823    solve 1.0558    add 0.0433    
Current (lb-rhs): -0.25012636184692383
634 domains visited
Cumulative time: 1.9589848518371582

BaB round 9
batch: 47
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] 
split level 1: [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-8, 685] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-8, 685] 
split level 2: [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 557] [/input-8, 557] [/input-8, 685] [/input-8, 557] [/input-8, 685] [/input-8, 557] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20961284637451172
10 lb beta sum: 0.23653168976306915, worst -0.20933198928833008
Time: prepare 0.0074    bound 0.1225    transfer 0.0013    finalize 0.0027    func 0.1364    
Accumulated time: func 1.1915    prepare 0.0469    bound 1.1004    transfer 0.0141    finalize 0.0145    
all_split False
======================Cut inference begins======================
max lb tensor(0.81911272) min lb tensor(-0.20919323)
Number of Verified Splits: 304 of 376
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.060498714447021484 
BICCOS Cumulative time: 0.6666970252990723
Preprocessing time: 0.010990142822265625 Inference time: 0.046219587326049805 Add cuts time: 0.0026466846466064453 Cut analysis time: 0.0006422996520996094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20919 (24), -0.18994 (24), -0.17649 (24), -0.17415 (24), -0.17310 (24), -0.16901 (24), -0.15811 (24), -0.15695 (24), -0.15495 (24), -0.15431 (24), -0.13513 (24), -0.13476 (24), -0.13348 (24), -0.13309 (24), -0.12279 (24), -0.11632 (24), -0.11627 (24), -0.11606 (24), -0.11547 (24), -0.11517 (24), 
Length of domains: 72
Time: pickout 0.0022    decision 0.0158    set_bounds 0.0163    solve 0.1365    add 0.0120    
Accumulated time: pickout 0.0179    decision 0.1557    set_bounds 0.0986    solve 1.1923    add 0.0552    
Current (lb-rhs): -0.20919322967529297
706 domains visited
Cumulative time: 2.203640937805176

BaB round 10
batch: 72
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 499] [/input-8, 499] [/input-8, 1076] [/input-12, 66] [/input-8, 1076] [/input-8, 685] [/input-8, 1076] [/input-8, 1076] [/input-8, 499] [/input-8, 1076] 
split level 1: [/input-8, 1076] [/input-8, 1076] [/input-8, 114] [/input-8, 1076] [/input-8, 499] [/input-8, 1076] [/input-8, 114] [/input-8, 684] [/input-8, 1076] [/input-8, 684] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18976306915283203
10 lb beta sum: 0.3735731840133667, worst -0.1889328956604004
Time: prepare 0.0057    bound 0.1384    transfer 0.0019    finalize 0.0014    func 0.1492    
Accumulated time: func 1.3408    prepare 0.0528    bound 1.2388    transfer 0.0160    finalize 0.0159    
all_split False
======================Cut inference begins======================
max lb tensor(0.79599661) min lb tensor(-0.18885803)
Number of Verified Splits: 202 of 288
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 24
#cuts >= 20: 0
BICCOS time: 0.04334616661071777 
BICCOS Cumulative time: 0.71004319190979
Preprocessing time: 0.008459329605102539 Inference time: 0.03220820426940918 Add cuts time: 0.0021932125091552734 Cut analysis time: 0.00048542022705078125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18886 (26), -0.17557 (26), -0.17138 (26), -0.15643 (26), -0.15061 (26), -0.14883 (26), -0.14551 (26), -0.14512 (26), -0.14466 (26), -0.13435 (26), -0.13138 (26), -0.13049 (26), -0.12985 (26), -0.12780 (26), -0.11709 (26), -0.11597 (26), -0.11571 (26), -0.11201 (26), -0.10946 (26), -0.10871 (26), 
Length of domains: 86
Time: pickout 0.0023    decision 0.0158    set_bounds 0.0102    solve 0.1497    add 0.0899    
Accumulated time: pickout 0.0202    decision 0.1715    set_bounds 0.1088    solve 1.3420    add 0.1451    
Current (lb-rhs): -0.1888580322265625
792 domains visited
Cumulative time: 2.5224952697753906

BaB round 11
batch: 86
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 499] [/input-8, 684] [/input-8, 114] [/input-8, 499] [/input-8, 499] [/input-8, 684] [/input-8, 499] [/input-8, 684] [/input-8, 684] [/input-8, 684] 
split level 1: [/input-8, 684] [/input-8, 1321] [/input-8, 557] [/input-8, 684] [/input-8, 684] [/input-8, 1321] [/input-8, 1918] [/input-8, 753] [/input-8, 1321] [/input-8, 1321] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.175140380859375
10 lb beta sum: 0.5715387463569641, worst -0.1746654510498047
Time: prepare 0.0069    bound 0.1427    transfer 0.0007    finalize 0.0022    func 0.1547    
Accumulated time: func 1.4955    prepare 0.0599    bound 1.3815    transfer 0.0166    finalize 0.0181    
all_split False
======================Cut inference begins======================
max lb tensor(0.30793229) min lb tensor(-0.17452908)
Number of Verified Splits: 235 of 344
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 24
#cuts >= 20: 0
BICCOS time: 0.053869009017944336 
BICCOS Cumulative time: 0.7639122009277344
Preprocessing time: 0.010221719741821289 Inference time: 0.040172576904296875 Add cuts time: 0.0029535293579101562 Cut analysis time: 0.0005211830139160156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17453 (28), -0.16129 (28), -0.15580 (28), -0.15138 (28), -0.14244 (28), -0.13801 (28), -0.13015 (28), -0.12941 (28), -0.12902 (28), -0.11678 (28), -0.11635 (28), -0.11402 (28), -0.11165 (28), -0.11055 (28), -0.11027 (28), -0.10615 (28), -0.10461 (28), -0.10083 (28), -0.09770 (28), -0.09550 (28), 
Length of domains: 109
Time: pickout 0.0162    decision 0.0208    set_bounds 0.0110    solve 0.1548    add 0.0019    
Accumulated time: pickout 0.0364    decision 0.1923    set_bounds 0.1198    solve 1.4968    add 0.1470    
Current (lb-rhs): -0.1745290756225586
901 domains visited
Cumulative time: 2.7822105884552

BaB round 12
batch: 109
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 557] [/input-8, 684] [/input-8, 499] [/input-8, 753] [/input-8, 499] [/input-8, 684] [/input-12, 33] [/input-8, 557] [/input-8, 753] [/input-8, 753] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5396716594696045, worst -0.16276121139526367
10 lb beta sum: 0.5396716594696045, worst -0.16257047653198242
Time: prepare 0.0100    bound 0.1364    transfer 0.0014    finalize 0.0017    func 0.1509    
Accumulated time: func 1.6464    prepare 0.0701    bound 1.5179    transfer 0.0181    finalize 0.0198    
all_split False
======================Cut inference begins======================
max lb tensor(0.09951130) min lb tensor(-0.16247988)
Number of Verified Splits: 38 of 218
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 24
#cuts >= 20: 0
BICCOS time: 0.014728546142578125 
BICCOS Cumulative time: 0.7786407470703125
Preprocessing time: 0.006506443023681641 Inference time: 0.006547212600708008 Add cuts time: 0.0011928081512451172 Cut analysis time: 0.0004820823669433594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16248 (29), -0.15152 (29), -0.14746 (29), -0.14620 (29), -0.13343 (29), -0.13249 (29), -0.13136 (29), -0.13121 (29), -0.12761 (29), -0.11855 (29), -0.11728 (29), -0.11662 (29), -0.11230 (29), -0.11064 (29), -0.10847 (29), -0.10437 (29), -0.10430 (29), -0.10057 (29), -0.09980 (29), -0.09953 (29), 
Length of domains: 180
Time: pickout 0.0026    decision 0.0158    set_bounds 0.0058    solve 0.1510    add 0.0091    
Accumulated time: pickout 0.0389    decision 0.2081    set_bounds 0.1256    solve 1.6478    add 0.1561    
Current (lb-rhs): -0.16247987747192383
1081 domains visited
Cumulative time: 2.982238292694092

BaB round 13
batch: 180
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 753] [/input-8, 499] [/input-8, 1321] [/input-12, 33] [/input-8, 753] [/input-8, 684] [/input-8, 499] [/input-8, 1321] [/input-8, 114] [/input-8, 684] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4984826147556305, worst -0.15319299697875977
10 lb beta sum: 0.4984826147556305, worst -0.1531057357788086
Time: prepare 0.0168    bound 0.1558    transfer 0.0020    finalize 0.0032    func 0.1802    
Accumulated time: func 1.8266    prepare 0.0871    bound 1.6737    transfer 0.0201    finalize 0.0230    
all_split False
======================Cut inference begins======================
max lb tensor(0.09549487) min lb tensor(-0.15300083)
Number of Verified Splits: 88 of 360
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.03223729133605957 
BICCOS Cumulative time: 0.8108780384063721
Preprocessing time: 0.011907339096069336 Inference time: 0.01691746711730957 Add cuts time: 0.0029027462005615234 Cut analysis time: 0.0005097389221191406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15300 (30), -0.13920 (30), -0.13530 (30), -0.13457 (30), -0.13417 (30), -0.12480 (30), -0.12388 (30), -0.12169 (30), -0.12022 (30), -0.11914 (30), -0.11831 (30), -0.11689 (30), -0.11522 (30), -0.11512 (30), -0.11261 (30), -0.10897 (30), -0.10750 (30), -0.10650 (30), -0.10594 (30), -0.10395 (30), 
Length of domains: 272
Time: pickout 0.0064    decision 0.0233    set_bounds 0.0114    solve 0.1804    add 0.0076    
Accumulated time: pickout 0.0453    decision 0.2314    set_bounds 0.1370    solve 1.8282    add 0.1637    
Current (lb-rhs): -0.1530008316040039
1353 domains visited
Cumulative time: 3.244887590408325

BaB round 14
batch: 272
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 564] [/input-8, 564] [/input-12, 33] [/input-12, 33] [/input-8, 564] [/input-8, 1918] [/input-12, 33] [/input-8, 753] [/input-12, 33] [/input-8, 684] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1429610252380371
10 lb beta sum: 0.3017917573451996, worst -0.14288330078125
Time: prepare 0.0117    bound 0.1593    transfer 0.0084    finalize 0.0040    func 0.1869    
Accumulated time: func 2.0135    prepare 0.0990    bound 1.8329    transfer 0.0284    finalize 0.0270    
all_split False
======================Cut inference begins======================
max lb tensor(0.18904287) min lb tensor(-0.14284420)
Number of Verified Splits: 286 of 544
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 25
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.0810387134552002 
BICCOS Cumulative time: 0.8919167518615723
Preprocessing time: 0.01730179786682129 Inference time: 0.0586702823638916 Add cuts time: 0.004268169403076172 Cut analysis time: 0.0007984638214111328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14284 (31), -0.12896 (31), -0.12482 (31), -0.12404 (31), -0.12399 (31), -0.11443 (31), -0.11243 (31), -0.11225 (31), -0.11001 (31), -0.10856 (31), -0.10774 (31), -0.10636 (31), -0.10595 (31), -0.10574 (31), -0.10495 (31), -0.09887 (31), -0.09789 (31), -0.09564 (31), -0.09338 (31), -0.09127 (31), 
Length of domains: 258
Time: pickout 0.0079    decision 0.0275    set_bounds 0.0156    solve 0.1871    add 0.0030    
Accumulated time: pickout 0.0532    decision 0.2590    set_bounds 0.1526    solve 2.0153    add 0.1667    
Current (lb-rhs): -0.14284420013427734
1611 domains visited
Cumulative time: 3.5697529315948486

BaB round 15
batch: 258
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 33] [/input-8, 1918] [/input-12, 33] [/input-8, 564] [/input-12, 33] [/input-12, 33] [/input, 2999] [/input-12, 33] [/input-8, 564] [/input-12, 33] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12730979919433594
10 lb beta sum: 0.3412260413169861, worst -0.1314476877450943
Time: prepare 0.0109    bound 0.1628    transfer 0.0042    finalize 0.0043    func 0.3754    
Accumulated time: func 2.3889    prepare 0.1102    bound 1.9958    transfer 0.0326    finalize 0.0313    
all_split False
======================Cut inference begins======================
max lb tensor(0.44428551) min lb tensor(-0.12706041)
Number of Verified Splits: 197 of 516
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 26
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.0648808479309082 
BICCOS Cumulative time: 0.9567975997924805
Preprocessing time: 0.018274307250976562 Inference time: 0.04250979423522949 Add cuts time: 0.003335714340209961 Cut analysis time: 0.0007610321044921875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12706 (32), -0.12425 (32), -0.11313 (32), -0.11028 (32), -0.10813 (32), -0.10803 (32), -0.10802 (32), -0.10551 (32), -0.10549 (32), -0.10516 (32), -0.10450 (32), -0.09608 (32), -0.09516 (32), -0.09409 (32), -0.09272 (32), -0.09175 (32), -0.09141 (32), -0.08917 (32), -0.08916 (32), -0.08898 (32), 
Length of domains: 319
Time: pickout 0.0078    decision 0.0267    set_bounds 0.0137    solve 0.3756    add 0.0781    
Accumulated time: pickout 0.0610    decision 0.2857    set_bounds 0.1663    solve 2.3908    add 0.2448    
Current (lb-rhs): -0.1270604133605957
1930 domains visited
Cumulative time: 4.145807504653931

BaB round 16
batch: 319
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 33] [/input-12, 33] [/input, 1959] [/input-12, 33] [/input, 1959] [/input-8, 1321] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] 
cut re-enabled after branching node selection
0 lb beta sum: 0.38274285197257996, worst -0.11644268035888672
10 lb beta sum: 0.3877870440483093, worst -0.1164708137512207
Time: prepare 0.0296    bound 0.1713    transfer 0.0025    finalize 0.0050    func 0.2127    
Accumulated time: func 2.6015    prepare 0.1401    bound 2.1671    transfer 0.0351    finalize 0.0362    
all_split False
======================Cut inference begins======================
max lb tensor(0.24507086) min lb tensor(-0.11641312)
Number of Verified Splits: 225 of 638
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 30
#cuts >= 20: 0
BICCOS time: 0.07819104194641113 
BICCOS Cumulative time: 1.0349886417388916
Preprocessing time: 0.025009870529174805 Inference time: 0.0498509407043457 Add cuts time: 0.002726316452026367 Cut analysis time: 0.0006039142608642578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11641 (33), -0.11351 (33), -0.11154 (33), -0.10861 (33), -0.10245 (33), -0.09952 (33), -0.09850 (33), -0.09771 (33), -0.09764 (33), -0.09747 (33), -0.09598 (33), -0.09479 (33), -0.09478 (33), -0.09476 (33), -0.09260 (33), -0.09226 (33), -0.09186 (33), -0.08990 (33), -0.08936 (33), -0.08923 (33), 
Length of domains: 413
Time: pickout 0.0180    decision 0.0311    set_bounds 0.0157    solve 0.2129    add 0.1063    
Accumulated time: pickout 0.0790    decision 0.3168    set_bounds 0.1821    solve 2.6037    add 0.3511    
Current (lb-rhs): -0.11641311645507812
2343 domains visited
Cumulative time: 4.617408514022827

BaB round 17
batch: 413
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 33] [/input, 3243] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-8, 1918] [/input, 3243] [/input-8, 113] [/input, 1959] 
cut re-enabled after branching node selection
0 lb beta sum: 0.35861673951148987, worst -0.10665273666381836
10 lb beta sum: 0.9452177286148071, worst -0.10023538768291473
Time: prepare 0.0384    bound 0.1531    transfer 0.0117    finalize 0.0053    func 0.2139    
Accumulated time: func 2.8155    prepare 0.1787    bound 2.3202    transfer 0.0468    finalize 0.0415    
all_split False
======================Cut inference begins======================
max lb tensor(0.35544944) min lb tensor(-0.10009989)
Number of Verified Splits: 397 of 826
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 30
#cuts >= 20: 0
BICCOS time: 0.11491942405700684 
BICCOS Cumulative time: 1.1499080657958984
Preprocessing time: 0.024910926818847656 Inference time: 0.08405280113220215 Add cuts time: 0.005360603332519531 Cut analysis time: 0.0005950927734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10010 (34), -0.09736 (34), -0.09527 (34), -0.09491 (34), -0.09250 (34), -0.09210 (34), -0.09004 (34), -0.08719 (34), -0.08374 (34), -0.08151 (34), -0.08140 (34), -0.08093 (34), -0.08068 (34), -0.07996 (34), -0.07865 (34), -0.07797 (34), -0.07792 (34), -0.07679 (34), -0.07648 (34), -0.07610 (34), 
Length of domains: 429
Time: pickout 0.0221    decision 0.0334    set_bounds 0.0203    solve 0.2142    add 0.0096    
Accumulated time: pickout 0.1010    decision 0.3501    set_bounds 0.2024    solve 2.8179    add 0.3608    
Current (lb-rhs): -0.10009989142417908
2772 domains visited
Cumulative time: 5.035771131515503

BaB round 18
batch: 429
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 113] [/input-8, 1321] [/input, 1959] [/input-8, 1321] [/input-8, 113] [/input-8, 1321] [/input-8, 1321] [/input, 1959] [/input, 1959] [/input-8, 1321] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0082505941390991, worst -0.0865834653377533
10 lb beta sum: 1.0082505941390991, worst -0.08646044135093689
Time: prepare 0.0406    bound 0.1589    transfer 0.0034    finalize 0.0064    func 0.2160    
Accumulated time: func 3.0314    prepare 0.2196    bound 2.4790    transfer 0.0502    finalize 0.0479    
all_split False
======================Cut inference begins======================
max lb tensor(0.24244809) min lb tensor(-0.08636746)
Number of Verified Splits: 167 of 858
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 31
#cuts >= 20: 0
BICCOS time: 0.06604433059692383 
BICCOS Cumulative time: 1.2159523963928223
Preprocessing time: 0.026368141174316406 Inference time: 0.03683328628540039 Add cuts time: 0.002222299575805664 Cut analysis time: 0.0006206035614013672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08637 (35), -0.08520 (35), -0.08371 (35), -0.08256 (35), -0.08179 (35), -0.08149 (35), -0.08033 (35), -0.07993 (35), -0.07904 (35), -0.07885 (35), -0.07768 (35), -0.07722 (35), -0.07689 (35), -0.07508 (35), -0.07411 (35), -0.07231 (35), -0.07038 (35), -0.06932 (35), -0.06917 (35), -0.06910 (35), 
Length of domains: 691
Time: pickout 0.0124    decision 0.0346    set_bounds 0.0197    solve 0.2162    add 0.0082    
Accumulated time: pickout 0.1135    decision 0.3848    set_bounds 0.2220    solve 3.0340    add 0.3690    
Current (lb-rhs): -0.08636745810508728
3463 domains visited
Cumulative time: 5.395111560821533

BaB round 19
batch: 691
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 553] [/input, 3243] [/input-8, 1321] [/input, 3243] [/input-8, 113] [/input, 3243] [/input-8, 1321] [/input-8, 113] [/input, 3243] [/input, 3243] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08588123321533203
10 lb beta sum: 0.5711315274238586, worst -0.10085467994213104
Time: prepare 0.0349    bound 0.1611    transfer 0.0160    finalize 0.0097    func 0.2307    
Accumulated time: func 3.2621    prepare 0.2547    bound 2.6401    transfer 0.0662    finalize 0.0576    
all_split False
======================Cut inference begins======================
max lb tensor(0.05621162) min lb tensor(-0.07917029)
Number of Verified Splits: 427 of 1382
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 31
#cuts >= 20: 0
BICCOS time: 0.14039015769958496 
BICCOS Cumulative time: 1.3563425540924072
Preprocessing time: 0.04588890075683594 Inference time: 0.08833527565002441 Add cuts time: 0.005493640899658203 Cut analysis time: 0.0006723403930664062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07917 (36), -0.07506 (36), -0.07496 (36), -0.07417 (36), -0.07376 (36), -0.07028 (36), -0.07017 (36), -0.06998 (36), -0.06982 (36), -0.06967 (36), -0.06878 (36), -0.06849 (36), -0.06532 (36), -0.06499 (36), -0.06488 (36), -0.06479 (36), -0.06447 (36), -0.06432 (36), -0.06397 (36), -0.06306 (36), 
Length of domains: 955
Time: pickout 0.0184    decision 0.0465    set_bounds 0.0308    solve 0.2319    add 0.0172    
Accumulated time: pickout 0.1319    decision 0.4313    set_bounds 0.2529    solve 3.2659    add 0.3862    
Current (lb-rhs): -0.07917028665542603
4418 domains visited
Cumulative time: 5.891580820083618

BaB round 20
batch: 955
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2999] [/input-8, 1585] [/input-8, 1585] [/input-8, 1585] [/input-8, 1585] [/input-8, 1585] [/input-8, 1585] [/input-8, 553] [/input-8, 1585] [/input-8, 1585] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7300432324409485, worst -0.07238918542861938
10 lb beta sum: 0.8723940253257751, worst -0.06794548034667969
Time: prepare 0.0991    bound 0.1759    transfer 0.0084    finalize 0.0114    func 0.3084    
Accumulated time: func 3.5705    prepare 0.3542    bound 2.8160    transfer 0.0746    finalize 0.0691    
all_split False
======================Cut inference begins======================
max lb tensor(0.07313919) min lb tensor(-0.06789723)
Number of Verified Splits: 935 of 1910
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 35
#cuts >= 20: 0
BICCOS time: 0.45622968673706055 
BICCOS Cumulative time: 1.8125722408294678
Preprocessing time: 0.06353020668029785 Inference time: 0.38045787811279297 Add cuts time: 0.01129293441772461 Cut analysis time: 0.0009486675262451172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06790 (37), -0.06648 (37), -0.06342 (37), -0.06323 (37), -0.06287 (37), -0.06229 (37), -0.06149 (37), -0.06142 (37), -0.05894 (37), -0.05876 (37), -0.05842 (37), -0.05816 (37), -0.05725 (37), -0.05722 (37), -0.05716 (37), -0.05638 (37), -0.05484 (37), -0.05397 (37), -0.05363 (37), -0.05349 (37), 
Length of domains: 975
Time: pickout 0.0609    decision 0.0712    set_bounds 0.0500    solve 0.3088    add 0.0203    
Accumulated time: pickout 0.1928    decision 0.5024    set_bounds 0.3029    solve 3.5748    add 0.4066    
Current (lb-rhs): -0.06789723038673401
5393 domains visited
Cumulative time: 6.870630741119385

BaB round 21
batch: 975
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 940] [/input-8, 940] [/input-8, 940] [/input-8, 940] [/input-8, 940] [/input-8, 940] [/input-8, 1585] [/input-8, 940] [/input-8, 1585] [/input-8, 940] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07008790969848633
10 lb beta sum: 0.8189889788627625, worst -0.07955700159072876
Time: prepare 0.0513    bound 0.2276    transfer 0.0028    finalize 0.0137    func 0.3082    
Accumulated time: func 3.8787    prepare 0.4057    bound 3.0436    transfer 0.0775    finalize 0.0828    
all_split False
======================Cut inference begins======================
max lb tensor(0.02412331) min lb tensor(-0.05877557)
Number of Verified Splits: 1103 of 1950
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.3299105167388916 
BICCOS Cumulative time: 2.1424827575683594
Preprocessing time: 0.06618881225585938 Inference time: 0.24633312225341797 Add cuts time: 0.016535282135009766 Cut analysis time: 0.0008533000946044922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05878 (38), -0.05744 (38), -0.05650 (38), -0.05518 (38), -0.05397 (38), -0.05221 (38), -0.05208 (38), -0.05182 (38), -0.05168 (38), -0.05143 (38), -0.05139 (38), -0.05071 (38), -0.05051 (38), -0.05012 (38), -0.05010 (38), -0.04989 (38), -0.04741 (38), -0.04706 (38), -0.04660 (38), -0.04658 (38), 
Length of domains: 847
Time: pickout 0.0289    decision 0.0682    set_bounds 0.0543    solve 0.3086    add 0.0119    
Accumulated time: pickout 0.2217    decision 0.5706    set_bounds 0.3572    solve 3.8834    add 0.4184    
Current (lb-rhs): -0.05877557396888733
6240 domains visited
Cumulative time: 7.683123826980591

BaB round 22
batch: 847
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input, 1959] [/input-8, 1910] [/input-8, 302] [/input, 3000] [/input, 2999] [/input-8, 1910] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0591278076171875
10 lb beta sum: 1.0855416059494019, worst -0.04572087526321411
Time: prepare 0.0434    bound 0.2081    transfer 0.0033    finalize 0.0109    func 0.2769    
Accumulated time: func 4.1556    prepare 0.4494    bound 3.2517    transfer 0.0808    finalize 0.0937    
all_split False
======================Cut inference begins======================
max lb tensor(0.25422692) min lb tensor(-0.04566163)
Number of Verified Splits: 1222 of 1694
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 40
#cuts >= 20: 0
BICCOS time: 0.35126399993896484 
BICCOS Cumulative time: 2.493746757507324
Preprocessing time: 0.05820131301879883 Inference time: 0.2752697467803955 Add cuts time: 0.016883373260498047 Cut analysis time: 0.0009095668792724609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04566 (39), -0.04441 (39), -0.04079 (39), -0.04058 (39), -0.03933 (39), -0.03930 (39), -0.03906 (39), -0.03801 (39), -0.03743 (39), -0.03633 (39), -0.03615 (39), -0.03569 (39), -0.03505 (39), -0.03447 (39), -0.03434 (39), -0.03397 (39), -0.03304 (39), -0.03271 (39), -0.03263 (39), -0.03237 (39), 
Length of domains: 472
Time: pickout 0.0227    decision 0.0598    set_bounds 0.0449    solve 0.2774    add 0.0057    
Accumulated time: pickout 0.2444    decision 0.6304    set_bounds 0.4020    solve 4.1608    add 0.4241    
Current (lb-rhs): -0.04566162824630737
6712 domains visited
Cumulative time: 8.456517457962036

BaB round 23
batch: 472
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 553] [/input, 3243] [/input-8, 553] [/input-8, 553] [/input, 3016] [/input-8, 553] [/input, 3243] [/input, 3016] [/input-8, 553] [/input, 3243] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.052233219146728516
10 lb beta sum: 1.5249541997909546, worst -0.028919339179992676
Time: prepare 0.0245    bound 0.1722    transfer 0.0034    finalize 0.0073    func 0.2140    
Accumulated time: func 4.3696    prepare 0.4742    bound 3.4239    transfer 0.0842    finalize 0.1010    
all_split False
======================Cut inference begins======================
max lb tensor(0.49456275) min lb tensor(-0.02881694)
Number of Verified Splits: 801 of 944
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 43
#cuts >= 20: 0
BICCOS time: 0.35298657417297363 
BICCOS Cumulative time: 2.846733331680298
Preprocessing time: 0.03289794921875 Inference time: 0.30948448181152344 Add cuts time: 0.009638786315917969 Cut analysis time: 0.0009653568267822266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02882 (40), -0.02753 (40), -0.02446 (40), -0.02415 (40), -0.02400 (40), -0.02376 (40), -0.02320 (40), -0.02283 (40), -0.02250 (40), -0.02223 (40), -0.02143 (40), -0.02010 (40), -0.01981 (40), -0.01967 (40), -0.01943 (40), -0.01926 (40), -0.01923 (40), -0.01885 (40), -0.01852 (40), -0.01816 (40), 
Length of domains: 143
Time: pickout 0.0231    decision 0.0387    set_bounds 0.0231    solve 0.2143    add 0.0035    
Accumulated time: pickout 0.2675    decision 0.6691    set_bounds 0.4251    solve 4.3751    add 0.4276    
Current (lb-rhs): -0.028816938400268555
6855 domains visited
Cumulative time: 9.121312379837036

BaB round 24
batch: 143
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1614] [/input-8, 1614] [/input-8, 1614] [/input-8, 553] [/input-8, 553] [/input-8, 553] [/input-8, 553] [/input-8, 553] [/input-8, 553] [/input-8, 553] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.046672821044921875
10 lb beta sum: 1.9296138286590576, worst -0.007823944091796875
Time: prepare 0.0076    bound 0.1667    transfer 0.0017    finalize 0.0019    func 0.1799    
Accumulated time: func 4.5495    prepare 0.4820    bound 3.5906    transfer 0.0859    finalize 0.1029    
all_split False
======================Cut inference begins======================
max lb tensor(0.27646232) min lb tensor(-0.00769043)
Number of Verified Splits: 284 of 286
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 44.
#cuts 1-3: 44
#cuts >= 20: 0
BICCOS time: 0.07934927940368652 
BICCOS Cumulative time: 2.9260826110839844
Preprocessing time: 0.00946187973022461 Inference time: 0.06522893905639648 Add cuts time: 0.0031540393829345703 Cut analysis time: 0.0015044212341308594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00769 (41), -0.00257 (41), 
Length of domains: 2
Time: pickout 0.0056    decision 0.0213    set_bounds 0.0072    solve 0.1800    add 0.0009    
Accumulated time: pickout 0.2732    decision 0.6904    set_bounds 0.4323    solve 4.5551    add 0.4285    
Current (lb-rhs): -0.0076904296875
6857 domains visited
Cumulative time: 9.418201923370361

BaB round 25
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3000] [/input-8, 329] 
split level 1: [/input-8, 329] [/input, 3000] 
split level 2: [/input-8, 1577] [/input-8, 1577] 
split level 3: [/input-8, 553] [/input-8, 553] 
split level 4: [/input-8, 501] [/input-8, 501] 
split level 5: [/input, 1175] [/input, 1175] 
split level 6: [/input-8, 1078] [/input-8, 1078] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.002532958984375

all verified at 0th iter
Time: prepare 0.0066    bound 0.0063    transfer 0.0013    finalize 0.0019    func 0.0178    
Accumulated time: func 4.5673    prepare 0.4890    bound 3.5969    transfer 0.0872    finalize 0.1049    
all_split False
======================Cut inference begins======================
max lb tensor(0.06938934) min lb tensor(0.00253296)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 44.
#cuts 1-3: 44
#cuts >= 20: 0
BICCOS time: 0.008078813552856445 
BICCOS Cumulative time: 2.934161424636841
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0016    decision 0.0231    set_bounds 0.0200    solve 0.0179    add 0.0001    
Accumulated time: pickout 0.2747    decision 0.7135    set_bounds 0.4523    solve 4.5730    add 0.4286    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6857 domains visited
Cumulative time: 9.490352869033813

Result: safe in 12.1439 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 84, vnnlib ID: 84 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.41210556, -37.28645706, -27.95443916, -30.44677925, -27.00940323,
         -30.16164970, -29.24836731, -33.16044998, -36.04604721, -36.50989532]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [695]; unstable size 695; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 233, 1, 695] with unstable size 232 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 695] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 695] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [232]; unstable size 232; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 232] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 232] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.83732486,  7.51818275, -1.36035037,  1.77063394,  1.41688514,
         -0.21173120,  3.50002551,  6.22788000,  6.27027416]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.41210556, -37.28645706, -27.95443916, -30.44677925, -27.00940323,
         -30.16164970, -29.24836731, -33.16044998, -36.04604721, -36.50989532]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.87599564, -36.84866714, -27.27471733, -30.44716835, -27.45125198,
          -30.28242111, -28.97253990, -33.44656754, -35.74723434, -36.14959335],
         [-32.87599564, -36.84866714, -27.27471733, -30.44716835, -27.45125198,
          -30.28242111, -28.97253990, -33.44656754, -35.74723434, -36.14959335]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.17653465,  1.52128792]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0075 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0763 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 85, vnnlib ID: 85 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-38.76624298, -35.00866318, -41.37691116, -42.27718353, -42.00160599,
         -43.47107697, -42.36118698, -43.05453873, -36.44917297, -38.64316177]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [674]; unstable size 674; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 290, 1, 674] with unstable size 289 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 43, 1, 674] with unstable size 42 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 674] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [289]; unstable size 289; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 43, 1, 289] with unstable size 42 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 289] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [42]; unstable size 42; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 42] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.39019632,  1.39258862,  2.29017830,  1.84568405,  3.47064590,
          2.28792286,  2.74921799, -2.44270134,  0.33984041]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-38.76624298, -35.00866318, -41.37691116, -42.27718353, -42.00160599,
         -43.47107697, -42.36118698, -43.05453873, -36.44917297, -38.64316177]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-36.18437958, -33.82366180, -38.88534164, -39.82645798, -39.44316483,
          -41.05941772, -40.04806137, -40.75592041, -33.52556610, -36.66168213],
         [-36.18437958, -33.82366180, -38.88534164, -39.82645798, -39.44316483,
          -41.05941772, -40.04806137, -40.75592041, -33.52556610, -36.66168213]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.36071777, -0.29809570]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0806 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 86, vnnlib ID: 86 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-41.25431061, -45.08932114, -36.02292252, -40.55994797, -39.99483490,
         -39.63467407, -41.70432281, -39.90495300, -43.84503174, -46.13386154]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [979]; unstable size 979; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 373, 1, 979] with unstable size 372 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 31, 1, 979] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 979] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [372]; unstable size 372; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 31, 1, 372] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 372] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.65616393, 4.73150730, 1.87990117, 2.17041969, 0.97381765, 2.90859461,
         1.62323356, 4.01307678, 5.71303368]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0856 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 87, vnnlib ID: 87 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.35586166, -30.72427559, -26.04500389, -25.61261177, -22.86525917,
         -25.90259743, -24.48366547, -24.74043655, -31.80926132, -29.12620926]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [628]; unstable size 628; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 309, 1, 628] with unstable size 308 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 40, 1, 628] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 628] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [308]; unstable size 308; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 40, 1, 308] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 308] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [39]; unstable size 39; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.65461659,  0.94383526, -2.34996152, -1.70691705, -4.38046837,
         -1.87527835, -3.96770668,  3.12040281, -0.21959877]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.35586166, -30.72427559, -26.04500389, -25.61261177, -22.86525917,
         -25.90259743, -24.48366547, -24.74043655, -31.80926132, -29.12620926]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-30.35585976, -30.72427559, -26.04500389, -25.61261177, -22.86525917,
          -25.90259552, -24.48366547, -24.74043655, -31.80926132, -29.12620926],
         [-30.35585976, -30.72427559, -26.04500389, -25.61261177, -22.86525917,
          -25.90259552, -24.48366547, -24.74043655, -31.80926132, -29.12620926]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.30456734,  0.87217522, -1.87517738,  1.16215897, -0.25677109,
           4.38577271]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]]]],
       device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0808 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 88, vnnlib ID: 88 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.51157761, -32.08541489, -26.77749443, -26.32837296, -26.67296600,
         -26.75576210, -27.12470436, -25.63872910, -31.64771080, -27.40040207]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [518]; unstable size 518; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 233, 1, 518] with unstable size 232 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 31, 1, 518] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 518] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [232]; unstable size 232; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 31, 1, 232] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 232] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.66707230,  2.55576038, -2.24228668, -1.94360054, -2.11868262,
         -1.64313293, -3.53130102,  2.02613115, -2.48513246]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.51157761, -32.08541489, -26.77749443, -26.32837296, -26.67296600,
         -26.75576210, -27.12470436, -25.63872910, -31.64771080, -27.40040207]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.51157761, -32.08541870, -26.77749252, -26.32837486, -26.67296410,
          -26.75576401, -27.12470436, -25.63872910, -31.64770889, -27.40040207],
         [-29.51157761, -32.08541870, -26.77749252, -26.32837486, -26.67296410,
          -26.75576401, -27.12470436, -25.63872910, -31.64770889, -27.40040207]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.44911766, -0.10452843, -0.02172852,  0.34721184, -1.13876343,
           0.62290955]]], device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0866 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 89, vnnlib ID: 89 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-38.62920761, -30.71543503, -40.69200134, -40.47238922, -42.51151276,
         -42.39914703, -40.84763336, -43.40367508, -34.22790146, -34.64695358]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [664]; unstable size 664; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 306, 1, 664] with unstable size 305 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 39, 1, 664] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 664] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [305]; unstable size 305; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 39, 1, 305] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 305] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [38]; unstable size 38; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.31155157, 5.96087551, 5.70030499, 7.45303535, 7.36304379, 6.36304951,
         7.99018335, 0.87529325, 1.38189340]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0646 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 90, vnnlib ID: 90 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.14486885, -24.80652809, -21.72277641, -21.12367439, -22.14553070,
         -22.37088203, -23.00985336, -24.18460464, -26.87837410, -24.65296173]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [872]; unstable size 872; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 321, 1, 872] with unstable size 320 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 49, 1, 872] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 872] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [320]; unstable size 320; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 49, 1, 320] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 320] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [48]; unstable size 48; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 48] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.90862727, -2.91914368, -4.71393442, -4.29158926, -3.75246239,
         -3.80552793, -2.51523376, -0.89180648, -3.42607641]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.14486885, -24.80652809, -21.72277641, -21.12367439, -22.14553070,
         -22.37088203, -23.00985336, -24.18460464, -26.87837410, -24.65296173]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.14486694, -24.80652809, -21.72277641, -21.12367439, -22.14553070,
          -22.37088203, -23.00985336, -24.18460464, -26.87837410, -24.65296173],
         [-23.14486694, -24.80652809, -21.72277641, -21.12367439, -22.14553070,
          -22.37088203, -23.00985336, -24.18460464, -26.87837410, -24.65296173]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.13501358,  1.79667473, -1.28707695, -1.88617897, -0.86432266,
          -0.63897133,  1.17475128,  3.86852074,  1.64310837]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         ...,


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0915 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 91, vnnlib ID: 91 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-51.41250992, -44.86040115, -53.89045334, -52.96800613, -52.20950317,
         -53.86833954, -55.18876648, -52.07027054, -49.86124802, -45.36414719]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [798]; unstable size 798; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 304, 1, 798] with unstable size 303 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 798] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 798] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [303]; unstable size 303; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 303] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 303] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.11116648,  4.22480965,  3.52828598,  2.12404251,  4.21812439,
          5.79192638,  1.59538507,  1.67313337, -1.90433085]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-51.41250992, -44.86040115, -53.89045334, -52.96800613, -52.20950317,
         -53.86833954, -55.18876648, -52.07027054, -49.86124802, -45.36414719]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-50.29217148, -44.73241806, -52.84465408, -51.76668167, -51.08161926,
          -52.65257263, -54.16613770, -50.75088501, -49.00796890, -44.21358109]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.51883698]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0069 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0738 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 92, vnnlib ID: 92 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-44.33576965, -45.67803574, -40.71329117, -37.69720459, -39.87295914,
         -37.48155594, -41.30473709, -41.11042404, -47.28036118, -43.57460403]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [801]; unstable size 801; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 298, 1, 801] with unstable size 297 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 801] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 801] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [297]; unstable size 297; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 297] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 297] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.83936644,  4.40608883,  0.61459899, -0.86279190, -0.18131971,
          1.35141265,  1.01923060,  6.86054039,  2.84503269]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-44.33576965, -45.67803574, -40.71329117, -37.69720459, -39.87295914,
         -37.48155594, -41.30473709, -41.11042404, -47.28036118, -43.57460403]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-42.47385025, -43.75145721, -39.02502823, -35.92281723, -37.90603256,
          -36.21720123, -39.37848663, -39.42618942, -45.51581192, -41.80307007],
         [-42.47385025, -43.75145721, -39.02502823, -35.92281723, -37.90603256,
          -36.21720123, -39.37848663, -39.42618942, -45.51581192, -41.80307007]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.29438400,  1.68883133]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0070 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0634 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 93, vnnlib ID: 93 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.82589722, -27.46426201, -33.36173248, -33.62971497, -32.90354538,
         -34.12127304, -33.54310226, -34.00815964, -28.69910431, -28.23853111]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [827]; unstable size 827; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 325, 1, 827] with unstable size 324 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 42, 1, 827] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 827] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [324]; unstable size 324; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 42, 1, 324] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 324] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [41]; unstable size 41; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.26359749,  1.49928045,  2.08831882,  1.33030939,  2.30830717,
          2.14239788,  1.95643520, -1.85545754, -1.27350020]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.82589722, -27.46426201, -33.36173248, -33.62971497, -32.90354538,
         -34.12127304, -33.54310226, -34.00815964, -28.69910431, -28.23853111]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.99513054, -27.37360954, -32.46866608, -32.65422821, -31.85033226,
          -33.12732315, -32.77196884, -32.74538803, -28.06830025, -27.23347092],
         [-31.99513054, -27.37360954, -32.46866608, -32.65422821, -31.85033226,
          -33.12732315, -32.77196884, -32.74538803, -28.06830025, -27.23347092]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.69469070, -0.14013863]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0647 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 94, vnnlib ID: 94 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-42.45281982, -51.03033066, -41.97061157, -46.14657593, -44.75600433,
         -45.62915039, -45.87583542, -48.22742081, -42.85272598, -49.90663910]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1237]; unstable size 1237; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 243, 1, 1237] with unstable size 242 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 1237] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1237] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [242]; unstable size 242; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 242] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 242] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.12455344,  6.80513811,  2.44745898,  1.12705564,  1.76773667,
          1.92850983,  4.04828596, -1.70800209,  5.49722004]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-42.45281982, -51.03033066, -41.97061157, -46.14657593, -44.75600433,
         -45.62915039, -45.87583542, -48.22742081, -42.85272598, -49.90663910]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-42.20935822, -50.83440781, -42.26165771, -46.13497543, -44.81517029,
          -45.64966583, -46.00559616, -48.18552017, -42.54565430, -49.70160294],
         [-42.20935822, -50.83440781, -42.26165771, -46.13497543, -44.81517029,
          -45.64966583, -46.00559616, -48.18552017, -42.54565430, -49.70160294]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.05229950,  0.28399658]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0061 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0756 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 95, vnnlib ID: 95 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.56441498, -31.16183853, -35.50737000, -33.47336578, -35.62397385,
         -34.04776382, -34.84613419, -37.07870102, -36.44895554, -33.38412476]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [587]; unstable size 587; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 274, 1, 587] with unstable size 273 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 587] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 587] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [273]; unstable size 273; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 273] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 273] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.95700157,  0.47925568, -1.00376463,  0.28357363, -0.89343834,
          0.33569574,  1.63929272,  2.29997706, -0.06593919]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.56441498, -31.16183853, -35.50737000, -33.47336578, -35.62397385,
         -34.04776382, -34.84613419, -37.07870102, -36.44895554, -33.38412476]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-30.97880936, -31.18569946, -33.91728210, -32.19257736, -34.10403824,
          -32.78351974, -33.78791428, -35.62295532, -35.63125610, -32.83812332],
         [-30.97880936, -31.18569946, -33.91728210, -32.19257736, -34.10403824,
          -32.78351974, -33.78791428, -35.62295532, -35.63125610, -32.83812332]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20689011,  1.00687790,  1.59782028,  1.65242386]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0538 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 96, vnnlib ID: 96 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.00698471, -39.62082672, -31.11894798, -33.77096558, -32.40132904,
         -32.74819565, -31.16730118, -36.14912033, -37.99450684, -39.60052490]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [594]; unstable size 594; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 296, 1, 594] with unstable size 295 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 40, 1, 594] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 594] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [295]; unstable size 295; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 40, 1, 295] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 295] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [39]; unstable size 39; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.57019734,  4.40480757, -3.00945234,  0.39657903, -1.09159613,
         -1.31181991,  0.89029980,  3.49473906,  4.11238766]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.00698471, -39.62082672, -31.11894798, -33.77096558, -32.40132904,
         -32.74819565, -31.16730118, -36.14912033, -37.99450684, -39.60052490]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.00698471, -39.62082291, -31.11894798, -33.77096939, -32.40132523,
          -32.74819183, -31.16729736, -36.14912415, -37.99450302, -39.60052490],
         [-35.00698471, -39.62082291, -31.11894798, -33.77096939, -32.40132523,
          -32.74819183, -31.16729736, -36.14912415, -37.99450302, -39.60052490]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.04834938,  1.23402786,  1.58089447]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0764 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 97, vnnlib ID: 97 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.11771202, -30.71664810, -21.69390106, -23.92553711, -23.12236595,
         -24.98349190, -23.88631058, -25.68055344, -27.27940369, -29.12014580]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1224]; unstable size 1224; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 456, 1, 1224] with unstable size 455 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 54, 1, 1224] with unstable size 53 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1224] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [455]; unstable size 455; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 54, 1, 455] with unstable size 53 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 455] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [53]; unstable size 53; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 53] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.08119178,  4.20161343, -1.43306327, -2.20009828, -1.21454310,
         -1.63405967, -0.57845974, -0.04453349,  1.97005892]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.11771202, -30.71664810, -21.69390106, -23.92553711, -23.12236595,
         -24.98349190, -23.88631058, -25.68055344, -27.27940369, -29.12014580]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.99it/s]100%|██████████| 1/1 [00:00<00:00,  7.98it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.13830566, -30.57012749, -22.16102409, -23.84092903, -22.50967598,
          -24.91348457, -23.71074486, -25.49791718, -26.99574471, -28.86850739],
         [-26.13830566, -30.57012749, -22.16102409, -23.84092903, -22.50967598,
          -24.91348457, -23.71074486, -25.49791718, -26.99574471, -28.86850739]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.67990494, 0.34865189, 2.75246048, 1.54972076, 3.33689308,
          4.83472061]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1284 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 3.55228328704834
alpha/beta optimization time: 1.3231921195983887
initial alpha-crown bounds: tensor([[ 0.47535282,  4.72202253, -1.01579487, -1.70770764, -0.67309326,
         -1.31468451, -0.03361821,  0.51524580,  2.58456087]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 5 ; Worst class: (+ rhs) -1.7077076435089111
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.49595379829407
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.4959056377411
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.49587488174438
Verifying property 2 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.01579487]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.11771202, -30.71664810, -21.69390106, -23.92553711, -23.12236595,
        -24.98349190, -23.88631058, -25.68055344, -27.27940369, -29.12014580],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.01579487]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1224
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 443
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1720
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010776519775390625
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 33] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 9] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 0] 
split level 5: [/input-12, 82] 
split level 6: [/input-12, 85] 
split level 7: [/input-12, 94] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0828559398651123
10 lb beta sum: 0.0, worst -0.0793004035949707
Time: prepare 0.0019    bound 0.1014    transfer 0.0015    finalize 0.0021    func 0.1088    
Accumulated time: func 0.1088    prepare 0.0023    bound 0.1014    transfer 0.0015    finalize 0.0021    
all_split False
======================Cut inference begins======================
max lb tensor(0.82686210) min lb tensor(-0.07796597)
Number of Verified Splits: 248 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0157880783081055
10 lb beta sum: 0.0, worst -1.0157967805862427
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 2
#cuts 4-6: 3
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.21750974655151367 
BICCOS Cumulative time: 0.21750974655151367
Preprocessing time: 0.007170677185058594 Inference time: 0.20605087280273438 Add cuts time: 0.0033752918243408203 Cut analysis time: 0.0009129047393798828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07797 (8), -0.07562 (8), -0.05606 (8), -0.03887 (8), -0.02039 (8), -0.01477 (8), -0.01334 (8), -0.00059 (8), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0164    solve 0.1088    add 0.0461    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0164    solve 0.1088    add 0.0461    
Current (lb-rhs): -0.07796597480773926
8 domains visited
Cumulative time: 0.4246034622192383

BaB round 2
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 65] [/input-12, 24] [/input-12, 65] [/input-12, 24] [/input-12, 24] [/input-12, 65] [/input-12, 65] [/input-12, 65] 
split level 1: [/input-12, 24] [/input-12, 65] [/input-12, 24] [/input-12, 65] [/input-12, 65] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 2: [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] 
split level 3: [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] 
split level 4: [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.07298517227172852

all verified at 0th iter
Time: prepare 0.0039    bound 0.0058    transfer 0.0005    finalize 0.0015    func 0.0134    
Accumulated time: func 0.1222    prepare 0.0064    bound 0.1072    transfer 0.0020    finalize 0.0036    
all_split False
======================Cut inference begins======================
max lb tensor(1.31528199) min lb tensor(0.07298517)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 14.
#cuts 1-3: 2
#cuts 4-6: 3
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.007807493209838867 
BICCOS Cumulative time: 0.22531723976135254
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0164    set_bounds 0.0144    solve 0.0135    add 0.0003    
Accumulated time: pickout 0.0014    decision 0.0400    set_bounds 0.0308    solve 0.1223    add 0.0464    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
8 domains visited
Cumulative time: 0.4794647693634033


Properties batch 3, size 1
Remaining timeout: 197.7878656387329
Verifying property 3 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.70770764]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.11771202, -30.71664810, -21.69390106, -23.92553711, -23.12236595,
        -24.98349190, -23.88631058, -25.68055344, -27.27940369, -29.12014580],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.70770764]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1224
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 443
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1720
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010347366333007812
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 88] 
split level 2: [/input-12, 95] 
split level 3: [/input-12, 71] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 78] 
split level 6: [/input-12, 36] 
split level 7: [/input-12, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8791348338127136
10 lb beta sum: 0.0, worst -0.8758053779602051
Time: prepare 0.0019    bound 0.1015    transfer 0.0006    finalize 0.0016    func 0.1074    
Accumulated time: func 0.1074    prepare 0.0024    bound 0.1015    transfer 0.0006    finalize 0.0016    
all_split False
======================Cut inference begins======================
max lb tensor(1.43743730) min lb tensor(-0.87486982)
Number of Verified Splits: 224 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.707700490951538
10 lb beta sum: 0.0, worst -1.7077043056488037
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 3
#cuts 4-6: 11
#cuts 7-9: 17
#cuts >= 20: 0
BICCOS time: 0.20666193962097168 
BICCOS Cumulative time: 0.20666193962097168
Preprocessing time: 0.006989240646362305 Inference time: 0.19344472885131836 Add cuts time: 0.004542112350463867 Cut analysis time: 0.0016858577728271484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.87487 (8), -0.79485 (8), -0.66416 (8), -0.63670 (8), -0.63594 (8), -0.59580 (8), -0.54214 (8), -0.52312 (8), -0.46255 (8), -0.44568 (8), -0.41995 (8), -0.41705 (8), -0.35309 (8), -0.34797 (8), -0.34342 (8), -0.33948 (8), -0.32977 (8), -0.32469 (8), -0.29796 (8), -0.27480 (8), 
Length of domains: 32
Time: pickout 0.0004    decision 0.0264    set_bounds 0.0164    solve 0.1075    add 0.0261    
Accumulated time: pickout 0.0004    decision 0.0264    set_bounds 0.0164    solve 0.1075    add 0.0261    
Current (lb-rhs): -0.8748698234558105
32 domains visited
Cumulative time: 0.38936328887939453

BaB round 2
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] 
split level 1: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
split level 2: [/input-8, 1306] [/input-12, 8] [/input-12, 8] [/input-8, 1507] [/input-12, 8] [/input-8, 1507] [/input-12, 8] [/input-8, 1050] [/input-12, 8] [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7581638097763062
10 lb beta sum: 0.0, worst -0.7567664980888367
Time: prepare 0.0041    bound 0.1233    transfer 0.0005    finalize 0.0015    func 0.1310    
Accumulated time: func 0.2385    prepare 0.0066    bound 0.2248    transfer 0.0011    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.12276006) min lb tensor(-0.75632107)
Number of Verified Splits: 59 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.1837470531463623
10 lb beta sum: 0.34132418036460876, worst -0.736690878868103
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 3
#cuts 4-6: 11
#cuts 7-9: 19
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.18399310111999512 
BICCOS Cumulative time: 0.3906550407409668
Preprocessing time: 0.007493734359741211 Inference time: 0.17144203186035156 Add cuts time: 0.0032002925872802734 Cut analysis time: 0.0018570423126220703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.75632 (11), -0.74984 (11), -0.73931 (11), -0.73455 (11), -0.72982 (11), -0.72645 (11), -0.71687 (11), -0.71223 (11), -0.67019 (11), -0.66774 (11), -0.66466 (11), -0.66277 (11), -0.65008 (11), -0.64878 (11), -0.64523 (11), -0.64432 (11), -0.53896 (11), -0.53798 (11), -0.53326 (11), -0.53195 (11), 
Length of domains: 197
Time: pickout 0.0013    decision 0.0138    set_bounds 0.0101    solve 0.1311    add 0.0030    
Accumulated time: pickout 0.0017    decision 0.0402    set_bounds 0.0265    solve 0.2386    add 0.0291    
Current (lb-rhs): -0.7563210725784302
229 domains visited
Cumulative time: 0.7333440780639648

BaB round 3
batch: 197
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 40] [/input-12, 94] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 94] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7399810552597046
10 lb beta sum: 0.0, worst -0.7395012974739075
Time: prepare 0.0063    bound 0.1333    transfer 0.0023    finalize 0.0029    func 0.1475    
Accumulated time: func 0.3860    prepare 0.0131    bound 0.3581    transfer 0.0034    finalize 0.0059    
all_split False
======================Cut inference begins======================
max lb tensor(0.47184896) min lb tensor(-0.73928076)
Number of Verified Splits: 199 of 394
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 6
#cuts 4-6: 17
#cuts 7-9: 11
#cuts >= 20: 0
BICCOS time: 0.03983330726623535 
BICCOS Cumulative time: 0.43048834800720215
Preprocessing time: 0.011890649795532227 Inference time: 0.021857738494873047 Add cuts time: 0.004588603973388672 Cut analysis time: 0.0014963150024414062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.73928 (12), -0.73259 (12), -0.72196 (12), -0.71744 (12), -0.71247 (12), -0.70905 (12), -0.69899 (12), -0.69399 (12), -0.65335 (12), -0.65121 (12), -0.64801 (12), -0.64591 (12), -0.63339 (12), -0.63224 (12), -0.62876 (12), -0.62764 (12), -0.52080 (12), -0.51963 (12), -0.51517 (12), -0.51397 (12), 
Length of domains: 195
Time: pickout 0.0040    decision 0.0243    set_bounds 0.0110    solve 0.1476    add 0.0039    
Accumulated time: pickout 0.0057    decision 0.0645    set_bounds 0.0376    solve 0.3862    add 0.0330    
Current (lb-rhs): -0.7392807602882385
424 domains visited
Cumulative time: 0.9654092788696289

BaB round 4
batch: 195
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 40] [/input-12, 8] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 40] [/input-12, 94] [/input-12, 94] [/input-12, 40] [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7282715439796448
10 lb beta sum: 0.03360767289996147, worst -0.7280110716819763
Time: prepare 0.0161    bound 0.1304    transfer 0.0015    finalize 0.0031    func 0.1540    
Accumulated time: func 0.5400    prepare 0.0294    bound 0.4885    transfer 0.0049    finalize 0.0091    
all_split False
======================Cut inference begins======================
max lb tensor(0.71257609) min lb tensor(-0.72784638)
Number of Verified Splits: 229 of 390
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 10
#cuts 4-6: 15
#cuts 7-9: 11
#cuts >= 20: 0
BICCOS time: 0.04543805122375488 
BICCOS Cumulative time: 0.47592639923095703
Preprocessing time: 0.012662887573242188 Inference time: 0.026779890060424805 Add cuts time: 0.004388570785522461 Cut analysis time: 0.0016067028045654297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.72785 (13), -0.72095 (13), -0.71034 (13), -0.70633 (13), -0.70098 (13), -0.69711 (13), -0.68745 (13), -0.68342 (13), -0.64274 (13), -0.64004 (13), -0.63747 (13), -0.63507 (13), -0.62228 (13), -0.62125 (13), -0.61716 (13), -0.61639 (13), -0.51116 (13), -0.50796 (13), -0.50362 (13), -0.50201 (13), 
Length of domains: 161
Time: pickout 0.0027    decision 0.0228    set_bounds 0.0116    solve 0.1542    add 0.0034    
Accumulated time: pickout 0.0085    decision 0.0873    set_bounds 0.0492    solve 0.5404    add 0.0363    
Current (lb-rhs): -0.7278463840484619
585 domains visited
Cumulative time: 1.2069709300994873

BaB round 5
batch: 161
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 94] [/input-12, 94] [/input-12, 81] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7171921730041504
10 lb beta sum: 0.22051399946212769, worst -0.716926097869873
Time: prepare 0.0050    bound 0.1490    transfer 0.0016    finalize 0.0018    func 0.1595    
Accumulated time: func 0.6995    prepare 0.0346    bound 0.6375    transfer 0.0065    finalize 0.0109    
all_split False
======================Cut inference begins======================
max lb tensor(0.69252044) min lb tensor(-0.71679264)
Number of Verified Splits: 92 of 322
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 10
#cuts 4-6: 17
#cuts 7-9: 11
#cuts >= 20: 0
BICCOS time: 0.025354623794555664 
BICCOS Cumulative time: 0.5012810230255127
Preprocessing time: 0.009583234786987305 Inference time: 0.010470867156982422 Add cuts time: 0.0036983489990234375 Cut analysis time: 0.0016021728515625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.71679 (14), -0.71007 (14), -0.69965 (14), -0.69487 (14), -0.68608 (14), -0.67619 (14), -0.67202 (14), -0.67131 (14), -0.61192 (14), -0.60918 (14), -0.60608 (14), -0.60365 (14), -0.59125 (14), -0.58985 (14), -0.58613 (14), -0.58489 (14), -0.50712 (14), -0.49980 (14), -0.49797 (14), -0.49386 (14), 
Length of domains: 230
Time: pickout 0.0029    decision 0.0202    set_bounds 0.0094    solve 0.1596    add 0.0034    
Accumulated time: pickout 0.0113    decision 0.1076    set_bounds 0.0586    solve 0.7000    add 0.0397    
Current (lb-rhs): -0.716792643070221
815 domains visited
Cumulative time: 1.4285943508148193

BaB round 6
batch: 230
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] [/input-8, 468] [/input-8, 114] [/input-12, 29] [/input-8, 1507] [/input-12, 29] [/input-8, 114] [/input-8, 114] [/input-12, 29] [/input-8, 114] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6978762745857239
10 lb beta sum: 0.16964159905910492, worst -0.6975803375244141
Time: prepare 0.0083    bound 0.1503    transfer 0.0011    finalize 0.0026    func 0.1654    
Accumulated time: func 0.8649    prepare 0.0432    bound 0.7879    transfer 0.0076    finalize 0.0135    
all_split False
======================Cut inference begins======================
max lb tensor(0.82629132) min lb tensor(-0.69746023)
Number of Verified Splits: 70 of 460
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 48.
#cuts 1-3: 10
#cuts 4-6: 26
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 0.02808356285095215 
BICCOS Cumulative time: 0.5293645858764648
Preprocessing time: 0.0135345458984375 Inference time: 0.008379936218261719 Add cuts time: 0.0041697025299072266 Cut analysis time: 0.001999378204345703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.69746 (15), -0.69068 (15), -0.68007 (15), -0.67551 (15), -0.67091 (15), -0.66737 (15), -0.65768 (15), -0.65243 (15), -0.61169 (15), -0.60898 (15), -0.60608 (15), -0.60347 (15), -0.59021 (15), -0.58952 (15), -0.58543 (15), -0.58489 (15), -0.54982 (15), -0.54829 (15), -0.54579 (15), -0.54391 (15), 
Length of domains: 390
Time: pickout 0.0040    decision 0.0241    set_bounds 0.0095    solve 0.1655    add 0.0065    
Accumulated time: pickout 0.0154    decision 0.1317    set_bounds 0.0681    solve 0.8655    add 0.0462    
Current (lb-rhs): -0.6974602341651917
1205 domains visited
Cumulative time: 1.6672797203063965

BaB round 7
batch: 390
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 286] [/input-8, 286] [/input-12, 29] [/input-8, 114] [/input-8, 1507] [/input-8, 1507] [/input-8, 1507] [/input-8, 997] [/input-8, 286] [/input-8, 114] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6909574866294861
10 lb beta sum: 0.13473616540431976, worst -0.6908084154129028
Time: prepare 0.0157    bound 0.1497    transfer 0.0077    finalize 0.0046    func 0.1829    
Accumulated time: func 1.0478    prepare 0.0591    bound 0.9375    transfer 0.0154    finalize 0.0182    
all_split False
======================Cut inference begins======================
max lb tensor(0.79555821) min lb tensor(-0.69074261)
Number of Verified Splits: 142 of 780
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 51.
#cuts 1-3: 10
#cuts 4-6: 32
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.0504450798034668 
BICCOS Cumulative time: 0.5798096656799316
Preprocessing time: 0.023554325103759766 Inference time: 0.019843578338623047 Add cuts time: 0.004946470260620117 Cut analysis time: 0.002100706100463867
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.69074 (16), -0.68405 (16), -0.66960 (16), -0.66525 (16), -0.66427 (16), -0.66069 (16), -0.64827 (16), -0.64822 (16), -0.64400 (16), -0.64180 (16), -0.63594 (16), -0.62974 (16), -0.61952 (16), -0.61729 (16), -0.60613 (16), -0.60340 (16), -0.59565 (16), -0.59298 (16), -0.58530 (16), -0.58459 (16), 
Length of domains: 638
Time: pickout 0.0077    decision 0.0371    set_bounds 0.0224    solve 0.1831    add 0.0032    
Accumulated time: pickout 0.0230    decision 0.1688    set_bounds 0.0905    solve 1.0485    add 0.0494    
Current (lb-rhs): -0.6907426118850708
1843 domains visited
Cumulative time: 1.9727602005004883

BaB round 8
batch: 638
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1515] [/input-12, 29] [/input-12, 29] [/input-8, 1483] [/input-8, 286] [/input-8, 1515] [/input-8, 1130] [/input-12, 29] [/input-8, 286] [/input-8, 2001] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.681549608707428
10 lb beta sum: 0.11642660200595856, worst -0.6814440488815308
Time: prepare 0.0256    bound 0.1552    transfer 0.0057    finalize 0.0069    func 0.2016    
Accumulated time: func 1.2494    prepare 0.0850    bound 1.0927    transfer 0.0211    finalize 0.0251    
all_split False
======================Cut inference begins======================
max lb tensor(0.90769607) min lb tensor(-0.68135047)
Number of Verified Splits: 201 of 1276
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 11
#cuts 4-6: 17
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.07567596435546875 
BICCOS Cumulative time: 0.6554856300354004
Preprocessing time: 0.04162287712097168 Inference time: 0.02702641487121582 Add cuts time: 0.005341768264770508 Cut analysis time: 0.0016849040985107422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.68135 (17), -0.67409 (17), -0.67051 (17), -0.66318 (17), -0.65878 (17), -0.65459 (17), -0.65106 (17), -0.64289 (17), -0.64218 (17), -0.63922 (17), -0.63867 (17), -0.63566 (17), -0.63369 (17), -0.63149 (17), -0.62835 (17), -0.62798 (17), -0.62766 (17), -0.62367 (17), -0.60899 (17), -0.60685 (17), 
Length of domains: 1075
Time: pickout 0.0106    decision 0.0481    set_bounds 0.0335    solve 0.3639    add 0.0090    
Accumulated time: pickout 0.0336    decision 0.2169    set_bounds 0.1240    solve 1.4124    add 0.0584    
Current (lb-rhs): -0.6813504695892334
2918 domains visited
Cumulative time: 2.5174560546875

BaB round 9
batch: 1075
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 114] [/input-12, 29] [/input-8, 1523] [/input-8, 286] [/input-8, 286] [/input-8, 1515] [/input-8, 1306] [/input-8, 1523] [/input-8, 1453] [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6713668704032898
10 lb beta sum: 0.25863951444625854, worst -0.6712367534637451
Time: prepare 0.0438    bound 0.1926    transfer 0.0172    finalize 0.0138    func 0.2819    
Accumulated time: func 1.5313    prepare 0.1290    bound 1.2853    transfer 0.0383    finalize 0.0389    
all_split False
======================Cut inference begins======================
max lb tensor(0.89383233) min lb tensor(-0.67117441)
Number of Verified Splits: 546 of 2150
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 12
#cuts 4-6: 5
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.15250277519226074 
BICCOS Cumulative time: 0.8079884052276611
Preprocessing time: 0.0670020580291748 Inference time: 0.07425761222839355 Add cuts time: 0.010284423828125 Cut analysis time: 0.0009586811065673828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.67117 (18), -0.66464 (18), -0.66022 (18), -0.65373 (18), -0.65369 (18), -0.64936 (18), -0.64469 (18), -0.64223 (18), -0.64127 (18), -0.63773 (18), -0.63270 (18), -0.63199 (18), -0.62916 (18), -0.62847 (18), -0.62556 (18), -0.62401 (18), -0.62167 (18), -0.61822 (18), -0.61789 (18), -0.61737 (18), 
Length of domains: 1604
Time: pickout 0.0156    decision 0.0760    set_bounds 0.0579    solve 0.2823    add 0.0125    
Accumulated time: pickout 0.0492    decision 0.2929    set_bounds 0.1819    solve 1.6947    add 0.0709    
Current (lb-rhs): -0.6711744070053101
4522 domains visited
Cumulative time: 3.120119571685791

BaB round 10
batch: 1604
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1483] [/input-12, 29] [/input-12, 29] [/input-8, 1514] [/input-8, 997] [/input-8, 286] [/input-12, 29] [/input-8, 1506] [/input-12, 29] [/input-8, 1514] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6609324812889099
10 lb beta sum: 0.5357142686843872, worst -0.6607958078384399
Time: prepare 0.2183    bound 0.2513    transfer 0.0148    finalize 0.0189    func 0.5274    
Accumulated time: func 2.0586    prepare 0.3475    bound 1.5365    transfer 0.0531    finalize 0.0579    
all_split False
======================Cut inference begins======================
max lb tensor(0.87444580) min lb tensor(-0.66072166)
Number of Verified Splits: 1151 of 3208
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.2925381660461426 
BICCOS Cumulative time: 1.1005265712738037
Preprocessing time: 0.10411739349365234 Inference time: 0.1671290397644043 Add cuts time: 0.02042365074157715 Cut analysis time: 0.0008680820465087891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.66072 (19), -0.65176 (19), -0.64422 (19), -0.63846 (19), -0.63622 (19), -0.63373 (19), -0.63310 (19), -0.63122 (19), -0.63050 (19), -0.62711 (19), -0.62497 (19), -0.62313 (19), -0.62277 (19), -0.62195 (19), -0.62086 (19), -0.61870 (19), -0.61702 (19), -0.61531 (19), -0.61421 (19), -0.61218 (19), 
Length of domains: 2057
Time: pickout 0.0320    decision 0.1015    set_bounds 0.0876    solve 0.5281    add 0.0957    
Accumulated time: pickout 0.0812    decision 0.3944    set_bounds 0.2695    solve 2.2228    add 0.1666    
Current (lb-rhs): -0.6607216596603394
6579 domains visited
Cumulative time: 4.276069641113281

BaB round 11
batch: 2057
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1506] [/input-8, 1483] [/input-12, 29] [/input-12, 29] [/input-8, 114] [/input-8, 1483] [/input-8, 1453] [/input-12, 29] [/input-8, 1506] [/input-8, 1483] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5949256420135498, worst -0.6497239470481873
10 lb beta sum: 1.4374680519104004, worst -0.6353445649147034
Time: prepare 0.1978    bound 0.2989    transfer 0.0256    finalize 0.1840    func 0.7350    
Accumulated time: func 2.7937    prepare 0.5456    bound 1.8354    transfer 0.0787    finalize 0.2419    
all_split False
======================Cut inference begins======================
max lb tensor(0.97503442) min lb tensor(-0.63526773)
Number of Verified Splits: 3156 of 4114
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 23
#cuts >= 20: 0
BICCOS time: 0.6427130699157715 
BICCOS Cumulative time: 1.7432396411895752
Preprocessing time: 0.13016128540039062 Inference time: 0.46549391746520996 Add cuts time: 0.04632377624511719 Cut analysis time: 0.0007340908050537109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.63527 (20), -0.62799 (20), -0.62492 (20), -0.62410 (20), -0.61970 (20), -0.61959 (20), -0.61761 (20), -0.61679 (20), -0.61421 (20), -0.61286 (20), -0.61145 (20), -0.60885 (20), -0.60857 (20), -0.60791 (20), -0.60685 (20), -0.60589 (20), -0.60207 (20), -0.60118 (20), -0.59998 (20), -0.59804 (20), 
Length of domains: 958
Time: pickout 0.0486    decision 0.1266    set_bounds 0.1141    solve 0.7362    add 0.0425    
Accumulated time: pickout 0.1298    decision 0.5210    set_bounds 0.3835    solve 2.9589    add 0.2091    
Current (lb-rhs): -0.6352677345275879
7537 domains visited
Cumulative time: 6.018282413482666

BaB round 12
batch: 958
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1483] [/input-8, 1483] [/input-8, 1515] [/input-8, 997] [/input-8, 997] [/input-8, 997] [/input-12, 60] [/input-8, 1483] [/input-8, 1066] [/input-8, 997] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6393688321113586
10 lb beta sum: 2.204318046569824, worst -0.6098660826683044
Time: prepare 0.0390    bound 0.1756    transfer 0.0052    finalize 0.0114    func 0.2438    
Accumulated time: func 3.0374    prepare 0.5849    bound 2.0110    transfer 0.0839    finalize 0.2533    
all_split False
======================Cut inference begins======================
max lb tensor(0.95663369) min lb tensor(-0.60503781)
Number of Verified Splits: 1589 of 1916
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 23
#cuts >= 20: 0
BICCOS time: 0.4826338291168213 
BICCOS Cumulative time: 2.2258734703063965
Preprocessing time: 0.0623779296875 Inference time: 0.4001152515411377 Add cuts time: 0.01946091651916504 Cut analysis time: 0.0006797313690185547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.60504 (21), -0.59772 (21), -0.59385 (21), -0.58660 (21), -0.56443 (21), -0.56442 (21), -0.56028 (21), -0.55667 (21), -0.55294 (21), -0.54957 (21), -0.54938 (21), -0.54526 (21), -0.54510 (21), -0.54064 (21), -0.53876 (21), -0.53271 (21), -0.51781 (21), -0.51465 (21), -0.51260 (21), -0.50923 (21), 
Length of domains: 327
Time: pickout 0.0169    decision 0.0650    set_bounds 0.0519    solve 0.2448    add 0.0050    
Accumulated time: pickout 0.1467    decision 0.5859    set_bounds 0.4354    solve 3.2037    add 0.2142    
Current (lb-rhs): -0.6050378084182739
7864 domains visited
Cumulative time: 6.898462772369385

BaB round 13
batch: 327
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1475] [/input-8, 1135] [/input-8, 997] [/input-8, 997] [/input-12, 29] [/input-8, 997] [/input-8, 1475] [/input-8, 997] [/input-8, 1475] [/input-8, 1475] 
cut re-enabled after branching node selection
0 lb beta sum: 2.274951696395874, worst -0.6097232103347778
10 lb beta sum: 2.33003830909729, worst -0.609574556350708
Time: prepare 0.0307    bound 0.1506    transfer 0.0015    finalize 0.0038    func 0.1916    
Accumulated time: func 3.2290    prepare 0.6158    bound 2.1616    transfer 0.0854    finalize 0.2571    
all_split False
======================Cut inference begins======================
max lb tensor(0.32059908) min lb tensor(-0.60493720)
Number of Verified Splits: 109 of 654
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 23
#cuts >= 20: 0
BICCOS time: 0.03998923301696777 
BICCOS Cumulative time: 2.2658627033233643
Preprocessing time: 0.019565582275390625 Inference time: 0.017911911010742188 Add cuts time: 0.0020093917846679688 Cut analysis time: 0.0005023479461669922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.60494 (22), -0.59725 (22), -0.59363 (22), -0.58604 (22), -0.56443 (22), -0.56429 (22), -0.56028 (22), -0.55622 (22), -0.55268 (22), -0.54957 (22), -0.54938 (22), -0.54510 (22), -0.54471 (22), -0.54064 (22), -0.53876 (22), -0.53271 (22), -0.51781 (22), -0.51465 (22), -0.51260 (22), -0.50923 (22), 
Length of domains: 545
Time: pickout 0.0087    decision 0.0303    set_bounds 0.0178    solve 0.1917    add 0.0073    
Accumulated time: pickout 0.1554    decision 0.6163    set_bounds 0.4532    solve 3.3954    add 0.2214    
Current (lb-rhs): -0.6049371957778931
8409 domains visited
Cumulative time: 7.1955726146698

BaB round 14
batch: 545
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1135] [/input-8, 997] [/input-8, 1135] [/input-8, 1135] [/input-8, 1135] [/input-8, 1483] [/input-8, 1135] [/input-8, 1135] [/input-8, 1483] [/input-8, 997] 
cut re-enabled after branching node selection
0 lb beta sum: 2.3302249908447266, worst -0.6015571355819702
10 lb beta sum: 2.356553316116333, worst -0.6011397838592529
Time: prepare 0.0495    bound 0.1502    transfer 0.0045    finalize 0.0057    func 0.2169    
Accumulated time: func 3.4459    prepare 0.6655    bound 2.3118    transfer 0.0899    finalize 0.2628    
all_split False
======================Cut inference begins======================
max lb tensor(0.36199522) min lb tensor(-0.59647202)
Number of Verified Splits: 162 of 1090
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 23
#cuts >= 20: 0
BICCOS time: 0.06279730796813965 
BICCOS Cumulative time: 2.328660011291504
Preprocessing time: 0.03400707244873047 Inference time: 0.025560379028320312 Add cuts time: 0.002699136734008789 Cut analysis time: 0.0005307197570800781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.59647 (23), -0.58870 (23), -0.58802 (23), -0.58534 (23), -0.58011 (23), -0.57766 (23), -0.57670 (23), -0.56892 (23), -0.56443 (23), -0.56443 (23), -0.56028 (23), -0.56028 (23), -0.55609 (23), -0.54957 (23), -0.54957 (23), -0.54938 (23), -0.54938 (23), -0.54789 (23), -0.54712 (23), -0.54510 (23), 
Length of domains: 928
Time: pickout 0.0092    decision 0.0414    set_bounds 0.0288    solve 0.2177    add 0.0094    
Accumulated time: pickout 0.1645    decision 0.6577    set_bounds 0.4821    solve 3.6131    add 0.2308    
Current (lb-rhs): -0.5964720249176025
9337 domains visited
Cumulative time: 7.566813230514526

BaB round 15
batch: 928
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1483] [/input-8, 1506] [/input-8, 995] [/input-8, 1483] [/input-8, 1483] [/input-8, 1506] [/input-8, 1483] [/input-8, 995] [/input-8, 1506] [/input-8, 1506] 
cut re-enabled after branching node selection
0 lb beta sum: 2.3232057094573975, worst -0.5933817625045776
10 lb beta sum: 2.3532886505126953, worst -0.593218207359314
Time: prepare 0.0846    bound 0.1680    transfer 0.0112    finalize 0.0104    func 0.2867    
Accumulated time: func 3.7326    prepare 0.7504    bound 2.4798    transfer 0.1011    finalize 0.2732    
all_split False
======================Cut inference begins======================
max lb tensor(0.37547433) min lb tensor(-0.58878088)
Number of Verified Splits: 448 of 1856
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 24
#cuts >= 20: 0
BICCOS time: 0.13903212547302246 
BICCOS Cumulative time: 2.4676921367645264
Preprocessing time: 0.05824899673461914 Inference time: 0.0725393295288086 Add cuts time: 0.007583141326904297 Cut analysis time: 0.0006606578826904297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.58878 (24), -0.58076 (24), -0.57967 (24), -0.57763 (24), -0.57163 (24), -0.57065 (24), -0.56987 (24), -0.56844 (24), -0.56842 (24), -0.56443 (24), -0.56443 (24), -0.56271 (24), -0.56054 (24), -0.56028 (24), -0.56028 (24), -0.56028 (24), -0.56028 (24), -0.56010 (24), -0.55958 (24), -0.55713 (24), 
Length of domains: 1408
Time: pickout 0.0187    decision 0.0632    set_bounds 0.0493    solve 0.2871    add 0.0116    
Accumulated time: pickout 0.1832    decision 0.7209    set_bounds 0.5314    solve 3.9002    add 0.2424    
Current (lb-rhs): -0.5887808799743652
10745 domains visited
Cumulative time: 8.140300035476685

BaB round 16
batch: 1408
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 995] [/input-8, 1483] [/input-8, 1483] [/input-8, 1483] [/input-8, 1483] [/input-8, 1483] [/input-8, 995] [/input-8, 995] [/input-8, 1483] [/input-12, 0] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6097951531410217
10 lb beta sum: 1.9064040184020996, worst -0.5931872129440308
Time: prepare 0.0561    bound 0.2250    transfer 0.0095    finalize 0.0157    func 0.3246    
Accumulated time: func 4.0572    prepare 0.8067    bound 2.7048    transfer 0.1106    finalize 0.2888    
all_split False
======================Cut inference begins======================
max lb tensor(0.61837053) min lb tensor(-0.58878088)
Number of Verified Splits: 1855 of 2816
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 24
#cuts >= 20: 0
BICCOS time: 0.4395875930786133 
BICCOS Cumulative time: 2.9072797298431396
Preprocessing time: 0.08713698387145996 Inference time: 0.32215166091918945 Add cuts time: 0.029512643814086914 Cut analysis time: 0.0007863044738769531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.58878 (25), -0.58072 (25), -0.57964 (25), -0.57763 (25), -0.57159 (25), -0.56979 (25), -0.56840 (25), -0.56048 (25), -0.54888 (25), -0.54330 (25), -0.54047 (25), -0.53965 (25), -0.53901 (25), -0.53751 (25), -0.53732 (25), -0.53521 (25), -0.53403 (25), -0.53277 (25), -0.53243 (25), -0.53062 (25), 
Length of domains: 961
Time: pickout 0.0262    decision 0.0899    set_bounds 0.2008    solve 0.3251    add 0.0108    
Accumulated time: pickout 0.2094    decision 0.8108    set_bounds 0.7322    solve 4.2253    add 0.2532    
Current (lb-rhs): -0.5887808799743652
11706 domains visited
Cumulative time: 9.249072551727295

BaB round 17
batch: 961
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1483] [/input-12, 0] [/input-8, 1483] [/input-8, 1925] [/input-8, 2011] [/input-8, 2011] [/input-8, 1709] [/input-8, 1483] [/input-8, 1709] [/input-8, 1506] 
cut re-enabled after branching node selection
0 lb beta sum: 1.9188406467437744, worst -0.593140721321106
10 lb beta sum: 1.9594875574111938, worst -0.5931352376937866
Time: prepare 0.0882    bound 0.1726    transfer 0.0028    finalize 0.0110    func 0.2872    
Accumulated time: func 4.3444    prepare 0.8951    bound 2.8774    transfer 0.1134    finalize 0.2998    
all_split False
======================Cut inference begins======================
max lb tensor(0.31689763) min lb tensor(-0.58300954)
Number of Verified Splits: 424 of 1922
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.28960204124450684 
BICCOS Cumulative time: 3.1968817710876465
Preprocessing time: 0.06272053718566895 Inference time: 0.21937084197998047 Add cuts time: 0.006829261779785156 Cut analysis time: 0.0006814002990722656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.58301 (26), -0.57483 (26), -0.57373 (26), -0.57171 (26), -0.56552 (26), -0.56381 (26), -0.56226 (26), -0.56085 (26), -0.55429 (26), -0.55285 (26), -0.55188 (26), -0.55054 (26), -0.54365 (26), -0.54330 (26), -0.54294 (26), -0.54251 (26), -0.54134 (26), -0.53965 (26), -0.53732 (26), -0.53521 (26), 
Length of domains: 1498
Time: pickout 0.0208    decision 0.0643    set_bounds 0.0515    solve 0.2876    add 0.0153    
Accumulated time: pickout 0.2302    decision 0.8751    set_bounds 0.7837    solve 4.5129    add 0.2685    
Current (lb-rhs): -0.5830095410346985
13204 domains visited
Cumulative time: 9.98349142074585

BaB round 18
batch: 1498
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1483] [/input-8, 2001] [/input-8, 2001] [/input-8, 1506] [/input-8, 2001] [/input-8, 1523] [/input-8, 1506] [/input-8, 1506] [/input-8, 1506] [/input-12, 0] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5932318568229675
10 lb beta sum: 1.7217597961425781, worst -0.5876482129096985
Time: prepare 0.0600    bound 0.2378    transfer 0.0139    finalize 0.0178    func 0.3489    
Accumulated time: func 4.6933    prepare 0.9554    bound 3.1151    transfer 0.1272    finalize 0.3176    
all_split False
======================Cut inference begins======================
max lb tensor(0.62303007) min lb tensor(-0.58299476)
Number of Verified Splits: 1472 of 2996
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.382584810256958 
BICCOS Cumulative time: 3.5794665813446045
Preprocessing time: 0.09300422668457031 Inference time: 0.2677004337310791 Add cuts time: 0.02153182029724121 Cut analysis time: 0.0003483295440673828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.58299 (27), -0.57476 (27), -0.57169 (27), -0.56381 (27), -0.56002 (27), -0.54964 (27), -0.54294 (27), -0.54228 (27), -0.54141 (27), -0.53996 (27), -0.53780 (27), -0.53440 (27), -0.53148 (27), -0.52926 (27), -0.52696 (27), -0.52680 (27), -0.52338 (27), -0.52312 (27), -0.52158 (27), -0.51990 (27), 
Length of domains: 1524
Time: pickout 0.0313    decision 0.0940    set_bounds 0.0811    solve 0.3499    add 0.0138    
Accumulated time: pickout 0.2615    decision 0.9691    set_bounds 0.8648    solve 4.8629    add 0.2823    
Current (lb-rhs): -0.5829947590827942
14728 domains visited
Cumulative time: 10.951629877090454

BaB round 19
batch: 1524
splitting decisions: 
split level 0: [/input-8, 1523] [/input-8, 1523] [/input-8, 1523] [/input-8, 1523] [/input-8, 1523] [/input-8, 1523] [/input-8, 1523] [/input-8, 1523] [/input-8, 2002] [/input-8, 1523] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5836644172668457
10 lb beta sum: 0.3964264690876007, worst -0.12622010707855225
Time: prepare 0.0624    bound 0.1836    transfer 0.0041    finalize 0.0197    func 0.2903    
Accumulated time: func 4.9836    prepare 1.0181    bound 3.2987    transfer 0.1313    finalize 0.3374    
all_split False
======================Cut inference begins======================
max lb tensor(0.62252837) min lb tensor(0.03186116)
Number of Verified Splits: 3048 of 3048
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.09795570373535156 
BICCOS Cumulative time: 3.677422285079956
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0260    decision 0.0952    set_bounds 0.2307    solve 0.2909    add 0.0006    
Accumulated time: pickout 0.2875    decision 1.0643    set_bounds 1.0955    solve 5.1538    add 0.2828    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
14728 domains visited
Cumulative time: 11.710456132888794


Properties batch 4, size 1
Remaining timeout: 185.89407587051392
Verifying property 4 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.67309326]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.11771202, -30.71664810, -21.69390106, -23.92553711, -23.12236595,
        -24.98349190, -23.88631058, -25.68055344, -27.27940369, -29.12014580],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.67309326]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1224
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 443
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1720
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010037422180175781
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 35] 
split level 1: [/input-12, 82] 
split level 2: [/input-12, 85] 
split level 3: [/input-12, 33] 
split level 4: [/input-12, 46] 
split level 5: [/input-12, 78] 
split level 6: [/input-12, 94] 
split level 7: [/input-12, 43] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.6640419960021973

all verified at 0th iter
Time: prepare 0.0020    bound 0.0046    transfer 0.0014    finalize 0.0015    func 0.0113    
Accumulated time: func 0.0113    prepare 0.0024    bound 0.0046    transfer 0.0014    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(1.76653624) min lb tensor(0.66404200)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006828784942626953 
BICCOS Cumulative time: 0.006828784942626953
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0244    set_bounds 0.0171    solve 0.0114    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0244    set_bounds 0.0171    solve 0.0114    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06498908996582031


Properties batch 5, size 1
Remaining timeout: 185.659015417099
Verifying property 5 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.31468451]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.11771202, -30.71664810, -21.69390106, -23.92553711, -23.12236595,
        -24.98349190, -23.88631058, -25.68055344, -27.27940369, -29.12014580],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.31468451]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1224
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 443
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1720
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00012230873107910156
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 44] 
split level 1: [/input-12, 37] 
split level 2: [/input-12, 76] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 56] 
split level 5: [/input-12, 6] 
split level 6: [/input-12, 0] 
split level 7: [/input-12, 9] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.49809718132019043
10 lb beta sum: 0.0, worst -0.49579423666000366
Time: prepare 0.0019    bound 0.1086    transfer 0.0016    finalize 0.0019    func 0.1159    
Accumulated time: func 0.1159    prepare 0.0024    bound 0.1086    transfer 0.0016    finalize 0.0019    
all_split False
======================Cut inference begins======================
max lb tensor(1.43458915) min lb tensor(-0.49493790)
Number of Verified Splits: 236 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3146779537200928
10 lb beta sum: 0.0, worst -1.314707636833191
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 5
#cuts 4-6: 9
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.21954584121704102 
BICCOS Cumulative time: 0.21954584121704102
Preprocessing time: 0.007462501525878906 Inference time: 0.2067580223083496 Add cuts time: 0.0044748783111572266 Cut analysis time: 0.0008504390716552734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.49494 (8), -0.49274 (8), -0.35565 (8), -0.33224 (8), -0.32372 (8), -0.32032 (8), -0.28730 (8), -0.27888 (8), -0.24384 (8), -0.22094 (8), -0.16358 (8), -0.12792 (8), -0.11884 (8), -0.11826 (8), -0.11121 (8), -0.10716 (8), -0.06741 (8), -0.06375 (8), -0.05313 (8), -0.01037 (8), 
Length of domains: 20
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0167    solve 0.1160    add 0.0010    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0167    solve 0.1160    add 0.0010    
Current (lb-rhs): -0.4949378967285156
20 domains visited
Cumulative time: 0.38454604148864746

BaB round 2
batch: 20
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 81] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 81] 
split level 1: [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 87] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 87] 
split level 2: [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] 
split level 3: [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05790823698043823
10 lb beta sum: 0.0, worst -0.051297664642333984
Time: prepare 0.0046    bound 0.1302    transfer 0.0018    finalize 0.0020    func 0.1414    
Accumulated time: func 0.2573    prepare 0.0072    bound 0.2388    transfer 0.0034    finalize 0.0040    
all_split False
======================Cut inference begins======================
max lb tensor(1.05539131) min lb tensor(-0.04885978)
Number of Verified Splits: 316 of 320
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.31748366355896
10 lb beta sum: 0.22277900576591492, worst -1.3152410984039307
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 62.
#cuts 1-3: 5
#cuts 4-6: 22
#cuts 7-9: 33
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.35672545433044434 
BICCOS Cumulative time: 0.5762712955474854
Preprocessing time: 0.009876728057861328 Inference time: 0.31472277641296387 Add cuts time: 0.028923749923706055 Cut analysis time: 0.003202199935913086
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04886 (12), -0.04379 (12), -0.03328 (12), -0.03092 (12), 
Length of domains: 4
Time: pickout 0.0010    decision 0.0155    set_bounds 0.0147    solve 0.1415    add 0.0327    
Accumulated time: pickout 0.0014    decision 0.0391    set_bounds 0.0314    solve 0.2575    add 0.0336    
Current (lb-rhs): -0.04885977506637573
24 domains visited
Cumulative time: 0.9606316089630127

BaB round 3
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 1: [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] 
split level 2: [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] 
split level 3: [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] 
split level 4: [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] 
split level 5: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.12286269664764404

all verified at 0th iter
Time: prepare 0.0037    bound 0.0047    transfer 0.0009    finalize 0.0015    func 0.0124    
Accumulated time: func 0.2697    prepare 0.0112    bound 0.2435    transfer 0.0043    finalize 0.0054    
all_split False
======================Cut inference begins======================
max lb tensor(0.69647455) min lb tensor(0.12286270)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 62.
#cuts 1-3: 5
#cuts 4-6: 22
#cuts 7-9: 33
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.007692098617553711 
BICCOS Cumulative time: 0.5839633941650391
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0015    decision 0.0180    set_bounds 0.0152    solve 0.0125    add 0.0004    
Accumulated time: pickout 0.0029    decision 0.0572    set_bounds 0.0465    solve 0.2700    add 0.0340    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
24 domains visited
Cumulative time: 1.016678810119629


Properties batch 6, size 1
Remaining timeout: 184.4629361629486
Verifying property 6 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03361821]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.11771202, -30.71664810, -21.69390106, -23.92553711, -23.12236595,
        -24.98349190, -23.88631058, -25.68055344, -27.27940369, -29.12014580],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03361821]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1224
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 443
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1720
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010538101196289062
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 67] 
split level 1: [/input-12, 29] 
split level 2: [/input-12, 14] 
split level 3: [/input-12, 94] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 54] 
split level 6: [/input-12, 73] 
split level 7: [/input-12, 88] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.9356393814086914

all verified at 0th iter
Time: prepare 0.0019    bound 0.0043    transfer 0.0005    finalize 0.0016    func 0.0100    
Accumulated time: func 0.0100    prepare 0.0023    bound 0.0043    transfer 0.0005    finalize 0.0016    
all_split False
======================Cut inference begins======================
max lb tensor(4.19499445) min lb tensor(0.93563938)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006973743438720703 
BICCOS Cumulative time: 0.006973743438720703
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0235    set_bounds 0.0164    solve 0.0101    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0235    set_bounds 0.0164    solve 0.0101    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06273388862609863


Properties batch 7, size 1
Remaining timeout: 184.16699028015137
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 184.16692066192627
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 15.8331 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 98, vnnlib ID: 98 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.07348251, -29.28499222, -24.72648811, -21.08123589, -22.70973396,
         -21.12500000, -23.56928825, -25.22864151, -27.78954697, -29.09164810]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [953]; unstable size 953; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 409, 1, 953] with unstable size 408 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 46, 1, 953] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 953] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [408]; unstable size 408; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 46, 1, 408] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 408] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [45]; unstable size 45; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 45] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.93832743,  2.70832014, -0.20654178, -1.13087749, -1.20281005,
         -0.51792216,  0.39298135,  0.82174259,  3.42262912]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.07348251, -29.28499222, -24.72648811, -21.08123589, -22.70973396,
         -21.12500000, -23.56928825, -25.22864151, -27.78954697, -29.09164810]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.07348442, -29.28499222, -24.72648811, -21.08123589, -22.70973587,
          -21.12500381, -23.56929207, -25.22864532, -27.78955269, -29.09165192],
         [-27.07348442, -29.28499222, -24.72648811, -21.08123589, -22.70973587,
          -21.12500381, -23.56929207, -25.22864532, -27.78955269, -29.09165192]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 3.60148430, -0.04376793,  1.58473206,  2.44428825]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.44920623, -0.83015871,  0.02698422,  ..., -0.94126981,
            -0.90952379, -0.62380952],
           [-1.09999990, -0.36984116,  0.23333341,  ..., -0.97301590,
            -0.83015871, -0.56031746],
           [-0.98888886, -0.65555555, -0.36984116,  ..., -0.90952379,
            -0.83015871, -0.70317459],
           ...,
           [ 0.70952386,  0.86825401,  0.88412702,  ...,  0.90000004,
             0.88412702,  0.86825401],
           [ 0.63015878,  0.78888893,  0.86825401,  ...,  0.99523818,
             0.88412702,  0.78888893],
           [ 0.53492069,  0.69365084,  0.80476195,  ...,  1.04285717,
             0.97936511,  0.82063496]],

          [[-1.83574879, -1.46537840, -0.78904986,  ..., -1.23993552,
            -1.20772946, -0.91787434],
           [-1.54589367, -1.06280184, -0.61191624,  ..., -1.25603855,
            -1.11111104, -0.85346210],
           [-1.32045078, -1.25603855, -1.12721407,  ..., -1.19162631,
            -1.12721407, -1.03059578],
           ...,
           [ 0.46698883,  0.64412248,  0.69243163,  ...,  0.61191636,
             0.57971025,  0.59581327],
           [ 0.38647354,  0.57971025,  0.69243163,  ...,  0.75684386,
             0.62801939,  0.53140104],
           [ 0.27375212,  0.46698883,  0.62801939,  ...,  0.83735919,
             0.77294695,  0.61191636]],

          [[-1.28785622, -0.73313338,  0.07646193,  ..., -0.49325335,
            -0.46326834, -0.19340314],
           [-0.92803597, -0.29835078,  0.24137947,  ..., -0.56821585,
            -0.38830581, -0.10344811],
           [-0.68815589, -0.46326834, -0.25337315,  ..., -0.53823084,
            -0.38830581, -0.23838064],
           ...,
           [ 0.93103468,  1.05097473,  1.06596720,  ...,  0.99100471,
             0.99100471,  1.00599718],
           [ 0.84107965,  0.99100471,  1.06596720,  ...,  1.11094475,
             1.02098966,  0.94602716],
           [ 0.75112462,  0.88605714,  1.00599718,  ...,  1.18590748,
             1.14092970,  1.00599718]]],


         [[[-1.44920623, -0.83015871,  0.02698422,  ..., -0.94126981,
            -0.90952379, -0.62380952],
           [-1.09999990, -0.36984116,  0.23333341,  ..., -0.97301590,
            -0.83015871, -0.56031746],
           [-0.98888886, -0.65555555, -0.36984116,  ..., -0.90952379,
            -0.83015871, -0.70317459],
           ...,
           [ 0.70952386,  0.86825401,  0.88412702,  ...,  0.90000004,
             0.88412702,  0.86825401],
           [ 0.63015878,  0.78888893,  0.86825401,  ...,  0.99523818,
             0.88412702,  0.78888893],
           [ 0.53492069,  0.69365084,  0.80476195,  ...,  1.04285717,
             0.97936511,  0.82063496]],

          [[-1.83574879, -1.46537840, -0.78904986,  ..., -1.23993552,
            -1.20772946, -0.91787434],
           [-1.54589367, -1.06280184, -0.61191624,  ..., -1.25603855,
            -1.11111104, -0.85346210],
           [-1.32045078, -1.25603855, -1.12721407,  ..., -1.19162631,
            -1.12721407, -1.03059578],
           ...,
           [ 0.46698883,  0.64412248,  0.69243163,  ...,  0.61191636,
             0.57971025,  0.59581327],
           [ 0.38647354,  0.57971025,  0.69243163,  ...,  0.75684386,
             0.62801939,  0.53140104],
           [ 0.27375212,  0.46698883,  0.62801939,  ...,  0.83735919,
             0.77294695,  0.61191636]],

          [[-1.28785622, -0.73313338,  0.07646193,  ..., -0.49325335,
            -0.46326834, -0.19340314],
           [-0.92803597, -0.29835078,  0.24137947,  ..., -0.56821585,
            -0.38830581, -0.10344811],
           [-0.68815589, -0.46326834, -0.25337315,  ..., -0.53823084,
            -0.38830581, -0.23838064],
           ...,
           [ 0.93103468,  1.05097473,  1.06596720,  ...,  0.99100471,
             0.99100471,  1.00599718],
           [ 0.84107965,  0.99100471,  1.06596720,  ...,  1.11094475,
             1.02098966,  0.94602716],
           [ 0.75112462,  0.88605714,  1.00599718,  ...,  1.18590748,
             1.14092970,  1.00599718]]],


         [[[-1.44920623, -0.83015871,  0.02698422,  ..., -0.94126981,
            -0.90952379, -0.62380952],
           [-1.09999990, -0.36984116,  0.23333341,  ..., -0.97301590,
            -0.83015871, -0.56031746],
           [-0.98888886, -0.65555555, -0.36984116,  ..., -0.90952379,
            -0.83015871, -0.70317459],
           ...,
           [ 0.70952386,  0.86825401,  0.88412702,  ...,  0.90000004,
             0.88412702,  0.86825401],
           [ 0.63015878,  0.78888893,  0.86825401,  ...,  0.99523818,
             0.88412702,  0.78888893],
           [ 0.53492069,  0.69365084,  0.80476195,  ...,  1.04285717,
             0.97936511,  0.82063496]],

          [[-1.83574879, -1.46537840, -0.78904986,  ..., -1.23993552,
            -1.20772946, -0.91787434],
           [-1.54589367, -1.06280184, -0.61191624,  ..., -1.25603855,
            -1.11111104, -0.85346210],
           [-1.32045078, -1.25603855, -1.12721407,  ..., -1.19162631,
            -1.12721407, -1.03059578],
           ...,
           [ 0.46698883,  0.64412248,  0.69243163,  ...,  0.61191636,
             0.57971025,  0.59581327],
           [ 0.38647354,  0.57971025,  0.69243163,  ...,  0.75684386,
             0.62801939,  0.53140104],
           [ 0.27375212,  0.46698883,  0.62801939,  ...,  0.83735919,
             0.77294695,  0.61191636]],

          [[-1.28785622, -0.73313338,  0.07646193,  ..., -0.49325335,
            -0.46326834, -0.19340314],
           [-0.92803597, -0.29835078,  0.24137947,  ..., -0.56821585,
            -0.38830581, -0.10344811],
           [-0.68815589, -0.46326834, -0.25337315,  ..., -0.53823084,
            -0.38830581, -0.23838064],
           ...,
           [ 0.93103468,  1.05097473,  1.06596720,  ...,  0.99100471,
             0.99100471,  1.00599718],
           [ 0.84107965,  0.99100471,  1.06596720,  ...,  1.11094475,
             1.02098966,  0.94602716],
           [ 0.75112462,  0.88605714,  1.00599718,  ...,  1.18590748,
             1.14092970,  1.00599718]]],


         [[[-1.44920623, -0.83015871,  0.02698422,  ..., -0.94126981,
            -0.90952379, -0.62380952],
           [-1.09999990, -0.36984116,  0.23333341,  ..., -0.97301590,
            -0.83015871, -0.56031746],
           [-0.98888886, -0.65555555, -0.36984116,  ..., -0.90952379,
            -0.83015871, -0.70317459],
           ...,
           [ 0.70952386,  0.86825401,  0.88412702,  ...,  0.90000004,
             0.88412702,  0.86825401],
           [ 0.63015878,  0.78888893,  0.86825401,  ...,  0.99523818,
             0.88412702,  0.78888893],
           [ 0.53492069,  0.69365084,  0.80476195,  ...,  1.04285717,
             0.97936511,  0.82063496]],

          [[-1.83574879, -1.46537840, -0.78904986,  ..., -1.23993552,
            -1.20772946, -0.91787434],
           [-1.54589367, -1.06280184, -0.61191624,  ..., -1.25603855,
            -1.11111104, -0.85346210],
           [-1.32045078, -1.25603855, -1.12721407,  ..., -1.19162631,
            -1.12721407, -1.03059578],
           ...,
           [ 0.46698883,  0.64412248,  0.69243163,  ...,  0.61191636,
             0.57971025,  0.59581327],
           [ 0.38647354,  0.57971025,  0.69243163,  ...,  0.75684386,
             0.62801939,  0.53140104],
           [ 0.27375212,  0.46698883,  0.62801939,  ...,  0.83735919,
             0.77294695,  0.61191636]],

          [[-1.28785622, -0.73313338,  0.07646193,  ..., -0.49325335,
            -0.46326834, -0.19340314],
           [-0.92803597, -0.29835078,  0.24137947,  ..., -0.56821585,
            -0.38830581, -0.10344811],
           [-0.68815589, -0.46326834, -0.25337315,  ..., -0.53823084,
            -0.38830581, -0.23838064],
           ...,
           [ 0.93103468,  1.05097473,  1.06596720,  ...,  0.99100471,
             0.99100471,  1.00599718],
           [ 0.84107965,  0.99100471,  1.06596720,  ...,  1.11094475,
             1.02098966,  0.94602716],
           [ 0.75112462,  0.88605714,  1.00599718,  ...,  1.18590748,
             1.14092970,  1.00599718]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0813 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 99, vnnlib ID: 99 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.96059799, -30.10614395, -24.06589317, -25.48886681, -25.15393639,
         -26.63837624, -23.61147690, -27.76400948, -29.08482170, -29.89406586]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1043]; unstable size 1043; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 376, 1, 1043] with unstable size 375 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 51, 1, 1043] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1043] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [375]; unstable size 375; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 51, 1, 375] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 375] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [50]; unstable size 50; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 50] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.19024658,  2.08770561, -3.09777689, -1.02638865, -1.66481423,
         -0.42488313, -0.00549281,  1.11137486,  1.01232243]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.96059799, -30.10614395, -24.06589317, -25.48886681, -25.15393639,
         -26.63837624, -23.61147690, -27.76400948, -29.08482170, -29.89406586]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.24999619, -29.71413040, -23.21648026, -24.97492790, -24.60553551,
          -26.03188515, -23.50670624, -26.97841835, -28.56800079, -29.42456818],
         [-28.24999619, -29.71413040, -23.21648026, -24.97492790, -24.60553551,
          -26.03188515, -23.50670624, -26.97841835, -28.56800079, -29.42456818]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.29022598,  1.46822166,  1.09882927,  2.52517891,  3.47171211]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0072 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0933 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 100, vnnlib ID: 100 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.22986412, -32.32495880, -25.85224915, -26.25922585, -25.27324867,
         -25.41169739, -27.81185913, -28.07779121, -32.66773224, -32.07356262]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [864]; unstable size 864; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 383, 1, 864] with unstable size 382 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 49, 1, 864] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 864] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [382]; unstable size 382; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 49, 1, 382] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 382] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [48]; unstable size 48; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 48] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.64350510,  1.51187897, -4.04510021, -4.03956223, -2.42967129,
         -1.02612603, -2.62361979,  2.18736458,  1.42472172]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.22986412, -32.32495880, -25.85224915, -26.25922585, -25.27324867,
         -25.41169739, -27.81185913, -28.07779121, -32.66773224, -32.07356262]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.22986031, -32.32495499, -25.85225105, -26.25922775, -25.27324677,
          -25.41169930, -27.81186295, -28.07778931, -32.66772842, -32.07355881],
         [-29.22986031, -32.32495499, -25.85225105, -26.25922775, -25.27324677,
          -25.41169930, -27.81186295, -28.07778931, -32.66772842, -32.07355881]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.97063255, -0.40697670, -0.98598099, -0.84752846,  1.55263519,
           1.81856155]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0680 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 101, vnnlib ID: 101 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-45.85300446, -50.04655838, -50.17083740, -51.66505814, -51.61089325,
         -53.67539597, -54.17256927, -54.25276184, -44.19359970, -48.87138748]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1367]; unstable size 1367; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 391, 1, 1367] with unstable size 390 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 41, 1, 1367] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1367] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [390]; unstable size 390; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 41, 1, 390] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 390] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [40]; unstable size 40; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.63407183,  2.24501967,  1.26487303,  3.29116917,  1.86033392,
          4.73769379,  5.42015457,  3.96067286,  1.45213151]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-45.85300446, -50.04655838, -50.17083740, -51.66505814, -51.61089325,
         -53.67539597, -54.17256927, -54.25276184, -44.19359970, -48.87138748]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.31it/s]100%|██████████| 1/1 [00:00<00:00,  8.30it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-45.32433701, -49.75759888, -49.53366852, -51.33099365, -51.00875092,
          -53.22629166, -53.84315109, -53.54683685, -44.76575089, -48.47379684]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.55858612]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1233 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 24.82836151123047
alpha/beta optimization time: 1.302058219909668
initial alpha-crown bounds: tensor([[-1.42657089,  2.42723680,  1.54163837,  3.52405381,  2.15636158,
          5.01575613,  5.66010666,  4.31884193,  1.61093760]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -1.4265708923339844
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50871777534485
Verifying property 0 with 1 instances.
##### Instance 101 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.42657089]], device='cuda:0') need to verify.
Model prediction is: tensor([-45.85300446, -50.04655838, -50.17083740, -51.66505814, -51.61089325,
        -53.67539597, -54.17256927, -54.25276184, -44.19359970, -48.87138748],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.42657089]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1367
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 384
Node /15 input 0: size torch.Size([100]) unstable 39
-----------------
# of unstable neurons: 1790
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010728836059570312
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.4265668392181396
10 lb beta sum: 0.0, worst -1.4265861511230469
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0581    transfer 0.0001    finalize 0.0001    func 0.0586    
Accumulated time: func 0.0586    prepare 0.0002    bound 0.0581    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 51] 
split level 1: [/input-12, 28] 
split level 2: [/input-12, 43] 
split level 3: [/input-12, 48] 
split level 4: [/input-12, 49] 
split level 5: [/input-12, 36] 
split level 6: [/input-12, 62] 
split level 7: [/input-12, 61] 
split level 8: [/input-12, 38] 
split level 9: [/input-12, 58] 
split level 10: [/input-12, 67] 
split level 11: [/input-12, 89] 
split level 12: [/input-12, 72] 
split level 13: [/input-12, 56] 
split level 14: [/input-12, 15] 
split level 15: [/input-12, 54] 
split level 16: [/input-12, 29] 
split level 17: [/input-12, 73] 
split level 18: [/input-12, 10] 
split level 19: [/input-12, 14] 
split level 20: [/input-8, 1947] 
split level 21: [/input-8, 172] 
split level 22: [/input, 2440] 
split level 23: [/input-8, 163] 
split level 24: [/input-8, 1956] 
split level 25: [/input-8, 1948] 
split level 26: [/input-8, 1961] 
split level 27: [/input-8, 804] 
split level 28: [/input-8, 1882] 
split level 29: [/input-8, 1963] 
split level 30: [/input, 2457] 
split level 31: [/input, 2680] 
split level 32: [/input, 2443] 
split level 33: [/input-8, 1971] 
split level 34: [/input-8, 1957] 
split level 35: [/input, 664] 
split level 36: [/input, 2454] 
split level 37: [/input, 2455] 
split level 38: [/input-8, 1574] 
split level 39: [/input-8, 404] 
split level 40: [/input, 937] 
split level 41: [/input-8, 1297] 
split level 42: [/input-8, 162] 
split level 43: [/input-8, 1333] 
split level 44: [/input-8, 1962] 
split level 45: [/input, 663] 
split level 46: [/input, 123] 
split level 47: [/input-8, 1972] 
split level 48: [/input, 2473] 
split level 49: [/input-8, 929] 
split level 50: [/input, 2487] 
split level 51: [/input-8, 1932] 
split level 52: [/input-12, 77] 
split level 53: [/input, 152] 
split level 54: [/input, 2472] 
split level 55: [/input-12, 50] 
split level 56: [/input-8, 1555] 
split level 57: [/input-8, 1892] 
split level 58: [/input, 151] 
split level 59: [/input-8, 1891] 
split level 60: [/input-8, 1931] 
split level 61: [/input-8, 1969] 
split level 62: [/input-8, 1847] 
split level 63: [/input-8, 1582] 
split level 64: [/input-8, 1445] 
split level 65: [/input-8, 1970] 
split level 66: [/input, 2458] 
split level 67: [/input-8, 1900] 
split level 68: [/input-8, 1899] 
split level 69: [/input-8, 1958] 
split level 70: [/input-8, 1934] 
split level 71: [/input, 2444] 
split level 72: [/input, 124] 
split level 73: [/input-8, 1874] 
split level 74: [/input-8, 1933] 
split level 75: [/input-8, 1324] 
split level 76: [/input-8, 1890] 
split level 77: [/input-8, 1243] 
split level 78: [/input, 661] 
split level 79: [/input-8, 1134] 
split level 80: [/input, 695] 
split level 81: [/input-8, 533] 
split level 82: [/input-8, 928] 
split level 83: [/input-8, 531] 
split level 84: [/input-8, 1930] 
split level 85: [/input, 2460] 
split level 86: [/input-8, 1865] 
split level 87: [/input, 167] 
split level 88: [/input, 2469] 
split level 89: [/input-8, 947] 
split level 90: [/input-8, 948] 
split level 91: [/input, 168] 
split level 92: [/input-12, 68] 
split level 93: [/input-8, 1566] 
split level 94: [/input-8, 1304] 
split level 95: [/input, 2427] 
split level 96: [/input, 118] 
split level 97: [/input, 166] 
split level 98: [/input, 2489] 
split level 99: [/input-8, 1575] 
split level 100: [/input, 2470] 
split level 101: [/input-8, 1576] 
split level 102: [/input, 169] 
split level 103: [/input-8, 1883] 
split level 104: [/input, 184] 
split level 105: [/input-8, 912] 
split level 106: [/input-8, 541] 
split level 107: [/input-8, 1564] 
split level 108: [/input, 2682] 
split level 109: [/input, 876] 
split level 110: [/input-8, 1898] 
split level 111: [/input, 951] 
split level 112: [/input, 182] 
split level 113: [/input, 636] 
split level 114: [/input, 2170] 
split level 115: [/input, 185] 
split level 116: [/input-8, 949] 
split level 117: [/input-8, 705] 
split level 118: [/input, 126] 
split level 119: [/input, 2491] 
split level 120: [/input-8, 402] 
split level 121: [/input, 892] 
split level 122: [/input-8, 726] 
split level 123: [/input-8, 423] 
split level 124: [/input, 630] 
split level 125: [/input, 2412] 
split level 126: [/input-8, 546] 
split level 127: [/input, 2411] 
split level 128: [/input, 2428] 
split level 129: [/input, 2385] 
split level 130: [/input, 2492] 
split level 131: [/input, 2467] 
split level 132: [/input-8, 419] 
split level 133: [/input-8, 394] 
split level 134: [/input-8, 1893] 
split level 135: [/input, 2476] 
split level 136: [/input, 696] 
split level 137: [/input, 948] 
split level 138: [/input-8, 1393] 
split level 139: [/input, 949] 
split level 140: [/input-8, 766] 
split level 141: [/input, 148] 
split level 142: [/input, 697] 
split level 143: [/input, 180] 
split level 144: [/input, 1461] 
split level 145: [/input, 121] 
split level 146: [/input, 693] 
split level 147: [/input, 1874] 
split level 148: [/input-8, 395] 
split level 149: [/input, 139] 
split level 150: [/input, 199] 
split level 151: [/input, 2503] 
split level 152: [/input, 200] 
split level 153: [/input, 142] 
split level 154: [/input, 187] 
split level 155: [/input, 2171] 
split level 156: [/input, 890] 
split level 157: [/input, 2502] 
split level 158: [/input, 694] 
split level 159: [/input-8, 1869] 
split level 160: [/input-8, 710] 
split level 161: [/input, 125] 
split level 162: [/input-8, 549] 
split level 163: [/input, 164] 
split level 164: [/input, 2521] 
split level 165: [/input, 140] 
split level 166: [/input-8, 396] 
split level 167: [/input-8, 136] 
split level 168: [/input, 2410] 
split level 169: [/input, 893] 
split level 170: [/input, 198] 
split level 171: [/input, 685] 
split level 172: [/input, 2483] 
split level 173: [/input, 81] 
split level 174: [/input, 2504] 
split level 175: [/input-8, 1589] 
split level 176: [/input, 2484] 
split level 177: [/input, 2429] 
split level 178: [/input, 147] 
split level 179: [/input-8, 1753] 
split level 180: [/input, 2501] 
split level 181: [/input-8, 101] 
split level 182: [/input, 4026] 
split level 183: [/input-8, 328] 
split level 184: [/input-8, 168] 
split level 185: [/input, 2684] 
split level 186: [/input, 2519] 
split level 187: [/input, 2500] 
split level 188: [/input-8, 1527] 
split level 189: [/input, 2520] 
split level 190: [/input, 2522] 
split level 191: [/input, 215] 
split level 192: [/input, 2518] 
split level 193: [/input, 2395] 
split level 194: [/input, 849] 
split level 195: [/input-8, 397] 
split level 196: [/input-8, 708] 
split level 197: [/input, 2396] 
split level 198: [/input, 894] 
split level 199: [/input, 2369] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.4264070987701416
10 lb beta sum: 0.0, worst -1.4263973236083984
Time: prepare 0.0114    bound 0.1039    transfer 0.0028    finalize 0.0034    func 0.1242    
Accumulated time: func 0.1828    prepare 0.0217    bound 0.1620    transfer 0.0029    finalize 0.0035    
all_split False
======================Cut inference begins======================
max lb tensor(-0.24471343) min lb tensor(-1.42638755)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010400772094726562 
BICCOS Cumulative time: 0.010400772094726562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.39204 (1), -1.39182 (1), -1.39073 (1), -1.38868 (1), -1.38615 (1), -1.38590 (1), -1.38413 (1), -1.38037 (1), -1.37935 (1), -1.37782 (1), -1.37747 (1), -1.37592 (1), -1.37410 (1), -1.37090 (1), -1.37080 (1), -1.36743 (1), -1.35852 (1), -1.35403 (1), -1.34922 (1), -1.34625 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5415    set_bounds 0.0092    solve 0.1243    add 0.0788    
Accumulated time: pickout 0.0004    decision 0.5415    set_bounds 0.0092    solve 0.1243    add 0.0788    
Current (lb-rhs): -1.392043113708496
50 domains visited
Cumulative time: 0.8389661312103271

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 28] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
split level 1: [/input-12, 49] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 49] [/input-12, 28] [/input-12, 28] 
split level 2: [/input-12, 72] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 72] [/input-12, 49] [/input-12, 49] 
split level 3: [/input-12, 15] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 15] [/input-12, 72] [/input-12, 72] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3412182331085205
10 lb beta sum: 0.0, worst -1.3397514820098877
Time: prepare 0.0121    bound 0.1045    transfer 0.0008    finalize 0.0026    func 0.1226    
Accumulated time: func 0.3054    prepare 0.0340    bound 0.2665    transfer 0.0037    finalize 0.0061    
all_split False
======================Cut inference begins======================
max lb tensor(0.51592016) min lb tensor(-1.33963513)
Number of Verified Splits: 30 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 0.014666080474853516 
BICCOS Cumulative time: 0.025066852569580078
Preprocessing time: 0.01205301284790039 Inference time: 0.0013360977172851562 Add cuts time: 0.0005125999450683594 Cut analysis time: 0.0007643699645996094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26736 (2), -0.26585 (2), -0.26173 (2), -0.25535 (2), -0.24788 (2), -0.22789 (2), -0.22506 (2), -0.22126 (2), -0.21721 (2), -0.21708 (2), -0.20799 (2), -0.20666 (2), -0.20484 (2), -0.20289 (2), -0.19842 (2), -0.19434 (2), -0.19372 (2), -0.19341 (2), -0.18831 (2), -0.18725 (2), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0208    set_bounds 0.0141    solve 0.1227    add 0.1627    
Accumulated time: pickout 0.0016    decision 0.5623    set_bounds 0.0233    solve 0.2469    add 0.2415    
Current (lb-rhs): -0.2673640251159668
100 domains visited
Cumulative time: 1.175340175628662

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 28] [/input-12, 28] [/input-12, 51] [/input-12, 48] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] 
split level 1: [/input-12, 48] [/input-12, 48] [/input-12, 28] [/input-12, 49] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 49] [/input-12, 49] [/input-12, 48] 
split level 2: [/input-12, 49] [/input-12, 49] [/input-12, 72] [/input-12, 72] [/input-12, 49] [/input-12, 72] [/input-12, 49] [/input-12, 72] [/input-12, 72] [/input-12, 49] 
split level 3: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 72] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22409486770629883
10 lb beta sum: 0.1496846079826355, worst -0.22208786010742188
Time: prepare 0.0067    bound 0.1289    transfer 0.0008    finalize 0.0029    func 0.1420    
Accumulated time: func 0.4473    prepare 0.0410    bound 0.3955    transfer 0.0045    finalize 0.0090    
all_split False
======================Cut inference begins======================
max lb tensor(0.74397159) min lb tensor(-0.17601362)
Number of Verified Splits: 311 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.03370356559753418 
BICCOS Cumulative time: 0.05877041816711426
Preprocessing time: 0.012019872665405273 Inference time: 0.014043331146240234 Add cuts time: 0.007064104080200195 Cut analysis time: 0.0005762577056884766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17601 (3), -0.17513 (3), -0.17280 (3), -0.13401 (3), -0.12853 (3), -0.12742 (3), -0.12584 (3), -0.12297 (3), -0.12211 (3), -0.09328 (3), -0.09317 (3), -0.09292 (3), -0.09100 (3), -0.07860 (3), -0.07853 (3), -0.07829 (3), -0.07812 (3), 
Length of domains: 17
Time: pickout 0.0012    decision 0.0203    set_bounds 0.0153    solve 0.1421    add 0.1116    
Accumulated time: pickout 0.0027    decision 0.5826    set_bounds 0.0386    solve 0.3890    add 0.3531    
Current (lb-rhs): -0.17601361870765686
117 domains visited
Cumulative time: 1.4997353553771973

Shallow-BaB round 4
batch: 17
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
split level 1: [/input-12, 28] [/input-12, 28] [/input-12, 43] [/input-12, 43] [/input-12, 28] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 28] [/input-12, 28] 
split level 2: [/input-12, 43] [/input-12, 43] [/input-12, 48] [/input-12, 48] [/input-12, 43] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 43] [/input-12, 43] 
split level 3: [/input-12, 48] [/input-12, 48] [/input-12, 49] [/input-12, 49] [/input-12, 48] [/input-12, 58] [/input-12, 58] [/input-12, 49] [/input-12, 48] [/input-12, 48] 
split level 4: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 67] [/input-12, 67] [/input-12, 58] [/input-12, 58] [/input-12, 49] 
split level 5: [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 72] [/input-12, 72] [/input-12, 67] [/input-12, 67] [/input-12, 58] 
split level 6: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 72] [/input-12, 67] 
split level 7: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 8: [/input-8, 1566] [/input-8, 1566] [/input-8, 1566] [/input-8, 1566] [/input-8, 1566] [/input-8, 1566] [/input-8, 1566] [/input-8, 1566] [/input-8, 1566] [/input-8, 1566] 
split level 9: [/input-8, 1134] [/input-8, 1134] [/input-8, 1134] [/input-8, 1134] [/input-8, 1900] [/input-8, 1134] [/input-8, 1134] [/input-8, 1134] [/input-8, 1900] [/input-8, 1134] 
split level 10: [/input-8, 1900] [/input-8, 1900] [/input-8, 1900] [/input-8, 1900] [/input-8, 1134] [/input-8, 1900] [/input-8, 1900] [/input-8, 1900] [/input-8, 1134] [/input-8, 1900] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16361618041992188
10 lb beta sum: 0.28357627987861633, worst -0.15457716584205627
Time: prepare 0.0060    bound 0.1333    transfer 0.0024    finalize 0.0028    func 0.1469    
Accumulated time: func 0.5942    prepare 0.0476    bound 0.5288    transfer 0.0069    finalize 0.0118    
all_split False
======================Cut inference begins======================
max lb tensor(0.72422886) min lb tensor(-0.12175198)
Number of Verified Splits: 294 of 374
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.03336501121520996 
BICCOS Cumulative time: 0.09213542938232422
Preprocessing time: 0.011221885681152344 Inference time: 0.014752864837646484 Add cuts time: 0.00690913200378418 Cut analysis time: 0.0004811286926269531
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0008    decision 0.0442    set_bounds 0.0147    solve 0.1470    add 0.0220    
Accumulated time: pickout 0.0036    decision 0.6268    set_bounds 0.0533    solve 0.5360    add 0.3751    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
117 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 51] 
split level 1: [/input-12, 28] 
split level 2: [/input-12, 43] 
split level 3: [/input-12, 48] 
split level 4: [/input-12, 49] 
split level 5: [/input-12, 67] 
split level 6: [/input-12, 72] 
split level 7: [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8019168376922607
10 lb beta sum: 0.35389000177383423, worst -0.7816033959388733
Time: prepare 0.0039    bound 0.1226    transfer 0.0022    finalize 0.0019    func 0.1324    
Accumulated time: func 0.7266    prepare 0.0519    bound 0.6514    transfer 0.0090    finalize 0.0137    
all_split False
======================Cut inference begins======================
max lb tensor(1.12658930) min lb tensor(-0.78078830)
Number of Verified Splits: 229 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2031831741333008
10 lb beta sum: 1.4229453802108765, worst -1.133315086364746
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 16
#cuts 4-6: 7
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.2553694248199463 
BICCOS Cumulative time: 0.3475048542022705
Preprocessing time: 0.0069522857666015625 Inference time: 0.24214625358581543 Add cuts time: 0.005480289459228516 Cut analysis time: 0.0007905960083007812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.78079 (8), -0.75459 (8), -0.75261 (8), -0.73433 (8), -0.53017 (8), -0.52406 (8), -0.50943 (8), -0.49365 (8), -0.45475 (8), -0.44528 (8), -0.40081 (8), -0.39871 (8), -0.25993 (8), -0.23603 (8), -0.20902 (8), -0.17468 (8), -0.14572 (8), -0.13376 (8), -0.12176 (8), -0.10536 (8), 
Length of domains: 27
Time: pickout 0.0004    decision 0.0230    set_bounds 0.1890    solve 0.1324    add 0.0011    
Accumulated time: pickout 0.0040    decision 0.6498    set_bounds 0.2423    solve 0.6684    add 0.3762    
Current (lb-rhs): -0.7807883024215698
144 domains visited
Cumulative time: 2.3678205013275146

BaB round 2
batch: 27
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 1: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 2: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.665696382522583
10 lb beta sum: 0.24547868967056274, worst -0.6467884182929993
Time: prepare 0.0032    bound 0.1223    transfer 0.0012    finalize 0.0012    func 0.1293    
Accumulated time: func 0.8559    prepare 0.0553    bound 0.7737    transfer 0.0102    finalize 0.0148    
all_split False
======================Cut inference begins======================
max lb tensor(0.76634681) min lb tensor(-0.64639193)
Number of Verified Splits: 176 of 216
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8904635906219482
10 lb beta sum: 1.143226981163025, worst -0.34574151039123535
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 78.
#cuts 1-3: 16
#cuts 4-6: 19
#cuts 7-9: 39
#cuts 10-12: 4
#cuts >= 20: 0
BICCOS time: 0.24951767921447754 
BICCOS Cumulative time: 0.597022533416748
Preprocessing time: 0.006487607955932617 Inference time: 0.2241990566253662 Add cuts time: 0.014923095703125 Cut analysis time: 0.003907918930053711
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.64639 (11), -0.61976 (11), -0.61976 (11), -0.60012 (11), -0.58428 (11), -0.55467 (11), -0.55121 (11), -0.53418 (11), -0.39632 (11), -0.38965 (11), -0.37683 (11), -0.36110 (11), -0.31594 (11), -0.30347 (11), -0.29640 (11), -0.29312 (11), -0.26544 (11), -0.26371 (11), -0.26181 (11), -0.25974 (11), 
Length of domains: 40
Time: pickout 0.0016    decision 0.0153    set_bounds 0.0113    solve 0.1294    add 0.0013    
Accumulated time: pickout 0.0056    decision 0.6650    set_bounds 0.2537    solve 0.7978    add 0.3775    
Current (lb-rhs): -0.6463919281959534
184 domains visited
Cumulative time: 2.7776594161987305

BaB round 3
batch: 40
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 38] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] 
split level 1: [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 62] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
split level 2: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5956463813781738
10 lb beta sum: 0.16956128180027008, worst -0.5771957039833069
Time: prepare 0.0046    bound 0.1211    transfer 0.0014    finalize 0.0017    func 0.1309    
Accumulated time: func 0.9868    prepare 0.0600    bound 0.8948    transfer 0.0116    finalize 0.0166    
all_split False
======================Cut inference begins======================
max lb tensor(1.18776560) min lb tensor(-0.57696784)
Number of Verified Splits: 275 of 320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 11
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.0469210147857666 
BICCOS Cumulative time: 0.6439435482025146
Preprocessing time: 0.00980234146118164 Inference time: 0.031113624572753906 Add cuts time: 0.0054132938385009766 Cut analysis time: 0.0005917549133300781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.57697 (14), -0.54970 (14), -0.54962 (14), -0.53015 (14), -0.51522 (14), -0.48536 (14), -0.48194 (14), -0.46385 (14), -0.34099 (14), -0.33353 (14), -0.32462 (14), -0.32178 (14), -0.30474 (14), -0.27274 (14), -0.26977 (14), -0.24126 (14), -0.23804 (14), -0.23379 (14), -0.22744 (14), -0.21961 (14), 
Length of domains: 45
Time: pickout 0.0016    decision 0.0144    set_bounds 0.0165    solve 0.1310    add 0.0016    
Accumulated time: pickout 0.0071    decision 0.6794    set_bounds 0.2702    solve 0.9288    add 0.3791    
Current (lb-rhs): -0.5769678354263306
229 domains visited
Cumulative time: 2.9910836219787598

BaB round 4
batch: 45
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 1: [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] 
split level 2: [/input-8, 172] [/input-8, 1956] [/input-8, 172] [/input-8, 1956] [/input-8, 172] [/input-8, 1956] [/input-8, 172] [/input-8, 1956] [/input-8, 172] [/input-8, 172] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.527827262878418
10 lb beta sum: 0.4894808530807495, worst -0.509360671043396
Time: prepare 0.0071    bound 0.1234    transfer 0.0009    finalize 0.0020    func 0.1363    
Accumulated time: func 1.1231    prepare 0.0674    bound 1.0182    transfer 0.0125    finalize 0.0185    
all_split False
======================Cut inference begins======================
max lb tensor(1.07655895) min lb tensor(-0.50915968)
Number of Verified Splits: 334 of 360
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 16
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.05518794059753418 
BICCOS Cumulative time: 0.6991314888000488
Preprocessing time: 0.010531187057495117 Inference time: 0.039742469787597656 Add cuts time: 0.00429081916809082 Cut analysis time: 0.0006234645843505859
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50916 (17), -0.48163 (17), -0.45136 (17), -0.42450 (17), -0.40772 (17), -0.36740 (17), -0.36198 (17), -0.32321 (17), -0.24134 (17), -0.23093 (17), -0.19707 (17), -0.19706 (17), -0.18624 (17), -0.17819 (17), -0.16366 (17), -0.12259 (17), -0.07451 (17), -0.06025 (17), -0.05150 (17), -0.03708 (17), 
Length of domains: 26
Time: pickout 0.0021    decision 0.0180    set_bounds 0.0235    solve 0.1364    add 0.0013    
Accumulated time: pickout 0.0093    decision 0.6974    set_bounds 0.2936    solve 1.0652    add 0.3804    
Current (lb-rhs): -0.5091596841812134
255 domains visited
Cumulative time: 3.2297251224517822

BaB round 5
batch: 26
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-8, 1947] [/input-8, 1947] [/input-8, 1947] [/input-12, 36] 
split level 1: [/input-8, 1947] [/input-12, 14] [/input-8, 1947] [/input-8, 1947] [/input-12, 14] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1947] 
split level 2: [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1899] [/input-8, 1957] [/input-8, 1957] [/input-8, 1899] [/input-8, 1956] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.49222588539123535
10 lb beta sum: 0.4239160120487213, worst -0.4854213297367096
Time: prepare 0.0043    bound 0.1455    transfer 0.0005    finalize 0.0017    func 0.1534    
Accumulated time: func 1.2765    prepare 0.0718    bound 1.1637    transfer 0.0130    finalize 0.0203    
all_split False
======================Cut inference begins======================
max lb tensor(0.63472158) min lb tensor(-0.48532969)
Number of Verified Splits: 189 of 208
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 16
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.034975528717041016 
BICCOS Cumulative time: 0.7341070175170898
Preprocessing time: 0.006402254104614258 Inference time: 0.02554178237915039 Add cuts time: 0.002382516860961914 Cut analysis time: 0.0006489753723144531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.48533 (20), -0.45929 (20), -0.43908 (20), -0.41626 (20), -0.41103 (20), -0.39181 (20), -0.38401 (20), -0.36618 (20), -0.33933 (20), -0.33490 (20), -0.31806 (20), -0.26465 (20), -0.13172 (20), -0.06690 (20), -0.05609 (20), -0.04396 (20), -0.02559 (20), -0.01779 (20), -0.01503 (20), 
Length of domains: 19
Time: pickout 0.0035    decision 0.0154    set_bounds 0.0149    solve 0.1535    add 0.0011    
Accumulated time: pickout 0.0127    decision 0.7129    set_bounds 0.3085    solve 1.2187    add 0.3816    
Current (lb-rhs): -0.48532968759536743
274 domains visited
Cumulative time: 3.4542524814605713

BaB round 6
batch: 19
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 14] [/input-8, 1957] [/input-8, 1947] [/input-12, 10] [/input-12, 10] 
split level 1: [/input-8, 1947] [/input-12, 14] [/input-8, 1947] [/input-12, 14] [/input-12, 14] [/input-8, 1969] [/input-8, 1969] [/input-8, 1971] [/input-12, 14] [/input-8, 1947] 
split level 2: [/input-8, 1957] [/input-8, 1957] [/input, 2455] [/input, 663] [/input-8, 1957] [/input-8, 1900] [/input-8, 1891] [/input-8, 1900] [/input, 663] [/input-8, 1957] 
split level 3: [/input-8, 1969] [/input-8, 1582] [/input-8, 1969] [/input, 2455] [/input-8, 1582] [/input-8, 1899] [/input-8, 1883] [/input-8, 1969] [/input, 2455] [/input-8, 1969] 
cut re-enabled after branching node selection
0 lb beta sum: 0.503097653388977, worst -0.44645053148269653
10 lb beta sum: 0.503097653388977, worst -0.44622141122817993
Time: prepare 0.0148    bound 0.1418    transfer 0.0024    finalize 0.0030    func 0.1639    
Accumulated time: func 1.4404    prepare 0.0869    bound 1.3055    transfer 0.0154    finalize 0.0232    
all_split False
======================Cut inference begins======================
max lb tensor(0.80975652) min lb tensor(-0.44613582)
Number of Verified Splits: 188 of 304
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.04172706604003906 
BICCOS Cumulative time: 0.7758340835571289
Preprocessing time: 0.008959770202636719 Inference time: 0.028985977172851562 Add cuts time: 0.003137350082397461 Cut analysis time: 0.0006439685821533203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.44614 (24), -0.44564 (24), -0.43112 (24), -0.43063 (24), -0.42196 (24), -0.40752 (24), -0.40263 (24), -0.39086 (24), -0.39047 (24), -0.38842 (24), -0.37841 (24), -0.37802 (24), -0.37453 (24), -0.37404 (24), -0.37250 (24), -0.37244 (24), -0.36632 (24), -0.36267 (24), -0.36214 (24), -0.35602 (24), 
Length of domains: 116
Time: pickout 0.0013    decision 0.0162    set_bounds 0.0251    solve 0.1640    add 0.0020    
Accumulated time: pickout 0.0140    decision 0.7290    set_bounds 0.3336    solve 1.3826    add 0.3836    
Current (lb-rhs): -0.44613581895828247
390 domains visited
Cumulative time: 3.70564866065979

BaB round 7
batch: 116
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 89] [/input-12, 89] [/input-12, 89] [/input-8, 1957] [/input-12, 89] [/input-8, 1971] [/input-8, 1957] [/input-12, 89] [/input-12, 89] [/input-12, 89] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4461355209350586
10 lb beta sum: 0.4078599214553833, worst -0.44609880447387695
Time: prepare 0.0053    bound 0.1393    transfer 0.0007    finalize 0.0019    func 0.1488    
Accumulated time: func 1.5892    prepare 0.0925    bound 1.4448    transfer 0.0161    finalize 0.0252    
all_split False
======================Cut inference begins======================
max lb tensor(0.45605218) min lb tensor(-0.44608474)
Number of Verified Splits: 144 of 232
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 22
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.032937049865722656 
BICCOS Cumulative time: 0.8087711334228516
Preprocessing time: 0.006921052932739258 Inference time: 0.02298450469970703 Add cuts time: 0.002323627471923828 Cut analysis time: 0.0007078647613525391
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.44608 (25), -0.44554 (25), -0.43105 (25), -0.43047 (25), -0.41154 (25), -0.39703 (25), -0.39525 (25), -0.39151 (25), -0.38990 (25), -0.38944 (25), -0.38084 (25), -0.37746 (25), -0.37740 (25), -0.37701 (25), -0.37397 (25), -0.37234 (25), -0.37223 (25), -0.36232 (25), -0.36174 (25), -0.35986 (25), 
Length of domains: 88
Time: pickout 0.0029    decision 0.0184    set_bounds 0.0098    solve 0.1489    add 0.0027    
Accumulated time: pickout 0.0169    decision 0.7474    set_bounds 0.3434    solve 1.5315    add 0.3863    
Current (lb-rhs): -0.44608473777770996
478 domains visited
Cumulative time: 3.9220221042633057

BaB round 8
batch: 88
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1971] [/input-8, 1971] [/input-8, 1957] [/input-12, 89] [/input-8, 1971] [/input-12, 89] [/input-8, 1971] [/input-8, 1971] [/input-8, 1957] [/input-12, 89] 
split level 1: [/input, 663] [/input, 663] [/input, 663] [/input-8, 1971] [/input, 663] [/input-8, 1971] [/input-8, 1582] [/input-8, 1969] [/input-8, 1971] [/input, 2472] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.42710351943969727
10 lb beta sum: 0.20459461212158203, worst -0.4269556999206543
Time: prepare 0.0087    bound 0.1449    transfer 0.0012    finalize 0.0026    func 0.1597    
Accumulated time: func 1.7489    prepare 0.1013    bound 1.5897    transfer 0.0174    finalize 0.0278    
all_split False
======================Cut inference begins======================
max lb tensor(0.46659699) min lb tensor(-0.42693496)
Number of Verified Splits: 96 of 352
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.029603004455566406 
BICCOS Cumulative time: 0.838374137878418
Preprocessing time: 0.010560750961303711 Inference time: 0.015412092208862305 Add cuts time: 0.0029795169830322266 Cut analysis time: 0.0006506443023681641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.42693 (27), -0.42640 (27), -0.41186 (27), -0.41131 (27), -0.41102 (27), -0.41016 (27), -0.40578 (27), -0.40541 (27), -0.40517 (27), -0.39621 (27), -0.39539 (27), -0.39376 (27), -0.39081 (27), -0.39024 (27), -0.38927 (27), -0.38883 (27), -0.38820 (27), -0.38734 (27), -0.38325 (27), -0.38221 (27), 
Length of domains: 256
Time: pickout 0.0025    decision 0.0196    set_bounds 0.0219    solve 0.1598    add 0.0039    
Accumulated time: pickout 0.0194    decision 0.7670    set_bounds 0.3653    solve 1.6913    add 0.3901    
Current (lb-rhs): -0.42693495750427246
734 domains visited
Cumulative time: 4.15998387336731

BaB round 9
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 162] [/input-8, 162] [/input-8, 1971] [/input-8, 162] [/input-8, 162] [/input-8, 162] [/input, 2472] [/input-8, 162] [/input-8, 162] [/input-8, 1971] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4211153984069824
10 lb beta sum: 0.19730767607688904, worst -0.42096853256225586
Time: prepare 0.0121    bound 0.1511    transfer 0.0027    finalize 0.0030    func 0.1730    
Accumulated time: func 1.9219    prepare 0.1137    bound 1.7409    transfer 0.0201    finalize 0.0308    
all_split False
======================Cut inference begins======================
max lb tensor(-0.07654700) min lb tensor(-0.42090917)
Number of Verified Splits: 0 of 512
No cut inferred: All or none verified.
Total number of valid cuts: 22.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.015249252319335938 
BICCOS Cumulative time: 0.8536233901977539
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.42091 (28), -0.42050 (28), -0.40865 (28), -0.40810 (28), -0.40461 (28), -0.40394 (28), -0.40377 (28), -0.40348 (28), -0.39728 (28), -0.39719 (28), -0.39681 (28), -0.39640 (28), -0.39578 (28), -0.39034 (28), -0.38813 (28), -0.38714 (28), -0.38701 (28), -0.38685 (28), -0.38657 (28), -0.38569 (28), 
Length of domains: 512
Time: pickout 0.0067    decision 0.0267    set_bounds 0.0217    solve 0.1732    add 0.0040    
Accumulated time: pickout 0.0261    decision 0.7937    set_bounds 0.3870    solve 1.8645    add 0.3942    
Current (lb-rhs): -0.42090916633605957
1246 domains visited
Cumulative time: 4.408912420272827

BaB round 10
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 77] [/input-8, 1900] [/input, 152] [/input-8, 1900] [/input-12, 77] [/input-8, 1874] [/input-8, 162] [/input-8, 1900] [/input-12, 77] [/input, 152] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23661655187606812, worst -0.4132821559906006
10 lb beta sum: 0.23661655187606812, worst -0.4132211208343506
Time: prepare 0.0522    bound 0.1503    transfer 0.0057    finalize 0.0070    func 0.2219    
Accumulated time: func 2.1438    prepare 0.1661    bound 1.8912    transfer 0.0258    finalize 0.0377    
all_split False
======================Cut inference begins======================
max lb tensor(-0.01675090) min lb tensor(-0.41317010)
Number of Verified Splits: 0 of 1024
No cut inferred: All or none verified.
Total number of valid cuts: 22.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.031905412673950195 
BICCOS Cumulative time: 0.8855288028717041
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.41317 (29), -0.41278 (29), -0.40578 (29), -0.40538 (29), -0.40094 (29), -0.40039 (29), -0.39654 (29), -0.39620 (29), -0.39576 (29), -0.39569 (29), -0.39355 (29), -0.39300 (29), -0.38965 (29), -0.38917 (29), -0.38914 (29), -0.38881 (29), -0.38860 (29), -0.38836 (29), -0.38830 (29), -0.38802 (29), 
Length of domains: 1024
Time: pickout 0.0121    decision 0.0421    set_bounds 0.0424    solve 0.2222    add 0.1392    
Accumulated time: pickout 0.0382    decision 0.8358    set_bounds 0.4295    solve 2.0867    add 0.5334    
Current (lb-rhs): -0.41317009925842285
2270 domains visited
Cumulative time: 4.907483339309692

BaB round 11
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 50] [/input-8, 1899] [/input-8, 1582] [/input-8, 1969] [/input-12, 50] [/input-8, 1899] [/input, 152] [/input-8, 1899] [/input-12, 50] [/input-8, 1582] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23661655187606812, worst -0.40621256828308105
10 lb beta sum: 0.23661655187606812, worst -0.40607380867004395
Time: prepare 0.1064    bound 0.1829    transfer 0.0068    finalize 0.1889    func 0.4996    
Accumulated time: func 2.6434    prepare 0.2728    bound 2.0741    transfer 0.0326    finalize 0.2266    
all_split False
======================Cut inference begins======================
max lb tensor(0.00126567) min lb tensor(-0.40601945)
Number of Verified Splits: 2 of 2048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.06583189964294434 
BICCOS Cumulative time: 0.9513607025146484
Preprocessing time: 0.06392240524291992 Inference time: 0.0004963874816894531 Add cuts time: 0.0006537437438964844 Cut analysis time: 0.0007593631744384766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40602 (30), -0.40555 (30), -0.39863 (30), -0.39816 (30), -0.39373 (30), -0.39315 (30), -0.38891 (30), -0.38838 (30), -0.38820 (30), -0.38743 (30), -0.38633 (30), -0.38575 (30), -0.38331 (30), -0.38319 (30), -0.38151 (30), -0.38118 (30), -0.38098 (30), -0.38087 (30), -0.38081 (30), -0.38050 (30), 
Length of domains: 2046
Time: pickout 0.0708    decision 0.0719    set_bounds 0.0862    solve 0.5000    add 0.0232    
Accumulated time: pickout 0.1090    decision 0.9077    set_bounds 0.5157    solve 2.5867    add 0.5566    
Current (lb-rhs): -0.4060194492340088
4316 domains visited
Cumulative time: 5.729138612747192

BaB round 12
batch: 2046
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1933] [/input-8, 1969] [/input-8, 162] [/input-12, 77] [/input-8, 1933] [/input-12, 77] [/input, 663] [/input-12, 77] [/input-8, 1933] [/input-8, 162] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23638388514518738, worst -0.3972804546356201
10 lb beta sum: 0.23638388514518738, worst -0.39724302291870117
Time: prepare 0.2091    bound 0.3010    transfer 0.0222    finalize 0.0299    func 0.5896    
Accumulated time: func 3.2330    prepare 0.4822    bound 2.3751    transfer 0.0548    finalize 0.2565    
all_split False
======================Cut inference begins======================
max lb tensor(0.04483381) min lb tensor(-0.39719605)
Number of Verified Splits: 31 of 4092
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.1450514793395996 
BICCOS Cumulative time: 1.096412181854248
Preprocessing time: 0.13603639602661133 Inference time: 0.006158351898193359 Add cuts time: 0.002127408981323242 Cut analysis time: 0.0007293224334716797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39720 (31), -0.39674 (31), -0.38982 (31), -0.38936 (31), -0.38844 (31), -0.38810 (31), -0.38416 (31), -0.38362 (31), -0.38111 (31), -0.38105 (31), -0.38071 (31), -0.38066 (31), -0.38028 (31), -0.37916 (31), -0.37676 (31), -0.37622 (31), -0.37455 (31), -0.37410 (31), -0.37402 (31), -0.37371 (31), 
Length of domains: 4061
Time: pickout 0.0469    decision 0.1342    set_bounds 0.1881    solve 0.5905    add 0.0428    
Accumulated time: pickout 0.1559    decision 1.0419    set_bounds 0.7038    solve 3.1773    add 0.5994    
Current (lb-rhs): -0.39719605445861816
8377 domains visited
Cumulative time: 6.884644269943237

BaB round 13
batch: 4061
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1932] [/input-12, 77] [/input-12, 77] [/input-8, 1899] [/input-8, 1932] [/input-12, 50] [/input-12, 77] [/input-12, 50] [/input-8, 1582] [/input-12, 77] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23456501960754395, worst -0.3901185989379883
10 lb beta sum: 0.23456501960754395, worst -0.39002084732055664
Time: prepare 0.4433    bound 0.5195    transfer 0.0898    finalize 0.0732    func 1.1794    
Accumulated time: func 4.4124    prepare 0.9259    bound 2.8946    transfer 0.1447    finalize 0.3296    
all_split False
======================Cut inference begins======================
max lb tensor(0.06745687) min lb tensor(-0.38997245)
Number of Verified Splits: 230 of 8122
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.3306429386138916 
BICCOS Cumulative time: 1.4270551204681396
Preprocessing time: 0.26827502250671387 Inference time: 0.05633282661437988 Add cuts time: 0.0051691532135009766 Cut analysis time: 0.000865936279296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38997 (32), -0.38957 (32), -0.38261 (32), -0.38219 (32), -0.38067 (32), -0.38039 (32), -0.37731 (32), -0.37684 (32), -0.37524 (32), -0.37498 (32), -0.37473 (32), -0.37430 (32), -0.37328 (32), -0.37327 (32), -0.37302 (32), -0.37194 (32), -0.36991 (32), -0.36976 (32), -0.36948 (32), -0.36944 (32), 
Length of domains: 7892
Time: pickout 0.0908    decision 0.5440    set_bounds 0.4057    solve 1.3847    add 0.0456    
Accumulated time: pickout 0.2467    decision 1.5859    set_bounds 1.1095    solve 4.5619    add 0.6450    
Current (lb-rhs): -0.389972448348999
16269 domains visited
Cumulative time: 9.699021339416504

BaB round 14
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1972] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-8, 1900] [/input-8, 1933] [/input-12, 50] [/input-8, 1933] [/input-8, 1972] [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.2339305728673935, worst -0.3817780017852783
10 lb beta sum: 0.2339305728673935, worst -0.381697416305542
Time: prepare 0.7421    bound 0.5227    transfer 0.0139    finalize 0.0652    func 1.3978    
Accumulated time: func 5.8102    prepare 1.6683    bound 3.4172    transfer 0.1586    finalize 0.3948    
all_split False
======================Cut inference begins======================
max lb tensor(0.03865555) min lb tensor(-0.38168478)
Number of Verified Splits: 196 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.3536655902862549 
BICCOS Cumulative time: 1.7807207107543945
Preprocessing time: 0.2941014766693115 Inference time: 0.05376720428466797 Add cuts time: 0.004958152770996094 Cut analysis time: 0.0008387565612792969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38168 (33), -0.38129 (33), -0.37524 (32), -0.37498 (32), -0.37424 (33), -0.37385 (33), -0.37237 (33), -0.37213 (33), -0.36976 (32), -0.36948 (32), -0.36913 (33), -0.36867 (33), -0.36790 (32), -0.36761 (32), -0.36645 (33), -0.36603 (33), -0.36494 (33), -0.36486 (33), -0.36468 (33), -0.36365 (33), 
Length of domains: 11792
Time: pickout 0.0874    decision 0.2450    set_bounds 0.3995    solve 1.4004    add 0.0432    
Accumulated time: pickout 0.3341    decision 1.8309    set_bounds 1.5090    solve 5.9624    add 0.6882    
Current (lb-rhs): -0.3816847801208496
24265 domains visited
current_vram/total_varm: 12.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 12.250460147857666

BaB round 15
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1933] [/input-12, 77] [/input-12, 77] [/input, 152] [/input-12, 77] [/input-8, 1969] [/input-8, 1891] [/input-8, 1900] [/input-8, 1933] [/input-12, 77] 
cut re-enabled after branching node selection
0 lb beta sum: 0.22604142129421234, worst -0.3725700378417969
10 lb beta sum: 0.22604142129421234, worst -0.3725013732910156
Time: prepare 0.9038    bound 0.9622    transfer 0.1094    finalize 0.4929    func 2.5767    
Accumulated time: func 8.3869    prepare 2.5725    bound 4.3794    transfer 0.2679    finalize 0.8876    
all_split False
======================Cut inference begins======================
max lb tensor(0.08347335) min lb tensor(-0.37248421)
Number of Verified Splits: 752 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.8123891353607178 
BICCOS Cumulative time: 2.5931098461151123
Preprocessing time: 0.5888712406158447 Inference time: 0.20534276962280273 Add cuts time: 0.01713109016418457 Cut analysis time: 0.0010440349578857422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.37248 (34), -0.37210 (34), -0.36654 (33), -0.36626 (33), -0.36502 (34), -0.36464 (34), -0.36317 (34), -0.36292 (34), -0.36127 (33), -0.36105 (33), -0.35990 (34), -0.35946 (34), -0.35908 (33), -0.35882 (33), -0.35726 (34), -0.35685 (34), -0.35581 (33), -0.35572 (34), -0.35564 (34), -0.35547 (34), 
Length of domains: 19232
Time: pickout 0.1924    decision 0.7881    set_bounds 0.8052    solve 2.5810    add 0.0848    
Accumulated time: pickout 0.5265    decision 2.6190    set_bounds 2.3142    solve 8.5433    add 0.7730    
Current (lb-rhs): -0.3724842071533203
39897 domains visited
current_vram/total_varm: 25.0GB/99.9GB, batch_size increase to 16384
Cumulative time: 17.558353424072266

BaB round 16
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1899] [/input, 2519] [/input-8, 1969] [/input, 2504] [/input-8, 1582] [/input, 2504] [/input-8, 1891] [/input-8, 1933] [/input-12, 77] [/input, 168] 
cut re-enabled after branching node selection
0 lb beta sum: 0.22124311327934265, worst -0.36035680770874023
10 lb beta sum: 0.22124311327934265, worst -0.360304594039917
Time: prepare 1.7675    bound 1.8490    transfer 0.1545    finalize 0.5753    func 4.5641    
Accumulated time: func 12.9510    prepare 4.3405    bound 6.2284    transfer 0.4224    finalize 1.4629    
all_split False
======================Cut inference begins======================
max lb tensor(0.08506528) min lb tensor(-0.36025047)
Number of Verified Splits: 2035 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 2.045600175857544 
BICCOS Cumulative time: 4.638710021972656
Preprocessing time: 1.4731101989746094 Inference time: 0.5283079147338867 Add cuts time: 0.04307985305786133 Cut analysis time: 0.0011022090911865234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.37248 (34), -0.37210 (34), -0.36502 (34), -0.36464 (34), -0.36025 (35), -0.36001 (35), -0.35990 (34), -0.35946 (34), -0.35732 (34), -0.35726 (34), -0.35704 (34), -0.35685 (34), -0.35564 (34), -0.35446 (34), -0.35245 (34), -0.35206 (34), -0.35202 (34), -0.35184 (34), -0.35013 (35), -0.34987 (35), 
Length of domains: 33581
Time: pickout 0.3656    decision 2.0758    set_bounds 1.9110    solve 4.5704    add 0.1545    
Accumulated time: pickout 0.8920    decision 4.6947    set_bounds 4.2253    solve 13.1137    add 0.9276    
Current (lb-rhs): -0.3724842071533203
70630 domains visited
current_vram/total_varm: 33.9GB/99.9GB, batch_size increase to 32768
Cumulative time: 28.731646060943604

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2504] [/input, 2457] [/input-8, 1892] [/input-8, 1891] [/input-8, 1892] [/input, 4026] [/input-8, 1972] [/input, 4026] [/input, 2457] [/input, 4026] 
cut re-enabled after branching node selection
0 lb beta sum: 0.21279801428318024, worst -0.3692331314086914
10 lb beta sum: 0.21279801428318024, worst -0.3692042827606201
Time: prepare 3.5265    bound 8.8197    transfer 0.3152    finalize 0.5578    func 14.2182    
Accumulated time: func 27.1692    prepare 7.8675    bound 15.0481    transfer 0.7376    finalize 2.0207    
all_split False
======================Cut inference begins======================
max lb tensor(0.08473769) min lb tensor(-0.36918235)
Number of Verified Splits: 4557 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 4
#cuts 10-12: 6
#cuts >= 20: 0
BICCOS time: 4.316459894180298 
BICCOS Cumulative time: 8.955169916152954
Preprocessing time: 2.3163843154907227 Inference time: 1.8932878971099854 Add cuts time: 0.10515570640563965 Cut analysis time: 0.0016319751739501953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36918 (35), -0.36879 (35), -0.35903 (35), -0.35864 (35), -0.35604 (35), -0.35566 (35), -0.35413 (35), -0.35397 (35), -0.35385 (35), -0.35355 (35), -0.35234 (35), -0.35118 (35), -0.35116 (36), -0.35090 (36), -0.34937 (35), -0.34915 (35), -0.34739 (36), -0.34716 (36), -0.34592 (35), -0.34568 (35), 
Length of domains: 61792
Time: pickout 0.6934    decision 3.4077    set_bounds 4.0112    solve 14.2296    add 0.2772    
Accumulated time: pickout 1.5855    decision 8.1024    set_bounds 8.2365    solve 27.3433    add 1.2048    
Current (lb-rhs): -0.3691823482513428
131609 domains visited
Cumulative time: 55.796616077423096

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1948] [/input, 4026] [/input-8, 1582] [/input-8, 1892] [/input-8, 1891] [/input-8, 1892] [/input, 2504] [/input-8, 1972] [/input-8, 1972] [/input-8, 1582] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.35738301277160645
10 lb beta sum: 0.15562501549720764, worst -0.35732030868530273
Time: prepare 1.8919    bound 10.2640    transfer 0.3179    finalize 1.3570    func 14.2665    
Accumulated time: func 41.4357    prepare 9.7600    bound 25.3121    transfer 1.0556    finalize 3.3778    
all_split False
======================Cut inference begins======================
max lb tensor(0.08562890) min lb tensor(-0.35731125)
Number of Verified Splits: 5753 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 57.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 28
#cuts 10-12: 9
#cuts >= 20: 0
BICCOS time: 4.9389426708221436 
BICCOS Cumulative time: 13.894112586975098
Preprocessing time: 3.1509459018707275 Inference time: 1.620985746383667 Add cuts time: 0.16304397583007812 Cut analysis time: 0.0039670467376708984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35731 (36), -0.35694 (36), -0.35545 (36), -0.35507 (36), -0.34746 (36), -0.34739 (36), -0.34716 (36), -0.34709 (36), -0.34466 (36), -0.34445 (36), -0.34428 (36), -0.34419 (36), -0.34378 (36), -0.34318 (36), -0.34232 (36), -0.34229 (36), -0.34214 (36), -0.34200 (36), -0.34192 (36), -0.34170 (36), 
Length of domains: 88807
Time: pickout 0.7126    decision 3.3836    set_bounds 3.9457    solve 14.2792    add 0.3429    
Accumulated time: pickout 2.2981    decision 11.4860    set_bounds 12.1822    solve 41.6225    add 1.5476    
Current (lb-rhs): -0.3573112487792969
191392 domains visited
Cumulative time: 83.57079553604126

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1874] [/input-8, 1972] [/input-8, 1899] [/input-8, 1972] [/input-8, 1972] [/input-8, 1948] [/input-12, 50] [/input, 2519] [/input, 151] [/input-8, 1948] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34789538383483887
10 lb beta sum: 0.15709370374679565, worst -0.34767627716064453
Time: prepare 2.0568    bound 10.3891    transfer 0.3147    finalize 1.5982    func 14.8022    
Accumulated time: func 56.2379    prepare 11.8174    bound 35.7012    transfer 1.3703    finalize 4.9760    
all_split False
======================Cut inference begins======================
max lb tensor(0.08601728) min lb tensor(-0.34747052)
Number of Verified Splits: 6206 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 90.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 51
#cuts 10-12: 19
#cuts >= 20: 0
BICCOS time: 5.7368762493133545 
BICCOS Cumulative time: 19.630988836288452
Preprocessing time: 2.4806857109069824 Inference time: 3.0628304481506348 Add cuts time: 0.18714690208435059 Cut analysis time: 0.006213188171386719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35731 (36), -0.35694 (36), -0.34747 (37), -0.34746 (36), -0.34709 (36), -0.34701 (37), -0.34419 (36), -0.34378 (36), -0.34229 (36), -0.34214 (36), -0.34200 (36), -0.34170 (36), -0.34043 (36), -0.34013 (36), -0.33913 (37), -0.33884 (37), -0.33752 (36), -0.33752 (37), -0.33728 (36), -0.33727 (37), 
Length of domains: 115369
Time: pickout 0.7517    decision 4.0380    set_bounds 3.4679    solve 14.8156    add 0.3051    
Accumulated time: pickout 3.0499    decision 15.5241    set_bounds 15.6500    solve 56.4381    add 1.8527    
Current (lb-rhs): -0.3573112487792969
250722 domains visited
Cumulative time: 113.03629088401794

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1900] [/input-8, 1932] [/input, 4026] [/input-8, 1933] [/input, 2427] [/input-8, 1948] [/input-8, 1972] [/input-8, 1933] [/input-8, 1972] [/input-8, 1874] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34975600242614746
10 lb beta sum: 0.14650903642177582, worst -0.34952783584594727
Time: prepare 2.3990    bound 10.5388    transfer 0.3145    finalize 0.6657    func 14.3669    
Accumulated time: func 70.6048    prepare 14.2177    bound 46.2400    transfer 1.6848    finalize 5.6417    
all_split False
======================Cut inference begins======================
max lb tensor(0.08265296) min lb tensor(-0.34935331)
Number of Verified Splits: 7254 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 107.
#cuts 1-3: 18
#cuts 4-6: 3
#cuts 7-9: 67
#cuts 10-12: 18
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 6.686331272125244 
BICCOS Cumulative time: 26.317320108413696
Preprocessing time: 4.085965394973755 Inference time: 2.1065993309020996 Add cuts time: 0.48653078079223633 Cut analysis time: 0.00723576545715332
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34935 (37), -0.34889 (37), -0.34747 (37), -0.34701 (37), -0.34229 (36), -0.34200 (36), -0.33951 (37), -0.33939 (37), -0.33913 (37), -0.33907 (37), -0.33902 (37), -0.33884 (37), -0.33752 (36), -0.33752 (37), -0.33728 (36), -0.33728 (37), -0.33720 (37), -0.33698 (37), -0.33662 (37), -0.33655 (37), 
Length of domains: 140883
Time: pickout 0.9198    decision 3.5542    set_bounds 5.9607    solve 14.3843    add 0.3007    
Accumulated time: pickout 3.9697    decision 19.0783    set_bounds 21.6107    solve 70.8224    add 2.1534    
Current (lb-rhs): -0.3493533134460449
309004 domains visited
Cumulative time: 145.13151621818542

BaB round 21
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1932] [/input, 663] [/input-8, 1972] [/input-8, 1932] [/input-8, 1932] [/input-8, 1933] [/input-8, 1933] [/input-8, 1932] [/input-8, 1932] [/input, 663] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.33508849143981934
10 lb beta sum: 0.15009081363677979, worst -0.33480048179626465
Time: prepare 2.2394    bound 10.5891    transfer 0.3154    finalize 0.6518    func 14.2410    
Accumulated time: func 84.8459    prepare 16.4578    bound 56.8291    transfer 2.0002    finalize 6.2935    
all_split False
======================Cut inference begins======================
max lb tensor(0.07715121) min lb tensor(-0.33471084)
Number of Verified Splits: 5422 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 119.
#cuts 1-3: 18
#cuts 4-6: 4
#cuts 7-9: 67
#cuts 10-12: 29
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 6.597815036773682 
BICCOS Cumulative time: 32.91513514518738
Preprocessing time: 4.50646448135376 Inference time: 1.6207876205444336 Add cuts time: 0.4621114730834961 Cut analysis time: 0.008451461791992188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34935 (37), -0.34889 (37), -0.34747 (37), -0.34701 (37), -0.33951 (37), -0.33939 (37), -0.33907 (37), -0.33902 (37), -0.33752 (37), -0.33728 (37), -0.33720 (37), -0.33698 (37), -0.33662 (37), -0.33655 (37), -0.33618 (37), -0.33549 (37), -0.33540 (37), -0.33519 (37), -0.33509 (37), -0.33488 (37), 
Length of domains: 168229
Time: pickout 0.8104    decision 3.5090    set_bounds 5.5341    solve 14.2600    add 0.2982    
Accumulated time: pickout 4.7800    decision 22.5872    set_bounds 27.1449    solve 85.0824    add 2.4515    
Current (lb-rhs): -0.3493533134460449
369118 domains visited
Cumulative time: 176.39567255973816

BaB round 22
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 168] [/input-8, 1932] [/input-8, 1933] [/input-8, 1932] [/input, 2457] [/input-8, 1932] [/input-8, 1933] [/input-8, 1933] [/input-8, 1933] [/input-8, 1882] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34091687202453613
10 lb beta sum: 0.14945025742053986, worst -0.3404850959777832
Time: prepare 2.2075    bound 10.6204    transfer 0.3118    finalize 0.6759    func 14.2738    
Accumulated time: func 99.1196    prepare 18.6659    bound 67.4495    transfer 2.3120    finalize 6.9694    
all_split False
======================Cut inference begins======================
max lb tensor(0.08153313) min lb tensor(-0.34035301)
Number of Verified Splits: 7276 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 151.
#cuts 1-3: 18
#cuts 4-6: 4
#cuts 7-9: 100
#cuts 10-12: 26
#cuts 13-15: 3
#cuts >= 20: 0
BICCOS time: 7.342990159988403 
BICCOS Cumulative time: 40.25812530517578
Preprocessing time: 2.8377373218536377 Inference time: 2.1034486293792725 Add cuts time: 2.3910529613494873 Cut analysis time: 0.01075124740600586
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34935 (37), -0.34889 (37), -0.34035 (38), -0.33996 (38), -0.33951 (37), -0.33939 (37), -0.33907 (37), -0.33902 (37), -0.33752 (37), -0.33728 (37), -0.33720 (37), -0.33698 (37), -0.33655 (37), -0.33549 (37), -0.33519 (37), -0.33509 (37), -0.33488 (37), -0.33471 (37), -0.33446 (37), -0.33301 (37), 
Length of domains: 193721
Time: pickout 0.7833    decision 3.4673    set_bounds 5.6434    solve 14.2931    add 0.3053    
Accumulated time: pickout 5.5634    decision 26.0545    set_bounds 32.7883    solve 99.3754    add 2.7568    
Current (lb-rhs): -0.3493533134460449
427378 domains visited
Time out!!!!!!!!
Result: unknown in 212.5246 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 102, vnnlib ID: 102 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.89392090, -38.18214035, -30.58665657, -31.68981361, -29.23264122,
         -32.26233673, -32.68276978, -32.60694504, -36.23016739, -37.37868118]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [847]; unstable size 847; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 314, 1, 847] with unstable size 313 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 42, 1, 847] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 847] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [313]; unstable size 313; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 42, 1, 313] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 313] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [41]; unstable size 41; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.71611643,  4.47966385, -2.09915829, -0.06707585,  0.22555518,
          0.47232318,  0.33973604,  2.86614919,  4.02271032]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.89392090, -38.18214035, -30.58665657, -31.68981361, -29.23264122,
         -32.26233673, -32.68276978, -32.60694504, -36.23016739, -37.37868118]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.21it/s]100%|██████████| 1/1 [00:00<00:00,  8.20it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.93464279, -39.18879700, -31.30450630, -33.00727081, -30.88543892,
          -33.58504868, -33.92905426, -34.06788635, -37.12657547, -38.45182037],
         [-34.93464279, -39.18879700, -31.30450630, -33.00727081, -30.88543892,
          -33.58504868, -33.92905426, -34.06788635, -37.12657547, -38.45182037]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.41906738, 2.12183189]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1256 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.881765365600586
alpha/beta optimization time: 1.2981219291687012
initial alpha-crown bounds: tensor([[ 0.98844171,  4.75547218, -1.88465667,  0.06293523,  0.39062166,
          0.61370182,  0.48829103,  3.17112875,  4.29582930]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -1.8846566677093506
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.51636052131653
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.51631879806519
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.51628828048706
Verifying property 2 with 1 instances.
##### Instance 102 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.88465667]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.89392090, -38.18214035, -30.58665657, -31.68981361, -29.23264122,
        -32.26233673, -32.68276978, -32.60694504, -36.23016739, -37.37868118],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.88465667]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 847
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 309
Node /15 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 1194
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010967254638671875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.884650707244873
10 lb beta sum: 0.0, worst -1.8846580982208252
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0566    transfer 0.0001    finalize 0.0001    func 0.0571    
Accumulated time: func 0.0571    prepare 0.0002    bound 0.0566    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] 
split level 1: [/input-12, 70] 
split level 2: [/input-12, 92] 
split level 3: [/input-12, 66] 
split level 4: [/input-12, 30] 
split level 5: [/input-12, 7] 
split level 6: [/input-12, 51] 
split level 7: [/input-12, 65] 
split level 8: [/input-12, 38] 
split level 9: [/input-12, 15] 
split level 10: [/input-12, 62] 
split level 11: [/input-12, 48] 
split level 12: [/input-12, 28] 
split level 13: [/input-12, 22] 
split level 14: [/input-12, 10] 
split level 15: [/input-12, 97] 
split level 16: [/input-12, 56] 
split level 17: [/input-12, 1] 
split level 18: [/input-12, 85] 
split level 19: [/input-12, 9] 
split level 20: [/input-12, 87] 
split level 21: [/input-8, 1570] 
split level 22: [/input-12, 75] 
split level 23: [/input-8, 1589] 
split level 24: [/input-8, 1891] 
split level 25: [/input-8, 621] 
split level 26: [/input-12, 31] 
split level 27: [/input-8, 1572] 
split level 28: [/input-8, 1574] 
split level 29: [/input-8, 1866] 
split level 30: [/input-8, 1836] 
split level 31: [/input-8, 1531] 
split level 32: [/input-8, 540] 
split level 33: [/input-12, 20] 
split level 34: [/input-8, 1885] 
split level 35: [/input-8, 557] 
split level 36: [/input-8, 531] 
split level 37: [/input-8, 1682] 
split level 38: [/input-8, 162] 
split level 39: [/input-8, 1548] 
split level 40: [/input-8, 1426] 
split level 41: [/input-8, 550] 
split level 42: [/input-8, 629] 
split level 43: [/input-8, 1857] 
split level 44: [/input-8, 1756] 
split level 45: [/input-8, 1490] 
split level 46: [/input-8, 538] 
split level 47: [/input-8, 348] 
split level 48: [/input-8, 708] 
split level 49: [/input-8, 1530] 
split level 50: [/input-8, 549] 
split level 51: [/input, 3686] 
split level 52: [/input, 1994] 
split level 53: [/input-8, 1418] 
split level 54: [/input, 3928] 
split level 55: [/input-8, 1034] 
split level 56: [/input-8, 670] 
split level 57: [/input-8, 171] 
split level 58: [/input, 3702] 
split level 59: [/input-8, 163] 
split level 60: [/input-8, 644] 
split level 61: [/input, 3917] 
split level 62: [/input, 1960] 
split level 63: [/input, 136] 
split level 64: [/input-8, 1577] 
split level 65: [/input, 1956] 
split level 66: [/input-8, 1894] 
split level 67: [/input, 185] 
split level 68: [/input-8, 1133] 
split level 69: [/input, 152] 
split level 70: [/input, 3654] 
split level 71: [/input-8, 1059] 
split level 72: [/input-8, 1692] 
split level 73: [/input-8, 1586] 
split level 74: [/input-8, 1797] 
split level 75: [/input-8, 1914] 
split level 76: [/input-8, 604] 
split level 77: [/input, 217] 
split level 78: [/input-8, 935] 
split level 79: [/input-8, 1067] 
split level 80: [/input, 234] 
split level 81: [/input-8, 630] 
split level 82: [/input, 2007] 
split level 83: [/input-8, 622] 
split level 84: [/input-8, 1597] 
split level 85: [/input-8, 1900] 
split level 86: [/input, 2100] 
split level 87: [/input, 3914] 
split level 88: [/input-8, 1886] 
split level 89: [/input, 3945] 
split level 90: [/input, 3915] 
split level 91: [/input, 1077] 
split level 92: [/input, 1230] 
split level 93: [/input, 1079] 
split level 94: [/input, 135] 
split level 95: [/input-8, 2023] 
split level 96: [/input-8, 507] 
split level 97: [/input, 3242] 
split level 98: [/input, 1816] 
split level 99: [/input-8, 1897] 
split level 100: [/input, 3899] 
split level 101: [/input-8, 1916] 
split level 102: [/input-8, 1432] 
split level 103: [/input-8, 1310] 
split level 104: [/input, 4004] 
split level 105: [/input-8, 1915] 
split level 106: [/input-8, 1340] 
split level 107: [/input-8, 1529] 
split level 108: [/input-8, 952] 
split level 109: [/input, 1978] 
split level 110: [/input, 2440] 
split level 111: [/input, 2506] 
split level 112: [/input, 3719] 
split level 113: [/input-8, 416] 
split level 114: [/input-8, 1906] 
split level 115: [/input, 181] 
split level 116: [/input, 3701] 
split level 117: [/input-8, 565] 
split level 118: [/input-8, 1596] 
split level 119: [/input, 1961] 
split level 120: [/input, 1014] 
split level 121: [/input-8, 2034] 
split level 122: [/input-8, 1009] 
split level 123: [/input, 1834] 
split level 124: [/input, 3140] 
split level 125: [/input, 3653] 
split level 126: [/input, 2806] 
split level 127: [/input-8, 590] 
split level 128: [/input, 1214] 
split level 129: [/input, 2441] 
split level 130: [/input-8, 407] 
split level 131: [/input, 3884] 
split level 132: [/input, 1955] 
split level 133: [/input, 1977] 
split level 134: [/input, 1656] 
split level 135: [/input-8, 1045] 
split level 136: [/input, 1867] 
split level 137: [/input, 1705] 
split level 138: [/input-8, 512] 
split level 139: [/input-8, 1108] 
split level 140: [/input, 3670] 
split level 141: [/input, 378] 
split level 142: [/input, 1211] 
split level 143: [/input-8, 1259] 
split level 144: [/input, 3882] 
split level 145: [/input, 3685] 
split level 146: [/input, 1833] 
split level 147: [/input, 760] 
split level 148: [/input, 3948] 
split level 149: [/input, 235] 
split level 150: [/input, 214] 
split level 151: [/input-8, 637] 
split level 152: [/input-8, 958] 
split level 153: [/input-8, 1494] 
split level 154: [/input-8, 1042] 
split level 155: [/input-8, 1100] 
split level 156: [/input-8, 926] 
split level 157: [/input, 163] 
split level 158: [/input-8, 1593] 
split level 159: [/input, 1851] 
split level 160: [/input, 3668] 
split level 161: [/input, 1706] 
split level 162: [/input-8, 1746] 
split level 163: [/input, 3127] 
split level 164: [/input, 983] 
split level 165: [/input-8, 1737] 
split level 166: [/input, 1226] 
split level 167: [/input, 999] 
split level 168: [/input, 3669] 
split level 169: [/input-8, 570] 
split level 170: [/input, 1669] 
split level 171: [/input, 3864] 
split level 172: [/input-8, 969] 
split level 173: [/input, 186] 
split level 174: [/input, 4070] 
split level 175: [/input, 3212] 
split level 176: [/input, 2502] 
split level 177: [/input-8, 457] 
split level 178: [/input, 1739] 
split level 179: [/input, 1849] 
split level 180: [/input, 3243] 
split level 181: [/input-8, 934] 
split level 182: [/input, 3720] 
split level 183: [/input, 2439] 
split level 184: [/input-8, 1478] 
split level 185: [/input, 1192] 
split level 186: [/input-8, 1869] 
split level 187: [/input, 1722] 
split level 188: [/input, 2539] 
split level 189: [/input, 3676] 
split level 190: [/input, 1835] 
split level 191: [/input, 197] 
split level 192: [/input, 573] 
split level 193: [/input-8, 951] 
split level 194: [/input-8, 776] 
split level 195: [/input, 3687] 
split level 196: [/input, 1238] 
split level 197: [/input, 3736] 
split level 198: [/input, 866] 
split level 199: [/input, 1740] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.8844428062438965
10 lb beta sum: 0.0, worst -1.8844470977783203
Time: prepare 0.0113    bound 0.1050    transfer 0.0008    finalize 0.0030    func 0.1227    
Accumulated time: func 0.1797    prepare 0.0217    bound 0.1615    transfer 0.0009    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(-0.57938373) min lb tensor(-1.88443780)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.012337207794189453 
BICCOS Cumulative time: 0.012337207794189453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.86015 (1), -1.85604 (1), -1.85569 (1), -1.85433 (1), -1.85344 (1), -1.84601 (1), -1.84550 (1), -1.84350 (1), -1.84316 (1), -1.84249 (1), -1.83986 (1), -1.83801 (1), -1.83785 (1), -1.83320 (1), -1.82722 (1), -1.82480 (1), -1.82148 (1), -1.81676 (1), -1.80850 (1), -1.80635 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5444    set_bounds 0.0095    solve 0.1228    add 0.0724    
Accumulated time: pickout 0.0003    decision 0.5444    set_bounds 0.0095    solve 0.1228    add 0.0724    
Current (lb-rhs): -1.8601484298706055
50 domains visited
Cumulative time: 0.8294284343719482

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 66] [/input-12, 66] [/input-12, 92] [/input-12, 92] 
split level 1: [/input-12, 92] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 92] [/input-12, 30] [/input-12, 66] [/input-12, 30] 
split level 2: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
split level 3: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.7152163982391357
10 lb beta sum: 0.0, worst -1.709742546081543
Time: prepare 0.0118    bound 0.1037    transfer 0.0012    finalize 0.0021    func 0.1214    
Accumulated time: func 0.3011    prepare 0.0337    bound 0.2652    transfer 0.0021    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(-0.11179082) min lb tensor(-1.70946479)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.011724710464477539 
BICCOS Cumulative time: 0.024061918258666992
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.17280 (2), -1.17063 (2), -1.17026 (2), -1.16777 (2), -1.13756 (2), -1.12604 (2), -1.12199 (2), -1.11841 (2), -1.11776 (2), -1.09265 (2), -1.06410 (2), -1.05179 (2), -1.02496 (2), -1.01855 (2), -1.00428 (2), -0.99097 (2), -0.98716 (2), -0.96629 (2), -0.95651 (2), -0.93939 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0205    set_bounds 0.0146    solve 0.1214    add 0.0762    
Accumulated time: pickout 0.0014    decision 0.5649    set_bounds 0.0241    solve 0.2442    add 0.1486    
Current (lb-rhs): -1.1727983951568604
100 domains visited
Cumulative time: 1.0751874446868896

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 92] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 92] 
split level 1: [/input-12, 30] [/input-12, 92] [/input-12, 30] [/input-12, 30] [/input-12, 92] [/input-12, 7] [/input-12, 92] [/input-12, 92] [/input-12, 30] [/input-12, 30] 
split level 2: [/input-12, 7] [/input-12, 30] [/input-12, 7] [/input-12, 7] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 7] [/input-12, 7] 
split level 3: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 7] [/input-12, 15] [/input-12, 7] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0706967115402222
10 lb beta sum: 0.0, worst -1.0687146186828613
Time: prepare 0.0110    bound 0.1013    transfer 0.0008    finalize 0.0023    func 0.1179    
Accumulated time: func 0.4190    prepare 0.0449    bound 0.3665    transfer 0.0029    finalize 0.0076    
all_split False
======================Cut inference begins======================
max lb tensor(0.26388168) min lb tensor(-1.06792331)
Number of Verified Splits: 42 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 1
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.015134572982788086 
BICCOS Cumulative time: 0.03919649124145508
Preprocessing time: 0.011743307113647461 Inference time: 0.0019881725311279297 Add cuts time: 0.00058746337890625 Cut analysis time: 0.0008156299591064453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32164 (3), -0.30695 (3), -0.30530 (3), -0.30267 (3), -0.30166 (3), -0.30067 (3), -0.29657 (3), -0.29633 (3), -0.29064 (3), -0.29011 (3), -0.28729 (3), -0.28116 (3), -0.27239 (3), -0.26087 (3), -0.25487 (3), -0.25442 (3), -0.24802 (3), -0.24387 (3), -0.24107 (3), -0.23889 (3), 
Length of domains: 50
Time: pickout 0.0009    decision 0.0204    set_bounds 0.0152    solve 0.1180    add 0.0834    
Accumulated time: pickout 0.0024    decision 0.5853    set_bounds 0.0393    solve 0.3622    add 0.2320    
Current (lb-rhs): -0.32164227962493896
150 domains visited
Cumulative time: 1.3285436630249023

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 30] [/input-12, 30] [/input-12, 92] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 66] 
split level 1: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 30] [/input-12, 30] [/input-12, 92] [/input-12, 66] [/input-12, 30] [/input-12, 30] [/input-12, 7] 
split level 2: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 28] [/input-12, 28] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
split level 3: [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 15] [/input-12, 15] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18437868356704712
10 lb beta sum: 0.11947056651115417, worst -0.13992705941200256
Time: prepare 0.0056    bound 0.1235    transfer 0.0008    finalize 0.0023    func 0.1348    
Accumulated time: func 0.5539    prepare 0.0508    bound 0.4900    transfer 0.0036    finalize 0.0099    
all_split False
======================Cut inference begins======================
max lb tensor(0.42100525) min lb tensor(-0.13443598)
Number of Verified Splits: 288 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 6
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.03290438652038574 
BICCOS Cumulative time: 0.07210087776184082
Preprocessing time: 0.011979103088378906 Inference time: 0.015382766723632812 Add cuts time: 0.004962921142578125 Cut analysis time: 0.0005795955657958984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11364 (4), -0.11341 (4), -0.10382 (4), -0.10367 (4), -0.08337 (4), -0.08303 (4), -0.03043 (4), -0.03034 (4), -0.00724 (4), -0.00660 (4), 
Length of domains: 10
Time: pickout 0.0010    decision 0.0207    set_bounds 0.0154    solve 0.1350    add 0.1118    
Accumulated time: pickout 0.0034    decision 0.6060    set_bounds 0.0547    solve 0.4971    add 0.3438    
Current (lb-rhs): -0.1136443018913269
160 domains visited
Cumulative time: 1.645674705505371

Shallow-BaB round 5
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] 
split level 1: [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] 
split level 2: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 7] [/input-12, 7] 
split level 3: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 15] [/input-12, 15] [/input-12, 7] [/input-12, 7] [/input-12, 28] [/input-12, 28] 
split level 4: [/input-12, 28] [/input-12, 28] [/input-12, 62] [/input-12, 38] [/input-12, 28] [/input-12, 28] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
split level 5: [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 62] [/input-12, 38] [/input-12, 38] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] 
split level 6: [/input-12, 62] [/input-12, 62] [/input-12, 28] [/input-12, 28] [/input-12, 62] [/input-12, 62] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
split level 7: [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] 
split level 8: [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] 
split level 9: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 10: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
split level 11: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 12: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
split level 13: [/input-12, 87] [/input-12, 87] [/input-12, 85] [/input-12, 85] [/input-12, 87] [/input-12, 87] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] 
split level 14: [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 87] [/input-12, 9] [/input-12, 9] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] 
split level 15: [/input-8, 1866] [/input-8, 1866] [/input-12, 87] [/input-12, 9] [/input-8, 1866] [/input-8, 1866] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] 
split level 16: [/input-8, 604] [/input-8, 604] [/input-8, 1866] [/input-8, 1866] [/input-8, 604] [/input-8, 604] [/input-8, 1866] [/input-8, 1866] [/input-8, 1866] [/input-8, 1866] 
split level 17: [/input-8, 1811] [/input-8, 1811] [/input-8, 604] [/input-8, 604] [/input-8, 283] [/input-8, 283] [/input-8, 604] [/input-8, 604] [/input-8, 604] [/input-8, 604] 
split level 18: [/input-8, 283] [/input-8, 283] [/input-8, 283] [/input-8, 283] [/input-8, 1811] [/input-8, 1811] [/input-8, 283] [/input-8, 283] [/input-8, 1811] [/input-8, 1811] 
split level 19: [/input-8, 352] [/input-8, 352] [/input-8, 1811] [/input-8, 1811] [/input-8, 352] [/input-8, 790] [/input-8, 1811] [/input-8, 1811] [/input-8, 283] [/input-8, 283] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13811516761779785
10 lb beta sum: 0.5314800143241882, worst -0.04478567838668823
Time: prepare 0.0066    bound 0.1272    transfer 0.0007    finalize 0.0039    func 0.1411    
Accumulated time: func 0.6949    prepare 0.0585    bound 0.6172    transfer 0.0044    finalize 0.0138    
all_split False
======================Cut inference begins======================
max lb tensor(0.80507064) min lb tensor(-0.03614455)
Number of Verified Splits: 351 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 6
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.03766345977783203 
BICCOS Cumulative time: 0.10976433753967285
Preprocessing time: 0.012276411056518555 Inference time: 0.019515514373779297 Add cuts time: 0.005257129669189453 Cut analysis time: 0.0006144046783447266
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0677    set_bounds 0.2086    solve 0.1412    add 0.0281    
Accumulated time: pickout 0.0041    decision 0.6737    set_bounds 0.2633    solve 0.6383    add 0.3719    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
160 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] 
split level 1: [/input-12, 66] 
split level 2: [/input-12, 30] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 65] 
split level 5: [/input-12, 15] 
split level 6: [/input-12, 28] 
split level 7: [/input-12, 22] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5762002468109131
10 lb beta sum: 0.548096776008606, worst -0.5405613780021667
Time: prepare 0.0036    bound 0.1208    transfer 0.0009    finalize 0.0015    func 0.1285    
Accumulated time: func 0.8235    prepare 0.0626    bound 0.7380    transfer 0.0053    finalize 0.0153    
all_split False
======================Cut inference begins======================
max lb tensor(0.64922947) min lb tensor(-0.53905594)
Number of Verified Splits: 160 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2295093536376953
10 lb beta sum: 0.6667640805244446, worst -1.1925938129425049
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 6
#cuts 4-6: 15
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.21708083152770996 
BICCOS Cumulative time: 0.3268451690673828
Preprocessing time: 0.006768226623535156 Inference time: 0.2058398723602295 Add cuts time: 0.003116607666015625 Cut analysis time: 0.0013561248779296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53906 (8), -0.53400 (8), -0.53128 (8), -0.51845 (8), -0.51700 (8), -0.50786 (8), -0.49391 (8), -0.48352 (8), -0.48113 (8), -0.46578 (8), -0.45030 (8), -0.44400 (8), -0.42824 (8), -0.42248 (8), -0.41933 (8), -0.41841 (8), -0.40824 (8), -0.40808 (8), -0.40743 (8), -0.40557 (8), 
Length of domains: 96
Time: pickout 0.0005    decision 0.0241    set_bounds 0.0168    solve 0.1286    add 0.0370    
Accumulated time: pickout 0.0046    decision 0.6978    set_bounds 0.2801    solve 0.7669    add 0.4088    
Current (lb-rhs): -0.5390559434890747
256 domains visited
Cumulative time: 2.5622811317443848

BaB round 2
batch: 96
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] 
split level 1: [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 38] [/input-12, 62] [/input-12, 62] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.44666242599487305
10 lb beta sum: 0.14578533172607422, worst -0.4092952013015747
Time: prepare 0.0055    bound 0.1222    transfer 0.0009    finalize 0.0018    func 0.1329    
Accumulated time: func 0.9563    prepare 0.0683    bound 0.8602    transfer 0.0061    finalize 0.0171    
all_split False
======================Cut inference begins======================
max lb tensor(0.67482322) min lb tensor(-0.40810126)
Number of Verified Splits: 274 of 384
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.1262145042419434
10 lb beta sum: 0.4754691421985626, worst -1.018367052078247
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 6
#cuts 4-6: 25
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.29329371452331543 
BICCOS Cumulative time: 0.6201388835906982
Preprocessing time: 0.010975837707519531 Inference time: 0.27288055419921875 Add cuts time: 0.007620096206665039 Cut analysis time: 0.0018172264099121094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40810 (10), -0.40729 (10), -0.40655 (10), -0.40361 (10), -0.39612 (10), -0.39469 (10), -0.39348 (10), -0.38684 (10), -0.37613 (10), -0.36998 (10), -0.36722 (10), -0.35917 (10), -0.35745 (10), -0.35197 (10), -0.34790 (10), -0.34564 (10), -0.34309 (10), -0.33527 (10), -0.32113 (10), -0.31884 (10), 
Length of domains: 110
Time: pickout 0.0024    decision 0.0174    set_bounds 0.0173    solve 0.1330    add 0.0020    
Accumulated time: pickout 0.0069    decision 0.7153    set_bounds 0.2975    solve 0.8999    add 0.4108    
Current (lb-rhs): -0.40810126066207886
366 domains visited
Cumulative time: 3.029758930206299

BaB round 3
batch: 110
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.40810227394104004
10 lb beta sum: 0.017040206119418144, worst -0.4068129062652588
Time: prepare 0.0034    bound 0.1228    transfer 0.0019    finalize 0.0011    func 0.1308    
Accumulated time: func 1.0872    prepare 0.0718    bound 0.9831    transfer 0.0081    finalize 0.0182    
all_split False
======================Cut inference begins======================
max lb tensor(0.88770056) min lb tensor(-0.40606403)
Number of Verified Splits: 112 of 220
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 9
#cuts 4-6: 2
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.018967151641845703 
BICCOS Cumulative time: 0.639106035232544
Preprocessing time: 0.006636857986450195 Inference time: 0.009865045547485352 Add cuts time: 0.0019690990447998047 Cut analysis time: 0.0004961490631103516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40606 (11), -0.40557 (11), -0.40480 (11), -0.40051 (11), -0.39448 (11), -0.39278 (11), -0.39054 (11), -0.38529 (11), -0.37254 (11), -0.36739 (11), -0.36442 (11), -0.35719 (11), -0.35493 (11), -0.34839 (11), -0.34524 (11), -0.34181 (11), -0.34162 (11), -0.33199 (11), -0.31959 (11), -0.31541 (11), 
Length of domains: 108
Time: pickout 0.0031    decision 0.0155    set_bounds 0.0093    solve 0.1309    add 0.0013    
Accumulated time: pickout 0.0101    decision 0.7308    set_bounds 0.3068    solve 1.0308    add 0.4121    
Current (lb-rhs): -0.4060640335083008
474 domains visited
Cumulative time: 3.2099735736846924

BaB round 4
batch: 108
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3957805633544922
10 lb beta sum: 0.3959641754627228, worst -0.32945215702056885
Time: prepare 0.0033    bound 0.1238    transfer 0.0011    finalize 0.0011    func 0.1313    
Accumulated time: func 1.2184    prepare 0.0753    bound 1.1068    transfer 0.0092    finalize 0.0194    
all_split False
======================Cut inference begins======================
max lb tensor(0.91596758) min lb tensor(-0.32900438)
Number of Verified Splits: 206 of 216
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.02691054344177246 
BICCOS Cumulative time: 0.6660165786743164
Preprocessing time: 0.006362199783325195 Inference time: 0.019672155380249023 Add cuts time: 0.0006959438323974609 Cut analysis time: 0.00018024444580078125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32900 (12), -0.32587 (12), -0.30564 (12), -0.29535 (12), -0.26873 (12), -0.25265 (12), -0.20038 (12), -0.16797 (12), -0.02365 (12), -0.02190 (12), 
Length of domains: 10
Time: pickout 0.0025    decision 0.0177    set_bounds 0.0090    solve 0.1313    add 0.0142    
Accumulated time: pickout 0.0126    decision 0.7485    set_bounds 0.3158    solve 1.1621    add 0.4263    
Current (lb-rhs): -0.3290043771266937
484 domains visited
Cumulative time: 3.4128270149230957

BaB round 5
batch: 10
splitting decisions: 
split level 0: [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
split level 1: [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] 
split level 2: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 3: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 4: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19309473037719727

all verified at 4th iter
Time: prepare 0.0045    bound 0.0281    transfer 0.0019    finalize 0.0018    func 0.0385    
Accumulated time: func 1.2569    prepare 0.0801    bound 1.1350    transfer 0.0111    finalize 0.0212    
all_split False
======================Cut inference begins======================
max lb tensor(0.37423831) min lb tensor(0.00089908)
Number of Verified Splits: 320 of 320
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.009318351745605469 
BICCOS Cumulative time: 0.6753349304199219
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0170    set_bounds 0.0204    solve 0.0386    add 0.0003    
Accumulated time: pickout 0.0136    decision 0.7655    set_bounds 0.3362    solve 1.2007    add 0.4266    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
484 domains visited
Cumulative time: 3.500595808029175


Properties batch 3, size 1
Remaining timeout: 194.77755331993103
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 194.7774121761322
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 194.77738499641418
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 194.7773633003235
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 194.7773401737213
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 194.7767515182495
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 5.2234 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 103, vnnlib ID: 103 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.91603470, -29.64440918, -20.60634804, -24.07658195, -19.55617714,
         -24.06526375, -22.37370110, -26.13921547, -27.65511703, -30.68945694]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1024]; unstable size 1024; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 381, 1, 1024] with unstable size 380 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 46, 1, 1024] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1024] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [380]; unstable size 380; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 46, 1, 380] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 380] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [45]; unstable size 45; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 45] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.67505050,  6.37336016, -2.23524022,  1.87563813,  1.44718671,
         -0.62277567,  2.22996926,  4.55396700,  7.08830786]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.91603470, -29.64440918, -20.60634804, -24.07658195, -19.55617714,
         -24.06526375, -22.37370110, -26.13921547, -27.65511703, -30.68945694]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.18it/s]100%|██████████| 1/1 [00:00<00:00,  8.18it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.31801987, -30.32396698, -20.61498070, -24.62226105, -20.29551888,
          -24.66792107, -22.87031174, -26.88351059, -28.08809853, -31.40074921],
         [-25.31801987, -30.32396698, -20.61498070, -24.62226105, -20.29551888,
          -24.66792107, -22.87031174, -26.88351059, -28.08809853, -31.40074921]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.31946182, 2.57479286]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1256 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 24.780858993530273
alpha/beta optimization time: 1.3122620582580566
initial alpha-crown bounds: tensor([[ 2.05824113,  6.67879725, -1.98010361,  2.05615950,  1.64000916,
         -0.37921834,  2.50077033,  4.81629848,  7.38990545]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -1.980103611946106
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.5122721195221
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.51222467422485
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.51219487190247
Verifying property 2 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.98010361]], device='cuda:0') need to verify.
Model prediction is: tensor([-24.91603470, -29.64440918, -20.60634804, -24.07658195, -19.55617714,
        -24.06526375, -22.37370110, -26.13921547, -27.65511703, -30.68945694],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.98010361]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1024
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 368
Node /15 input 0: size torch.Size([100]) unstable 43
-----------------
# of unstable neurons: 1435
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010347366333007812
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.980094075202942
10 lb beta sum: 0.0, worst -1.9801100492477417
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0571    transfer 0.0001    finalize 0.0001    func 0.0576    
Accumulated time: func 0.0576    prepare 0.0002    bound 0.0571    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] 
split level 1: [/input-12, 57] 
split level 2: [/input-12, 70] 
split level 3: [/input-12, 30] 
split level 4: [/input-12, 38] 
split level 5: [/input-12, 83] 
split level 6: [/input-12, 22] 
split level 7: [/input-12, 28] 
split level 8: [/input-12, 7] 
split level 9: [/input-12, 10] 
split level 10: [/input-12, 48] 
split level 11: [/input-12, 97] 
split level 12: [/input-12, 50] 
split level 13: [/input-12, 33] 
split level 14: [/input-12, 14] 
split level 15: [/input-12, 87] 
split level 16: [/input-12, 76] 
split level 17: [/input-12, 84] 
split level 18: [/input-12, 47] 
split level 19: [/input-12, 9] 
split level 20: [/input-8, 1964] 
split level 21: [/input-12, 85] 
split level 22: [/input-8, 555] 
split level 23: [/input-8, 1868] 
split level 24: [/input-8, 540] 
split level 25: [/input-8, 1316] 
split level 26: [/input-8, 739] 
split level 27: [/input-8, 539] 
split level 28: [/input-12, 6] 
split level 29: [/input-8, 556] 
split level 30: [/input-8, 1571] 
split level 31: [/input-12, 20] 
split level 32: [/input-8, 979] 
split level 33: [/input-8, 1570] 
split level 34: [/input-8, 548] 
split level 35: [/input-8, 1972] 
split level 36: [/input-8, 1562] 
split level 37: [/input-8, 708] 
split level 38: [/input-8, 521] 
split level 39: [/input-8, 1979] 
split level 40: [/input-8, 1566] 
split level 41: [/input-8, 1563] 
split level 42: [/input-8, 1578] 
split level 43: [/input-8, 541] 
split level 44: [/input-8, 1885] 
split level 45: [/input-8, 740] 
split level 46: [/input-8, 1971] 
split level 47: [/input-8, 522] 
split level 48: [/input-8, 1292] 
split level 49: [/input-8, 549] 
split level 50: [/input-8, 716] 
split level 51: [/input-8, 1549] 
split level 52: [/input-8, 1582] 
split level 53: [/input-8, 1300] 
split level 54: [/input-8, 1884] 
split level 55: [/input-8, 1574] 
split level 56: [/input-8, 1561] 
split level 57: [/input-8, 701] 
split level 58: [/input-8, 1569] 
split level 59: [/input-8, 1572] 
split level 60: [/input-8, 669] 
split level 61: [/input-8, 1586] 
split level 62: [/input-8, 526] 
split level 63: [/input-8, 529] 
split level 64: [/input-8, 730] 
split level 65: [/input-8, 1980] 
split level 66: [/input-8, 554] 
split level 67: [/input-8, 1973] 
split level 68: [/input-8, 1548] 
split level 69: [/input-8, 724] 
split level 70: [/input-8, 1937] 
split level 71: [/input-8, 1555] 
split level 72: [/input-8, 866] 
split level 73: [/input-8, 1577] 
split level 74: [/input-8, 933] 
split level 75: [/input-8, 709] 
split level 76: [/input-8, 1908] 
split level 77: [/input-8, 530] 
split level 78: [/input-8, 2035] 
split level 79: [/input-8, 1865] 
split level 80: [/input-8, 725] 
split level 81: [/input-12, 37] 
split level 82: [/input-8, 1573] 
split level 83: [/input-8, 1953] 
split level 84: [/input-8, 1589] 
split level 85: [/input-8, 563] 
split level 86: [/input-8, 1581] 
split level 87: [/input-8, 543] 
split level 88: [/input-8, 702] 
split level 89: [/input-8, 1909] 
split level 90: [/input-8, 1892] 
split level 91: [/input-8, 713] 
split level 92: [/input-8, 733] 
split level 93: [/input-8, 867] 
split level 94: [/input-8, 865] 
split level 95: [/input-8, 698] 
split level 96: [/input-8, 1067] 
split level 97: [/input-8, 1575] 
split level 98: [/input-8, 1873] 
split level 99: [/input-8, 738] 
split level 100: [/input-8, 715] 
split level 101: [/input-8, 1915] 
split level 102: [/input-8, 2034] 
split level 103: [/input-8, 1881] 
split level 104: [/input-8, 749] 
split level 105: [/input-8, 1901] 
split level 106: [/input-8, 662] 
split level 107: [/input-8, 1590] 
split level 108: [/input-8, 1954] 
split level 109: [/input-8, 1900] 
split level 110: [/input-8, 646] 
split level 111: [/input-8, 1966] 
split level 112: [/input-8, 993] 
split level 113: [/input-8, 932] 
split level 114: [/input-8, 534] 
split level 115: [/input-8, 1893] 
split level 116: [/input-8, 1560] 
split level 117: [/input-8, 1916] 
split level 118: [/input-8, 1917] 
split level 119: [/input-8, 1075] 
split level 120: [/input-8, 532] 
split level 121: [/input-8, 1059] 
split level 122: [/input-8, 659] 
split level 123: [/input-8, 741] 
split level 124: [/input-8, 1890] 
split level 125: [/input-8, 1007] 
split level 126: [/input-8, 1936] 
split level 127: [/input-8, 987] 
split level 128: [/input-8, 916] 
split level 129: [/input-8, 1907] 
split level 130: [/input, 1223] 
split level 131: [/input-8, 705] 
split level 132: [/input-8, 1568] 
split level 133: [/input-8, 1493] 
split level 134: [/input-8, 925] 
split level 135: [/input-8, 2036] 
split level 136: [/input-12, 4] 
split level 137: [/input, 377] 
split level 138: [/input-8, 1914] 
split level 139: [/input-8, 915] 
split level 140: [/input-8, 1860] 
split level 141: [/input, 854] 
split level 142: [/input, 1989] 
split level 143: [/input, 1225] 
split level 144: [/input, 2536] 
split level 145: [/input-8, 1889] 
split level 146: [/input, 1221] 
split level 147: [/input-8, 1913] 
split level 148: [/input-8, 654] 
split level 149: [/input-8, 1288] 
split level 150: [/input, 2262] 
split level 151: [/input, 2232] 
split level 152: [/input, 984] 
split level 153: [/input-8, 1547] 
split level 154: [/input, 2215] 
split level 155: [/input-8, 975] 
split level 156: [/input-8, 1967] 
split level 157: [/input-8, 1015] 
split level 158: [/input-8, 994] 
split level 159: [/input, 2263] 
split level 160: [/input-8, 1074] 
split level 161: [/input-8, 1886] 
split level 162: [/input-8, 1351] 
split level 163: [/input, 1000] 
split level 164: [/input-8, 1076] 
split level 165: [/input-8, 1060] 
split level 166: [/input-8, 1894] 
split level 167: [/input, 2214] 
split level 168: [/input, 2952] 
split level 169: [/input, 2246] 
split level 170: [/input, 4060] 
split level 171: [/input-12, 44] 
split level 172: [/input-8, 721] 
split level 173: [/input-8, 1918] 
split level 174: [/input, 3238] 
split level 175: [/input, 2502] 
split level 176: [/input, 1222] 
split level 177: [/input, 169] 
split level 178: [/input-8, 1068] 
split level 179: [/input, 2025] 
split level 180: [/input, 2792] 
split level 181: [/input, 2474] 
split level 182: [/input-8, 1902] 
split level 183: [/input, 1224] 
split level 184: [/input, 1238] 
split level 185: [/input, 2026] 
split level 186: [/input, 2519] 
split level 187: [/input, 1973] 
split level 188: [/input, 1220] 
split level 189: [/input, 1972] 
split level 190: [/input, 2279] 
split level 191: [/input-8, 901] 
split level 192: [/input, 1207] 
split level 193: [/input, 2458] 
split level 194: [/input, 4058] 
split level 195: [/input, 374] 
split level 196: [/input-8, 1091] 
split level 197: [/input, 2277] 
split level 198: [/input, 1206] 
split level 199: [/input, 187] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.979695439338684
10 lb beta sum: 0.0, worst -1.979692816734314
Time: prepare 0.0118    bound 0.1074    transfer 0.0016    finalize 0.0033    func 0.1268    
Accumulated time: func 0.1844    prepare 0.0223    bound 0.1644    transfer 0.0017    finalize 0.0035    
all_split False
======================Cut inference begins======================
max lb tensor(-1.16236687) min lb tensor(-1.97968149)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.01098012924194336 
BICCOS Cumulative time: 0.01098012924194336
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.94850 (1), -1.94846 (1), -1.94806 (1), -1.94688 (1), -1.94519 (1), -1.94468 (1), -1.94442 (1), -1.94342 (1), -1.94316 (1), -1.94296 (1), -1.94068 (1), -1.93946 (1), -1.93909 (1), -1.93798 (1), -1.93372 (1), -1.93267 (1), -1.92530 (1), -1.92497 (1), -1.92083 (1), -1.91867 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5517    set_bounds 0.0091    solve 0.1269    add 0.2310    
Accumulated time: pickout 0.0004    decision 0.5517    set_bounds 0.0091    solve 0.1269    add 0.2310    
Current (lb-rhs): -1.9485020637512207
50 domains visited
Cumulative time: 1.0121545791625977

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] 
split level 1: [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 57] [/input-12, 83] [/input-12, 57] 
split level 2: [/input-12, 28] [/input-12, 28] [/input-12, 7] [/input-12, 28] [/input-12, 28] [/input-12, 7] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 83] 
split level 3: [/input-12, 7] [/input-12, 7] [/input-12, 28] [/input-12, 7] [/input-12, 7] [/input-12, 28] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.890343427658081
10 lb beta sum: 0.0, worst -1.889480471611023
Time: prepare 0.0115    bound 0.1050    transfer 0.0007    finalize 0.0024    func 0.1222    
Accumulated time: func 0.3066    prepare 0.0341    bound 0.2694    transfer 0.0024    finalize 0.0059    
all_split False
======================Cut inference begins======================
max lb tensor(-0.23801792) min lb tensor(-1.88927674)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.011738061904907227 
BICCOS Cumulative time: 0.022718191146850586
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.11552 (2), -1.10946 (2), -1.10563 (2), -1.10107 (2), -1.09693 (2), -1.09441 (2), -1.09030 (2), -1.08838 (2), -1.08417 (2), -1.07714 (2), -1.07702 (2), -1.06126 (2), -1.06052 (2), -1.05869 (2), -1.05788 (2), -1.04645 (2), -1.03554 (2), -1.02523 (2), -1.01819 (2), -1.01637 (2), 
Length of domains: 50
Time: pickout 0.0158    decision 0.0248    set_bounds 0.0148    solve 0.1223    add 0.2136    
Accumulated time: pickout 0.0162    decision 0.5765    set_bounds 0.0239    solve 0.2492    add 0.4446    
Current (lb-rhs): -1.1155201196670532
100 domains visited
Cumulative time: 1.4154398441314697

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 30] [/input-12, 30] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 66] [/input-12, 66] 
split level 1: [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 57] [/input-12, 57] 
split level 2: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 83] [/input-12, 83] 
split level 3: [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0401936769485474
10 lb beta sum: 0.0, worst -1.034584403038025
Time: prepare 0.0114    bound 0.1060    transfer 0.0015    finalize 0.0030    func 0.1244    
Accumulated time: func 0.4310    prepare 0.0457    bound 0.3754    transfer 0.0039    finalize 0.0089    
all_split False
======================Cut inference begins======================
max lb tensor(0.28410089) min lb tensor(-1.02951479)
Number of Verified Splits: 16 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 1
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.01390838623046875 
BICCOS Cumulative time: 0.036626577377319336
Preprocessing time: 0.011708259582519531 Inference time: 0.0008091926574707031 Add cuts time: 0.00038886070251464844 Cut analysis time: 0.0010020732879638672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.45472 (3), -0.45408 (3), -0.45242 (3), -0.44591 (3), -0.43188 (3), -0.43132 (3), -0.42317 (3), -0.42270 (3), -0.42258 (3), -0.40743 (3), -0.40561 (3), -0.40238 (3), -0.39846 (3), -0.39801 (3), -0.39724 (3), -0.39638 (3), -0.39529 (3), -0.39509 (3), -0.39420 (3), -0.39262 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0202    set_bounds 0.0155    solve 0.1245    add 0.1305    
Accumulated time: pickout 0.0172    decision 0.5967    set_bounds 0.0394    solve 0.3737    add 0.5752    
Current (lb-rhs): -0.45472073554992676
150 domains visited
Cumulative time: 1.7214548587799072

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 30] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 30] [/input-12, 30] [/input-12, 57] 
split level 1: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 7] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 83] [/input-12, 83] [/input-12, 30] 
split level 2: [/input-12, 83] [/input-12, 7] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 7] [/input-12, 83] [/input-12, 7] [/input-12, 7] [/input-12, 83] 
split level 3: [/input-12, 28] [/input-12, 28] [/input-12, 7] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3778970241546631
10 lb beta sum: 0.1290859431028366, worst -0.4685356020927429
Time: prepare 0.0056    bound 0.1279    transfer 0.0007    finalize 0.0019    func 0.1387    
Accumulated time: func 0.5697    prepare 0.0515    bound 0.5033    transfer 0.0046    finalize 0.0108    
all_split False
======================Cut inference begins======================
max lb tensor(0.50691605) min lb tensor(-0.32831031)
Number of Verified Splits: 198 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 3
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.025934696197509766 
BICCOS Cumulative time: 0.0625612735748291
Preprocessing time: 0.011678218841552734 Inference time: 0.01059269905090332 Add cuts time: 0.003098011016845703 Cut analysis time: 0.0005657672882080078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08492 (4), -0.08160 (4), -0.07966 (4), -0.07777 (4), -0.07514 (4), -0.07460 (4), -0.07448 (4), -0.07201 (4), -0.07081 (4), -0.07061 (4), -0.07057 (4), -0.07030 (4), -0.06820 (4), -0.06764 (4), -0.06733 (4), -0.06578 (4), -0.06572 (4), -0.06559 (4), -0.06429 (4), -0.06271 (4), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0204    set_bounds 0.0155    solve 0.1388    add 0.3613    
Accumulated time: pickout 0.0182    decision 0.6171    set_bounds 0.0549    solve 0.5125    add 0.9365    
Current (lb-rhs): -0.08492068946361542
200 domains visited
Cumulative time: 2.284661054611206

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] 
split level 1: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] 
split level 2: [/input-12, 7] [/input-12, 83] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] 
split level 3: [/input-12, 28] [/input-12, 7] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 83] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11518979072570801
10 lb beta sum: 0.09981942921876907, worst -0.21148216724395752
Time: prepare 0.0057    bound 0.1281    transfer 0.0008    finalize 0.0021    func 0.1393    
Accumulated time: func 0.7090    prepare 0.0575    bound 0.6314    transfer 0.0054    finalize 0.0128    
all_split False
======================Cut inference begins======================
max lb tensor(0.38597345) min lb tensor(0.00045657)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 3
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.042322635650634766 
BICCOS Cumulative time: 0.10488390922546387
Preprocessing time: 0.012053966522216797 Inference time: 0.02386307716369629 Add cuts time: 0.005617856979370117 Cut analysis time: 0.0007877349853515625
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0211    set_bounds 0.0157    solve 0.1394    add 0.0279    
Accumulated time: pickout 0.0194    decision 0.6382    set_bounds 0.0706    solve 0.6519    add 0.9643    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
200 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] 
split level 1: [/input-12, 57] 
split level 2: [/input-12, 70] 
split level 3: [/input-12, 30] 
split level 4: [/input-12, 83] 
split level 5: [/input-12, 28] 
split level 6: [/input-12, 7] 
split level 7: [/input-12, 48] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0170841217041016
10 lb beta sum: 0.06904058158397675, worst -1.0136873722076416
Time: prepare 0.0036    bound 0.1257    transfer 0.0009    finalize 0.0021    func 0.1340    
Accumulated time: func 0.8430    prepare 0.0616    bound 0.7571    transfer 0.0064    finalize 0.0149    
all_split False
======================Cut inference begins======================
max lb tensor(0.73790365) min lb tensor(-1.01200438)
Number of Verified Splits: 157 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.4970043897628784
10 lb beta sum: 0.14365872740745544, worst -1.4944984912872314
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 3
#cuts 4-6: 14
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.21376466751098633 
BICCOS Cumulative time: 0.3186485767364502
Preprocessing time: 0.006437778472900391 Inference time: 0.20491433143615723 Add cuts time: 0.0012540817260742188 Cut analysis time: 0.0011584758758544922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.01200 (8), -1.00449 (8), -0.98756 (8), -0.98429 (8), -0.97225 (8), -0.96014 (8), -0.95560 (8), -0.94061 (8), -0.93185 (8), -0.91094 (8), -0.90469 (8), -0.88532 (8), -0.86297 (8), -0.86284 (8), -0.85276 (8), -0.84987 (8), -0.67799 (8), -0.67248 (8), -0.64993 (8), -0.64672 (8), 
Length of domains: 99
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0168    solve 0.1341    add 0.0121    
Accumulated time: pickout 0.0198    decision 0.6615    set_bounds 0.0874    solve 0.7859    add 0.9765    
Current (lb-rhs): -1.0120043754577637
299 domains visited
Cumulative time: 2.9374442100524902

BaB round 2
batch: 99
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] 
split level 1: [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9036109447479248
10 lb beta sum: 0.04745166376233101, worst -0.9014750719070435
Time: prepare 0.0058    bound 0.1263    transfer 0.0015    finalize 0.0019    func 0.1382    
Accumulated time: func 0.9812    prepare 0.0676    bound 0.8833    transfer 0.0079    finalize 0.0168    
all_split False
======================Cut inference begins======================
max lb tensor(0.36059022) min lb tensor(-0.90037823)
Number of Verified Splits: 201 of 396
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.1461563110351562
10 lb beta sum: 0.35500451922416687, worst -0.9582860469818115
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 3
#cuts 4-6: 21
#cuts 7-9: 12
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.2624809741973877 
BICCOS Cumulative time: 0.5811295509338379
Preprocessing time: 0.011827468872070312 Inference time: 0.24265170097351074 Add cuts time: 0.006185054779052734 Cut analysis time: 0.0018167495727539062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.90038 (10), -0.89029 (10), -0.88196 (10), -0.87391 (10), -0.87220 (10), -0.86671 (10), -0.86228 (10), -0.85849 (10), -0.85575 (10), -0.84192 (10), -0.84127 (10), -0.83989 (10), -0.83319 (10), -0.82775 (10), -0.82293 (10), -0.81527 (10), -0.81390 (10), -0.80431 (10), -0.79391 (10), -0.78750 (10), 
Length of domains: 195
Time: pickout 0.0017    decision 0.0204    set_bounds 0.0185    solve 0.1383    add 0.0026    
Accumulated time: pickout 0.0215    decision 0.6819    set_bounds 0.1059    solve 0.9242    add 0.9791    
Current (lb-rhs): -0.9003782272338867
494 domains visited
Cumulative time: 3.383392572402954

BaB round 3
batch: 195
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8632866144180298
10 lb beta sum: 0.028327209874987602, worst -0.8618974685668945
Time: prepare 0.0057    bound 0.1307    transfer 0.0008    finalize 0.0018    func 0.1416    
Accumulated time: func 1.1228    prepare 0.0735    bound 1.0140    transfer 0.0087    finalize 0.0187    
all_split False
======================Cut inference begins======================
max lb tensor(0.33954048) min lb tensor(-0.86119115)
Number of Verified Splits: 130 of 390
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 4
#cuts 4-6: 8
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.02755117416381836 
BICCOS Cumulative time: 0.6086807250976562
Preprocessing time: 0.011294126510620117 Inference time: 0.012893438339233398 Add cuts time: 0.002605438232421875 Cut analysis time: 0.0007581710815429688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.86119 (11), -0.85017 (11), -0.84219 (11), -0.83261 (11), -0.83247 (11), -0.82612 (11), -0.82224 (11), -0.81751 (11), -0.81489 (11), -0.80044 (11), -0.79982 (11), -0.79944 (11), -0.79156 (11), -0.78707 (11), -0.78273 (11), -0.77499 (11), -0.77314 (11), -0.76366 (11), -0.75366 (11), -0.74590 (11), 
Length of domains: 260
Time: pickout 0.0024    decision 0.0196    set_bounds 0.0164    solve 0.1417    add 0.0023    
Accumulated time: pickout 0.0239    decision 0.7015    set_bounds 0.1223    solve 1.0660    add 0.9814    
Current (lb-rhs): -0.8611911535263062
754 domains visited
Cumulative time: 3.594862699508667

BaB round 4
batch: 260
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8299514055252075
10 lb beta sum: 0.08253148943185806, worst -0.8291069269180298
Time: prepare 0.0075    bound 0.1286    transfer 0.0024    finalize 0.0027    func 0.1445    
Accumulated time: func 1.2673    prepare 0.0813    bound 1.1426    transfer 0.0111    finalize 0.0213    
all_split False
======================Cut inference begins======================
max lb tensor(0.36250824) min lb tensor(-0.82861471)
Number of Verified Splits: 183 of 520
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 7
#cuts 4-6: 6
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.04076504707336426 
BICCOS Cumulative time: 0.6494457721710205
Preprocessing time: 0.015566587448120117 Inference time: 0.021644115447998047 Add cuts time: 0.002593517303466797 Cut analysis time: 0.0009608268737792969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.82861 (12), -0.81871 (12), -0.81110 (12), -0.80202 (12), -0.80038 (12), -0.79484 (12), -0.79100 (12), -0.78706 (12), -0.78465 (12), -0.77185 (12), -0.77025 (12), -0.76798 (12), -0.76287 (12), -0.75723 (12), -0.75154 (12), -0.74330 (12), -0.74143 (12), -0.73118 (12), -0.72029 (12), -0.71288 (12), 
Length of domains: 337
Time: pickout 0.0032    decision 0.0258    set_bounds 0.0221    solve 0.1447    add 0.0032    
Accumulated time: pickout 0.0271    decision 0.7273    set_bounds 0.1443    solve 1.2106    add 0.9846    
Current (lb-rhs): -0.8286147117614746
1091 domains visited
Cumulative time: 3.8362722396850586

BaB round 5
batch: 337
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 38] [/input-12, 38] [/input-12, 14] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 14] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
cut re-enabled after branching node selection
0 lb beta sum: 0.03568284213542938, worst -0.9226788282394409
10 lb beta sum: 0.14936858415603638, worst -0.811942458152771
Time: prepare 0.0266    bound 0.1315    transfer 0.0011    finalize 0.0029    func 0.1665    
Accumulated time: func 1.4338    prepare 0.1081    bound 1.2741    transfer 0.0123    finalize 0.0242    
all_split False
======================Cut inference begins======================
max lb tensor(1.13727474) min lb tensor(-0.81156242)
Number of Verified Splits: 479 of 674
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 12
#cuts >= 20: 0
BICCOS time: 0.07996296882629395 
BICCOS Cumulative time: 0.7294087409973145
Preprocessing time: 0.01933884620666504 Inference time: 0.05516767501831055 Add cuts time: 0.004939079284667969 Cut analysis time: 0.0005173683166503906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.81156 (13), -0.80295 (13), -0.79350 (13), -0.78511 (13), -0.78349 (13), -0.77866 (13), -0.77390 (13), -0.77045 (13), -0.76845 (13), -0.75554 (13), -0.75398 (13), -0.75153 (13), -0.74606 (13), -0.74042 (13), -0.73479 (13), -0.72651 (13), -0.72448 (13), -0.71407 (13), -0.70275 (13), -0.69581 (13), 
Length of domains: 195
Time: pickout 0.0053    decision 0.0310    set_bounds 0.0282    solve 0.1667    add 0.0016    
Accumulated time: pickout 0.0324    decision 0.7583    set_bounds 0.1725    solve 1.3773    add 0.9862    
Current (lb-rhs): -0.8115624189376831
1286 domains visited
Cumulative time: 4.153569459915161

BaB round 6
batch: 195
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7521958351135254
10 lb beta sum: 0.30134549736976624, worst -0.7509810924530029
Time: prepare 0.0057    bound 0.1261    transfer 0.0015    finalize 0.0019    func 0.1377    
Accumulated time: func 1.5715    prepare 0.1141    bound 1.4002    transfer 0.0137    finalize 0.0262    
all_split False
======================Cut inference begins======================
max lb tensor(0.65182602) min lb tensor(-0.75062668)
Number of Verified Splits: 278 of 390
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.04523921012878418 
BICCOS Cumulative time: 0.7746479511260986
Preprocessing time: 0.011354446411132812 Inference time: 0.0312952995300293 Add cuts time: 0.0022766590118408203 Cut analysis time: 0.00031280517578125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.75063 (14), -0.75045 (14), -0.74603 (14), -0.73736 (14), -0.73403 (14), -0.73194 (14), -0.72688 (14), -0.72330 (14), -0.72214 (14), -0.72156 (14), -0.72072 (14), -0.71486 (14), -0.71391 (14), -0.71234 (14), -0.71185 (14), -0.71157 (14), -0.70734 (14), -0.70280 (14), -0.69787 (14), -0.69658 (14), 
Length of domains: 112
Time: pickout 0.0031    decision 0.0203    set_bounds 0.0166    solve 0.1379    add 0.0066    
Accumulated time: pickout 0.0355    decision 0.7787    set_bounds 0.1891    solve 1.5151    add 0.9928    
Current (lb-rhs): -0.7506266832351685
1398 domains visited
Cumulative time: 4.3849217891693115

BaB round 7
batch: 112
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 76] [/input-12, 97] [/input-12, 76] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7334338426589966
10 lb beta sum: 0.15563876926898956, worst -0.7331690788269043
Time: prepare 0.0034    bound 0.1227    transfer 0.0012    finalize 0.0016    func 0.2897    
Accumulated time: func 1.8612    prepare 0.1176    bound 1.5229    transfer 0.0149    finalize 0.0277    
all_split False
======================Cut inference begins======================
max lb tensor(0.53788060) min lb tensor(-0.73311186)
Number of Verified Splits: 96 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.02031993865966797 
BICCOS Cumulative time: 0.7949678897857666
Preprocessing time: 0.00746607780456543 Inference time: 0.011059999465942383 Add cuts time: 0.0007367134094238281 Cut analysis time: 0.0010571479797363281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.73311 (15), -0.73237 (15), -0.72910 (15), -0.72013 (15), -0.71634 (15), -0.71440 (15), -0.70986 (15), -0.70532 (15), -0.70468 (15), -0.70444 (15), -0.70365 (15), -0.69750 (15), -0.69626 (15), -0.69488 (15), -0.69464 (15), -0.69440 (15), -0.69005 (15), -0.68476 (15), -0.67995 (15), -0.67870 (15), 
Length of domains: 128
Time: pickout 0.0022    decision 0.0154    set_bounds 0.0092    solve 0.2898    add 0.0023    
Accumulated time: pickout 0.0377    decision 0.7941    set_bounds 0.1983    solve 1.8049    add 0.9951    
Current (lb-rhs): -0.7331118583679199
1526 domains visited
Cumulative time: 4.725306987762451

BaB round 8
batch: 128
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 76] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6918511390686035
10 lb beta sum: 0.1860196888446808, worst -0.6913864612579346
Time: prepare 0.0039    bound 0.1230    transfer 0.0006    finalize 0.0015    func 0.1307    
Accumulated time: func 1.9919    prepare 0.1217    bound 1.6460    transfer 0.0155    finalize 0.0292    
all_split False
======================Cut inference begins======================
max lb tensor(0.30780107) min lb tensor(-0.69126165)
Number of Verified Splits: 128 of 256
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.024379730224609375 
BICCOS Cumulative time: 0.819347620010376
Preprocessing time: 0.007573127746582031 Inference time: 0.015450716018676758 Add cuts time: 0.0010135173797607422 Cut analysis time: 0.00034236907958984375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.69126 (16), -0.69096 (16), -0.68744 (16), -0.68589 (16), -0.68558 (16), -0.68476 (16), -0.67661 (16), -0.67646 (16), -0.67562 (16), -0.67353 (16), -0.66861 (16), -0.66691 (16), -0.66679 (16), -0.66516 (16), -0.66511 (16), -0.66440 (16), -0.66164 (16), -0.66075 (16), -0.65936 (16), -0.65917 (16), 
Length of domains: 128
Time: pickout 0.0023    decision 0.0174    set_bounds 0.0112    solve 0.1308    add 0.0028    
Accumulated time: pickout 0.0400    decision 0.8115    set_bounds 0.2095    solve 1.9357    add 0.9979    
Current (lb-rhs): -0.6912616491317749
1654 domains visited
Cumulative time: 4.915132522583008

BaB round 9
batch: 128
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.668485164642334
10 lb beta sum: 0.0, worst -0.6682455539703369
Time: prepare 0.0105    bound 0.1231    transfer 0.0005    finalize 0.0014    func 0.1373    
Accumulated time: func 2.1291    prepare 0.1325    bound 1.7691    transfer 0.0160    finalize 0.0306    
all_split False
======================Cut inference begins======================
max lb tensor(-0.43655491) min lb tensor(-0.66819632)
Number of Verified Splits: 0 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.007491350173950195 
BICCOS Cumulative time: 0.8268389701843262
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.66820 (17), -0.66781 (17), -0.66405 (17), -0.66238 (17), -0.66068 (17), -0.65999 (17), -0.65189 (17), -0.65164 (17), -0.65162 (17), -0.64981 (17), -0.64458 (17), -0.64294 (17), -0.64146 (17), -0.64110 (17), -0.64075 (17), -0.63933 (17), -0.63618 (17), -0.63484 (17), -0.63364 (17), -0.63310 (17), 
Length of domains: 256
Time: pickout 0.0019    decision 0.0163    set_bounds 0.0108    solve 0.1373    add 0.0023    
Accumulated time: pickout 0.0419    decision 0.8277    set_bounds 0.2203    solve 2.0730    add 1.0002    
Current (lb-rhs): -0.6681963205337524
1910 domains visited
Cumulative time: 5.091783285140991

BaB round 10
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 47] [/input-12, 9] [/input-12, 47] [/input-8, 555] [/input-12, 47] [/input-12, 9] [/input-12, 47] [/input-12, 9] [/input-12, 47] [/input-12, 9] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6577906608581543
10 lb beta sum: 0.0, worst -0.6576091051101685
Time: prepare 0.0217    bound 0.1257    transfer 0.0024    finalize 0.0032    func 0.1564    
Accumulated time: func 2.2855    prepare 0.1544    bound 1.8947    transfer 0.0184    finalize 0.0339    
all_split False
======================Cut inference begins======================
max lb tensor(-0.38186848) min lb tensor(-0.65753090)
Number of Verified Splits: 0 of 512
No cut inferred: All or none verified.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.01552581787109375 
BICCOS Cumulative time: 0.8423647880554199
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.65753 (18), -0.65642 (18), -0.65383 (18), -0.65145 (18), -0.64035 (18), -0.63943 (18), -0.63822 (18), -0.63738 (18), -0.62964 (18), -0.62935 (18), -0.62652 (18), -0.62626 (18), -0.62184 (18), -0.62181 (18), -0.62098 (18), -0.61966 (18), -0.61910 (18), -0.61845 (18), -0.61821 (18), -0.61644 (18), 
Length of domains: 512
Time: pickout 0.0037    decision 0.0227    set_bounds 0.0215    solve 0.1565    add 0.0051    
Accumulated time: pickout 0.0457    decision 0.8504    set_bounds 0.2417    solve 2.2295    add 1.0054    
Current (lb-rhs): -0.6575309038162231
2422 domains visited
Cumulative time: 5.317449569702148

BaB round 11
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 9] [/input-12, 47] [/input-8, 555] [/input-12, 9] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 47] [/input-12, 87] [/input-12, 87] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.63550865650177
10 lb beta sum: 0.0, worst -0.6352716684341431
Time: prepare 0.0462    bound 0.1277    transfer 0.0047    finalize 0.0055    func 0.1906    
Accumulated time: func 2.4761    prepare 0.2008    bound 2.0224    transfer 0.0231    finalize 0.0394    
all_split False
======================Cut inference begins======================
max lb tensor(-0.18926042) min lb tensor(-0.63519990)
Number of Verified Splits: 0 of 1024
No cut inferred: All or none verified.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.03202939033508301 
BICCOS Cumulative time: 0.8743941783905029
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.63520 (19), -0.63398 (19), -0.63128 (19), -0.63018 (19), -0.62868 (19), -0.62187 (19), -0.61736 (19), -0.61664 (19), -0.61026 (19), -0.60957 (19), -0.60850 (19), -0.60847 (19), -0.60364 (19), -0.60331 (19), -0.60211 (19), -0.60152 (19), -0.60075 (19), -0.60049 (19), -0.59879 (19), -0.59877 (19), 
Length of domains: 1024
Time: pickout 0.0092    decision 0.0381    set_bounds 0.0419    solve 0.1909    add 0.0045    
Accumulated time: pickout 0.0549    decision 0.8885    set_bounds 0.2836    solve 2.4204    add 1.0099    
Current (lb-rhs): -0.6351999044418335
3446 domains visited
Cumulative time: 5.635183334350586

BaB round 12
batch: 1024
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 87] [/input-12, 87] [/input-12, 9] [/input-12, 47] [/input-12, 9] [/input-12, 47] [/input-12, 9] [/input-12, 87] [/input-12, 9] [/input-12, 47] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6144908666610718
10 lb beta sum: 0.0, worst -0.6143038272857666
Time: prepare 0.0870    bound 0.1540    transfer 0.0090    finalize 0.0106    func 0.2738    
Accumulated time: func 2.7499    prepare 0.2881    bound 2.1764    transfer 0.0321    finalize 0.0500    
all_split False
======================Cut inference begins======================
max lb tensor(-0.14955306) min lb tensor(-0.61424792)
Number of Verified Splits: 0 of 2048
No cut inferred: All or none verified.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.06206250190734863 
BICCOS Cumulative time: 0.9364566802978516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.61425 (20), -0.61316 (20), -0.59978 (20), -0.59899 (20), -0.59829 (20), -0.59827 (20), -0.59557 (20), -0.59539 (20), -0.59298 (20), -0.59296 (20), -0.58643 (20), -0.58633 (20), -0.58586 (20), -0.58539 (20), -0.58285 (20), -0.58258 (20), -0.58240 (20), -0.58213 (20), -0.58213 (20), -0.58122 (20), 
Length of domains: 2048
Time: pickout 0.0170    decision 0.0691    set_bounds 0.0836    solve 0.2742    add 0.0106    
Accumulated time: pickout 0.0719    decision 0.9576    set_bounds 0.3672    solve 2.6946    add 1.0204    
Current (lb-rhs): -0.6142479181289673
5494 domains visited
Cumulative time: 6.154171705245972

BaB round 13
batch: 2048
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 555] [/input-12, 85] [/input-12, 85] [/input-12, 87] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-8, 555] [/input-12, 85] [/input-12, 85] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5840623378753662
10 lb beta sum: 0.0, worst -0.5838679075241089
Time: prepare 0.1807    bound 0.2462    transfer 0.0226    finalize 0.0278    func 0.5043    
Accumulated time: func 3.2542    prepare 0.4690    bound 2.4226    transfer 0.0547    finalize 0.0779    
all_split False
======================Cut inference begins======================
max lb tensor(-0.11137122) min lb tensor(-0.58383524)
Number of Verified Splits: 0 of 4096
No cut inferred: All or none verified.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.12720990180969238 
BICCOS Cumulative time: 1.063666582107544
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.58384 (21), -0.58313 (21), -0.58234 (21), -0.58219 (21), -0.57883 (21), -0.57845 (21), -0.57844 (21), -0.57836 (21), -0.57827 (21), -0.57701 (21), -0.56886 (21), -0.56876 (21), -0.56834 (21), -0.56825 (21), -0.56353 (21), -0.56327 (21), -0.56326 (21), -0.56307 (21), -0.55914 (21), -0.55820 (21), 
Length of domains: 4096
Time: pickout 0.0232    decision 0.2994    set_bounds 0.1595    solve 0.5056    add 0.1467    
Accumulated time: pickout 0.0951    decision 1.2570    set_bounds 0.5267    solve 3.2002    add 1.1671    
Current (lb-rhs): -0.583835244178772
9590 domains visited
Cumulative time: 7.4262855052948

BaB round 14
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 85] [/input-8, 555] [/input-12, 87] [/input-12, 85] [/input-8, 1578] [/input-8, 555] [/input-8, 1979] [/input-12, 85] [/input-8, 1578] [/input-8, 555] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5523368120193481
10 lb beta sum: 0.0, worst -0.552119255065918
Time: prepare 0.3944    bound 0.4137    transfer 0.0410    finalize 0.0523    func 0.9549    
Accumulated time: func 4.2090    prepare 0.8637    bound 2.8363    transfer 0.0957    finalize 0.1302    
all_split False
======================Cut inference begins======================
max lb tensor(-0.08016121) min lb tensor(-0.55205715)
Number of Verified Splits: 0 of 8192
No cut inferred: All or none verified.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.26288533210754395 
BICCOS Cumulative time: 1.326551914215088
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.55206 (22), -0.55152 (22), -0.55131 (22), -0.55061 (22), -0.55045 (22), -0.55032 (22), -0.54996 (22), -0.54988 (22), -0.54809 (22), -0.54794 (22), -0.54783 (22), -0.54774 (22), -0.54692 (22), -0.54658 (22), -0.54658 (22), -0.54649 (22), -0.54640 (22), -0.54623 (22), -0.54620 (22), -0.54607 (22), 
Length of domains: 8192
Time: pickout 0.0477    decision 0.4324    set_bounds 0.4541    solve 0.9573    add 0.0411    
Accumulated time: pickout 0.1428    decision 1.6894    set_bounds 0.9808    solve 4.1575    add 1.2082    
Current (lb-rhs): -0.552057147026062
17782 domains visited
current_vram/total_varm: 9.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 9.631455421447754

BaB round 15
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1578] [/input-8, 1578] [/input-8, 1578] [/input-8, 556] [/input-8, 1574] [/input-8, 1300] [/input-8, 555] [/input-8, 1578] [/input-8, 555] [/input-8, 1578] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5346072912216187
10 lb beta sum: 0.0, worst -0.534527063369751
Time: prepare 0.7814    bound 0.7620    transfer 0.0895    finalize 0.1034    func 1.8451    
Accumulated time: func 6.0541    prepare 1.6455    bound 3.5984    transfer 0.1853    finalize 0.2336    
all_split False
======================Cut inference begins======================
max lb tensor(-0.04793723) min lb tensor(-0.53449297)
Number of Verified Splits: 0 of 16384
No cut inferred: All or none verified.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.7992122173309326 
BICCOS Cumulative time: 2.1257641315460205
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53449 (23), -0.53440 (23), -0.53386 (23), -0.53374 (23), -0.53339 (23), -0.53288 (23), -0.53271 (23), -0.53260 (23), -0.53254 (23), -0.53048 (23), -0.53036 (23), -0.53032 (23), -0.53024 (23), -0.53009 (23), -0.52993 (23), -0.52992 (23), -0.52987 (23), -0.52970 (23), -0.52944 (23), -0.52932 (23), 
Length of domains: 16384
Time: pickout 0.1066    decision 0.7013    set_bounds 0.9497    solve 1.8482    add 0.0988    
Accumulated time: pickout 0.2494    decision 2.3907    set_bounds 1.9305    solve 6.0057    add 1.3070    
Current (lb-rhs): -0.5344929695129395
34166 domains visited
current_vram/total_varm: 19.0GB/99.9GB, batch_size increase to 16384
Cumulative time: 14.159953117370605

BaB round 16
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1979] [/input-8, 556] [/input-8, 556] [/input-8, 1578] [/input-8, 1300] [/input-8, 1578] [/input-8, 1578] [/input-8, 556] [/input-8, 1979] [/input-8, 556] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.521956205368042
10 lb beta sum: 0.0, worst -0.5218043327331543
Time: prepare 1.5513    bound 1.4520    transfer 0.1549    finalize 0.5810    func 3.9548    
Accumulated time: func 10.0089    prepare 3.1973    bound 5.0503    transfer 0.3401    finalize 0.8146    
all_split False
======================Cut inference begins======================
max lb tensor(-0.02168991) min lb tensor(-0.52173281)
Number of Verified Splits: 0 of 32768
No cut inferred: All or none verified.
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 1.077942132949829 
BICCOS Cumulative time: 3.2037062644958496
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52173 (24), -0.52075 (24), -0.51990 (24), -0.51981 (24), -0.51884 (24), -0.51840 (24), -0.51795 (24), -0.51786 (24), -0.51782 (24), -0.51768 (24), -0.51767 (24), -0.51765 (24), -0.51765 (24), -0.51762 (24), -0.51755 (24), -0.51746 (24), -0.51702 (24), -0.51655 (24), -0.51605 (24), -0.51599 (24), 
Length of domains: 32768
Time: pickout 0.2461    decision 1.8965    set_bounds 1.9012    solve 3.9615    add 0.2067    
Accumulated time: pickout 0.4955    decision 4.2873    set_bounds 3.8317    solve 9.9672    add 1.5138    
Current (lb-rhs): -0.5217328071594238
66934 domains visited
current_vram/total_varm: 27.1GB/99.9GB, batch_size increase to 32768
Cumulative time: 23.489941120147705

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 556] [/input-8, 1570] [/input-8, 1979] [/input-8, 1570] [/input-8, 555] [/input-8, 1574] [/input-8, 1570] [/input-8, 1979] [/input-8, 556] [/input-8, 1570] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5111294984817505
10 lb beta sum: 0.0, worst -0.5110646486282349
Time: prepare 3.1007    bound 8.0315    transfer 0.3075    finalize 0.4076    func 12.7928    
Accumulated time: func 22.8017    prepare 6.2986    bound 13.0819    transfer 0.6476    finalize 1.2222    
all_split False
======================Cut inference begins======================
max lb tensor(0.00389394) min lb tensor(-0.51103210)
Number of Verified Splits: 8 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 9
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 2.3055903911590576 
BICCOS Cumulative time: 5.509296655654907
Preprocessing time: 2.240091323852539 Inference time: 0.006870269775390625 Add cuts time: 0.05784034729003906 Cut analysis time: 0.0007884502410888672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.51103 (25), -0.50994 (25), -0.50914 (25), -0.50815 (25), -0.50735 (25), -0.50691 (25), -0.50606 (25), -0.50574 (25), -0.50573 (25), -0.50561 (25), -0.50558 (25), -0.50537 (25), -0.50535 (25), -0.50519 (25), -0.50512 (25), -0.50500 (25), -0.50455 (25), -0.50428 (25), -0.50345 (25), -0.50313 (25), 
Length of domains: 65528
Time: pickout 0.4292    decision 3.7762    set_bounds 4.0191    solve 12.8023    add 0.3682    
Accumulated time: pickout 0.9247    decision 8.0635    set_bounds 7.8508    solve 22.7695    add 1.8819    
Current (lb-rhs): -0.5110321044921875
132462 domains visited
Cumulative time: 47.257094860076904

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1300] [/input-8, 1300] [/input-8, 1570] [/input-8, 1571] [/input-8, 1582] [/input-8, 1582] [/input-8, 1971] [/input-8, 1570] [/input-8, 1571] [/input-8, 1571] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4948369264602661
10 lb beta sum: 0.0008428132277913392, worst -0.49467742443084717
Time: prepare 1.4588    bound 8.0363    transfer 0.3195    finalize 0.4679    func 10.7201    
Accumulated time: func 33.5219    prepare 7.7580    bound 21.1181    transfer 0.9671    finalize 1.6901    
all_split False
======================Cut inference begins======================
max lb tensor(0.02672669) min lb tensor(-0.49463022)
Number of Verified Splits: 305 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 9
#cuts 4-6: 4
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 2.3981263637542725 
BICCOS Cumulative time: 7.90742301940918
Preprocessing time: 2.196157932281494 Inference time: 0.15584492683410645 Add cuts time: 0.04517173767089844 Cut analysis time: 0.0009517669677734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.51103 (25), -0.50994 (25), -0.50914 (25), -0.50815 (25), -0.50735 (25), -0.50691 (25), -0.50512 (25), -0.50500 (25), -0.50455 (25), -0.50345 (25), -0.50313 (25), -0.50116 (25), -0.49999 (25), -0.49514 (25), -0.49463 (26), -0.49463 (25), -0.49429 (25), -0.49413 (25), -0.49368 (26), -0.49347 (26), 
Length of domains: 97991
Time: pickout 0.5215    decision 4.0076    set_bounds 4.4609    solve 11.4453    add 0.5414    
Accumulated time: pickout 1.4462    decision 12.0710    set_bounds 12.3117    solve 34.2148    add 2.4234    
Current (lb-rhs): -0.5110321044921875
197693 domains visited
Cumulative time: 70.80490779876709

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1571] [/input-8, 1571] [/input-8, 1570] [/input-8, 1570] [/input-8, 1300] [/input-8, 1582] [/input-8, 555] [/input-8, 1570] [/input-8, 1300] [/input-8, 1300] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.49701523780822754
10 lb beta sum: 0.02083996683359146, worst -0.49697375297546387
Time: prepare 1.5199    bound 8.7626    transfer 0.3115    finalize 0.5304    func 11.5611    
Accumulated time: func 45.0830    prepare 9.2787    bound 29.8808    transfer 1.2786    finalize 2.2205    
all_split False
======================Cut inference begins======================
max lb tensor(0.04160023) min lb tensor(-0.49693215)
Number of Verified Splits: 381 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 9
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 3.7646842002868652 
BICCOS Cumulative time: 11.672107219696045
Preprocessing time: 3.5391671657562256 Inference time: 0.20984435081481934 Add cuts time: 0.014580488204956055 Cut analysis time: 0.0010921955108642578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.49693 (26), -0.49663 (26), -0.49580 (26), -0.49528 (26), -0.49463 (26), -0.49421 (26), -0.49404 (26), -0.49368 (26), -0.49366 (26), -0.49347 (26), -0.49346 (26), -0.49330 (26), -0.49323 (26), -0.49308 (26), -0.49291 (26), -0.49288 (26), -0.49282 (26), -0.49271 (26), -0.49268 (26), -0.49227 (26), 
Length of domains: 130378
Time: pickout 0.5931    decision 4.8974    set_bounds 5.1014    solve 11.5729    add 0.3102    
Accumulated time: pickout 2.0393    decision 16.9684    set_bounds 17.4131    solve 45.7877    add 2.7335    
Current (lb-rhs): -0.49693214893341064
262848 domains visited
Cumulative time: 97.12374114990234

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1574] [/input-8, 1300] [/input-8, 1570] [/input-8, 1570] [/input-8, 1548] [/input-8, 556] [/input-8, 556] [/input-8, 1572] [/input-8, 1574] [/input-8, 1571] 
cut re-enabled after branching node selection
0 lb beta sum: 0.000648059300146997, worst -0.48072361946105957
10 lb beta sum: 0.02023852989077568, worst -0.48051875829696655
Time: prepare 3.2518    bound 8.0528    transfer 0.3106    finalize 1.6817    func 13.7374    
Accumulated time: func 58.8204    prepare 12.5311    bound 37.9335    transfer 1.5892    finalize 3.9022    
all_split False
======================Cut inference begins======================
max lb tensor(0.02912334) min lb tensor(-0.48039651)
Number of Verified Splits: 1209 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 9
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 3.554783582687378 
BICCOS Cumulative time: 15.226890802383423
Preprocessing time: 2.97218918800354 Inference time: 0.5282454490661621 Add cuts time: 0.05276036262512207 Cut analysis time: 0.001588582992553711
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.49693 (26), -0.49663 (26), -0.49580 (26), -0.49528 (26), -0.49463 (26), -0.49421 (26), -0.49404 (26), -0.49368 (26), -0.49366 (26), -0.49347 (26), -0.49346 (26), -0.49330 (26), -0.49323 (26), -0.49308 (26), -0.49291 (26), -0.49288 (26), -0.49282 (26), -0.49271 (26), -0.48657 (26), -0.48474 (26), 
Length of domains: 161937
Time: pickout 0.5697    decision 3.5653    set_bounds 4.8308    solve 13.7510    add 0.3587    
Accumulated time: pickout 2.6090    decision 20.5337    set_bounds 22.2439    solve 59.5388    add 3.0923    
Current (lb-rhs): -0.49693214893341064
327175 domains visited
Cumulative time: 123.93203449249268

BaB round 21
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 556] [/input-8, 1574] [/input-8, 1300] [/input-8, 1979] [/input-8, 1979] [/input-8, 1571] [/input-8, 1571] [/input-8, 556] [/input-8, 1979] [/input-8, 1574] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.48255884647369385
10 lb beta sum: 0.04207731410861015, worst -0.4822566509246826
Time: prepare 1.5481    bound 8.7575    transfer 0.3084    finalize 2.0118    func 13.0779    
Accumulated time: func 71.8983    prepare 14.0798    bound 46.6910    transfer 1.8976    finalize 5.9140    
all_split False
======================Cut inference begins======================
max lb tensor(0.03417531) min lb tensor(-0.48211378)
Number of Verified Splits: 1344 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 3.086390972137451 
BICCOS Cumulative time: 18.313281774520874
Preprocessing time: 2.528278112411499 Inference time: 0.534630537033081 Add cuts time: 0.022472620010375977 Cut analysis time: 0.0010097026824951172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.49693 (26), -0.49663 (26), -0.49580 (26), -0.49528 (26), -0.49421 (26), -0.49404 (26), -0.49366 (26), -0.49346 (26), -0.49330 (26), -0.49308 (26), -0.49271 (26), -0.48657 (26), -0.48474 (26), -0.48211 (27), -0.48160 (27), -0.48128 (27), -0.48106 (26), -0.48050 (26), -0.48044 (26), -0.48040 (27), 
Length of domains: 193361
Time: pickout 0.5893    decision 4.7791    set_bounds 4.1211    solve 13.0884    add 0.3300    
Accumulated time: pickout 3.1983    decision 25.3128    set_bounds 26.3650    solve 72.6272    add 3.4223    
Current (lb-rhs): -0.49693214893341064
391367 domains visited
Cumulative time: 150.08068943023682

BaB round 22
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1971] [/input-8, 1300] [/input-8, 1574] [/input-8, 1570] [/input-8, 1570] [/input-8, 1979] [/input-8, 1582] [/input-8, 1570] [/input-8, 1574] [/input-8, 1572] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.48288798332214355
10 lb beta sum: 0.04555454105138779, worst -0.4827982187271118
Time: prepare 1.5758    bound 8.0434    transfer 0.3094    finalize 0.5600    func 10.9468    
Accumulated time: func 82.8451    prepare 15.6563    bound 54.7344    transfer 2.2069    finalize 6.4741    
all_split False
======================Cut inference begins======================
max lb tensor(0.02930382) min lb tensor(-0.48273492)
Number of Verified Splits: 1121 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 3.087200403213501 
BICCOS Cumulative time: 21.400482177734375
Preprocessing time: 2.6590147018432617 Inference time: 0.37921667098999023 Add cuts time: 0.04784822463989258 Cut analysis time: 0.0011208057403564453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.49663 (26), -0.49528 (26), -0.49421 (26), -0.49404 (26), -0.49366 (26), -0.49330 (26), -0.49271 (26), -0.48273 (27), -0.48211 (27), -0.48196 (27), -0.48160 (27), -0.48128 (27), -0.48050 (26), -0.48044 (26), -0.48040 (27), -0.48038 (27), -0.48035 (27), -0.48031 (27), -0.48014 (26), -0.48005 (27), 
Length of domains: 225008
Time: pickout 0.5739    decision 3.4608    set_bounds 5.4821    solve 12.7894    add 0.2774    
Accumulated time: pickout 3.7722    decision 28.7736    set_bounds 31.8471    solve 85.4166    add 3.6997    
Current (lb-rhs): -0.4966261386871338
455782 domains visited
Cumulative time: 175.9309937953949

BaB round 23
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 556] [/input-8, 556] [/input-8, 1574] [/input-8, 1300] [/input-8, 1571] [/input-8, 1571] [/input-8, 1979] [/input-8, 556] [/input-8, 1574] [/input-8, 1582] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0009001014987006783, worst -0.4826122522354126
10 lb beta sum: 0.04563573747873306, worst -0.48249149322509766
Time: prepare 1.5820    bound 8.0876    transfer 0.3047    finalize 0.5300    func 10.9526    
Accumulated time: func 93.7976    prepare 17.2389    bound 62.8220    transfer 2.5117    finalize 7.0041    
all_split False
======================Cut inference begins======================
max lb tensor(0.03154464) min lb tensor(-0.48240578)
Number of Verified Splits: 1095 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 2.8214187622070312 
BICCOS Cumulative time: 24.221900939941406
Preprocessing time: 2.460249662399292 Inference time: 0.34183621406555176 Add cuts time: 0.01832866668701172 Cut analysis time: 0.0010042190551757812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.48273 (27), -0.48241 (27), -0.48211 (27), -0.48196 (27), -0.48160 (27), -0.48135 (27), -0.48128 (27), -0.48040 (27), -0.48038 (27), -0.48035 (27), -0.48031 (27), -0.48010 (27), -0.48005 (27), -0.47989 (27), -0.47972 (27), -0.47963 (27), -0.47880 (27), -0.47867 (27), -0.47853 (27), -0.47837 (27), 
Length of domains: 256681
Time: pickout 0.5583    decision 3.4639    set_bounds 5.8154    solve 10.9664    add 0.2570    
Accumulated time: pickout 4.3305    decision 32.2375    set_bounds 37.6625    solve 96.3830    add 3.9566    
Current (lb-rhs): -0.48273491859436035
520223 domains visited
Time out!!!!!!!!
Result: unknown in 204.1515 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 104, vnnlib ID: 104 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-54.16155624, -55.81151199, -48.47058105, -48.13224792, -50.77946472,
         -43.63881683, -51.88303757, -50.35367203, -55.27946091, -54.33725357]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [998]; unstable size 998; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 400, 1, 998] with unstable size 399 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 45, 1, 998] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 998] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [399]; unstable size 399; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 45, 1, 399] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 399] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [44]; unstable size 44; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.17034388, 6.17204762, 1.19252372, 3.00634241, 3.47040272, 4.60225010,
         3.27923965, 6.09892082, 5.19657421]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0717 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 105, vnnlib ID: 105 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.44626999, -36.13312531, -29.87022209, -31.75235939, -31.80407906,
         -31.92299843, -32.08329391, -31.19142914, -33.59536362, -34.24655533]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [901]; unstable size 901; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 422, 1, 901] with unstable size 421 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 49, 1, 901] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 901] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [421]; unstable size 421; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 49, 1, 421] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 421] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [48]; unstable size 48; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 48] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.64685416, -0.76128155, -4.71259117, -2.92492056, -2.36559868,
         -2.81570292, -3.01150513, -2.51449585, -1.55817378]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.44626999, -36.13312531, -29.87022209, -31.75235939, -31.80407906,
         -31.92299843, -32.08329391, -31.19142914, -33.59536362, -34.24655533]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.44626617, -36.13312531, -29.87021828, -31.75235939, -31.80407906,
          -31.92299461, -32.08329391, -31.19142723, -33.59536362, -34.24655533],
         [-32.44626617, -36.13312531, -29.87021828, -31.75235939, -31.80407906,
          -31.92299461, -32.08329391, -31.19142723, -33.59536362, -34.24655533]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.25483894,  4.94169807, -1.32120895,  0.56093216,  0.61265182,
           0.73156738,  0.89186668,  2.40393639,  3.05512810]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         ...,


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0819 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 106, vnnlib ID: 106 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-38.05139542, -34.47761917, -40.79656982, -41.44371033, -41.63493347,
         -42.91249847, -42.61858749, -42.90752411, -36.02470398, -36.53414154]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1000]; unstable size 1000; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 332, 1, 1000] with unstable size 331 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 48, 1, 1000] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1000] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [331]; unstable size 331; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 48, 1, 331] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 331] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [47]; unstable size 47; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 47] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.45793629,  1.32214451,  1.57042599,  1.42173481,  2.77598286,
          2.89081192,  2.01164436, -2.46448278, -1.05068600]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-38.05139542, -34.47761917, -40.79656982, -41.44371033, -41.63493347,
         -42.91249847, -42.61858749, -42.90752411, -36.02470398, -36.53414154]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.71it/s]100%|██████████| 1/1 [00:00<00:00,  7.70it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.04735565, -34.47437668, -39.59632111, -40.22649002, -40.22799301,
          -41.72746658, -41.36185837, -41.68851089, -34.51456451, -36.05612564],
         [-37.04735565, -34.47437668, -39.59632111, -40.22649002, -40.22799301,
          -41.72746658, -41.36185837, -41.68851089, -34.51456451, -36.05612564]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.57297897, 0.04018784, 1.58174896]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1332 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 10.28155517578125
alpha/beta optimization time: 1.441380262374878
initial alpha-crown bounds: tensor([[-0.23950005,  1.56531811,  1.82496643,  1.70704079,  3.05340099,
          3.14735508,  2.33146000, -2.24427700, -0.86420918]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 3 ; Worst class: (+ rhs) -2.244277000427246
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.3472146987915
Verifying property 0 with 1 instances.
##### Instance 106 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.23950005]], device='cuda:0') need to verify.
Model prediction is: tensor([-38.05139542, -34.47761917, -40.79656982, -41.44371033, -41.63493347,
        -42.91249847, -42.61858749, -42.90752411, -36.02470398, -36.53414154],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.23950005]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1000
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 322
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1369
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011658668518066406
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 61] 
split level 1: [/input-12, 30] 
split level 2: [/input-12, 40] 
split level 3: [/input-12, 22] 
split level 4: [/input-12, 48] 
split level 5: [/input-12, 56] 
split level 6: [/input-12, 62] 
split level 7: [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.7088570594787598

all verified at 0th iter
Time: prepare 0.0020    bound 0.0048    transfer 0.0006    finalize 0.0021    func 0.0114    
Accumulated time: func 0.0114    prepare 0.0025    bound 0.0048    transfer 0.0006    finalize 0.0021    
all_split False
======================Cut inference begins======================
max lb tensor(1.85516739) min lb tensor(0.70885706)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.007704496383666992 
BICCOS Cumulative time: 0.007704496383666992
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0239    set_bounds 0.0169    solve 0.0115    add 0.0004    
Accumulated time: pickout 0.0004    decision 0.0239    set_bounds 0.0169    solve 0.0115    add 0.0004    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0659787654876709


Properties batch 1, size 1
Remaining timeout: 197.9118366241455
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 197.91154050827026
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 197.9115071296692
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.9114854335785
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.91146421432495
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.91144371032715
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.91142296791077
Verifying property 7 with 1 instances.
##### Instance 106 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.24427700]], device='cuda:0') need to verify.
Model prediction is: tensor([-38.05139542, -34.47761917, -40.79656982, -41.44371033, -41.63493347,
        -42.91249847, -42.61858749, -42.90752411, -36.02470398, -36.53414154],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.24427700]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1000
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 322
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1369
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010752677917480469
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 84] 
split level 1: [/input-12, 0] 
split level 2: [/input-12, 47] 
split level 3: [/input-12, 75] 
split level 4: [/input-12, 24] 
split level 5: [/input-12, 70] 
split level 6: [/input-12, 61] 
split level 7: [/input-12, 78] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2777462005615234
10 lb beta sum: 0.0, worst -1.274703025817871
Time: prepare 0.0041    bound 0.1039    transfer 0.0010    finalize 0.0018    func 0.1126    
Accumulated time: func 0.1126    prepare 0.0045    bound 0.1039    transfer 0.0010    finalize 0.0018    
all_split False
======================Cut inference begins======================
max lb tensor(0.96760130) min lb tensor(-1.27332544)
Number of Verified Splits: 193 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -2.244272232055664
10 lb beta sum: 0.0, worst -2.244283676147461
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 4-6: 19
#cuts 7-9: 16
#cuts >= 20: 0
BICCOS time: 0.208848237991333 
BICCOS Cumulative time: 0.208848237991333
Preprocessing time: 0.007182598114013672 Inference time: 0.19458293914794922 Add cuts time: 0.005196809768676758 Cut analysis time: 0.0018858909606933594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.27333 (8), -1.23263 (8), -1.12931 (8), -1.08673 (8), -1.05872 (8), -1.00529 (8), -0.99847 (8), -0.94040 (8), -0.88280 (8), -0.85543 (8), -0.83210 (8), -0.82729 (8), -0.82287 (8), -0.76966 (8), -0.73033 (8), -0.72598 (8), -0.71656 (8), -0.70580 (8), -0.68389 (8), -0.67753 (8), 
Length of domains: 63
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0167    solve 0.1127    add 0.0087    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0167    solve 0.1127    add 0.0087    
Current (lb-rhs): -1.2733254432678223
63 domains visited
Cumulative time: 0.3875880241394043

BaB round 2
batch: 63
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
split level 1: [/input-12, 56] [/input-12, 35] [/input-12, 56] [/input-12, 35] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 35] [/input-12, 35] [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.150899887084961
10 lb beta sum: 0.0, worst -1.149160385131836
Time: prepare 0.0038    bound 0.1236    transfer 0.0018    finalize 0.0017    func 0.1326    
Accumulated time: func 0.2452    prepare 0.0085    bound 0.2275    transfer 0.0027    finalize 0.0035    
all_split False
======================Cut inference begins======================
max lb tensor(0.24354076) min lb tensor(-1.14831686)
Number of Verified Splits: 96 of 252
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.114314079284668
10 lb beta sum: 0.3078921437263489, worst -0.7110756635665894
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 53.
#cuts 4-6: 20
#cuts 7-9: 32
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.19538307189941406 
BICCOS Cumulative time: 0.40423130989074707
Preprocessing time: 0.008015632629394531 Inference time: 0.17772579193115234 Add cuts time: 0.00673985481262207 Cut analysis time: 0.002901792526245117
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.14832 (10), -1.12295 (10), -1.10535 (10), -1.00147 (10), -0.99786 (10), -0.95435 (10), -0.94925 (10), -0.94539 (10), -0.91256 (10), -0.88952 (10), -0.87521 (10), -0.82936 (10), -0.80276 (10), -0.79708 (10), -0.79337 (10), -0.78250 (10), -0.78029 (10), -0.76451 (10), -0.74175 (10), -0.72533 (10), 
Length of domains: 156
Time: pickout 0.0022    decision 0.0179    set_bounds 0.0091    solve 0.1326    add 0.0473    
Accumulated time: pickout 0.0025    decision 0.0418    set_bounds 0.0257    solve 0.2453    add 0.0560    
Current (lb-rhs): -1.1483168601989746
219 domains visited
Cumulative time: 0.7934660911560059

BaB round 3
batch: 156
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.1125297546386719
10 lb beta sum: 0.0, worst -1.111445426940918
Time: prepare 0.0047    bound 0.1224    transfer 0.0007    finalize 0.0016    func 0.1315    
Accumulated time: func 0.3767    prepare 0.0133    bound 0.3499    transfer 0.0034    finalize 0.0051    
all_split False
======================Cut inference begins======================
max lb tensor(0.34092712) min lb tensor(-1.11100101)
Number of Verified Splits: 136 of 312
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 53.
#cuts 1-3: 6
#cuts 4-6: 37
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.03203463554382324 
BICCOS Cumulative time: 0.4362659454345703
Preprocessing time: 0.009504556655883789 Inference time: 0.01491546630859375 Add cuts time: 0.005518436431884766 Cut analysis time: 0.0020961761474609375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.11100 (11), -1.08438 (11), -1.06798 (11), -0.96193 (11), -0.96041 (11), -0.91760 (11), -0.91039 (11), -0.90486 (11), -0.87429 (11), -0.84801 (11), -0.83199 (11), -0.78809 (11), -0.75671 (11), -0.74750 (11), -0.74009 (11), -0.72554 (11), -0.72243 (11), -0.72080 (11), -0.70159 (11), -0.68086 (11), 
Length of domains: 176
Time: pickout 0.0025    decision 0.0206    set_bounds 0.0092    solve 0.1316    add 0.0127    
Accumulated time: pickout 0.0050    decision 0.0623    set_bounds 0.0349    solve 0.3770    add 0.0686    
Current (lb-rhs): -1.1110010147094727
395 domains visited
Cumulative time: 1.0031635761260986

BaB round 4
batch: 176
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0685358047485352
10 lb beta sum: 0.011792056262493134, worst -1.0678291320800781
Time: prepare 0.0144    bound 0.1221    transfer 0.0020    finalize 0.0020    func 0.1428    
Accumulated time: func 0.5195    prepare 0.0279    bound 0.4720    transfer 0.0055    finalize 0.0071    
all_split False
======================Cut inference begins======================
max lb tensor(0.45901015) min lb tensor(-1.06752920)
Number of Verified Splits: 159 of 352
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 68.
#cuts 1-3: 11
#cuts 4-6: 48
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.03773999214172363 
BICCOS Cumulative time: 0.47400593757629395
Preprocessing time: 0.01062631607055664 Inference time: 0.018238067626953125 Add cuts time: 0.006438255310058594 Cut analysis time: 0.0024373531341552734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.06753 (12), -1.04232 (12), -1.02389 (12), -0.91758 (12), -0.91424 (12), -0.87230 (12), -0.86743 (12), -0.85661 (12), -0.82985 (12), -0.80266 (12), -0.78601 (12), -0.73639 (12), -0.73258 (12), -0.71090 (12), -0.69813 (12), -0.69588 (12), -0.68688 (12), -0.67203 (12), -0.67052 (12), -0.66552 (12), 
Length of domains: 193
Time: pickout 0.0026    decision 0.0218    set_bounds 0.0104    solve 0.1436    add 0.0020    
Accumulated time: pickout 0.0076    decision 0.0841    set_bounds 0.0453    solve 0.5205    add 0.0707    
Current (lb-rhs): -1.0675292015075684
588 domains visited
Cumulative time: 1.2227115631103516

BaB round 5
batch: 193
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 35] [/input-12, 56] [/input-12, 35] [/input-12, 56] [/input-12, 56] [/input-12, 35] [/input-12, 35] [/input-12, 56] [/input-12, 35] [/input-12, 35] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0122013092041016
10 lb beta sum: 0.009009460918605328, worst -1.0115947723388672
Time: prepare 0.0057    bound 0.1263    transfer 0.0009    finalize 0.0027    func 0.1380    
Accumulated time: func 0.6576    prepare 0.0338    bound 0.5984    transfer 0.0063    finalize 0.0098    
all_split False
======================Cut inference begins======================
max lb tensor(0.34854698) min lb tensor(-1.01138639)
Number of Verified Splits: 95 of 386
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 89.
#cuts 1-3: 13
#cuts 4-6: 67
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.03399467468261719 
BICCOS Cumulative time: 0.5080006122589111
Preprocessing time: 0.01153254508972168 Inference time: 0.011198997497558594 Add cuts time: 0.008136749267578125 Cut analysis time: 0.003126382827758789
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.01139 (13), -0.96783 (13), -0.96276 (13), -0.93108 (13), -0.89756 (13), -0.86082 (13), -0.84305 (13), -0.83683 (13), -0.81475 (13), -0.80989 (13), -0.78923 (13), -0.77572 (13), -0.77232 (13), -0.75066 (13), -0.75011 (13), -0.71971 (13), -0.70649 (13), -0.70249 (13), -0.69971 (13), -0.69969 (13), 
Length of domains: 291
Time: pickout 0.0024    decision 0.0197    set_bounds 0.0109    solve 0.1381    add 0.0023    
Accumulated time: pickout 0.0101    decision 0.1038    set_bounds 0.0562    solve 0.6587    add 0.0730    
Current (lb-rhs): -1.0113863945007324
879 domains visited
Cumulative time: 1.4316368103027344

BaB round 6
batch: 291
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9728946685791016
10 lb beta sum: 0.002931513823568821, worst -0.9723901748657227
Time: prepare 0.0083    bound 0.1366    transfer 0.0032    finalize 0.0028    func 0.1552    
Accumulated time: func 0.8128    prepare 0.0423    bound 0.7349    transfer 0.0095    finalize 0.0125    
all_split False
======================Cut inference begins======================
max lb tensor(0.30270019) min lb tensor(-0.97217751)
Number of Verified Splits: 188 of 582
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 115.
#cuts 1-3: 15
#cuts 4-6: 93
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.06161355972290039 
BICCOS Cumulative time: 0.5696141719818115
Preprocessing time: 0.017945051193237305 Inference time: 0.025740861892700195 Add cuts time: 0.014066696166992188 Cut analysis time: 0.003860950469970703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.97218 (14), -0.92727 (14), -0.92291 (14), -0.88960 (14), -0.85413 (14), -0.82051 (14), -0.79786 (14), -0.79704 (14), -0.77278 (14), -0.76885 (14), -0.76863 (14), -0.74684 (14), -0.74163 (14), -0.73457 (14), -0.72927 (14), -0.71678 (14), -0.70959 (14), -0.70698 (14), -0.70157 (14), -0.67924 (14), 
Length of domains: 394
Time: pickout 0.0036    decision 0.0273    set_bounds 0.0169    solve 0.1554    add 0.0040    
Accumulated time: pickout 0.0136    decision 0.1311    set_bounds 0.0730    solve 0.8141    add 0.0770    
Current (lb-rhs): -0.9721775054931641
1273 domains visited
Cumulative time: 1.7028987407684326

BaB round 7
batch: 394
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9343042373657227
10 lb beta sum: 0.006946461740881205, worst -0.934046745300293
Time: prepare 0.0114    bound 0.1300    transfer 0.0039    finalize 0.0039    func 0.1544    
Accumulated time: func 0.9672    prepare 0.0540    bound 0.8650    transfer 0.0134    finalize 0.0164    
all_split False
======================Cut inference begins======================
max lb tensor(0.28630638) min lb tensor(-0.93399048)
Number of Verified Splits: 262 of 788
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 149.
#cuts 1-3: 18
#cuts 4-6: 124
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.08791589736938477 
BICCOS Cumulative time: 0.6575300693511963
Preprocessing time: 0.023673534393310547 Inference time: 0.03637218475341797 Add cuts time: 0.022525310516357422 Cut analysis time: 0.005344867706298828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.93399 (15), -0.88920 (15), -0.88405 (15), -0.85120 (15), -0.81489 (15), -0.79046 (15), -0.78135 (15), -0.75958 (15), -0.75904 (15), -0.74148 (15), -0.73298 (15), -0.73163 (15), -0.72941 (15), -0.72584 (15), -0.70845 (15), -0.69848 (15), -0.69786 (15), -0.69411 (15), -0.68888 (15), -0.67258 (15), 
Length of domains: 526
Time: pickout 0.0067    decision 0.0335    set_bounds 0.0234    solve 0.1553    add 0.0033    
Accumulated time: pickout 0.0203    decision 0.1646    set_bounds 0.0965    solve 0.9694    add 0.0803    
Current (lb-rhs): -0.933990478515625
1799 domains visited
Cumulative time: 2.0165865421295166

BaB round 8
batch: 526
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 85] [/input-12, 30] [/input-12, 50] [/input-8, 564] [/input-12, 50] [/input-12, 50] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9108772277832031
10 lb beta sum: 0.008172838017344475, worst -0.9107532501220703
Time: prepare 0.0162    bound 0.1351    transfer 0.0050    finalize 0.2376    func 0.4011    
Accumulated time: func 1.3684    prepare 0.0704    bound 1.0001    transfer 0.0183    finalize 0.2540    
all_split False
======================Cut inference begins======================
max lb tensor(0.41351128) min lb tensor(-0.91072512)
Number of Verified Splits: 435 of 1052
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 202.
#cuts 1-3: 24
#cuts 4-6: 168
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.1391441822052002 
BICCOS Cumulative time: 0.7966742515563965
Preprocessing time: 0.03653573989868164 Inference time: 0.05675387382507324 Add cuts time: 0.0389251708984375 Cut analysis time: 0.0069293975830078125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.91073 (16), -0.86568 (16), -0.86208 (16), -0.82854 (16), -0.79122 (16), -0.76342 (16), -0.76080 (16), -0.73821 (16), -0.73483 (16), -0.72767 (16), -0.71281 (16), -0.71205 (16), -0.70979 (16), -0.70049 (16), -0.69829 (16), -0.68647 (16), -0.67682 (16), -0.67092 (16), -0.66862 (16), -0.66005 (16), 
Length of domains: 617
Time: pickout 0.0143    decision 0.0411    set_bounds 0.0306    solve 0.4015    add 0.0106    
Accumulated time: pickout 0.0346    decision 0.2056    set_bounds 0.1271    solve 1.3709    add 0.0908    
Current (lb-rhs): -0.9107251167297363
2416 domains visited
Cumulative time: 2.658740282058716

BaB round 9
batch: 617
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-8, 691] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8836665153503418
10 lb beta sum: 0.05153863504528999, worst -0.8834757804870605
Time: prepare 0.0188    bound 0.1391    transfer 0.0029    finalize 0.0077    func 0.1763    
Accumulated time: func 1.5447    prepare 0.0895    bound 1.1392    transfer 0.0213    finalize 0.2617    
all_split False
======================Cut inference begins======================
max lb tensor(1.09073019) min lb tensor(-0.88343334)
Number of Verified Splits: 512 of 1234
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 254.
#cuts 1-3: 25
#cuts 4-6: 221
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.17627525329589844 
BICCOS Cumulative time: 0.9729495048522949
Preprocessing time: 0.03815054893493652 Inference time: 0.06978988647460938 Add cuts time: 0.05984044075012207 Cut analysis time: 0.008494377136230469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.88343 (17), -0.83930 (17), -0.83469 (17), -0.80157 (17), -0.76756 (17), -0.76402 (17), -0.73395 (17), -0.73372 (17), -0.71661 (17), -0.71129 (17), -0.70868 (17), -0.69322 (17), -0.68607 (17), -0.68425 (17), -0.68366 (17), -0.68201 (17), -0.67413 (17), -0.67273 (17), -0.66002 (17), -0.65450 (17), 
Length of domains: 722
Time: pickout 0.0115    decision 0.0473    set_bounds 0.0354    solve 0.1766    add 0.0074    
Accumulated time: pickout 0.0461    decision 0.2530    set_bounds 0.1625    solve 1.5474    add 0.0983    
Current (lb-rhs): -0.8834333419799805
3138 domains visited
Cumulative time: 3.1187875270843506

BaB round 10
batch: 722
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 30] [/input-12, 50] [/input-12, 50] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8512063026428223
10 lb beta sum: 0.03296646475791931, worst -0.8510031700134277
Time: prepare 0.0274    bound 0.1615    transfer 0.0072    finalize 0.0081    func 0.2142    
Accumulated time: func 1.7589    prepare 0.1172    bound 1.3007    transfer 0.0285    finalize 0.2698    
all_split False
======================Cut inference begins======================
max lb tensor(0.88010997) min lb tensor(-0.85095501)
Number of Verified Splits: 400 of 1444
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 293.
#cuts 1-3: 30
#cuts 4-6: 251
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 0.17792963981628418 
BICCOS Cumulative time: 1.150879144668579
Preprocessing time: 0.04524111747741699 Inference time: 0.05519914627075195 Add cuts time: 0.0674130916595459 Cut analysis time: 0.010076284408569336
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.85096 (18), -0.82993 (18), -0.80443 (18), -0.80252 (18), -0.79843 (18), -0.78567 (18), -0.77558 (18), -0.74866 (18), -0.74802 (18), -0.71906 (18), -0.70273 (18), -0.69946 (18), -0.69550 (18), -0.69347 (18), -0.68124 (18), -0.67180 (18), -0.66802 (18), -0.66647 (18), -0.66625 (18), -0.65286 (18), 
Length of domains: 1044
Time: pickout 0.0130    decision 0.0524    set_bounds 0.0400    solve 0.2145    add 0.0557    
Accumulated time: pickout 0.0591    decision 0.3054    set_bounds 0.2025    solve 1.7619    add 0.1540    
Current (lb-rhs): -0.8509550094604492
4182 domains visited
Cumulative time: 3.6769039630889893

BaB round 11
batch: 1044
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 690] [/input-8, 690] [/input-8, 690] [/input-8, 484] [/input-8, 1653] [/input-8, 1653] [/input-8, 1653] [/input-8, 1653] [/input-8, 484] [/input-8, 1653] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.835296630859375
10 lb beta sum: 0.021795107051730156, worst -0.835233211517334
Time: prepare 0.0431    bound 0.2011    transfer 0.0128    finalize 0.0144    func 0.2857    
Accumulated time: func 2.0446    prepare 0.1605    bound 1.5018    transfer 0.0412    finalize 0.2842    
all_split False
======================Cut inference begins======================
max lb tensor(0.51958948) min lb tensor(-0.83520079)
Number of Verified Splits: 411 of 2088
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 328.
#cuts 1-3: 32
#cuts 4-6: 278
#cuts 7-9: 18
#cuts >= 20: 0
BICCOS time: 0.21156096458435059 
BICCOS Cumulative time: 1.3624401092529297
Preprocessing time: 0.06604957580566406 Inference time: 0.05907487869262695 Add cuts time: 0.07486271858215332 Cut analysis time: 0.01157379150390625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.83520 (19), -0.81366 (19), -0.78931 (19), -0.78765 (19), -0.78286 (19), -0.75817 (19), -0.75791 (19), -0.75176 (19), -0.73878 (19), -0.71590 (19), -0.71383 (19), -0.70314 (19), -0.69441 (19), -0.69110 (19), -0.68555 (19), -0.68151 (19), -0.66631 (19), -0.65956 (19), -0.65832 (19), -0.65760 (19), 
Length of domains: 1677
Time: pickout 0.0151    decision 0.0705    set_bounds 0.2466    solve 0.2861    add 0.0119    
Accumulated time: pickout 0.0742    decision 0.3759    set_bounds 0.4491    solve 2.0480    add 0.1658    
Current (lb-rhs): -0.8352007865905762
5859 domains visited
Cumulative time: 4.523613452911377

BaB round 12
batch: 1677
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1507] [/input-8, 482] [/input-8, 1507] [/input-8, 1499] [/input-8, 1499] [/input-8, 1653] [/input-8, 690] [/input-8, 1650] [/input-8, 690] [/input, 3270] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8167047500610352
10 lb beta sum: 0.14278477430343628, worst -0.8167028427124023
Time: prepare 0.0732    bound 0.2890    transfer 0.0136    finalize 0.0218    func 0.4213    
Accumulated time: func 2.4659    prepare 0.2340    bound 1.7907    transfer 0.0548    finalize 0.3060    
all_split False
======================Cut inference begins======================
max lb tensor(0.60942072) min lb tensor(-0.81668758)
Number of Verified Splits: 970 of 3354
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 362.
#cuts 1-3: 25
#cuts 4-6: 298
#cuts 7-9: 39
#cuts >= 20: 0
BICCOS time: 0.5350854396820068 
BICCOS Cumulative time: 1.8975255489349365
Preprocessing time: 0.25998830795288086 Inference time: 0.13844895362854004 Add cuts time: 0.1227269172668457 Cut analysis time: 0.013921260833740234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.81669 (20), -0.79479 (20), -0.78741 (20), -0.77200 (20), -0.77155 (20), -0.76554 (20), -0.76537 (20), -0.74228 (20), -0.74198 (20), -0.74090 (20), -0.73503 (20), -0.73450 (20), -0.71893 (20), -0.71287 (20), -0.70269 (20), -0.70024 (20), -0.68776 (20), -0.67827 (20), -0.67351 (20), -0.67026 (20), 
Length of domains: 2384
Time: pickout 0.0311    decision 0.1044    set_bounds 0.0886    solve 0.4221    add 0.1116    
Accumulated time: pickout 0.1053    decision 0.4804    set_bounds 0.5376    solve 2.4701    add 0.2774    
Current (lb-rhs): -0.8166875839233398
8243 domains visited
Cumulative time: 5.839280843734741

BaB round 13
batch: 2384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1499] [/input-8, 1650] [/input-12, 19] [/input-8, 1650] [/input-8, 482] [/input-12, 19] [/input, 3270] [/input-12, 19] [/input-8, 482] [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8047299385070801
10 lb beta sum: 0.10992079973220825, worst -0.8047266006469727
Time: prepare 0.1126    bound 0.3851    transfer 0.0442    finalize 0.0473    func 0.6216    
Accumulated time: func 3.0875    prepare 0.3468    bound 2.1758    transfer 0.0990    finalize 0.3533    
all_split False
======================Cut inference begins======================
max lb tensor(0.59557050) min lb tensor(-0.80470848)
Number of Verified Splits: 1245 of 4768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 428.
#cuts 1-3: 27
#cuts 4-6: 329
#cuts 7-9: 72
#cuts >= 20: 0
BICCOS time: 0.560349702835083 
BICCOS Cumulative time: 2.4578752517700195
Preprocessing time: 0.16514062881469727 Inference time: 0.20772123336791992 Add cuts time: 0.17141318321228027 Cut analysis time: 0.016074657440185547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.80471 (21), -0.78220 (21), -0.76952 (21), -0.76718 (21), -0.75938 (21), -0.75322 (21), -0.75266 (21), -0.74706 (21), -0.74463 (21), -0.73307 (21), -0.72357 (21), -0.72273 (21), -0.72213 (21), -0.72092 (21), -0.71914 (21), -0.71588 (21), -0.71348 (21), -0.71170 (21), -0.71087 (21), -0.70476 (21), 
Length of domains: 3523
Time: pickout 0.0613    decision 0.1508    set_bounds 0.1449    solve 0.8285    add 0.0970    
Accumulated time: pickout 0.1666    decision 0.6312    set_bounds 0.6825    solve 3.2985    add 0.3744    
Current (lb-rhs): -0.8047084808349609
11766 domains visited
Cumulative time: 7.711909055709839

BaB round 14
batch: 3523
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 19] [/input-8, 690] [/input-12, 19] [/input-8, 484] [/input-8, 1653] [/input-8, 1436] [/input-8, 1507] [/input, 3270] [/input-8, 1507] [/input-8, 690] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7928190231323242
10 lb beta sum: 0.07320935279130936, worst -0.792689323425293
Time: prepare 0.1708    bound 0.7818    transfer 0.0482    finalize 0.0551    func 1.1039    
Accumulated time: func 4.1914    prepare 0.5181    bound 2.9577    transfer 0.1472    finalize 0.4084    
all_split False
======================Cut inference begins======================
max lb tensor(0.51177591) min lb tensor(-0.79262829)
Number of Verified Splits: 1681 of 7046
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 499.
#cuts 1-3: 30
#cuts 4-6: 362
#cuts 7-9: 107
#cuts >= 20: 0
BICCOS time: 0.7923080921173096 
BICCOS Cumulative time: 3.250183343887329
Preprocessing time: 0.24361944198608398 Inference time: 0.2804889678955078 Add cuts time: 0.24910807609558105 Cut analysis time: 0.01909160614013672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.79263 (22), -0.76366 (22), -0.75485 (22), -0.74876 (22), -0.74811 (22), -0.74219 (22), -0.74165 (22), -0.73424 (22), -0.73276 (22), -0.72679 (22), -0.72050 (22), -0.71170 (22), -0.71163 (22), -0.70804 (22), -0.70633 (22), -0.70486 (22), -0.70483 (22), -0.70363 (22), -0.70055 (22), -0.69869 (22), 
Length of domains: 5365
Time: pickout 0.0975    decision 0.2118    set_bounds 0.4667    solve 1.1067    add 0.0931    
Accumulated time: pickout 0.2641    decision 0.8430    set_bounds 1.1492    solve 4.4053    add 0.4675    
Current (lb-rhs): -0.792628288269043
17131 domains visited
Cumulative time: 10.518834114074707

BaB round 15
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-8, 482] [/input-12, 19] [/input-12, 58] [/input-8, 1500] [/input-12, 58] [/input-8, 1654] [/input-8, 484] [/input-8, 1650] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7152256965637207
10 lb beta sum: 0.043726690113544464, worst -0.7125329971313477
Time: prepare 0.2003    bound 0.9342    transfer 0.0313    finalize 0.0644    func 1.5539    
Accumulated time: func 5.7453    prepare 0.7187    bound 3.8918    transfer 0.1785    finalize 0.4728    
all_split False
======================Cut inference begins======================
max lb tensor(0.62281775) min lb tensor(-0.70837021)
Number of Verified Splits: 1662 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 581.
#cuts 1-3: 31
#cuts 4-6: 417
#cuts 7-9: 132
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.9221110343933105 
BICCOS Cumulative time: 4.17229437828064
Preprocessing time: 0.27410101890563965 Inference time: 0.2964134216308594 Add cuts time: 0.3278200626373291 Cut analysis time: 0.023776531219482422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.79263 (22), -0.76366 (22), -0.75485 (22), -0.74876 (22), -0.74811 (22), -0.74219 (22), -0.74165 (22), -0.72679 (22), -0.71163 (22), -0.70837 (23), -0.70804 (22), -0.70580 (23), -0.70553 (23), -0.70486 (22), -0.70483 (22), -0.70140 (23), -0.69869 (22), -0.69840 (22), -0.69362 (23), -0.69160 (23), 
Length of domains: 7799
Time: pickout 0.0836    decision 0.4162    set_bounds 0.2572    solve 1.5569    add 0.0425    
Accumulated time: pickout 0.3477    decision 1.2592    set_bounds 1.4064    solve 5.9621    add 0.5100    
Current (lb-rhs): -0.792628288269043
23661 domains visited
current_vram/total_varm: 12.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 13.832955837249756

BaB round 16
batch: 7799
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 40] [/input-8, 1780] [/input-8, 690] [/input-8, 484] [/input-8, 484] [/input-8, 690] [/input-12, 19] [/input-8, 627] [/input-12, 40] [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7741141319274902
10 lb beta sum: 0.1282147914171219, worst -0.7740087509155273
Time: prepare 0.3837    bound 1.7974    transfer 0.0871    finalize 0.1150    func 2.4867    
Accumulated time: func 8.2320    prepare 1.1028    bound 5.6893    transfer 0.2656    finalize 0.5877    
all_split False
======================Cut inference begins======================
max lb tensor(1.45237970) min lb tensor(-0.77398729)
Number of Verified Splits: 3715 of 15598
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 581.
#cuts 1-3: 31
#cuts 4-6: 417
#cuts 7-9: 132
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.002163410186767578 
BICCOS Cumulative time: 4.174457788467407
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.77399 (23), -0.75201 (23), -0.74538 (23), -0.74392 (23), -0.73757 (23), -0.73481 (23), -0.72951 (23), -0.72769 (23), -0.71335 (23), -0.71331 (23), -0.70950 (23), -0.70375 (23), -0.69995 (23), -0.69848 (23), -0.69825 (23), -0.69690 (23), -0.69648 (24), -0.69546 (23), -0.69418 (24), -0.69381 (24), 
Length of domains: 11883
Time: pickout 0.1623    decision 0.6834    set_bounds 0.6981    solve 2.4918    add 0.1344    
Accumulated time: pickout 0.5100    decision 1.9426    set_bounds 2.1045    solve 8.4540    add 0.6444    
Current (lb-rhs): -0.7739872932434082
35544 domains visited
Cumulative time: 18.054993391036987

BaB round 17
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 19] [/input-8, 880] [/input-8, 627] [/input-12, 19] [/input-8, 880] [/input-8, 1650] [/input, 3270] [/input-8, 1653] [/input-12, 40] [/input, 3270] 
cut re-enabled after branching node selection
0 lb beta sum: 0.11587560176849365, worst -0.7629036903381348
10 lb beta sum: 0.12340685725212097, worst -0.7628445625305176
Time: prepare 0.8506    bound 1.8827    transfer 0.0802    finalize 0.1142    func 3.0366    
Accumulated time: func 11.2686    prepare 1.9539    bound 7.5719    transfer 0.3458    finalize 0.7019    
all_split False
======================Cut inference begins======================
max lb tensor(0.96703768) min lb tensor(-0.76281309)
Number of Verified Splits: 3649 of 16384
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 581.
#cuts 1-3: 31
#cuts 4-6: 417
#cuts 7-9: 132
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.0011746883392333984 
BICCOS Cumulative time: 4.175632476806641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.76281 (24), -0.74067 (24), -0.73299 (24), -0.72641 (24), -0.72325 (24), -0.72179 (24), -0.71883 (24), -0.71830 (24), -0.71619 (24), -0.70176 (24), -0.70046 (24), -0.69648 (24), -0.69418 (24), -0.69381 (24), -0.69231 (24), -0.68867 (24), -0.68684 (24), -0.68612 (24), -0.68526 (24), -0.68408 (24), 
Length of domains: 16426
Time: pickout 0.1413    decision 0.7631    set_bounds 0.7070    solve 3.0412    add 0.0654    
Accumulated time: pickout 0.6513    decision 2.7057    set_bounds 2.8115    solve 11.4951    add 0.7098    
Current (lb-rhs): -0.7628130912780762
48279 domains visited
current_vram/total_varm: 26.8GB/99.9GB, batch_size increase to 16384
Cumulative time: 22.823135375976562

BaB round 18
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-8, 1650] [/input-8, 627] [/input, 1990] [/input, 3270] [/input, 2712] [/input, 858] [/input, 874] 
cut re-enabled after branching node selection
0 lb beta sum: 0.09598185122013092, worst -0.7589869499206543
10 lb beta sum: 0.10232611745595932, worst -0.7589564323425293
Time: prepare 1.6710    bound 3.6693    transfer 0.1586    finalize 0.2444    func 5.9561    
Accumulated time: func 17.2246    prepare 3.6253    bound 11.2412    transfer 0.5044    finalize 0.9462    
all_split False
======================Cut inference begins======================
max lb tensor(1.01717162) min lb tensor(-0.75892782)
Number of Verified Splits: 7471 of 32768
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 581.
#cuts 1-3: 31
#cuts 4-6: 417
#cuts 7-9: 132
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.0013844966888427734 
BICCOS Cumulative time: 4.177016973495483
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.75893 (25), -0.71923 (25), -0.71740 (25), -0.71660 (25), -0.71439 (25), -0.71420 (25), -0.71197 (25), -0.71006 (25), -0.70783 (25), -0.70692 (25), -0.69528 (25), -0.68840 (25), -0.68747 (25), -0.68559 (25), -0.68270 (25), -0.68086 (25), -0.67943 (25), -0.67876 (25), -0.67815 (25), -0.67771 (25), 
Length of domains: 25339
Time: pickout 0.3008    decision 1.7278    set_bounds 1.5024    solve 5.9630    add 0.2298    
Accumulated time: pickout 0.9521    decision 4.4335    set_bounds 4.3140    solve 17.4581    add 0.9396    
Current (lb-rhs): -0.7589278221130371
73576 domains visited
current_vram/total_varm: 42.4GB/99.9GB, batch_size increase to 32768
Cumulative time: 32.63283705711365

BaB round 19
batch: 25339
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1653] [/input-12, 40] [/input-8, 558] [/input-8, 1507] [/input-8, 564] [/input-12, 40] [/input-8, 1507] [/input-12, 40] [/input-8, 1507] [/input-12, 40] 
cut re-enabled after branching node selection
0 lb beta sum: 0.08308514207601547, worst -0.7375965118408203
10 lb beta sum: 0.08609456568956375, worst -0.7375822067260742
Time: prepare 2.9462    bound 5.5563    transfer 0.2613    finalize 0.4306    func 9.5273    
Accumulated time: func 26.7519    prepare 6.5720    bound 16.7975    transfer 0.7657    finalize 1.3768    
all_split False
======================Cut inference begins======================
max lb tensor(1.03194427) min lb tensor(-0.73754597)
Number of Verified Splits: 11808 of 50678
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 581.
#cuts 1-3: 31
#cuts 4-6: 417
#cuts 7-9: 132
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.037007808685302734 
BICCOS Cumulative time: 4.214024782180786
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.73755 (26), -0.73464 (26), -0.71539 (26), -0.71273 (26), -0.70249 (26), -0.69910 (26), -0.69605 (26), -0.69444 (26), -0.69357 (26), -0.69250 (26), -0.69063 (26), -0.68994 (26), -0.68591 (26), -0.68384 (26), -0.68336 (26), -0.68318 (26), -0.68053 (26), -0.67740 (26), -0.67484 (26), -0.67304 (26), 
Length of domains: 38870
Time: pickout 0.5419    decision 2.9394    set_bounds 1.7594    solve 10.0243    add 0.1565    
Accumulated time: pickout 1.4940    decision 7.3729    set_bounds 6.0734    solve 27.4824    add 1.0961    
Current (lb-rhs): -0.7375459671020508
112446 domains visited
Cumulative time: 48.21221971511841

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 484] [/input-12, 40] [/input, 3270] [/input-8, 1507] [/input, 3270] [/input, 3270] [/input-12, 40] [/input-8, 1653] [/input-8, 691] [/input-8, 1780] 
cut re-enabled after branching node selection
0 lb beta sum: 0.07417382299900055, worst -0.7294845581054688
10 lb beta sum: 0.0757828801870346, worst -0.7294654846191406
Time: prepare 3.4425    bound 12.3229    transfer 0.3186    finalize 1.0924    func 17.6036    
Accumulated time: func 44.3555    prepare 10.0150    bound 29.1204    transfer 1.0843    finalize 2.4692    
all_split False
======================Cut inference begins======================
max lb tensor(1.01979780) min lb tensor(-0.72943306)
Number of Verified Splits: 15196 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 581.
#cuts 1-3: 31
#cuts 4-6: 417
#cuts 7-9: 132
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.03333401679992676 
BICCOS Cumulative time: 4.247358798980713
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.72943 (27), -0.72470 (27), -0.70735 (27), -0.70581 (27), -0.70272 (27), -0.69046 (27), -0.68994 (26), -0.68466 (27), -0.68405 (27), -0.68405 (27), -0.68336 (26), -0.68298 (27), -0.68248 (27), -0.68154 (27), -0.68042 (27), -0.67832 (27), -0.67740 (26), -0.67561 (27), -0.67415 (27), -0.67065 (27), 
Length of domains: 56442
Time: pickout 0.6036    decision 3.4325    set_bounds 2.3756    solve 17.6164    add 0.2456    
Accumulated time: pickout 2.0976    decision 10.8055    set_bounds 8.4489    solve 45.0988    add 1.3417    
Current (lb-rhs): -0.7294330596923828
162786 domains visited
Cumulative time: 72.6785798072815

BaB round 21
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 566] [/input-8, 1650] [/input, 2215] [/input, 2199] [/input-8, 564] [/input-8, 1650] [/input-8, 1650] [/input-8, 1436] [/input-8, 1507] [/input-8, 1507] 
cut re-enabled after branching node selection
0 lb beta sum: 0.07054265588521957, worst -0.7165923118591309
10 lb beta sum: 0.07130391895771027, worst -0.7164478302001953
Time: prepare 3.5178    bound 12.3228    transfer 0.3130    finalize 0.5286    func 17.9142    
Accumulated time: func 62.2697    prepare 13.5334    bound 41.4432    transfer 1.3972    finalize 2.9978    
all_split False
======================Cut inference begins======================
max lb tensor(0.78917885) min lb tensor(-0.71637011)
Number of Verified Splits: 14939 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 581.
#cuts 1-3: 31
#cuts 4-6: 417
#cuts 7-9: 132
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.026477813720703125 
BICCOS Cumulative time: 4.273836612701416
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.72943 (27), -0.71637 (28), -0.70735 (27), -0.70581 (27), -0.69453 (28), -0.69046 (27), -0.68466 (27), -0.68405 (27), -0.68248 (27), -0.67832 (27), -0.67790 (27), -0.67561 (27), -0.67482 (28), -0.67410 (28), -0.67220 (28), -0.67145 (27), -0.67065 (27), -0.67047 (28), -0.66790 (28), -0.66636 (27), 
Length of domains: 74271
Time: pickout 0.6282    decision 4.5546    set_bounds 2.5998    solve 17.9277    add 0.2565    
Accumulated time: pickout 2.7258    decision 15.3600    set_bounds 11.0488    solve 63.0265    add 1.5981    
Current (lb-rhs): -0.7294330596923828
213383 domains visited
Cumulative time: 99.03273677825928

BaB round 22
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3270] [/input-8, 691] [/input-12, 40] [/input-12, 94] [/input-8, 373] [/input-8, 691] [/input, 3270] [/input, 858] [/input-12, 94] [/input-8, 1507] 
cut re-enabled after branching node selection
0 lb beta sum: 0.06988700479269028, worst -0.7198162078857422
10 lb beta sum: 0.07044246047735214, worst -0.7195935249328613
Time: prepare 3.5999    bound 12.3286    transfer 0.3230    finalize 0.5548    func 17.2439    
Accumulated time: func 79.5137    prepare 17.1349    bound 53.7718    transfer 1.7202    finalize 3.5525    
all_split False
======================Cut inference begins======================
max lb tensor(0.79430103) min lb tensor(-0.71948385)
Number of Verified Splits: 15004 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 581.
#cuts 1-3: 31
#cuts 4-6: 417
#cuts 7-9: 132
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.04135560989379883 
BICCOS Cumulative time: 4.315192222595215
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.71948 (28), -0.71637 (28), -0.70061 (28), -0.69734 (28), -0.69606 (28), -0.69453 (28), -0.67935 (28), -0.67868 (28), -0.67627 (28), -0.67482 (28), -0.67451 (28), -0.67410 (28), -0.67253 (28), -0.67220 (28), -0.67085 (28), -0.67047 (28), -0.66797 (28), -0.66790 (28), -0.66568 (28), -0.66521 (28), 
Length of domains: 92035
Time: pickout 0.7765    decision 4.9316    set_bounds 3.8001    solve 17.2619    add 0.2877    
Accumulated time: pickout 3.5024    decision 20.2916    set_bounds 14.8489    solve 80.2884    add 1.8859    
Current (lb-rhs): -0.7194838523864746
263915 domains visited
Cumulative time: 126.34765982627869

BaB round 23
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1990] [/input, 2712] [/input-12, 40] [/input-8, 1331] [/input-8, 691] [/input-8, 690] [/input-12, 94] [/input, 3270] [/input-8, 1500] [/input-8, 627] 
cut re-enabled after branching node selection
0 lb beta sum: 0.06545864045619965, worst -0.6864371299743652
10 lb beta sum: 0.06593842804431915, worst -0.6909446716308594
Time: prepare 3.5617    bound 12.3218    transfer 0.3142    finalize 1.5890    func 18.2196    
Accumulated time: func 97.7332    prepare 20.6972    bound 66.0936    transfer 2.0345    finalize 5.1416    
all_split False
======================Cut inference begins======================
max lb tensor(0.80575657) min lb tensor(-0.68637991)
Number of Verified Splits: 16698 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 581.
#cuts 1-3: 31
#cuts 4-6: 417
#cuts 7-9: 132
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.023567676544189453 
BICCOS Cumulative time: 4.338759899139404
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.71948 (28), -0.71637 (28), -0.70061 (28), -0.69734 (28), -0.69606 (28), -0.68638 (29), -0.67935 (28), -0.67868 (28), -0.67627 (28), -0.67451 (28), -0.67253 (28), -0.67085 (28), -0.66797 (28), -0.66677 (29), -0.66568 (28), -0.66475 (29), -0.66235 (29), -0.66232 (29), -0.66186 (28), -0.66023 (29), 
Length of domains: 108105
Time: pickout 0.6764    decision 4.4545    set_bounds 2.9042    solve 18.2341    add 0.1863    
Accumulated time: pickout 4.1787    decision 24.7462    set_bounds 17.7531    solve 98.5225    add 2.0721    
Current (lb-rhs): -0.7194838523864746
312753 domains visited
Cumulative time: 153.00352144241333

BaB round 24
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1436] [/input-8, 373] [/input-8, 1507] [/input-12, 40] [/input-8, 619] [/input-8, 418] [/input-8, 484] [/input-12, 94] [/input-8, 1499] [/input-8, 1507] 
cut re-enabled after branching node selection
0 lb beta sum: 0.06229810044169426, worst -0.7113947868347168
10 lb beta sum: 0.0626295655965805, worst -0.7112431526184082
Time: prepare 3.6114    bound 12.3215    transfer 0.3175    finalize 1.7068    func 18.3891    
Accumulated time: func 116.1223    prepare 24.3091    bound 78.4151    transfer 2.3520    finalize 6.8484    
all_split False
======================Cut inference begins======================
max lb tensor(0.80050349) min lb tensor(-0.71115017)
Number of Verified Splits: 16447 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 581.
#cuts 1-3: 31
#cuts 4-6: 417
#cuts 7-9: 132
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.03657031059265137 
BICCOS Cumulative time: 4.375330209732056
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.71115 (29), -0.70819 (29), -0.69606 (28), -0.69095 (29), -0.68897 (29), -0.68638 (29), -0.68471 (29), -0.68175 (29), -0.67935 (28), -0.67627 (28), -0.67451 (28), -0.66905 (29), -0.66797 (28), -0.66677 (29), -0.66475 (29), -0.66399 (29), -0.66369 (29), -0.66281 (29), -0.66235 (29), -0.66232 (29), 
Length of domains: 124426
Time: pickout 0.6600    decision 3.4396    set_bounds 2.9378    solve 18.4045    add 0.2117    
Accumulated time: pickout 4.8387    decision 28.1858    set_bounds 20.6909    solve 116.9270    add 2.2839    
Current (lb-rhs): -0.7111501693725586
361842 domains visited
Cumulative time: 178.88051891326904

BaB round 25
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 690] [/input, 917] [/input-12, 40] [/input-8, 482] [/input, 917] [/input-8, 1654] [/input-8, 1499] [/input-8, 1650] [/input-8, 1811] [/input-8, 1811] 
cut re-enabled after branching node selection
0 lb beta sum: 0.06363347172737122, worst -0.6881599426269531
10 lb beta sum: 0.06389813125133514, worst -0.6875557899475098
Time: prepare 3.6639    bound 12.3239    transfer 0.3117    finalize 1.8632    func 18.6067    
Accumulated time: func 134.7290    prepare 27.9736    bound 90.7390    transfer 2.6637    finalize 8.7116    
all_split False
======================Cut inference begins======================
max lb tensor(0.82543945) min lb tensor(-0.68728447)
Number of Verified Splits: 16801 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 581.
#cuts 1-3: 31
#cuts 4-6: 417
#cuts 7-9: 132
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.03831934928894043 
BICCOS Cumulative time: 4.413649559020996
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.71115 (29), -0.70819 (29), -0.69095 (29), -0.68897 (29), -0.68728 (29), -0.68638 (29), -0.68471 (29), -0.68175 (29), -0.67240 (29), -0.66937 (29), -0.66905 (29), -0.66677 (29), -0.66591 (29), -0.66475 (29), -0.66399 (29), -0.66369 (29), -0.66281 (29), -0.66235 (29), -0.66232 (29), -0.66165 (29), 
Length of domains: 140393
Time: pickout 0.6767    decision 4.1810    set_bounds 2.0369    solve 18.6221    add 0.2292    
Accumulated time: pickout 5.5154    decision 32.3668    set_bounds 22.7279    solve 135.5491    add 2.5131    
Current (lb-rhs): -0.7111501693725586
410577 domains visited
Time out!!!!!!!!
Result: unknown in 208.1907 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 107, vnnlib ID: 107 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-34.04717255, -40.98459625, -38.39299774, -41.22966003, -38.33383942,
         -41.57348251, -42.65731430, -40.53824615, -37.67068863, -40.80838776]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1003]; unstable size 1003; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 402, 1, 1003] with unstable size 401 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 43, 1, 1003] with unstable size 42 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1003] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [401]; unstable size 401; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 43, 1, 401] with unstable size 42 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 401] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [42]; unstable size 42; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 42] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.88642502,  0.94433904,  3.64922810,  0.71350312,  3.79053688,
          3.87486601,  2.14005566, -0.77936554,  3.27663279]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-34.04717255, -40.98459625, -38.39299774, -41.22966003, -38.33383942,
         -41.57348251, -42.65731430, -40.53824615, -37.67068863, -40.80838776]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.21it/s]100%|██████████| 1/1 [00:00<00:00,  8.20it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.40728378, -39.68268204, -37.44071579, -40.01826477, -37.15994263,
          -40.45051193, -41.39684677, -39.57349777, -35.60343552, -39.40282822]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.19615173]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1250 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 22.331775665283203
alpha/beta optimization time: 1.3160948753356934
initial alpha-crown bounds: tensor([[ 3.11198282,  1.11666918,  3.82780361,  0.87682509,  4.00959826,
          4.08969975,  2.39841843, -0.55097151,  3.45175028]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.550971508026123
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.47843670845032
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.4783911705017
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.47835993766785
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.47833609580994
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.4783158302307
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.47829389572144
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.47827434539795
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.47825288772583
Verifying property 7 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55097151]], device='cuda:0') need to verify.
Model prediction is: tensor([-34.04717255, -40.98459625, -38.39299774, -41.22966003, -38.33383942,
        -41.57348251, -42.65731430, -40.53824615, -37.67068863, -40.80838776],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55097151]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1003
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 391
Node /15 input 0: size torch.Size([100]) unstable 40
-----------------
# of unstable neurons: 1434
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00012254714965820312
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5509641170501709
10 lb beta sum: 0.0, worst -0.550976037979126
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0561    transfer 0.0001    finalize 0.0001    func 0.0566    
Accumulated time: func 0.0566    prepare 0.0002    bound 0.0561    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 84] 
split level 1: [/input-12, 74] 
split level 2: [/input-12, 0] 
split level 3: [/input-12, 16] 
split level 4: [/input-12, 75] 
split level 5: [/input-12, 8] 
split level 6: [/input-12, 90] 
split level 7: [/input-12, 24] 
split level 8: [/input-12, 46] 
split level 9: [/input-12, 85] 
split level 10: [/input-12, 76] 
split level 11: [/input-12, 2] 
split level 12: [/input-12, 44] 
split level 13: [/input-12, 35] 
split level 14: [/input-12, 6] 
split level 15: [/input-12, 57] 
split level 16: [/input-8, 1506] 
split level 17: [/input-12, 37] 
split level 18: [/input-8, 556] 
split level 19: [/input-8, 748] 
split level 20: [/input-8, 491] 
split level 21: [/input-8, 498] 
split level 22: [/input-12, 80] 
split level 23: [/input-8, 1635] 
split level 24: [/input-12, 92] 
split level 25: [/input-8, 502] 
split level 26: [/input-8, 500] 
split level 27: [/input-8, 756] 
split level 28: [/input-8, 619] 
split level 29: [/input-8, 612] 
split level 30: [/input-8, 1366] 
split level 31: [/input-8, 338] 
split level 32: [/input-8, 740] 
split level 33: [/input-8, 1837] 
split level 34: [/input-8, 557] 
split level 35: [/input-8, 492] 
split level 36: [/input-12, 25] 
split level 37: [/input-8, 1836] 
split level 38: [/input-8, 1508] 
split level 39: [/input-8, 754] 
split level 40: [/input-8, 564] 
split level 41: [/input-8, 678] 
split level 42: [/input-8, 1509] 
split level 43: [/input-8, 1074] 
split level 44: [/input-8, 1002] 
split level 45: [/input-8, 1618] 
split level 46: [/input-8, 1382] 
split level 47: [/input-8, 691] 
split level 48: [/input-8, 855] 
split level 49: [/input, 3912] 
split level 50: [/input-8, 1585] 
split level 51: [/input-8, 493] 
split level 52: [/input-8, 757] 
split level 53: [/input-8, 1619] 
split level 54: [/input-8, 1587] 
split level 55: [/input-8, 1505] 
split level 56: [/input-8, 1824] 
split level 57: [/input, 1881] 
split level 58: [/input-8, 1711] 
split level 59: [/input, 584] 
split level 60: [/input, 600] 
split level 61: [/input-12, 95] 
split level 62: [/input-8, 969] 
split level 63: [/input-8, 345] 
split level 64: [/input-8, 337] 
split level 65: [/input-8, 685] 
split level 66: [/input-8, 331] 
split level 67: [/input-8, 1323] 
split level 68: [/input-8, 702] 
split level 69: [/input-8, 1981] 
split level 70: [/input-8, 1501] 
split level 71: [/input-8, 1005] 
split level 72: [/input-12, 71] 
split level 73: [/input-8, 1595] 
split level 74: [/input, 662] 
split level 75: [/input-8, 91] 
split level 76: [/input-8, 993] 
split level 77: [/input-8, 1319] 
split level 78: [/input-8, 1499] 
split level 79: [/input-8, 983] 
split level 80: [/input-8, 469] 
split level 81: [/input-8, 336] 
split level 82: [/input-8, 1905] 
split level 83: [/input-8, 346] 
split level 84: [/input-8, 1311] 
split level 85: [/input, 1868] 
split level 86: [/input-8, 329] 
split level 87: [/input, 2219] 
split level 88: [/input-12, 81] 
split level 89: [/input-8, 321] 
split level 90: [/input-12, 32] 
split level 91: [/input-8, 731] 
split level 92: [/input-8, 456] 
split level 93: [/input, 3942] 
split level 94: [/input-8, 763] 
split level 95: [/input-8, 83] 
split level 96: [/input, 598] 
split level 97: [/input-8, 2012] 
split level 98: [/input, 1988] 
split level 99: [/input-8, 1456] 
split level 100: [/input-8, 1004] 
split level 101: [/input, 2938] 
split level 102: [/input-8, 1594] 
split level 103: [/input-8, 1980] 
split level 104: [/input, 3933] 
split level 105: [/input-8, 496] 
split level 106: [/input-8, 961] 
split level 107: [/input, 1869] 
split level 108: [/input-8, 762] 
split level 109: [/input-8, 470] 
split level 110: [/input-8, 567] 
split level 111: [/input-8, 889] 
split level 112: [/input, 567] 
split level 113: [/input-8, 1322] 
split level 114: [/input, 3899] 
split level 115: [/input, 583] 
split level 116: [/input-8, 566] 
split level 117: [/input, 678] 
split level 118: [/input-8, 497] 
split level 119: [/input-8, 2026] 
split level 120: [/input-8, 93] 
split level 121: [/input, 582] 
split level 122: [/input-8, 802] 
split level 123: [/input-8, 284] 
split level 124: [/input, 616] 
split level 125: [/input-8, 1593] 
split level 126: [/input-8, 970] 
split level 127: [/input-8, 1774] 
split level 128: [/input-8, 54] 
split level 129: [/input-8, 299] 
split level 130: [/input, 568] 
split level 131: [/input, 1418] 
split level 132: [/input-8, 472] 
split level 133: [/input, 620] 
split level 134: [/input, 993] 
split level 135: [/input-8, 1144] 
split level 136: [/input, 586] 
split level 137: [/input, 3896] 
split level 138: [/input, 71] 
split level 139: [/input-8, 1241] 
split level 140: [/input, 3918] 
split level 141: [/input, 587] 
split level 142: [/input, 1971] 
split level 143: [/input-8, 52] 
split level 144: [/input-8, 874] 
split level 145: [/input, 2513] 
split level 146: [/input, 588] 
split level 147: [/input, 908] 
split level 148: [/input-8, 1912] 
split level 149: [/input-8, 1978] 
split level 150: [/input-8, 876] 
split level 151: [/input-8, 1365] 
split level 152: [/input-8, 169] 
split level 153: [/input, 602] 
split level 154: [/input, 2749] 
split level 155: [/input-8, 1974] 
split level 156: [/input-8, 53] 
split level 157: [/input-8, 99] 
split level 158: [/input, 2763] 
split level 159: [/input, 2986] 
split level 160: [/input, 1972] 
split level 161: [/input, 621] 
split level 162: [/input, 3205] 
split level 163: [/input-8, 1767] 
split level 164: [/input, 823] 
split level 165: [/input, 604] 
split level 166: [/input, 2762] 
split level 167: [/input, 2359] 
split level 168: [/input-8, 1440] 
split level 169: [/input, 934] 
split level 170: [/input, 572] 
split level 171: [/input, 1196] 
split level 172: [/input, 995] 
split level 173: [/input, 1236] 
split level 174: [/input-8, 49] 
split level 175: [/input, 822] 
split level 176: [/input, 1081] 
split level 177: [/input, 89] 
split level 178: [/input-8, 457] 
split level 179: [/input, 571] 
split level 180: [/input, 1735] 
split level 181: [/input-8, 1065] 
split level 182: [/input-8, 962] 
split level 183: [/input-8, 954] 
split level 184: [/input, 2718] 
split level 185: [/input, 597] 
split level 186: [/input, 1080] 
split level 187: [/input, 552] 
split level 188: [/input, 4018] 
split level 189: [/input, 2514] 
split level 190: [/input, 1464] 
split level 191: [/input-8, 798] 
split level 192: [/input, 2769] 
split level 193: [/input, 57] 
split level 194: [/input, 2269] 
split level 195: [/input, 2006] 
split level 196: [/input, 2357] 
split level 197: [/input, 960] 
split level 198: [/input, 707] 
split level 199: [/input, 1079] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5504298210144043
10 lb beta sum: 0.0, worst -0.5504417419433594
Time: prepare 0.0114    bound 0.1040    transfer 0.0025    finalize 0.0029    func 0.1234    
Accumulated time: func 0.1800    prepare 0.0218    bound 0.1601    transfer 0.0026    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.30302250) min lb tensor(-0.55042458)
Number of Verified Splits: 8 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.012593746185302734 
BICCOS Cumulative time: 0.012593746185302734
Preprocessing time: 0.011693954467773438 Inference time: 0.00038933753967285156 Add cuts time: 0.00014066696166992188 Cut analysis time: 0.00036978721618652344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.51315 (1), -0.51310 (1), -0.51280 (1), -0.51180 (1), -0.50873 (1), -0.50826 (1), -0.50818 (1), -0.50607 (1), -0.50499 (1), -0.50483 (1), -0.50476 (1), -0.50305 (1), -0.50245 (1), -0.50243 (1), -0.50057 (1), -0.49845 (1), -0.49602 (1), -0.49202 (1), -0.49088 (1), -0.49020 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5529    set_bounds 0.0089    solve 0.1235    add 0.1353    
Accumulated time: pickout 0.0004    decision 0.5529    set_bounds 0.0089    solve 0.1235    add 0.1353    
Current (lb-rhs): -0.5131516456604004
50 domains visited
Cumulative time: 0.9063477516174316

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] 
split level 1: [/input-12, 74] [/input-12, 0] [/input-12, 74] [/input-12, 0] [/input-12, 74] [/input-12, 74] [/input-12, 0] [/input-12, 0] [/input-12, 74] [/input-12, 74] 
split level 2: [/input-12, 75] [/input-12, 75] [/input-12, 0] [/input-12, 75] [/input-12, 0] [/input-12, 0] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 0] 
split level 3: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 75] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 75] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3548855781555176
10 lb beta sum: 1.1742808818817139, worst -0.021551012992858887
Time: prepare 0.0068    bound 0.1313    transfer 0.0007    finalize 0.0023    func 0.1437    
Accumulated time: func 0.3238    prepare 0.0289    bound 0.2914    transfer 0.0034    finalize 0.0054    
all_split False
======================Cut inference begins======================
max lb tensor(0.67518139) min lb tensor(-0.02094710)
Number of Verified Splits: 397 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03668546676635742 
BICCOS Cumulative time: 0.049279212951660156
Preprocessing time: 0.01184391975402832 Inference time: 0.01644420623779297 Add cuts time: 0.00810551643371582 Cut analysis time: 0.0002918243408203125
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0246    set_bounds 0.0135    solve 0.1438    add 0.0167    
Accumulated time: pickout 0.0014    decision 0.5775    set_bounds 0.0224    solve 0.2673    add 0.1520    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 84] 
split level 1: [/input-12, 74] 
split level 2: [/input-12, 0] 
split level 3: [/input-12, 16] 
split level 4: [/input-12, 75] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 24] 
split level 7: [/input-12, 76] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.8732209205627441

all verified at 0th iter
Time: prepare 0.0036    bound 0.0044    transfer 0.0005    finalize 0.0015    func 0.0117    
Accumulated time: func 0.3354    prepare 0.0330    bound 0.2957    transfer 0.0039    finalize 0.0069    
all_split False
======================Cut inference begins======================
max lb tensor(2.85239577) min lb tensor(0.87322092)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.0063991546630859375 
BICCOS Cumulative time: 0.055678367614746094
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0005    decision 0.0236    set_bounds 0.0164    solve 0.0117    add 0.0003    
Accumulated time: pickout 0.0019    decision 0.6011    set_bounds 0.0388    solve 0.2791    add 0.1522    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.2055573463439941


Properties batch 8, size 1
Remaining timeout: 197.04575848579407
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.9543 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 108, vnnlib ID: 108 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.74260330, -36.58590317, -32.48476791, -30.24002457, -31.40128899,
         -31.10354996, -30.54777908, -33.72594070, -37.54587173, -35.73816681]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [971]; unstable size 971; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 439, 1, 971] with unstable size 438 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 55, 1, 971] with unstable size 54 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 971] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [438]; unstable size 438; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 55, 1, 438] with unstable size 54 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 438] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [54]; unstable size 54; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 54] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.07302666,  1.40384924, -0.88186455, -1.62542343, -0.57440680,
         -3.11664772, -0.68947470,  2.82505178,  0.15012848]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.74260330, -36.58590317, -32.48476791, -30.24002457, -31.40128899,
         -31.10354996, -30.54777908, -33.72594070, -37.54587173, -35.73816681]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.99374771, -36.73801422, -32.57464981, -30.67383003, -31.66989708,
          -31.63616371, -29.97908783, -34.17028427, -37.77370071, -36.01251984],
         [-35.99374771, -36.73801422, -32.57464981, -30.67383003, -31.66989708,
          -31.63616371, -29.97908783, -34.17028427, -37.77370071, -36.01251984]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.90081978,  0.99606705,  0.96233368, -0.69474220,  3.49645424]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0711 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 109, vnnlib ID: 109 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.24174118, -40.62767410, -38.48437881, -39.73379517, -40.44787979,
         -41.27136993, -40.40404892, -42.06374359, -41.76357651, -39.89768600]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [764]; unstable size 764; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 177, 1, 764] with unstable size 176 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 764] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 764] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [176]; unstable size 176; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 176] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 176] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.01586437, 3.18049312, 4.10745144, 4.33836174, 5.20933437, 4.84991169,
         6.25201130, 5.89610624, 4.53510189]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0730 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 110, vnnlib ID: 110 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-42.41437149, -43.42362595, -37.93037796, -35.62587738, -36.92589569,
         -37.82977295, -32.00811386, -41.20245743, -43.72430038, -44.85411453]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [763]; unstable size 763; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 428, 1, 763] with unstable size 427 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 50, 1, 763] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 763] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [427]; unstable size 427; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 50, 1, 427] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 427] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [49]; unstable size 49; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 49] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.19414377, 5.52511263, 1.43622541, 0.07437515, 1.23479939, 1.44962204,
         3.52127767, 6.07198620, 6.38704967]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0685 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 111, vnnlib ID: 111 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.00923538, -32.43370438, -25.29608154, -26.97880173, -23.42141342,
         -26.59372711, -27.14603233, -26.05987930, -32.38652420, -32.19280243]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [857]; unstable size 857; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 376, 1, 857] with unstable size 375 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 54, 1, 857] with unstable size 53 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 857] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [375]; unstable size 375; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 54, 1, 375] with unstable size 53 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 375] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [53]; unstable size 53; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 53] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.50242496,  3.93201923, -1.72670889,  0.79806519,  0.02909446,
          0.06987816, -1.26185441,  4.03388977,  3.55372953]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.00923538, -32.43370438, -25.29608154, -26.97880173, -23.42141342,
         -26.59372711, -27.14603233, -26.05987930, -32.38652420, -32.19280243]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.43it/s]100%|██████████| 1/1 [00:00<00:00,  8.42it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.70285797, -32.04212952, -24.73237038, -26.91742897, -23.84413147,
          -26.49006844, -27.13528061, -26.29200935, -32.24558640, -31.92722511],
         [-28.70285797, -32.04212952, -24.73237038, -26.91742897, -23.84413147,
          -26.49006844, -27.13528061, -26.29200935, -32.24558640, -31.92722511]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.88823891, 2.44787788]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1218 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.861480712890625
alpha/beta optimization time: 1.3131186962127686
initial alpha-crown bounds: tensor([[ 1.81307709,  4.34275198, -1.46977246,  1.04243016,  0.27577472,
          0.36635685, -0.96636510,  4.47105217,  3.98617554]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -1.469772458076477
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.4880030155182
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.4879608154297
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.48793196678162
Verifying property 2 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.46977246]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.00923538, -32.43370438, -25.29608154, -26.97880173, -23.42141342,
        -26.59372711, -27.14603233, -26.05987930, -32.38652420, -32.19280243],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.46977246]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 857
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 364
Node /15 input 0: size torch.Size([100]) unstable 52
-----------------
# of unstable neurons: 1273
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011134147644042969
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.4697667360305786
10 lb beta sum: 0.0, worst -1.4697850942611694
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0567    transfer 0.0001    finalize 0.0001    func 0.0572    
Accumulated time: func 0.0572    prepare 0.0002    bound 0.0567    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 70] 
split level 1: [/input-12, 92] 
split level 2: [/input-12, 66] 
split level 3: [/input-12, 57] 
split level 4: [/input-12, 30] 
split level 5: [/input-12, 15] 
split level 6: [/input-12, 28] 
split level 7: [/input-12, 38] 
split level 8: [/input-12, 22] 
split level 9: [/input-12, 51] 
split level 10: [/input-12, 48] 
split level 11: [/input-12, 50] 
split level 12: [/input-12, 33] 
split level 13: [/input-12, 10] 
split level 14: [/input-12, 9] 
split level 15: [/input-12, 97] 
split level 16: [/input-12, 76] 
split level 17: [/input-12, 84] 
split level 18: [/input-12, 14] 
split level 19: [/input-12, 45] 
split level 20: [/input-12, 46] 
split level 21: [/input-12, 87] 
split level 22: [/input-12, 85] 
split level 23: [/input-12, 75] 
split level 24: [/input-8, 348] 
split level 25: [/input-12, 47] 
split level 26: [/input-8, 1882] 
split level 27: [/input-8, 1315] 
split level 28: [/input-12, 16] 
split level 29: [/input-8, 1876] 
split level 30: [/input-8, 1883] 
split level 31: [/input-8, 538] 
split level 32: [/input-8, 1574] 
split level 33: [/input-8, 698] 
split level 34: [/input-8, 550] 
split level 35: [/input-8, 1908] 
split level 36: [/input-8, 1307] 
split level 37: [/input-8, 562] 
split level 38: [/input-12, 6] 
split level 39: [/input-8, 1573] 
split level 40: [/input-8, 1306] 
split level 41: [/input-8, 1683] 
split level 42: [/input-8, 404] 
split level 43: [/input-8, 669] 
split level 44: [/input-8, 1890] 
split level 45: [/input-8, 702] 
split level 46: [/input-8, 1979] 
split level 47: [/input-8, 1143] 
split level 48: [/input-8, 621] 
split level 49: [/input-8, 1978] 
split level 50: [/input-8, 529] 
split level 51: [/input-8, 1572] 
split level 52: [/input-8, 1314] 
split level 53: [/input-8, 1582] 
split level 54: [/input-8, 1579] 
split level 55: [/input-8, 875] 
split level 56: [/input-8, 1875] 
split level 57: [/input-8, 1313] 
split level 58: [/input-8, 340] 
split level 59: [/input-8, 1564] 
split level 60: [/input-8, 867] 
split level 61: [/input-8, 349] 
split level 62: [/input-8, 733] 
split level 63: [/input-8, 558] 
split level 64: [/input-8, 1549] 
split level 65: [/input-8, 1581] 
split level 66: [/input-8, 1580] 
split level 67: [/input-8, 724] 
split level 68: [/input-8, 530] 
split level 69: [/input-8, 1135] 
split level 70: [/input-12, 31] 
split level 71: [/input-8, 1333] 
split level 72: [/input-8, 1971] 
split level 73: [/input-8, 747] 
split level 74: [/input-8, 1570] 
split level 75: [/input-8, 522] 
split level 76: [/input-8, 1909] 
split level 77: [/input-8, 765] 
split level 78: [/input-8, 1917] 
split level 79: [/input-8, 1844] 
split level 80: [/input-8, 1874] 
split level 81: [/input-8, 1867] 
split level 82: [/input-8, 1429] 
split level 83: [/input-8, 756] 
split level 84: [/input-8, 1119] 
split level 85: [/input-8, 876] 
split level 86: [/input-8, 883] 
split level 87: [/input-8, 154] 
split level 88: [/input-12, 37] 
split level 89: [/input-8, 1134] 
split level 90: [/input-8, 1916] 
split level 91: [/input-8, 1556] 
split level 92: [/input-8, 1550] 
split level 93: [/input-8, 1578] 
split level 94: [/input-8, 652] 
split level 95: [/input-8, 1868] 
split level 96: [/input-8, 1887] 
split level 97: [/input-8, 1845] 
split level 98: [/input-8, 406] 
split level 99: [/input-8, 748] 
split level 100: [/input-8, 1937] 
split level 101: [/input-8, 933] 
split level 102: [/input-8, 524] 
split level 103: [/input-8, 730] 
split level 104: [/input-8, 1530] 
split level 105: [/input-8, 1532] 
split level 106: [/input-8, 1866] 
split level 107: [/input-8, 341] 
split level 108: [/input-8, 1059] 
split level 109: [/input-8, 483] 
split level 110: [/input-8, 155] 
split level 111: [/input-8, 709] 
split level 112: [/input-8, 1858] 
split level 113: [/input-8, 1846] 
split level 114: [/input-8, 1334] 
split level 115: [/input-8, 1585] 
split level 116: [/input-8, 882] 
split level 117: [/input-8, 559] 
split level 118: [/input-8, 1640] 
split level 119: [/input-8, 1981] 
split level 120: [/input-8, 665] 
split level 121: [/input-8, 1038] 
split level 122: [/input-8, 1869] 
split level 123: [/input-8, 694] 
split level 124: [/input-8, 1842] 
split level 125: [/input-8, 873] 
split level 126: [/input-8, 1020] 
split level 127: [/input-8, 1860] 
split level 128: [/input-8, 395] 
split level 129: [/input-8, 1918] 
split level 130: [/input-8, 1438] 
split level 131: [/input-8, 713] 
split level 132: [/input-8, 1325] 
split level 133: [/input, 2471] 
split level 134: [/input-8, 398] 
split level 135: [/input-8, 1018] 
split level 136: [/input-8, 676] 
split level 137: [/input-8, 884] 
split level 138: [/input, 2459] 
split level 139: [/input-8, 1900] 
split level 140: [/input-8, 342] 
split level 141: [/input-8, 173] 
split level 142: [/input-8, 715] 
split level 143: [/input-8, 1435] 
split level 144: [/input-8, 1931] 
split level 145: [/input-8, 692] 
split level 146: [/input-8, 1019] 
split level 147: [/input-8, 414] 
split level 148: [/input-8, 1285] 
split level 149: [/input-12, 4] 
split level 150: [/input-8, 505] 
split level 151: [/input-8, 753] 
split level 152: [/input-8, 1593] 
split level 153: [/input, 3228] 
split level 154: [/input-8, 757] 
split level 155: [/input-8, 1017] 
split level 156: [/input, 150] 
split level 157: [/input-8, 657] 
split level 158: [/input-8, 592] 
split level 159: [/input-8, 507] 
split level 160: [/input-8, 915] 
split level 161: [/input, 3109] 
split level 162: [/input, 1512] 
split level 163: [/input, 1830] 
split level 164: [/input-8, 1007] 
split level 165: [/input-8, 1098] 
split level 166: [/input-8, 1861] 
split level 167: [/input-8, 1035] 
split level 168: [/input-8, 1488] 
split level 169: [/input, 1190] 
split level 170: [/input, 3955] 
split level 171: [/input-8, 948] 
split level 172: [/input, 1496] 
split level 173: [/input-8, 758] 
split level 174: [/input-12, 44] 
split level 175: [/input, 2470] 
split level 176: [/input, 2452] 
split level 177: [/input, 151] 
split level 178: [/input-8, 630] 
split level 179: [/input-8, 189] 
split level 180: [/input, 1158] 
split level 181: [/input, 1126] 
split level 182: [/input, 2790] 
split level 183: [/input, 2455] 
split level 184: [/input, 3975] 
split level 185: [/input-8, 584] 
split level 186: [/input, 3416] 
split level 187: [/input, 148] 
split level 188: [/input, 1511] 
split level 189: [/input, 2453] 
split level 190: [/input, 184] 
split level 191: [/input-8, 1060] 
split level 192: [/input-8, 967] 
split level 193: [/input, 2413] 
split level 194: [/input-8, 343] 
split level 195: [/input, 3226] 
split level 196: [/input, 1110] 
split level 197: [/input, 627] 
split level 198: [/input, 1142] 
split level 199: [/input-8, 438] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.4693536758422852
10 lb beta sum: 0.0, worst -1.4693474769592285
Time: prepare 0.0115    bound 0.1043    transfer 0.0025    finalize 0.0030    func 0.1240    
Accumulated time: func 0.1812    prepare 0.0220    bound 0.1610    transfer 0.0026    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(-0.24927425) min lb tensor(-1.46932924)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.0103607177734375 
BICCOS Cumulative time: 0.0103607177734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.42224 (1), -1.42081 (1), -1.42005 (1), -1.41991 (1), -1.41819 (1), -1.41461 (1), -1.41452 (1), -1.41406 (1), -1.41157 (1), -1.41033 (1), -1.40807 (1), -1.40487 (1), -1.40463 (1), -1.40447 (1), -1.40032 (1), -1.39841 (1), -1.39672 (1), -1.38769 (1), -1.38622 (1), -1.37948 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5467    set_bounds 0.0093    solve 0.1241    add 0.1652    
Accumulated time: pickout 0.0004    decision 0.5467    set_bounds 0.0093    solve 0.1241    add 0.1652    
Current (lb-rhs): -1.4222381114959717
50 domains visited
Cumulative time: 0.943962812423706

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 57] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 1: [/input-12, 57] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 57] 
split level 2: [/input-12, 66] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 30] [/input-12, 57] [/input-12, 57] [/input-12, 30] 
split level 3: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 15] [/input-12, 30] [/input-12, 15] [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2846949100494385
10 lb beta sum: 0.0, worst -1.2834035158157349
Time: prepare 0.0117    bound 0.1038    transfer 0.0008    finalize 0.0022    func 0.1210    
Accumulated time: func 0.3022    prepare 0.0339    bound 0.2648    transfer 0.0033    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.23913097) min lb tensor(-1.28302765)
Number of Verified Splits: 13 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.01359701156616211 
BICCOS Cumulative time: 0.02395772933959961
Preprocessing time: 0.01182866096496582 Inference time: 0.0006299018859863281 Add cuts time: 0.00029277801513671875 Cut analysis time: 0.0008456707000732422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.67448 (2), -0.66972 (2), -0.66829 (2), -0.66176 (2), -0.65664 (2), -0.65400 (2), -0.64796 (2), -0.63799 (2), -0.63354 (2), -0.63222 (2), -0.63062 (2), -0.61715 (2), -0.60634 (2), -0.60413 (2), -0.59819 (2), -0.59201 (2), -0.58185 (2), -0.57710 (2), -0.57604 (2), -0.56828 (2), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0275    set_bounds 0.0149    solve 0.1211    add 0.0997    
Accumulated time: pickout 0.0016    decision 0.5742    set_bounds 0.0242    solve 0.2452    add 0.2649    
Current (lb-rhs): -0.6744803190231323
100 domains visited
Cumulative time: 1.2221298217773438

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 57] [/input-12, 57] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 66] [/input-12, 92] 
split level 1: [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 57] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 57] [/input-12, 57] [/input-12, 66] 
split level 2: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 57] [/input-12, 57] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] 
split level 3: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.54903244972229
10 lb beta sum: 0.5588259100914001, worst -0.5004662275314331
Time: prepare 0.0056    bound 0.1232    transfer 0.0025    finalize 0.0023    func 0.1362    
Accumulated time: func 0.4384    prepare 0.0398    bound 0.3880    transfer 0.0058    finalize 0.0076    
all_split False
======================Cut inference begins======================
max lb tensor(0.56652528) min lb tensor(-0.49585563)
Number of Verified Splits: 141 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 7
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.022177457809448242 
BICCOS Cumulative time: 0.04613518714904785
Preprocessing time: 0.011695623397827148 Inference time: 0.007312774658203125 Add cuts time: 0.002753734588623047 Cut analysis time: 0.0004153251647949219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17985 (3), -0.17961 (3), -0.17931 (3), -0.17890 (3), -0.17780 (3), -0.16529 (3), -0.16374 (3), -0.16128 (3), -0.16126 (3), -0.16044 (3), -0.16021 (3), -0.15684 (3), -0.15663 (3), -0.15402 (3), -0.14874 (3), -0.14869 (3), -0.14756 (3), -0.14613 (3), -0.14532 (3), -0.14247 (3), 
Length of domains: 50
Time: pickout 0.0009    decision 0.0203    set_bounds 0.0152    solve 0.1363    add 0.0935    
Accumulated time: pickout 0.0024    decision 0.5945    set_bounds 0.0394    solve 0.3815    add 0.3583    
Current (lb-rhs): -0.179845929145813
150 domains visited
Cumulative time: 1.5106582641601562

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] [/input-12, 57] [/input-12, 92] [/input-12, 57] [/input-12, 66] [/input-12, 57] [/input-12, 66] [/input-12, 92] [/input-12, 66] [/input-12, 57] 
split level 1: [/input-12, 30] [/input-12, 30] [/input-12, 66] [/input-12, 66] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 66] [/input-12, 30] [/input-12, 66] 
split level 2: [/input-12, 28] [/input-12, 15] [/input-12, 30] [/input-12, 30] [/input-12, 15] [/input-12, 15] [/input-12, 28] [/input-12, 30] [/input-12, 28] [/input-12, 30] 
split level 3: [/input-12, 15] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 15] [/input-12, 28] [/input-12, 15] [/input-12, 28] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19070959091186523
10 lb beta sum: 0.4744940400123596, worst -0.10142254829406738
Time: prepare 0.0056    bound 0.1238    transfer 0.0007    finalize 0.0025    func 0.1351    
Accumulated time: func 0.5736    prepare 0.0456    bound 0.5118    transfer 0.0065    finalize 0.0100    
all_split False
======================Cut inference begins======================
max lb tensor(0.39248514) min lb tensor(-0.09239826)
Number of Verified Splits: 375 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 9
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.040610551834106445 
BICCOS Cumulative time: 0.0867457389831543
Preprocessing time: 0.011795997619628906 Inference time: 0.01991724967956543 Add cuts time: 0.008198022842407227 Cut analysis time: 0.0006992816925048828
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0009    decision 0.0201    set_bounds 0.0152    solve 0.1352    add 0.0244    
Accumulated time: pickout 0.0033    decision 0.6146    set_bounds 0.0547    solve 0.5167    add 0.3827    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] 
split level 1: [/input-12, 66] 
split level 2: [/input-12, 57] 
split level 3: [/input-12, 30] 
split level 4: [/input-12, 15] 
split level 5: [/input-12, 28] 
split level 6: [/input-12, 38] 
split level 7: [/input-12, 48] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2915436029434204
10 lb beta sum: 0.10481970012187958, worst -0.2560863494873047
Time: prepare 0.0038    bound 0.1221    transfer 0.0009    finalize 0.0013    func 0.1298    
Accumulated time: func 0.7034    prepare 0.0499    bound 0.6339    transfer 0.0075    finalize 0.0114    
all_split False
======================Cut inference begins======================
max lb tensor(1.03188801) min lb tensor(-0.25395536)
Number of Verified Splits: 247 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0238444805145264
10 lb beta sum: 1.4827196598052979, worst -0.9405514597892761
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 9
#cuts 4-6: 17
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.418731689453125 
BICCOS Cumulative time: 0.5054774284362793
Preprocessing time: 0.007233858108520508 Inference time: 0.40847325325012207 Add cuts time: 0.0015957355499267578 Cut analysis time: 0.001428842544555664
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25396 (8), -0.23416 (8), -0.14505 (8), -0.13340 (8), -0.12090 (8), -0.06781 (8), -0.04233 (8), -0.02073 (8), -0.00626 (8), 
Length of domains: 9
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0172    solve 0.1299    add 0.0082    
Accumulated time: pickout 0.0037    decision 0.6376    set_bounds 0.0719    solve 0.6466    add 0.3909    
Current (lb-rhs): -0.2539553642272949
159 domains visited
Cumulative time: 2.3496758937835693

BaB round 2
batch: 9
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] 
split level 1: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
split level 2: [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 10] [/input-12, 50] [/input-12, 50] [/input-12, 10] [/input-12, 50] 
split level 3: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 50] [/input-12, 10] [/input-12, 10] [/input-12, 50] [/input-12, 10] 
split level 4: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.058074504137039185
10 lb beta sum: 0.02466345764696598, worst -0.042678698897361755
Time: prepare 0.0041    bound 0.1222    transfer 0.0019    finalize 0.0017    func 0.1318    
Accumulated time: func 0.8352    prepare 0.0543    bound 0.7560    transfer 0.0094    finalize 0.0130    
all_split False
======================Cut inference begins======================
max lb tensor(0.89014173) min lb tensor(-0.04154974)
Number of Verified Splits: 282 of 288
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8596042990684509
10 lb beta sum: 0.896004319190979, worst -0.7286396026611328
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 44.
#cuts 1-3: 9
#cuts 4-6: 17
#cuts 7-9: 15
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 0.3210766315460205 
BICCOS Cumulative time: 0.8265540599822998
Preprocessing time: 0.008469343185424805 Inference time: 0.29973530769348145 Add cuts time: 0.010846376419067383 Cut analysis time: 0.002025604248046875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04155 (13), -0.02809 (13), -0.02606 (13), -0.02131 (13), -0.01395 (13), -0.00800 (13), 
Length of domains: 6
Time: pickout 0.0012    decision 0.0196    set_bounds 0.0185    solve 0.1319    add 0.0008    
Accumulated time: pickout 0.0049    decision 0.6572    set_bounds 0.0903    solve 0.7784    add 0.3917    
Current (lb-rhs): -0.041549742221832275
165 domains visited
Cumulative time: 2.8453967571258545

BaB round 3
batch: 6
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
split level 1: [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 76] 
split level 2: [/input-12, 85] [/input-12, 87] [/input-12, 85] [/input-12, 87] [/input-12, 46] [/input-12, 87] 
split level 3: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 85] [/input-12, 46] 
split level 4: [/input-12, 87] [/input-12, 85] [/input-12, 87] [/input-12, 85] [/input-12, 47] [/input-12, 85] 
split level 5: [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-8, 1883] [/input-12, 47] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.08521324396133423

all verified at 0th iter
Time: prepare 0.0064    bound 0.0049    transfer 0.0028    finalize 0.0023    func 0.0194    
Accumulated time: func 0.8545    prepare 0.0610    bound 0.7609    transfer 0.0122    finalize 0.0154    
all_split False
======================Cut inference begins======================
max lb tensor(0.29275763) min lb tensor(0.08521324)
Number of Verified Splits: 384 of 384
No cut inferred: All or none verified.
Total number of valid cuts: 44.
#cuts 1-3: 9
#cuts 4-6: 17
#cuts 7-9: 15
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 0.011397123336791992 
BICCOS Cumulative time: 0.8379511833190918
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0009    decision 0.0218    set_bounds 0.0279    solve 0.0195    add 0.0001    
Accumulated time: pickout 0.0059    decision 0.6790    set_bounds 0.1182    solve 0.7979    add 0.3917    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
165 domains visited
Cumulative time: 2.9282193183898926


Properties batch 3, size 1
Remaining timeout: 195.33290457725525
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 195.33280563354492
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 195.33278012275696
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 195.33275842666626
Verifying property 6 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.96636510]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.00923538, -32.43370438, -25.29608154, -26.97880173, -23.42141342,
        -26.59372711, -27.14603233, -26.05987930, -32.38652420, -32.19280243],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.96636510]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 857
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 364
Node /15 input 0: size torch.Size([100]) unstable 52
-----------------
# of unstable neurons: 1273
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.870529174804688e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9663617610931396
10 lb beta sum: 0.0, worst -0.9663662910461426
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0559    transfer 0.0001    finalize 0.0001    func 0.0563    
Accumulated time: func 0.0563    prepare 0.0002    bound 0.0559    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 73] 
split level 1: [/input-12, 29] 
split level 2: [/input-12, 94] 
split level 3: [/input-12, 67] 
split level 4: [/input-12, 50] 
split level 5: [/input-12, 10] 
split level 6: [/input-12, 14] 
split level 7: [/input-12, 81] 
split level 8: [/input-12, 85] 
split level 9: [/input-12, 35] 
split level 10: [/input-12, 51] 
split level 11: [/input-12, 76] 
split level 12: [/input-12, 45] 
split level 13: [/input-12, 97] 
split level 14: [/input-8, 339] 
split level 15: [/input-12, 70] 
split level 16: [/input-12, 53] 
split level 17: [/input-12, 87] 
split level 18: [/input-12, 28] 
split level 19: [/input-12, 40] 
split level 20: [/input-8, 1119] 
split level 21: [/input-8, 1059] 
split level 22: [/input-8, 1143] 
split level 23: [/input-8, 1428] 
split level 24: [/input-8, 1937] 
split level 25: [/input-8, 972] 
split level 26: [/input-8, 1882] 
split level 27: [/input-8, 713] 
split level 28: [/input-8, 1131] 
split level 29: [/input-12, 4] 
split level 30: [/input-8, 1435] 
split level 31: [/input-12, 24] 
split level 32: [/input-8, 1060] 
split level 33: [/input-8, 1068] 
split level 34: [/input-8, 1506] 
split level 35: [/input-8, 1438] 
split level 36: [/input-8, 1035] 
split level 37: [/input-8, 657] 
split level 38: [/input-8, 1446] 
split level 39: [/input-8, 1058] 
split level 40: [/input-8, 628] 
split level 41: [/input-8, 995] 
split level 42: [/input-8, 1049] 
split level 43: [/input-8, 1061] 
split level 44: [/input-8, 369] 
split level 45: [/input-8, 1517] 
split level 46: [/input-8, 989] 
split level 47: [/input-8, 1135] 
split level 48: [/input-8, 1453] 
split level 49: [/input-8, 1546] 
split level 50: [/input-8, 1530] 
split level 51: [/input-8, 340] 
split level 52: [/input-8, 1525] 
split level 53: [/input-8, 630] 
split level 54: [/input-8, 529] 
split level 55: [/input-8, 652] 
split level 56: [/input-8, 1532] 
split level 57: [/input-8, 420] 
split level 58: [/input-8, 342] 
split level 59: [/input-8, 1501] 
split level 60: [/input-8, 2011] 
split level 61: [/input-8, 1038] 
split level 62: [/input-8, 1971] 
split level 63: [/input-8, 986] 
split level 64: [/input-8, 1547] 
split level 65: [/input-8, 1526] 
split level 66: [/input-8, 1103] 
split level 67: [/input-8, 1445] 
split level 68: [/input-8, 1134] 
split level 69: [/input-8, 629] 
split level 70: [/input-8, 1069] 
split level 71: [/input-8, 1954] 
split level 72: [/input-8, 949] 
split level 73: [/input-8, 421] 
split level 74: [/input-8, 1890] 
split level 75: [/input-8, 665] 
split level 76: [/input-8, 505] 
split level 77: [/input-8, 1019] 
split level 78: [/input-8, 883] 
split level 79: [/input-8, 1876] 
split level 80: [/input-8, 1429] 
split level 81: [/input-8, 1018] 
split level 82: [/input-8, 159] 
split level 83: [/input-8, 1421] 
split level 84: [/input-8, 983] 
split level 85: [/input-8, 1023] 
split level 86: [/input-8, 1523] 
split level 87: [/input-12, 16] 
split level 88: [/input-8, 1861] 
split level 89: [/input-8, 1020] 
split level 90: [/input-8, 1874] 
split level 91: [/input-8, 915] 
split level 92: [/input-8, 730] 
split level 93: [/input-8, 1794] 
split level 94: [/input, 1063] 
split level 95: [/input-8, 1441] 
split level 96: [/input-8, 1860] 
split level 97: [/input-8, 1500] 
split level 98: [/input-8, 1027] 
split level 99: [/input-8, 619] 
split level 100: [/input, 619] 
split level 101: [/input, 3109] 
split level 102: [/input, 3098] 
split level 103: [/input-8, 729] 
split level 104: [/input-8, 1952] 
split level 105: [/input-8, 1858] 
split level 106: [/input-8, 1579] 
split level 107: [/input-8, 918] 
split level 108: [/input, 1064] 
split level 109: [/input, 3963] 
split level 110: [/input-8, 348] 
split level 111: [/input, 1830] 
split level 112: [/input, 3955] 
split level 113: [/input-8, 948] 
split level 114: [/input, 2730] 
split level 115: [/input-8, 1640] 
split level 116: [/input, 3915] 
split level 117: [/input-8, 1883] 
split level 118: [/input-8, 875] 
split level 119: [/input-8, 933] 
split level 120: [/input, 1050] 
split level 121: [/input-8, 724] 
split level 122: [/input, 3916] 
split level 123: [/input, 3982] 
split level 124: [/input, 682] 
split level 125: [/input, 1067] 
split level 126: [/input, 678] 
split level 127: [/input-8, 562] 
split level 128: [/input-8, 1979] 
split level 129: [/input-8, 1931] 
split level 130: [/input, 3956] 
split level 131: [/input-8, 1334] 
split level 132: [/input-8, 343] 
split level 133: [/input, 3097] 
split level 134: [/input, 2696] 
split level 135: [/input-8, 1582] 
split level 136: [/input-8, 1867] 
split level 137: [/input, 621] 
split level 138: [/input, 1057] 
split level 139: [/input, 1149] 
split level 140: [/input-8, 438] 
split level 141: [/input-8, 1970] 
split level 142: [/input-8, 1550] 
split level 143: [/input-8, 715] 
split level 144: [/input, 1059] 
split level 145: [/input, 1885] 
split level 146: [/input-8, 1580] 
split level 147: [/input-8, 148] 
split level 148: [/input, 918] 
split level 149: [/input, 646] 
split level 150: [/input, 1493] 
split level 151: [/input, 652] 
split level 152: [/input, 1255] 
split level 153: [/input, 890] 
split level 154: [/input-8, 950] 
split level 155: [/input-8, 1875] 
split level 156: [/input-8, 1283] 
split level 157: [/input, 3301] 
split level 158: [/input, 693] 
split level 159: [/input, 3932] 
split level 160: [/input, 1068] 
split level 161: [/input-8, 406] 
split level 162: [/input, 2074] 
split level 163: [/input, 1251] 
split level 164: [/input, 109] 
split level 165: [/input, 1110] 
split level 166: [/input-8, 1070] 
split level 167: [/input-8, 1866] 
split level 168: [/input-8, 349] 
split level 169: [/input, 3416] 
split level 170: [/input, 622] 
split level 171: [/input-8, 1333] 
split level 172: [/input, 4043] 
split level 173: [/input-8, 1029] 
split level 174: [/input-8, 341] 
split level 175: [/input-8, 965] 
split level 176: [/input, 645] 
split level 177: [/input, 1171] 
split level 178: [/input-8, 190] 
split level 179: [/input, 663] 
split level 180: [/input, 1841] 
split level 181: [/input, 1096] 
split level 182: [/input, 4042] 
split level 183: [/input, 1494] 
split level 184: [/input-8, 876] 
split level 185: [/input-8, 507] 
split level 186: [/input, 2871] 
split level 187: [/input, 3300] 
split level 188: [/input, 3897] 
split level 189: [/input, 1858] 
split level 190: [/input-8, 898] 
split level 191: [/input, 629] 
split level 192: [/input-8, 1942] 
split level 193: [/input, 2698] 
split level 194: [/input, 2182] 
split level 195: [/input, 1223] 
split level 196: [/input, 1109] 
split level 197: [/input, 3873] 
split level 198: [/input-8, 1981] 
split level 199: [/input, 2065] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9660744667053223
10 lb beta sum: 0.0, worst -0.9660778045654297
Time: prepare 0.0114    bound 0.1042    transfer 0.0026    finalize 0.0029    func 0.1236    
Accumulated time: func 0.1800    prepare 0.0216    bound 0.1601    transfer 0.0027    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.51004624) min lb tensor(-0.96606350)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.01081395149230957 
BICCOS Cumulative time: 0.01081395149230957
Preprocessing time: 0.010135889053344727 Inference time: 7.390975952148438e-05 Add cuts time: 3.814697265625e-05 Cut analysis time: 0.0005660057067871094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.93588 (1), -0.93579 (1), -0.93524 (1), -0.93468 (1), -0.93400 (1), -0.93368 (1), -0.93151 (1), -0.93131 (1), -0.93108 (1), -0.92880 (1), -0.92756 (1), -0.92480 (1), -0.92480 (1), -0.92271 (1), -0.92219 (1), -0.92209 (1), -0.92026 (1), -0.92009 (1), -0.91344 (1), -0.91125 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5453    set_bounds 0.0086    solve 0.1237    add 0.1488    
Accumulated time: pickout 0.0004    decision 0.5453    set_bounds 0.0086    solve 0.1237    add 0.1488    
Current (lb-rhs): -0.935884952545166
50 domains visited
Cumulative time: 0.9153378009796143

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 94] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 1: [/input-12, 94] [/input-12, 67] [/input-12, 94] [/input-12, 94] [/input-12, 67] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] 
split level 2: [/input-12, 50] [/input-12, 50] [/input-12, 10] [/input-12, 10] [/input-12, 50] [/input-12, 50] [/input-12, 67] [/input-12, 50] [/input-12, 67] [/input-12, 67] 
split level 3: [/input-12, 14] [/input-12, 10] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 14] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8046514987945557
10 lb beta sum: 0.1726442128419876, worst -0.7883948683738708
Time: prepare 0.0065    bound 0.1256    transfer 0.0007    finalize 0.0022    func 0.1378    
Accumulated time: func 0.3177    prepare 0.0284    bound 0.2857    transfer 0.0034    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.78958750) min lb tensor(-0.78772527)
Number of Verified Splits: 69 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.01641249656677246 
BICCOS Cumulative time: 0.02722644805908203
Preprocessing time: 0.011750936508178711 Inference time: 0.002908468246459961 Add cuts time: 0.0014057159423828125 Cut analysis time: 0.00034737586975097656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36376 (2), -0.36358 (2), -0.34882 (2), -0.34865 (2), -0.34670 (2), -0.34650 (2), -0.34472 (2), -0.33593 (2), -0.33535 (2), -0.33471 (2), -0.33132 (2), -0.32587 (2), -0.32562 (2), -0.32488 (2), -0.32357 (2), -0.31878 (2), -0.31834 (2), -0.31438 (2), -0.31037 (2), -0.30457 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0210    set_bounds 0.0139    solve 0.1379    add 0.0881    
Accumulated time: pickout 0.0014    decision 0.5663    set_bounds 0.0225    solve 0.2616    add 0.2370    
Current (lb-rhs): -0.3637576401233673
100 domains visited
Cumulative time: 1.1939213275909424

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 1: [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] 
split level 2: [/input-12, 10] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 67] [/input-12, 50] [/input-12, 50] 
split level 3: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 10] [/input-12, 14] [/input-12, 67] [/input-12, 67] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23752212524414062
10 lb beta sum: 0.4883057177066803, worst -0.05802130699157715
Time: prepare 0.0059    bound 0.1252    transfer 0.0007    finalize 0.0021    func 0.1365    
Accumulated time: func 0.4543    prepare 0.0346    bound 0.4109    transfer 0.0042    finalize 0.0073    
all_split False
======================Cut inference begins======================
max lb tensor(0.80227327) min lb tensor(-0.04718375)
Number of Verified Splits: 378 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.03631925582885742 
BICCOS Cumulative time: 0.06354570388793945
Preprocessing time: 0.011622428894042969 Inference time: 0.01786041259765625 Add cuts time: 0.006391286849975586 Cut analysis time: 0.0004451274871826172
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0204    set_bounds 0.0156    solve 0.1366    add 0.0208    
Accumulated time: pickout 0.0025    decision 0.5867    set_bounds 0.0381    solve 0.3982    add 0.2577    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] 
split level 1: [/input-12, 94] 
split level 2: [/input-12, 67] 
split level 3: [/input-12, 50] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 14] 
split level 6: [/input-12, 81] 
split level 7: [/input-12, 35] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.37851858139038086

all verified at 0th iter
Time: prepare 0.0037    bound 0.0051    transfer 0.0009    finalize 0.0013    func 0.0126    
Accumulated time: func 0.4669    prepare 0.0387    bound 0.4159    transfer 0.0051    finalize 0.0086    
all_split False
======================Cut inference begins======================
max lb tensor(2.22107768) min lb tensor(0.37851858)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 15.
#cuts 1-3: 15
#cuts >= 20: 0
BICCOS time: 0.006478548049926758 
BICCOS Cumulative time: 0.07002425193786621
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0005    decision 0.0234    set_bounds 0.0171    solve 0.0126    add 0.0003    
Accumulated time: pickout 0.0030    decision 0.6101    set_bounds 0.0551    solve 0.4108    add 0.2580    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
Cumulative time: 1.4890706539154053


Properties batch 7, size 1
Remaining timeout: 193.6404299736023
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 193.64034962654114
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 6.3597 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 112, vnnlib ID: 112 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.22656250, -35.70539856, -35.47166443, -34.52713013, -36.54074097,
         -35.46271515, -37.85446548, -35.69043732, -35.05278397, -32.39564514]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [937]; unstable size 937; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 328, 1, 937] with unstable size 327 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 35, 1, 937] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 937] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [327]; unstable size 327; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 35, 1, 327] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 327] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [34]; unstable size 34; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.31142569,  0.64319539, -0.97946262, -1.12236547,  0.52428532,
         -0.15436316,  1.59966564, -0.55573106, -1.42367554]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.22656250, -35.70539856, -35.47166443, -34.52713013, -36.54074097,
         -35.46271515, -37.85446548, -35.69043732, -35.05278397, -32.39564514]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.19it/s]100%|██████████| 1/1 [00:00<00:00,  8.18it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.91620636, -35.22395325, -33.80726624, -32.75556564, -34.86145020,
          -33.73727798, -36.04933167, -33.96419525, -34.07609558, -31.85905838],
         [-33.91620636, -35.22395325, -33.80726624, -32.75556564, -34.86145020,
          -33.73727798, -36.04933167, -33.96419525, -34.07609558, -31.85905838]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.05714798, 1.94820786, 0.89650726, 1.87821960, 2.10513687,
          2.21703720]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1256 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 0.09307408332824707
alpha/beta optimization time: 1.2908430099487305
initial alpha-crown bounds: tensor([[-0.11715674,  0.82015872, -0.74277687, -0.94416904,  0.73002195,
          0.03064394,  1.79094124, -0.32460642, -1.14998269]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 5 ; Worst class: (+ rhs) -1.1499826908111572
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50794005393982
Verifying property 0 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11715674]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.22656250, -35.70539856, -35.47166443, -34.52713013, -36.54074097,
        -35.46271515, -37.85446548, -35.69043732, -35.05278397, -32.39564514],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11715674]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 937
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 317
Node /15 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 1287
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001239776611328125
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 61] 
split level 1: [/input-12, 30] 
split level 2: [/input-12, 28] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 62] 
split level 5: [/input-12, 15] 
split level 6: [/input-12, 10] 
split level 7: [/input-12, 84] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.6452829837799072

all verified at 0th iter
Time: prepare 0.0020    bound 0.2345    transfer 0.0009    finalize 0.0018    func 0.2410    
Accumulated time: func 0.2410    prepare 0.0024    bound 0.2345    transfer 0.0009    finalize 0.0018    
all_split False
======================Cut inference begins======================
max lb tensor(2.15617180) min lb tensor(0.64528298)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006972551345825195 
BICCOS Cumulative time: 0.006972551345825195
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0249    set_bounds 0.0163    solve 0.2411    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0249    set_bounds 0.0163    solve 0.2411    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.29566121101379395


Properties batch 1, size 1
Remaining timeout: 198.01540303230286
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.0152187347412
Verifying property 2 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.74277687]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.22656250, -35.70539856, -35.47166443, -34.52713013, -36.54074097,
        -35.46271515, -37.85446548, -35.69043732, -35.05278397, -32.39564514],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.74277687]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 937
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 317
Node /15 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 1287
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011134147644042969
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 62] 
split level 1: [/input-12, 70] 
split level 2: [/input-12, 15] 
split level 3: [/input-12, 30] 
split level 4: [/input-12, 28] 
split level 5: [/input-12, 10] 
split level 6: [/input-12, 9] 
split level 7: [/input-12, 84] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.4644913673400879

all verified at 0th iter
Time: prepare 0.0019    bound 0.0044    transfer 0.0005    finalize 0.0014    func 0.0099    
Accumulated time: func 0.0099    prepare 0.0023    bound 0.0044    transfer 0.0005    finalize 0.0014    
all_split False
======================Cut inference begins======================
max lb tensor(1.70188808) min lb tensor(0.46449137)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006718873977661133 
BICCOS Cumulative time: 0.006718873977661133
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0162    solve 0.0100    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0162    solve 0.0100    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06247711181640625


Properties batch 3, size 1
Remaining timeout: 197.67547845840454
Verifying property 3 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.94416904]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.22656250, -35.70539856, -35.47166443, -34.52713013, -36.54074097,
        -35.46271515, -37.85446548, -35.69043732, -35.05278397, -32.39564514],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.94416904]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 937
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 317
Node /15 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 1287
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.894371032714844e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 89] 
split level 1: [/input-12, 9] 
split level 2: [/input-12, 15] 
split level 3: [/input-12, 62] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 58] 
split level 6: [/input-12, 30] 
split level 7: [/input-12, 75] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20740222930908203
10 lb beta sum: 0.0, worst -0.20402812957763672
Time: prepare 0.0019    bound 0.0999    transfer 0.0005    finalize 0.0014    func 0.1054    
Accumulated time: func 0.1054    prepare 0.0023    bound 0.0999    transfer 0.0005    finalize 0.0014    
all_split False
======================Cut inference begins======================
max lb tensor(0.96458292) min lb tensor(-0.20316124)
Number of Verified Splits: 229 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9441652297973633
10 lb beta sum: 0.0, worst -0.944183349609375
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 3
#cuts 4-6: 7
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.2072606086730957 
BICCOS Cumulative time: 0.2072606086730957
Preprocessing time: 0.006684780120849609 Inference time: 0.1963193416595459 Add cuts time: 0.0031969547271728516 Cut analysis time: 0.0010595321655273438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20316 (8), -0.20213 (8), -0.15575 (8), -0.15197 (8), -0.15060 (8), -0.14504 (8), -0.13059 (8), -0.12774 (8), -0.10886 (8), -0.09931 (8), -0.09787 (8), -0.09631 (8), -0.08731 (8), -0.08184 (8), -0.07478 (8), -0.06870 (8), -0.03968 (8), -0.03746 (8), -0.03485 (8), -0.03302 (8), 
Length of domains: 27
Time: pickout 0.0004    decision 0.0235    set_bounds 0.0164    solve 0.1055    add 0.0619    
Accumulated time: pickout 0.0004    decision 0.0235    set_bounds 0.0164    solve 0.1055    add 0.0619    
Current (lb-rhs): -0.20316123962402344
27 domains visited
Cumulative time: 0.42874884605407715

BaB round 2
batch: 27
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 1: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 2: [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.026626110076904297
10 lb beta sum: 0.0, worst -0.025690078735351562
Time: prepare 0.0034    bound 0.1317    transfer 0.0036    finalize 0.0015    func 0.1419    
Accumulated time: func 0.2473    prepare 0.0059    bound 0.2316    transfer 0.0041    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.39069748) min lb tensor(-0.02539015)
Number of Verified Splits: 214 of 216
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8701591491699219
10 lb beta sum: 0.07976620644330978, worst -0.8356857299804688
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 3
#cuts 4-6: 8
#cuts 7-9: 29
#cuts >= 20: 0
BICCOS time: 0.27285313606262207 
BICCOS Cumulative time: 0.4801137447357178
Preprocessing time: 0.007336854934692383 Inference time: 0.25671863555908203 Add cuts time: 0.006621122360229492 Cut analysis time: 0.002176523208618164
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02539 (11), -0.02283 (11), 
Length of domains: 2
Time: pickout 0.0061    decision 0.0146    set_bounds 0.0096    solve 0.1420    add 0.0254    
Accumulated time: pickout 0.0065    decision 0.0380    set_bounds 0.0259    solve 0.2475    add 0.0873    
Current (lb-rhs): -0.025390148162841797
29 domains visited
Cumulative time: 0.9057092666625977

BaB round 3
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 77] [/input-12, 77] 
split level 1: [/input-12, 70] [/input-12, 70] 
split level 2: [/input-12, 0] [/input-12, 0] 
split level 3: [/input-8, 1570] [/input-8, 1570] 
split level 4: [/input-12, 84] [/input-12, 84] 
split level 5: [/input-8, 1562] [/input-8, 1562] 
split level 6: [/input-8, 550] [/input-8, 550] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.13092279434204102

all verified at 0th iter
Time: prepare 0.0051    bound 0.0048    transfer 0.0026    finalize 0.0020    func 0.0162    
Accumulated time: func 0.2635    prepare 0.0115    bound 0.2364    transfer 0.0067    finalize 0.0049    
all_split False
======================Cut inference begins======================
max lb tensor(0.66338730) min lb tensor(0.13092279)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 40.
#cuts 1-3: 3
#cuts 4-6: 8
#cuts 7-9: 29
#cuts >= 20: 0
BICCOS time: 0.008286714553833008 
BICCOS Cumulative time: 0.4884004592895508
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0207    set_bounds 0.0183    solve 0.0163    add 0.0001    
Accumulated time: pickout 0.0077    decision 0.0587    set_bounds 0.0442    solve 0.2638    add 0.0874    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
29 domains visited
Cumulative time: 0.9717302322387695


Properties batch 4, size 1
Remaining timeout: 196.5335557460785
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 196.53306603431702
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 196.53303837776184
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 196.53301644325256
Verifying property 7 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.32460642]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.22656250, -35.70539856, -35.47166443, -34.52713013, -36.54074097,
        -35.46271515, -37.85446548, -35.69043732, -35.05278397, -32.39564514],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.32460642]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 937
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 317
Node /15 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 1287
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010848045349121094
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 73] 
split level 1: [/input-12, 10] 
split level 2: [/input-12, 58] 
split level 3: [/input-12, 70] 
split level 4: [/input-12, 62] 
split level 5: [/input-12, 15] 
split level 6: [/input-12, 50] 
split level 7: [/input-12, 9] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.6333026885986328

all verified at 0th iter
Time: prepare 0.0019    bound 0.0045    transfer 0.0009    finalize 0.0017    func 0.0109    
Accumulated time: func 0.0109    prepare 0.0024    bound 0.0045    transfer 0.0009    finalize 0.0017    
all_split False
======================Cut inference begins======================
max lb tensor(1.52421761) min lb tensor(0.63330269)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.007273435592651367 
BICCOS Cumulative time: 0.007273435592651367
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0244    set_bounds 0.0169    solve 0.0110    add 0.0004    
Accumulated time: pickout 0.0004    decision 0.0244    set_bounds 0.0169    solve 0.0110    add 0.0004    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06523966789245605


Properties batch 8, size 1
Remaining timeout: 196.2401146888733
Verifying property 8 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.14998269]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.22656250, -35.70539856, -35.47166443, -34.52713013, -36.54074097,
        -35.46271515, -37.85446548, -35.69043732, -35.05278397, -32.39564514],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.14998269]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 937
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 317
Node /15 input 0: size torch.Size([100]) unstable 33
-----------------
# of unstable neurons: 1287
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001125335693359375
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 0] 
split level 1: [/input-12, 84] 
split level 2: [/input-12, 75] 
split level 3: [/input-12, 47] 
split level 4: [/input-12, 90] 
split level 5: [/input-12, 24] 
split level 6: [/input-12, 9] 
split level 7: [/input-12, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.44034767150878906

all verified at 0th iter
Time: prepare 0.0019    bound 0.0043    transfer 0.0006    finalize 0.0015    func 0.0101    
Accumulated time: func 0.0101    prepare 0.0023    bound 0.0043    transfer 0.0006    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(1.58603334) min lb tensor(0.44034767)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006858348846435547 
BICCOS Cumulative time: 0.006858348846435547
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0239    set_bounds 0.0166    solve 0.0102    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0239    set_bounds 0.0166    solve 0.0102    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06315016746520996

Result: safe in 4.0642 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 113, vnnlib ID: 113 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-38.78012466, -40.46127319, -36.16935730, -33.63562012, -37.83151627,
         -32.84122849, -38.60160446, -36.33144760, -40.45756912, -39.05871201]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [855]; unstable size 855; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 362, 1, 855] with unstable size 361 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 43, 1, 855] with unstable size 42 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 855] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [361]; unstable size 361; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 43, 1, 361] with unstable size 42 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 361] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [42]; unstable size 42; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 42] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.35525441,  2.17201757, -0.25289917,  1.17595100, -1.77254963,
          1.75453854,  0.31318247,  3.25275016,  1.65066051]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-38.78012466, -40.46127319, -36.16935730, -33.63562012, -37.83151627,
         -32.84122849, -38.60160446, -36.33144760, -40.45756912, -39.05871201]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-38.78012466, -40.46128082, -36.16935730, -33.63562012, -37.83151627,
          -32.84123611, -38.60160446, -36.33145523, -40.45757294, -39.05871201],
         [-38.78012466, -40.46128082, -36.16935730, -33.63562012, -37.83151627,
          -32.84123611, -38.60160446, -36.33145523, -40.45757294, -39.05871201]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.53373718, -0.79438400]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.03650784, -1.00476182, -0.75079364,  ..., -0.68730158,
            -0.90952379, -1.62380958],
           [-0.44920623, -0.95714283, -0.67142856,  ..., -0.32222211,
            -0.65555555, -1.62380958],
           [-0.09999990, -0.92539680, -0.63968253,  ..., -0.22698402,
            -0.57619047, -1.63968253],
           ...,
           [-0.27460307, -0.29047608, -0.33809513,  ..., -0.87777776,
            -0.51269841, -0.48095238],
           [-0.30634910, -0.30634910, -0.33809513,  ..., -1.09999990,
            -0.65555555, -0.49682540],
           [-0.40158719, -0.40158719, -0.41746020,  ..., -1.29047608,
            -0.87777776, -0.62380952]],

          [[-1.62640905, -1.72302747, -1.65861523,  ..., -1.49758446,
            -1.57809973, -1.75523353],
           [-1.38486302, -1.77133656, -1.61030602,  ..., -1.35265696,
            -1.49758446, -1.75523353],
           [-1.09500802, -1.80354273, -1.62640905,  ..., -1.22383249,
            -1.40096617, -1.75523353],
           ...,
           [-1.25603855, -1.25603855, -1.28824472,  ..., -0.72463763,
            -0.43478248, -0.51529789],
           [-1.28824472, -1.25603855, -1.28824472,  ..., -0.88566822,
            -0.48309177, -0.45088565],
           [-1.33655393, -1.33655393, -1.33655393,  ..., -1.12721407,
            -0.67632848, -0.46698871]],

          [[-1.48275876, -1.52773619, -1.49775124,  ..., -1.28785622,
            -1.34782624, -1.42278874],
           [-1.15292358, -1.55772126, -1.54272878,  ..., -1.12293863,
            -1.19790113, -1.42278874],
           [-0.89805096, -1.54272878, -1.51274371,  ..., -1.06296861,
            -1.13793111, -1.43778121],
           ...,
           [-0.94302845, -0.94302845, -0.95802099,  ..., -0.61319339,
            -0.38830581, -0.52323836],
           [-0.94302845, -0.94302845, -0.94302845,  ..., -0.70314842,
            -0.34332830, -0.38830581],
           [-0.98800600, -1.00299859, -1.00299859,  ..., -0.89805096,
            -0.52323836, -0.31334329]]],


         [[[-1.03650784, -1.00476182, -0.75079364,  ..., -0.68730158,
            -0.90952379, -1.62380958],
           [-0.44920623, -0.95714283, -0.67142856,  ..., -0.32222211,
            -0.65555555, -1.62380958],
           [-0.09999990, -0.92539680, -0.63968253,  ..., -0.22698402,
            -0.57619047, -1.63968253],
           ...,
           [-0.27460307, -0.29047608, -0.33809513,  ..., -0.87777776,
            -0.51269841, -0.48095238],
           [-0.30634910, -0.30634910, -0.33809513,  ..., -1.09999990,
            -0.65555555, -0.49682540],
           [-0.40158719, -0.40158719, -0.41746020,  ..., -1.29047608,
            -0.87777776, -0.62380952]],

          [[-1.62640905, -1.72302747, -1.65861523,  ..., -1.49758446,
            -1.57809973, -1.75523353],
           [-1.38486302, -1.77133656, -1.61030602,  ..., -1.35265696,
            -1.49758446, -1.75523353],
           [-1.09500802, -1.80354273, -1.62640905,  ..., -1.22383249,
            -1.40096617, -1.75523353],
           ...,
           [-1.25603855, -1.25603855, -1.28824472,  ..., -0.72463763,
            -0.43478248, -0.51529789],
           [-1.28824472, -1.25603855, -1.28824472,  ..., -0.88566822,
            -0.48309177, -0.45088565],
           [-1.33655393, -1.33655393, -1.33655393,  ..., -1.12721407,
            -0.67632848, -0.46698871]],

          [[-1.48275876, -1.52773619, -1.49775124,  ..., -1.28785622,
            -1.34782624, -1.42278874],
           [-1.15292358, -1.55772126, -1.54272878,  ..., -1.12293863,
            -1.19790113, -1.42278874],
           [-0.89805096, -1.54272878, -1.51274371,  ..., -1.06296861,
            -1.13793111, -1.43778121],
           ...,
           [-0.94302845, -0.94302845, -0.95802099,  ..., -0.61319339,
            -0.38830581, -0.52323836],
           [-0.94302845, -0.94302845, -0.94302845,  ..., -0.70314842,
            -0.34332830, -0.38830581],
           [-0.98800600, -1.00299859, -1.00299859,  ..., -0.89805096,
            -0.52323836, -0.31334329]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0795 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 114, vnnlib ID: 114 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-40.37849426, -48.06168365, -46.43873596, -48.18737793, -47.35545731,
         -48.80440903, -48.77029037, -50.34968948, -45.60599518, -49.02916336]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1020]; unstable size 1020; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 369, 1, 1020] with unstable size 368 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 37, 1, 1020] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1020] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [368]; unstable size 368; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 37, 1, 368] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 368] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [36]; unstable size 36; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.47820234, 3.30120468, 4.71228170, 3.64380074, 4.93468714, 4.76257133,
         6.26138973, 1.85553885, 6.12054253]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0720 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 115, vnnlib ID: 115 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.18097305, -36.36007309, -29.96425629, -30.33740044, -26.49205399,
         -30.74475670, -30.53276253, -29.69615555, -34.33631516, -34.87545013]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [888]; unstable size 888; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 397, 1, 888] with unstable size 396 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 49, 1, 888] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 888] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [396]; unstable size 396; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 49, 1, 396] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 396] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [48]; unstable size 48; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 48] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.96814537e-04,  4.09922695e+00, -4.65270042e-01,  7.42125154e-01,
          8.97556067e-01, -3.39796305e-01, -1.70336246e-01,  2.69426918e+00,
          2.72792840e+00]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-31.18097305, -36.36007309, -29.96425629, -30.33740044, -26.49205399,
         -30.74475670, -30.53276253, -29.69615555, -34.33631516, -34.87545013]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.24it/s]100%|██████████| 1/1 [00:00<00:00,  8.23it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.54007721, -36.68579483, -30.40531731, -30.66004562, -26.93367386,
          -30.96446037, -31.33719826, -29.20055771, -34.76789093, -34.95163345],
         [-31.54007721, -36.68579483, -30.40531731, -30.66004562, -26.93367386,
          -30.96446037, -31.33719826, -29.20055771, -34.76789093, -34.95163345]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[4.60640335, 3.47164345, 4.40352440, 2.26688385]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1247 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.317800521850586
alpha/beta optimization time: 1.3068201541900635
initial alpha-crown bounds: tensor([[ 0.35469931,  4.49001694, -0.20074654,  1.03091383,  1.14652658,
          0.21336246,  0.07381868,  3.09366941,  3.11553979]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.2007465362548828
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.49896836280823
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.49892663955688
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.49889755249023
Verifying property 2 with 1 instances.
##### Instance 115 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.20074654]], device='cuda:0') need to verify.
Model prediction is: tensor([-31.18097305, -36.36007309, -29.96425629, -30.33740044, -26.49205399,
        -30.74475670, -30.53276253, -29.69615555, -34.33631516, -34.87545013],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.20074654]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 888
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 387
Node /15 input 0: size torch.Size([100]) unstable 48
-----------------
# of unstable neurons: 1323
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011014938354492188
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20073938369750977
10 lb beta sum: 0.0, worst -0.20076704025268555
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0566    transfer 0.0001    finalize 0.0002    func 0.0571    
Accumulated time: func 0.0571    prepare 0.0002    bound 0.0566    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] 
split level 1: [/input-12, 66] 
split level 2: [/input-12, 57] 
split level 3: [/input-12, 83] 
split level 4: [/input-12, 7] 
split level 5: [/input-12, 30] 
split level 6: [/input-12, 28] 
split level 7: [/input-12, 62] 
split level 8: [/input-12, 48] 
split level 9: [/input-12, 38] 
split level 10: [/input-12, 65] 
split level 11: [/input-12, 56] 
split level 12: [/input-12, 33] 
split level 13: [/input-12, 90] 
split level 14: [/input-12, 1] 
split level 15: [/input-12, 50] 
split level 16: [/input-12, 76] 
split level 17: [/input-12, 97] 
split level 18: [/input-12, 85] 
split level 19: [/input-8, 1572] 
split level 20: [/input-12, 84] 
split level 21: [/input-12, 87] 
split level 22: [/input-12, 46] 
split level 23: [/input-12, 16] 
split level 24: [/input-8, 1883] 
split level 25: [/input-12, 75] 
split level 26: [/input-12, 47] 
split level 27: [/input-8, 537] 
split level 28: [/input-8, 555] 
split level 29: [/input-8, 1564] 
split level 30: [/input-12, 45] 
split level 31: [/input-8, 763] 
split level 32: [/input-8, 1315] 
split level 33: [/input-12, 25] 
split level 34: [/input-12, 6] 
split level 35: [/input-8, 549] 
split level 36: [/input-8, 1931] 
split level 37: [/input-12, 20] 
split level 38: [/input-8, 1574] 
split level 39: [/input-8, 1565] 
split level 40: [/input-8, 1300] 
split level 41: [/input-8, 1556] 
split level 42: [/input-8, 544] 
split level 43: [/input-8, 1930] 
split level 44: [/input-8, 340] 
split level 45: [/input-8, 1937] 
split level 46: [/input-8, 1566] 
split level 47: [/input-8, 1598] 
split level 48: [/input-8, 1548] 
split level 49: [/input-8, 1323] 
split level 50: [/input-8, 762] 
split level 51: [/input-8, 501] 
split level 52: [/input-8, 1589] 
split level 53: [/input-8, 1558] 
split level 54: [/input-8, 1549] 
split level 55: [/input-8, 660] 
split level 56: [/input-8, 939] 
split level 57: [/input-8, 1581] 
split level 58: [/input-8, 1953] 
split level 59: [/input-8, 1550] 
split level 60: [/input-8, 301] 
split level 61: [/input-8, 401] 
split level 62: [/input-8, 730] 
split level 63: [/input-8, 1545] 
split level 64: [/input-8, 1293] 
split level 65: [/input-8, 1941] 
split level 66: [/input-8, 662] 
split level 67: [/input-8, 1573] 
split level 68: [/input-8, 1557] 
split level 69: [/input-8, 658] 
split level 70: [/input-8, 402] 
split level 71: [/input-8, 1597] 
split level 72: [/input-8, 979] 
split level 73: [/input-8, 1546] 
split level 74: [/input-8, 1307] 
split level 75: [/input-8, 557] 
split level 76: [/input-8, 1036] 
split level 77: [/input-8, 765] 
split level 78: [/input-8, 414] 
split level 79: [/input-8, 1760] 
split level 80: [/input-8, 1874] 
split level 81: [/input-8, 300] 
split level 82: [/input-8, 567] 
split level 83: [/input, 3268] 
split level 84: [/input-8, 699] 
split level 85: [/input-8, 1590] 
split level 86: [/input-8, 1547] 
split level 87: [/input-8, 1594] 
split level 88: [/input-8, 1001] 
split level 89: [/input-8, 940] 
split level 90: [/input-8, 883] 
split level 91: [/input-8, 1914] 
split level 92: [/input-8, 552] 
split level 93: [/input-8, 1583] 
split level 94: [/input-8, 398] 
split level 95: [/input-8, 571] 
split level 96: [/input-8, 569] 
split level 97: [/input-8, 1037] 
split level 98: [/input-8, 308] 
split level 99: [/input-8, 403] 
split level 100: [/input-8, 1869] 
split level 101: [/input, 2438] 
split level 102: [/input-8, 329] 
split level 103: [/input-8, 508] 
split level 104: [/input-8, 1042] 
split level 105: [/input-8, 406] 
split level 106: [/input-8, 339] 
split level 107: [/input-8, 165] 
split level 108: [/input-8, 1004] 
split level 109: [/input-8, 1843] 
split level 110: [/input-8, 1761] 
split level 111: [/input-8, 1913] 
split level 112: [/input-8, 496] 
split level 113: [/input-8, 1770] 
split level 114: [/input-8, 1878] 
split level 115: [/input-8, 1907] 
split level 116: [/input-8, 865] 
split level 117: [/input-8, 600] 
split level 118: [/input-8, 1624] 
split level 119: [/input-8, 1111] 
split level 120: [/input-8, 1917] 
split level 121: [/input-8, 1845] 
split level 122: [/input-8, 307] 
split level 123: [/input-8, 1339] 
split level 124: [/input-8, 1134] 
split level 125: [/input, 3271] 
split level 126: [/input, 2030] 
split level 127: [/input, 2424] 
split level 128: [/input-8, 1916] 
split level 129: [/input-8, 1828] 
split level 130: [/input-8, 488] 
split level 131: [/input-8, 1428] 
split level 132: [/input-8, 1915] 
split level 133: [/input, 2423] 
split level 134: [/input-8, 506] 
split level 135: [/input-8, 592] 
split level 136: [/input-8, 755] 
split level 137: [/input-8, 299] 
split level 138: [/input-8, 1554] 
split level 139: [/input-8, 1003] 
split level 140: [/input-8, 738] 
split level 141: [/input-8, 1895] 
split level 142: [/input-8, 1753] 
split level 143: [/input-8, 1853] 
split level 144: [/input-8, 173] 
split level 145: [/input-8, 754] 
split level 146: [/input-8, 1949] 
split level 147: [/input-8, 1918] 
split level 148: [/input-8, 917] 
split level 149: [/input-8, 394] 
split level 150: [/input-8, 423] 
split level 151: [/input-8, 330] 
split level 152: [/input, 3205] 
split level 153: [/input, 3235] 
split level 154: [/input-12, 44] 
split level 155: [/input-8, 395] 
split level 156: [/input, 4030] 
split level 157: [/input-8, 1046] 
split level 158: [/input-8, 1591] 
split level 159: [/input-8, 1006] 
split level 160: [/input-8, 1762] 
split level 161: [/input, 2196] 
split level 162: [/input-8, 1064] 
split level 163: [/input-8, 1906] 
split level 164: [/input-8, 1942] 
split level 165: [/input-8, 1035] 
split level 166: [/input-8, 1038] 
split level 167: [/input, 3286] 
split level 168: [/input, 3961] 
split level 169: [/input-8, 302] 
split level 170: [/input-8, 1584] 
split level 171: [/input-8, 1531] 
split level 172: [/input-8, 3] 
split level 173: [/input, 1669] 
split level 174: [/input, 2436] 
split level 175: [/input-8, 886] 
split level 176: [/input-8, 34] 
split level 177: [/input, 2789] 
split level 178: [/input-8, 393] 
split level 179: [/input, 3016] 
split level 180: [/input-8, 909] 
split level 181: [/input-8, 1502] 
split level 182: [/input, 1717] 
split level 183: [/input-12, 4] 
split level 184: [/input, 1262] 
split level 185: [/input, 3234] 
split level 186: [/input-8, 657] 
split level 187: [/input, 2459] 
split level 188: [/input-8, 390] 
split level 189: [/input, 152] 
split level 190: [/input, 3303] 
split level 191: [/input, 2014] 
split level 192: [/input, 1651] 
split level 193: [/input, 189] 
split level 194: [/input-8, 710] 
split level 195: [/input, 1685] 
split level 196: [/input-8, 311] 
split level 197: [/input-8, 999] 
split level 198: [/input, 1850] 
split level 199: [/input, 3703] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20040345191955566
10 lb beta sum: 0.0, worst -0.20036554336547852
Time: prepare 0.0115    bound 0.1066    transfer 0.0027    finalize 0.0034    func 0.1271    
Accumulated time: func 0.1842    prepare 0.0220    bound 0.1632    transfer 0.0028    finalize 0.0035    
all_split False
======================Cut inference begins======================
max lb tensor(0.43503141) min lb tensor(-0.20034862)
Number of Verified Splits: 20 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.012970924377441406 
BICCOS Cumulative time: 0.012970924377441406
Preprocessing time: 0.01120138168334961 Inference time: 0.0008258819580078125 Add cuts time: 0.00028586387634277344 Cut analysis time: 0.0006577968597412109
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.5554    set_bounds 0.0100    solve 0.1272    add 0.0106    
Accumulated time: pickout 0.0004    decision 0.5554    set_bounds 0.0100    solve 0.1272    add 0.0106    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 92] 
split level 1: [/input-12, 66] 
split level 2: [/input-12, 57] 
split level 3: [/input-12, 83] 
split level 4: [/input-12, 7] 
split level 5: [/input-12, 30] 
split level 6: [/input-12, 28] 
split level 7: [/input-12, 38] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 1.1707897186279297

all verified at 0th iter
Time: prepare 0.0036    bound 0.0046    transfer 0.0011    finalize 0.0014    func 0.0124    
Accumulated time: func 0.1966    prepare 0.0260    bound 0.1678    transfer 0.0039    finalize 0.0049    
all_split False
======================Cut inference begins======================
max lb tensor(2.41234922) min lb tensor(1.17078972)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006543874740600586 
BICCOS Cumulative time: 0.019514799118041992
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0005    decision 0.0230    set_bounds 0.0167    solve 0.0125    add 0.0002    
Accumulated time: pickout 0.0008    decision 0.5785    set_bounds 0.0267    solve 0.1397    add 0.0108    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.8598179817199707


Properties batch 3, size 1
Remaining timeout: 197.42546796798706
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.4253945350647
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.42536973953247
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.4253466129303
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.42532515525818
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.42530417442322
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.5748 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 116, vnnlib ID: 116 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.30760193, -31.18958664, -29.02054596, -27.11536217, -30.09484100,
         -26.24306107, -29.70987892, -27.33143234, -29.57893562, -29.35738182]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [892]; unstable size 892; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 349, 1, 892] with unstable size 348 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 42, 1, 892] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 892] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [348]; unstable size 348; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 42, 1, 348] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 348] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [41]; unstable size 41; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.85731268,  1.57847881, -0.58461750, -0.39101756,  0.82856429,
          0.85973310, -1.71389437,  0.29277706, -0.58711529]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.30760193, -31.18958664, -29.02054596, -27.11536217, -30.09484100,
         -26.24306107, -29.70987892, -27.33143234, -29.57893562, -29.35738182]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.21it/s]100%|██████████| 1/1 [00:00<00:00,  8.21it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.22496986, -30.12598991, -28.32921600, -26.81311226, -29.38970947,
          -26.11163712, -29.25878525, -26.16944504, -28.64667320, -28.07493401],
         [-31.22496986, -30.12598991, -28.32921600, -26.81311226, -29.38970947,
          -26.11163712, -29.25878525, -26.16944504, -28.64667320, -28.07493401]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.21757889, 0.70147514, 0.05780792, 1.96329689]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1252 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 5.16057014465332
alpha/beta optimization time: 1.3216204643249512
initial alpha-crown bounds: tensor([[ 3.07061124,  1.84809780, -0.28971148, -0.28264219,  1.01895201,
          1.05916107, -1.51914310,  0.55407596, -0.29883099]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 4 ; Worst class: (+ rhs) -1.5191431045532227
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.48208689689636
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.48204350471497
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.48201870918274
Verifying property 2 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.28971148]], device='cuda:0') need to verify.
Model prediction is: tensor([-32.30760193, -31.18958664, -29.02054596, -27.11536217, -30.09484100,
        -26.24306107, -29.70987892, -27.33143234, -29.57893562, -29.35738182],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.28971148]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 892
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 340
Node /15 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1273
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011205673217773438
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 66] 
split level 1: [/input-12, 92] 
split level 2: [/input-12, 57] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 62] 
split level 5: [/input-12, 8] 
split level 6: [/input-12, 48] 
split level 7: [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.839999258518219

all verified at 0th iter
Time: prepare 0.0019    bound 0.0045    transfer 0.0010    finalize 0.0015    func 0.0106    
Accumulated time: func 0.0106    prepare 0.0023    bound 0.0045    transfer 0.0010    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(2.19620132) min lb tensor(0.83999926)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.007021665573120117 
BICCOS Cumulative time: 0.007021665573120117
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0163    solve 0.0107    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0163    solve 0.0107    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06335330009460449


Properties batch 3, size 1
Remaining timeout: 198.21276688575745
Verifying property 3 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.28264219]], device='cuda:0') need to verify.
Model prediction is: tensor([-32.30760193, -31.18958664, -29.02054596, -27.11536217, -30.09484100,
        -26.24306107, -29.70987892, -27.33143234, -29.57893562, -29.35738182],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.28264219]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 892
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 340
Node /15 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1273
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.000102996826171875
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 68] 
split level 1: [/input-12, 49] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 33] 
split level 4: [/input-12, 89] 
split level 5: [/input-12, 92] 
split level 6: [/input-12, 56] 
split level 7: [/input-12, 48] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.0014840513467788696

all verified at 0th iter
Time: prepare 0.0019    bound 0.0044    transfer 0.0005    finalize 0.0015    func 0.0102    
Accumulated time: func 0.0102    prepare 0.0023    bound 0.0044    transfer 0.0005    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(0.48447251) min lb tensor(0.00148405)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.0070421695709228516 
BICCOS Cumulative time: 0.0070421695709228516
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0243    set_bounds 0.0168    solve 0.0103    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0243    set_bounds 0.0168    solve 0.0103    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06392788887023926


Properties batch 4, size 1
Remaining timeout: 197.96901988983154
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.96894717216492
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.9689221382141
Verifying property 6 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.51914310]], device='cuda:0') need to verify.
Model prediction is: tensor([-32.30760193, -31.18958664, -29.02054596, -27.11536217, -30.09484100,
        -26.24306107, -29.70987892, -27.33143234, -29.57893562, -29.35738182],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.51914310]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 892
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 340
Node /15 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 1273
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010061264038085938
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 40] 
split level 1: [/input-12, 73] 
split level 2: [/input-12, 94] 
split level 3: [/input-12, 54] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 49] 
split level 6: [/input-12, 8] 
split level 7: [/input-12, 92] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6394829750061035
10 lb beta sum: 0.0, worst -0.6373255252838135
Time: prepare 0.0019    bound 0.1005    transfer 0.0020    finalize 0.0014    func 0.1076    
Accumulated time: func 0.1076    prepare 0.0023    bound 0.1005    transfer 0.0020    finalize 0.0014    
all_split False
======================Cut inference begins======================
max lb tensor(1.23344302) min lb tensor(-0.63627481)
Number of Verified Splits: 225 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.5191388130187988
10 lb beta sum: 0.0, worst -1.5191500186920166
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 2
#cuts 4-6: 20
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.21818041801452637 
BICCOS Cumulative time: 0.21818041801452637
Preprocessing time: 0.00678253173828125 Inference time: 0.20525574684143066 Add cuts time: 0.004705905914306641 Cut analysis time: 0.0014362335205078125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.63627 (8), -0.61962 (8), -0.53456 (8), -0.51318 (8), -0.51239 (8), -0.47484 (8), -0.47340 (8), -0.47091 (8), -0.40502 (8), -0.39366 (8), -0.36824 (8), -0.36781 (8), -0.36608 (8), -0.36452 (8), -0.33990 (8), -0.32420 (8), -0.32057 (8), -0.30172 (8), -0.27243 (8), -0.26473 (8), 
Length of domains: 31
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0165    solve 0.1077    add 0.0023    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0165    solve 0.1077    add 0.0023    
Current (lb-rhs): -0.6362748146057129
31 domains visited
Cumulative time: 0.3736271858215332

BaB round 2
batch: 31
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-8, 1236] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
split level 1: [/input-8, 1236] [/input-8, 1236] [/input-8, 1236] [/input-12, 77] [/input-8, 1236] [/input-12, 77] [/input-8, 228] [/input-12, 77] [/input-12, 77] [/input-8, 1236] 
split level 2: [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-8, 501] [/input-12, 77] [/input-8, 1421] [/input-8, 1381] [/input-8, 995] [/input-8, 995] [/input-12, 77] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5970187187194824
10 lb beta sum: 0.0, worst -0.595961332321167
Time: prepare 0.0050    bound 0.1222    transfer 0.0013    finalize 0.0015    func 0.1317    
Accumulated time: func 0.2393    prepare 0.0075    bound 0.2228    transfer 0.0033    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.35307264) min lb tensor(-0.59547901)
Number of Verified Splits: 93 of 248
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3940768241882324
10 lb beta sum: 0.21527640521526337, worst -1.029369831085205
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 2
#cuts 4-6: 20
#cuts 7-9: 18
#cuts >= 20: 0
BICCOS time: 0.18944692611694336 
BICCOS Cumulative time: 0.4076273441314697
Preprocessing time: 0.007421970367431641 Inference time: 0.17495131492614746 Add cuts time: 0.0049898624420166016 Cut analysis time: 0.0020837783813476562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.59548 (11), -0.59221 (11), -0.58258 (11), -0.55177 (11), -0.49826 (11), -0.47341 (11), -0.47304 (11), -0.47021 (11), -0.46973 (11), -0.46885 (11), -0.46033 (11), -0.45679 (11), -0.45152 (11), -0.44635 (11), -0.43887 (11), -0.43803 (11), -0.43368 (11), -0.42486 (11), -0.41742 (11), -0.41411 (11), 
Length of domains: 155
Time: pickout 0.0015    decision 0.0161    set_bounds 0.0108    solve 0.1317    add 0.0208    
Accumulated time: pickout 0.0019    decision 0.0396    set_bounds 0.0273    solve 0.2394    add 0.0230    
Current (lb-rhs): -0.5954790115356445
186 domains visited
Cumulative time: 0.7447137832641602

BaB round 3
batch: 155
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1421] [/input-8, 1421] [/input-8, 538] [/input-8, 538] [/input-8, 538] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1565] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5899889469146729
10 lb beta sum: 0.0, worst -0.5894546508789062
Time: prepare 0.0061    bound 0.1491    transfer 0.0006    finalize 0.0017    func 0.1599    
Accumulated time: func 0.3992    prepare 0.0138    bound 0.3718    transfer 0.0040    finalize 0.0046    
all_split False
======================Cut inference begins======================
max lb tensor(0.09581542) min lb tensor(-0.58926249)
Number of Verified Splits: 42 of 310
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 4
#cuts 4-6: 20
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.017730712890625 
BICCOS Cumulative time: 0.4253580570220947
Preprocessing time: 0.009417057037353516 Inference time: 0.0040340423583984375 Add cuts time: 0.0029397010803222656 Cut analysis time: 0.0013399124145507812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.58926 (12), -0.58545 (12), -0.57263 (12), -0.56478 (12), -0.56273 (12), -0.56100 (12), -0.54150 (12), -0.52972 (12), -0.48929 (12), -0.46717 (12), -0.46594 (12), -0.46319 (12), -0.46288 (12), -0.45922 (12), -0.45524 (12), -0.45123 (12), -0.45037 (12), -0.44668 (12), -0.44556 (12), -0.44445 (12), 
Length of domains: 268
Time: pickout 0.0027    decision 0.0200    set_bounds 0.0082    solve 0.1600    add 0.0126    
Accumulated time: pickout 0.0045    decision 0.0597    set_bounds 0.0354    solve 0.3994    add 0.0357    
Current (lb-rhs): -0.5892624855041504
454 domains visited
Cumulative time: 0.9665682315826416

BaB round 4
batch: 268
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1419] [/input-8, 501] [/input-8, 1421] [/input-8, 1236] [/input-8, 1236] [/input-8, 2028] [/input-8, 1381] [/input-8, 2028] [/input-8, 538] [/input-8, 538] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5860538482666016
10 lb beta sum: 0.028372343629598618, worst -0.585848331451416
Time: prepare 0.0107    bound 0.1327    transfer 0.0025    finalize 0.0024    func 0.1518    
Accumulated time: func 0.5510    prepare 0.0247    bound 0.5045    transfer 0.0065    finalize 0.0070    
all_split False
======================Cut inference begins======================
max lb tensor(0.35558656) min lb tensor(-0.58570170)
Number of Verified Splits: 69 of 536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 6
#cuts 4-6: 23
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.029101133346557617 
BICCOS Cumulative time: 0.45445919036865234
Preprocessing time: 0.01623678207397461 Inference time: 0.007512092590332031 Add cuts time: 0.003789186477661133 Cut analysis time: 0.0015630722045898438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.58570 (13), -0.58196 (13), -0.56257 (13), -0.56108 (13), -0.55878 (13), -0.55870 (13), -0.55076 (13), -0.54691 (13), -0.53095 (13), -0.52829 (13), -0.52729 (13), -0.52354 (13), -0.51900 (13), -0.51639 (13), -0.50279 (13), -0.50044 (13), -0.48344 (13), -0.46160 (13), -0.45725 (13), -0.45520 (13), 
Length of domains: 467
Time: pickout 0.0037    decision 0.0241    set_bounds 0.0141    solve 0.1519    add 0.0286    
Accumulated time: pickout 0.0082    decision 0.0838    set_bounds 0.0495    solve 0.5513    add 0.0643    
Current (lb-rhs): -0.5857017040252686
921 domains visited
Cumulative time: 1.2190728187561035

BaB round 5
batch: 467
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1868] [/input-8, 1419] [/input-8, 1419] [/input-8, 1419] [/input-8, 1421] [/input-8, 501] [/input-8, 1320] [/input-8, 1381] [/input-8, 1421] [/input-8, 2028] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5820412635803223
10 lb beta sum: 0.054245475679636, worst -0.5817961692810059
Time: prepare 0.0187    bound 0.1494    transfer 0.0049    finalize 0.0041    func 0.1832    
Accumulated time: func 0.7342    prepare 0.0435    bound 0.6539    transfer 0.0114    finalize 0.0111    
all_split False
======================Cut inference begins======================
max lb tensor(0.30887413) min lb tensor(-0.58164454)
Number of Verified Splits: 119 of 934
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 7
#cuts 4-6: 29
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.04792475700378418 
BICCOS Cumulative time: 0.5023839473724365
Preprocessing time: 0.029052019119262695 Inference time: 0.012814760208129883 Add cuts time: 0.004277706146240234 Cut analysis time: 0.0017802715301513672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.58164 (14), -0.57801 (14), -0.55706 (14), -0.55694 (14), -0.55477 (14), -0.55387 (14), -0.55320 (14), -0.55001 (14), -0.54960 (14), -0.54576 (14), -0.54155 (14), -0.53865 (14), -0.53774 (14), -0.53483 (14), -0.53170 (14), -0.52950 (14), -0.52226 (14), -0.51964 (14), -0.51803 (14), -0.51543 (14), 
Length of domains: 815
Time: pickout 0.0073    decision 0.0379    set_bounds 0.0261    solve 0.1839    add 0.1210    
Accumulated time: pickout 0.0156    decision 0.1217    set_bounds 0.0756    solve 0.7353    add 0.1852    
Current (lb-rhs): -0.5816445350646973
1736 domains visited
Cumulative time: 1.6538853645324707

BaB round 6
batch: 815
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 501] [/input-8, 228] [/input-8, 1381] [/input-8, 1978] [/input-8, 1978] [/input-8, 1704] [/input-8, 1320] [/input-8, 546] [/input-8, 1419] [/input-8, 1978] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5750942230224609
10 lb beta sum: 0.17896994948387146, worst -0.5718594789505005
Time: prepare 0.0325    bound 0.1672    transfer 0.0072    finalize 0.0105    func 0.2279    
Accumulated time: func 0.9621    prepare 0.0763    bound 0.8210    transfer 0.0187    finalize 0.0216    
all_split False
======================Cut inference begins======================
max lb tensor(0.31907302) min lb tensor(-0.57177097)
Number of Verified Splits: 89 of 1630
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 8
#cuts 4-6: 24
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.06770181655883789 
BICCOS Cumulative time: 0.5700857639312744
Preprocessing time: 0.05225968360900879 Inference time: 0.010194778442382812 Add cuts time: 0.0033872127532958984 Cut analysis time: 0.0018601417541503906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.57177 (15), -0.56821 (15), -0.55281 (15), -0.55018 (15), -0.54924 (15), -0.54734 (15), -0.54632 (15), -0.54608 (15), -0.54595 (15), -0.54507 (15), -0.54244 (15), -0.54208 (15), -0.53790 (15), -0.53500 (15), -0.53404 (15), -0.53119 (15), -0.52847 (15), -0.52729 (15), -0.52618 (15), -0.52371 (15), 
Length of domains: 1541
Time: pickout 0.0269    decision 0.0605    set_bounds 0.0439    solve 0.2282    add 0.0133    
Accumulated time: pickout 0.0425    decision 0.1822    set_bounds 0.1195    solve 0.9634    add 0.1985    
Current (lb-rhs): -0.571770966053009
3277 domains visited
Cumulative time: 2.0968072414398193

BaB round 7
batch: 1541
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 992] [/input-8, 2028] [/input-8, 1475] [/input-8, 1939] [/input-8, 2028] [/input-8, 1419] [/input-8, 1931] [/input-8, 2028] [/input-8, 1421] [/input-8, 1237] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5643692016601562
10 lb beta sum: 0.17552918195724487, worst -0.5610789656639099
Time: prepare 0.0711    bound 0.2422    transfer 0.0141    finalize 0.0196    func 0.3673    
Accumulated time: func 1.3294    prepare 0.1477    bound 1.0632    transfer 0.0328    finalize 0.0411    
all_split False
======================Cut inference begins======================
max lb tensor(0.32281619) min lb tensor(-0.56103426)
Number of Verified Splits: 171 of 3082
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 50.
#cuts 1-3: 9
#cuts 4-6: 31
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.1280813217163086 
BICCOS Cumulative time: 0.698167085647583
Preprocessing time: 0.0964059829711914 Inference time: 0.02305889129638672 Add cuts time: 0.006270647048950195 Cut analysis time: 0.0023458003997802734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.56103 (16), -0.56067 (16), -0.55751 (16), -0.55716 (16), -0.54648 (16), -0.54264 (16), -0.54226 (16), -0.54144 (16), -0.54121 (16), -0.54107 (16), -0.53842 (16), -0.53793 (16), -0.53757 (16), -0.53755 (16), -0.53666 (16), -0.53631 (16), -0.53442 (16), -0.53410 (16), -0.53353 (16), -0.53067 (16), 
Length of domains: 2911
Time: pickout 0.0217    decision 0.2632    set_bounds 0.0897    solve 0.3684    add 0.1019    
Accumulated time: pickout 0.0642    decision 0.4454    set_bounds 0.2092    solve 1.3319    add 0.3005    
Current (lb-rhs): -0.5610342621803284
6188 domains visited
Cumulative time: 3.0752146244049072

BaB round 8
batch: 2911
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 546] [/input-8, 555] [/input-8, 2028] [/input-8, 1475] [/input-8, 2028] [/input-8, 1565] [/input-8, 995] [/input-8, 1513] [/input-8, 1517] [/input-8, 426] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5599536895751953
10 lb beta sum: 0.20656804740428925, worst -0.5567013621330261
Time: prepare 0.1345    bound 0.3937    transfer 0.0287    finalize 0.0422    func 0.6394    
Accumulated time: func 1.9688    prepare 0.2824    bound 1.4569    transfer 0.0615    finalize 0.0834    
all_split False
======================Cut inference begins======================
max lb tensor(0.31834352) min lb tensor(-0.55667692)
Number of Verified Splits: 541 of 5822
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 54.
#cuts 1-3: 15
#cuts 4-6: 29
#cuts 7-9: 9
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.4278907775878906 
BICCOS Cumulative time: 1.1260578632354736
Preprocessing time: 0.18082785606384277 Inference time: 0.22841119766235352 Add cuts time: 0.016294240951538086 Cut analysis time: 0.00235748291015625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.55668 (17), -0.55338 (17), -0.55318 (17), -0.54991 (17), -0.54855 (17), -0.54508 (17), -0.53810 (17), -0.53703 (17), -0.53670 (17), -0.53458 (17), -0.53427 (17), -0.53371 (17), -0.53367 (17), -0.53353 (17), -0.53321 (17), -0.53234 (17), -0.53199 (17), -0.53075 (17), -0.53036 (17), -0.53011 (17), 
Length of domains: 5281
Time: pickout 0.0524    decision 0.1753    set_bounds 0.3369    solve 0.6412    add 0.0668    
Accumulated time: pickout 0.1166    decision 0.6207    set_bounds 0.5461    solve 1.9731    add 0.3673    
Current (lb-rhs): -0.5566769242286682
11469 domains visited
Cumulative time: 4.787738561630249

BaB round 9
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1704] [/input-8, 556] [/input-8, 1907] [/input-8, 538] [/input-8, 1868] [/input-8, 1868] [/input-12, 31] [/input-12, 31] [/input-8, 1513] [/input-8, 1517] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5556859970092773
10 lb beta sum: 0.5899902582168579, worst -0.5524343848228455
Time: prepare 0.1820    bound 0.5199    transfer 0.0440    finalize 0.2386    func 1.0390    
Accumulated time: func 3.0078    prepare 0.4648    bound 1.9768    transfer 0.1054    finalize 0.3220    
all_split False
======================Cut inference begins======================
max lb tensor(0.85060722) min lb tensor(-0.55240828)
Number of Verified Splits: 2325 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 56.
#cuts 1-3: 11
#cuts 4-6: 34
#cuts 7-9: 11
#cuts >= 20: 0
BICCOS time: 0.6633353233337402 
BICCOS Cumulative time: 1.7893931865692139
Preprocessing time: 0.2613239288330078 Inference time: 0.3349785804748535 Add cuts time: 0.06437492370605469 Cut analysis time: 0.0026578903198242188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.55338 (17), -0.55241 (18), -0.54991 (17), -0.54608 (18), -0.54414 (18), -0.54113 (18), -0.54070 (18), -0.53458 (17), -0.53371 (17), -0.53199 (17), -0.53075 (17), -0.53011 (17), -0.52978 (17), -0.52738 (18), -0.52652 (17), -0.52586 (18), -0.52559 (18), -0.52526 (18), -0.52506 (18), -0.52353 (18), 
Length of domains: 7052
Time: pickout 0.0611    decision 0.2371    set_bounds 0.2345    solve 1.0406    add 0.0689    
Accumulated time: pickout 0.1777    decision 0.8578    set_bounds 0.7806    solve 3.0137    add 0.4362    
Current (lb-rhs): -0.5533791184425354
17336 domains visited
current_vram/total_varm: 11.8GB/99.9GB, batch_size increase to 8192
Cumulative time: 7.125654220581055

BaB round 10
batch: 7052
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1237] [/input-8, 947] [/input-8, 995] [/input-8, 947] [/input-8, 1565] [/input-8, 556] [/input-8, 1931] [/input-8, 1978] [/input-8, 228] [/input-8, 2028] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5708847045898438
10 lb beta sum: 0.7304734587669373, worst -0.5448640584945679
Time: prepare 0.3074    bound 0.8436    transfer 0.0808    finalize 0.0997    func 1.4266    
Accumulated time: func 4.4343    prepare 0.7726    bound 2.8204    transfer 0.1862    finalize 0.4216    
all_split False
======================Cut inference begins======================
max lb tensor(0.95709771) min lb tensor(-0.54482055)
Number of Verified Splits: 6361 of 14104
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 51.
#cuts 1-3: 15
#cuts 4-6: 26
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 1.7660400867462158 
BICCOS Cumulative time: 3.5554332733154297
Preprocessing time: 0.6793272495269775 Inference time: 0.9515783786773682 Add cuts time: 0.13277435302734375 Cut analysis time: 0.002360105514526367
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.54482 (18), -0.54123 (19), -0.53772 (19), -0.53717 (18), -0.53600 (19), -0.53542 (19), -0.53245 (19), -0.53195 (19), -0.52380 (18), -0.52256 (19), -0.52129 (18), -0.52089 (19), -0.52050 (18), -0.52029 (19), -0.51996 (18), -0.51875 (18), -0.51871 (19), -0.51826 (18), -0.51739 (19), -0.51687 (19), 
Length of domains: 7743
Time: pickout 0.1281    decision 0.5753    set_bounds 0.5816    solve 1.4306    add 0.0425    
Accumulated time: pickout 0.3057    decision 1.4330    set_bounds 1.3622    solve 4.4443    add 0.4787    
Current (lb-rhs): -0.5448205471038818
25079 domains visited
Cumulative time: 11.723120212554932

BaB round 11
batch: 7743
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1361] [/input-8, 995] [/input-8, 1868] [/input-8, 497] [/input-8, 992] [/input-8, 556] [/input-8, 1442] [/input-8, 1237] [/input-8, 1320] [/input-8, 1442] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5481429100036621
10 lb beta sum: 0.8548467755317688, worst -0.5406374335289001
Time: prepare 0.3445    bound 0.9170    transfer 0.0602    finalize 0.1021    func 1.5275    
Accumulated time: func 5.9618    prepare 1.1175    bound 3.7374    transfer 0.2464    finalize 0.5238    
all_split False
======================Cut inference begins======================
max lb tensor(0.90938663) min lb tensor(-0.54061776)
Number of Verified Splits: 7534 of 15486
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 66.
#cuts 1-3: 19
#cuts 4-6: 33
#cuts 7-9: 14
#cuts >= 20: 0
BICCOS time: 2.054309606552124 
BICCOS Cumulative time: 5.609742879867554
Preprocessing time: 0.5108437538146973 Inference time: 1.4170587062835693 Add cuts time: 0.1237034797668457 Cut analysis time: 0.0027036666870117188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.54062 (19), -0.53712 (19), -0.53700 (20), -0.53352 (20), -0.53187 (20), -0.53142 (20), -0.52838 (20), -0.52794 (20), -0.52256 (20), -0.51897 (19), -0.51871 (20), -0.51643 (20), -0.51631 (19), -0.51589 (20), -0.51513 (19), -0.51411 (19), -0.51322 (20), -0.51294 (20), -0.51267 (20), -0.51240 (20), 
Length of domains: 7952
Time: pickout 0.1451    decision 0.6478    set_bounds 0.6561    solve 1.5312    add 0.0446    
Accumulated time: pickout 0.4508    decision 2.0808    set_bounds 2.0182    solve 5.9755    add 0.5233    
Current (lb-rhs): -0.5406177639961243
33031 domains visited
Cumulative time: 16.89245915412903

BaB round 12
batch: 7952
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1071] [/input, 1222] [/input-8, 1868] [/input-8, 1517] [/input-8, 1704] [/input-8, 1868] [/input-8, 556] [/input-8, 497] [/input-8, 1442] [/input-8, 499] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6540954113006592
10 lb beta sum: 0.8678909540176392, worst -0.5364264845848083
Time: prepare 0.5991    bound 0.9440    transfer 0.0672    finalize 0.1024    func 1.8188    
Accumulated time: func 7.7807    prepare 1.7170    bound 4.6814    transfer 0.3136    finalize 0.6262    
all_split False
======================Cut inference begins======================
max lb tensor(0.86726856) min lb tensor(-0.53641498)
Number of Verified Splits: 3376 of 15904
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 83.
#cuts 1-3: 20
#cuts 4-6: 44
#cuts 7-9: 19
#cuts >= 20: 0
BICCOS time: 1.4686424732208252 
BICCOS Cumulative time: 7.078385353088379
Preprocessing time: 0.525580644607544 Inference time: 0.8166744709014893 Add cuts time: 0.12296414375305176 Cut analysis time: 0.0034232139587402344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53641 (20), -0.53293 (20), -0.53196 (21), -0.52849 (21), -0.52639 (21), -0.52582 (21), -0.52292 (21), -0.52237 (21), -0.51897 (20), -0.51732 (21), -0.51513 (20), -0.51347 (21), -0.51187 (20), -0.51122 (21), -0.51023 (21), -0.50984 (20), -0.50963 (20), -0.50905 (21), -0.50790 (21), -0.50776 (21), 
Length of domains: 12528
Time: pickout 0.1521    decision 0.4585    set_bounds 0.6719    solve 1.8227    add 0.0751    
Accumulated time: pickout 0.6029    decision 2.5393    set_bounds 2.6901    solve 7.7981    add 0.5983    
Current (lb-rhs): -0.5364149808883667
45559 domains visited
Cumulative time: 21.59465217590332

BaB round 13
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1868] [/input-8, 228] [/input-8, 426] [/input-8, 1978] [/input-8, 228] [/input-8, 1071] [/input-8, 1442] [/input-8, 426] [/input-8, 44] [/input-8, 1704] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5385522842407227
10 lb beta sum: 0.809963583946228, worst -0.530983567237854
Time: prepare 0.3836    bound 1.3599    transfer 0.0594    finalize 0.1308    func 2.3122    
Accumulated time: func 10.0929    prepare 2.1009    bound 6.0413    transfer 0.3730    finalize 0.7570    
all_split False
======================Cut inference begins======================
max lb tensor(0.93723768) min lb tensor(-0.53095680)
Number of Verified Splits: 1536 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 97.
#cuts 1-3: 20
#cuts 4-6: 47
#cuts 7-9: 27
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 0.906963586807251 
BICCOS Cumulative time: 7.98534893989563
Preprocessing time: 0.5499465465545654 Inference time: 0.28716087341308594 Add cuts time: 0.06572222709655762 Cut analysis time: 0.004133939743041992
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53196 (21), -0.53096 (21), -0.52748 (21), -0.52340 (22), -0.51905 (22), -0.51897 (20), -0.51840 (22), -0.51649 (22), -0.51558 (22), -0.51515 (22), -0.51513 (20), -0.51456 (22), -0.51344 (22), -0.51285 (22), -0.51122 (21), -0.51034 (21), -0.51023 (21), -0.50984 (20), -0.50982 (22), -0.50789 (22), 
Length of domains: 19184
Time: pickout 0.1266    decision 0.4676    set_bounds 0.7366    solve 2.3155    add 0.0823    
Accumulated time: pickout 0.7295    decision 3.0069    set_bounds 3.4267    solve 10.1136    add 0.6806    
Current (lb-rhs): -0.5319593548774719
60407 domains visited
current_vram/total_varm: 33.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 26.26866602897644

BaB round 14
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2028] [/input-8, 1932] [/input, 1222] [/input-8, 558] [/input-8, 228] [/input-8, 1071] [/input-8, 490] [/input-8, 1978] [/input-8, 228] [/input-8, 501] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5320565700531006
10 lb beta sum: 0.7696395516395569, worst -0.5244194865226746
Time: prepare 0.7504    bound 2.6830    transfer 0.1578    finalize 0.5229    func 4.3369    
Accumulated time: func 14.4298    prepare 2.8517    bound 8.7242    transfer 0.5307    finalize 1.2799    
all_split False
======================Cut inference begins======================
max lb tensor(1.14556873) min lb tensor(-0.52438885)
Number of Verified Splits: 2691 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 80.
#cuts 1-3: 12
#cuts 4-6: 31
#cuts 7-9: 33
#cuts 10-12: 4
#cuts >= 20: 0
BICCOS time: 2.0835978984832764 
BICCOS Cumulative time: 10.068946838378906
Preprocessing time: 1.4604320526123047 Inference time: 0.5383708477020264 Add cuts time: 0.08073306083679199 Cut analysis time: 0.00406193733215332
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52439 (22), -0.52337 (22), -0.52255 (22), -0.52155 (22), -0.51967 (22), -0.51905 (22), -0.51840 (22), -0.51803 (22), -0.51562 (23), -0.51515 (22), -0.51456 (22), -0.51396 (23), -0.51374 (21), -0.51141 (23), -0.51038 (23), -0.50994 (21), -0.50831 (23), -0.50789 (22), -0.50765 (23), -0.50451 (21), 
Length of domains: 32877
Time: pickout 0.2483    decision 1.7434    set_bounds 1.3177    solve 4.3437    add 0.1306    
Accumulated time: pickout 0.9778    decision 4.7503    set_bounds 4.7444    solve 14.4573    add 0.8112    
Current (lb-rhs): -0.52438884973526
90484 domains visited
current_vram/total_varm: 39.2GB/99.9GB, batch_size increase to 32768
Cumulative time: 36.209819078445435

BaB round 15
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1475] [/input-8, 1923] [/input-8, 2028] [/input-8, 1475] [/input-8, 1932] [/input-8, 426] [/input-8, 1434] [/input-8, 1517] [/input-8, 1421] [/input-8, 416] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5268955230712891
10 lb beta sum: 0.644734263420105, worst -0.5193111300468445
Time: prepare 1.5062    bound 10.4163    transfer 0.3242    finalize 0.5049    func 13.1910    
Accumulated time: func 27.6207    prepare 4.3584    bound 19.1406    transfer 0.8550    finalize 1.7849    
all_split False
======================Cut inference begins======================
max lb tensor(1.20323694) min lb tensor(-0.51929724)
Number of Verified Splits: 14121 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 113.
#cuts 1-3: 13
#cuts 4-6: 31
#cuts 7-9: 52
#cuts 10-12: 17
#cuts >= 20: 0
BICCOS time: 6.498565435409546 
BICCOS Cumulative time: 16.567512273788452
Preprocessing time: 2.845506429672241 Inference time: 3.3164334297180176 Add cuts time: 0.32994890213012695 Cut analysis time: 0.006676673889160156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.51930 (23), -0.51823 (23), -0.51746 (23), -0.51638 (23), -0.51454 (23), -0.51383 (23), -0.51319 (23), -0.51287 (23), -0.51098 (24), -0.51003 (23), -0.50937 (23), -0.50935 (24), -0.50679 (24), -0.50622 (22), -0.50577 (24), -0.50433 (22), -0.50357 (24), -0.50289 (24), -0.50242 (22), -0.50211 (23), 
Length of domains: 51524
Time: pickout 0.4986    decision 3.3742    set_bounds 3.2916    solve 13.2053    add 0.3658    
Accumulated time: pickout 1.4765    decision 8.1245    set_bounds 8.0360    solve 27.6626    add 1.1770    
Current (lb-rhs): -0.5192972421646118
141899 domains visited
Cumulative time: 63.71432065963745

BaB round 16
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1921] [/input-8, 995] [/input-8, 1932] [/input-8, 145] [/input-8, 1978] [/input-8, 1931] [/input-8, 1931] [/input-8, 1565] [/input-8, 1931] [/input-8, 446] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5220925807952881
10 lb beta sum: 0.5945487022399902, worst -0.5147449374198914
Time: prepare 1.5919    bound 8.9820    transfer 0.3108    finalize 0.5688    func 12.6714    
Accumulated time: func 40.2921    prepare 5.9508    bound 28.1226    transfer 1.1658    finalize 2.3536    
all_split False
======================Cut inference begins======================
max lb tensor(1.06207609) min lb tensor(-0.51472360)
Number of Verified Splits: 8261 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 188.
#cuts 1-3: 13
#cuts 4-6: 41
#cuts 7-9: 113
#cuts 10-12: 21
#cuts >= 20: 0
BICCOS time: 5.166604042053223 
BICCOS Cumulative time: 21.734116315841675
Preprocessing time: 2.2453575134277344 Inference time: 2.6480236053466797 Add cuts time: 0.26141834259033203 Cut analysis time: 0.011804580688476562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.51472 (24), -0.51364 (24), -0.51291 (24), -0.51183 (24), -0.51098 (24), -0.50989 (24), -0.50935 (24), -0.50924 (24), -0.50854 (24), -0.50825 (24), -0.50679 (24), -0.50577 (24), -0.50525 (24), -0.50457 (24), -0.50357 (24), -0.50289 (24), -0.50084 (24), -0.50041 (23), -0.49976 (24), -0.49906 (24), 
Length of domains: 76031
Time: pickout 0.5285    decision 3.3822    set_bounds 3.2875    solve 12.6860    add 0.2988    
Accumulated time: pickout 2.0050    decision 11.5066    set_bounds 11.3235    solve 40.3486    add 1.4757    
Current (lb-rhs): -0.5147235989570618
199174 domains visited
Cumulative time: 89.27980589866638

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1522] [/input-8, 995] [/input-8, 1565] [/input-8, 1523] [/input-8, 1513] [/input-8, 501] [/input-8, 1978] [/input-8, 1931] [/input-8, 1434] [/input-8, 1565] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5150718688964844
10 lb beta sum: 0.5715501308441162, worst -0.5109736919403076
Time: prepare 1.6209    bound 10.8193    transfer 0.3067    finalize 0.5923    func 13.7898    
Accumulated time: func 54.0819    prepare 7.5723    bound 38.9418    transfer 1.4724    finalize 2.9460    
all_split False
======================Cut inference begins======================
max lb tensor(1.19998026) min lb tensor(-0.51096177)
Number of Verified Splits: 7730 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 205.
#cuts 1-3: 13
#cuts 4-6: 46
#cuts 7-9: 121
#cuts 10-12: 25
#cuts >= 20: 0
BICCOS time: 5.551375150680542 
BICCOS Cumulative time: 27.285491466522217
Preprocessing time: 2.3584961891174316 Inference time: 2.8888161182403564 Add cuts time: 0.29135894775390625 Cut analysis time: 0.012703895568847656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.51472 (24), -0.51364 (24), -0.51291 (24), -0.51183 (24), -0.51096 (25), -0.50989 (24), -0.50933 (25), -0.50924 (24), -0.50854 (24), -0.50825 (24), -0.50678 (25), -0.50576 (25), -0.50525 (24), -0.50457 (24), -0.50356 (25), -0.50289 (25), -0.50052 (25), -0.50041 (23), -0.49976 (24), -0.49880 (25), 
Length of domains: 101069
Time: pickout 0.5554    decision 3.4351    set_bounds 3.9368    solve 13.8055    add 0.2640    
Accumulated time: pickout 2.5605    decision 14.9417    set_bounds 15.2602    solve 54.1541    add 1.7398    
Current (lb-rhs): -0.5147235989570618
256980 domains visited
Cumulative time: 117.02991724014282

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1565] [/input-8, 947] [/input-8, 556] [/input-8, 1565] [/input-8, 416] [/input-8, 1565] [/input-8, 1565] [/input-8, 1973] [/input-8, 749] [/input-12, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5187966823577881
10 lb beta sum: 0.5530781745910645, worst -0.5147395133972168
Time: prepare 1.6121    bound 10.8930    transfer 0.3060    finalize 1.7810    func 15.0372    
Accumulated time: func 69.1191    prepare 9.1850    bound 49.8348    transfer 1.7785    finalize 4.7270    
all_split False
======================Cut inference begins======================
max lb tensor(1.20031214) min lb tensor(-0.51472139)
Number of Verified Splits: 6575 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 230.
#cuts 1-3: 13
#cuts 4-6: 40
#cuts 7-9: 154
#cuts 10-12: 23
#cuts >= 20: 0
BICCOS time: 4.171926259994507 
BICCOS Cumulative time: 31.457417726516724
Preprocessing time: 2.3033440113067627 Inference time: 1.5512628555297852 Add cuts time: 0.301713228225708 Cut analysis time: 0.015606164932250977
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.51472 (25), -0.51363 (25), -0.51291 (25), -0.51182 (25), -0.51096 (25), -0.50989 (24), -0.50933 (25), -0.50923 (25), -0.50853 (25), -0.50824 (25), -0.50678 (25), -0.50576 (25), -0.50524 (25), -0.50457 (25), -0.50356 (25), -0.50289 (25), -0.50052 (25), -0.49943 (25), -0.49880 (25), -0.49874 (23), 
Length of domains: 127262
Time: pickout 0.5817    decision 3.4534    set_bounds 3.2918    solve 15.0514    add 0.3263    
Accumulated time: pickout 3.1422    decision 18.3951    set_bounds 18.5520    solve 69.2055    add 2.0660    
Current (lb-rhs): -0.5147213935852051
315941 domains visited
Cumulative time: 144.07605504989624

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1565] [/input-8, 1421] [/input-8, 1565] [/input-8, 1939] [/input-8, 992] [/input-8, 1565] [/input-8, 1421] [/input-8, 538] [/input-8, 1565] [/input, 3254] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5141115188598633
10 lb beta sum: 0.5481441020965576, worst -0.509878396987915
Time: prepare 1.6347    bound 10.9702    transfer 0.3070    finalize 0.6179    func 13.9760    
Accumulated time: func 83.0951    prepare 10.8204    bound 60.8050    transfer 2.0855    finalize 5.3449    
all_split False
======================Cut inference begins======================
max lb tensor(1.19360864) min lb tensor(-0.50987291)
Number of Verified Splits: 6131 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 248.
#cuts 1-3: 13
#cuts 4-6: 34
#cuts 7-9: 175
#cuts 10-12: 26
#cuts >= 20: 0
BICCOS time: 5.711913108825684 
BICCOS Cumulative time: 37.16933083534241
Preprocessing time: 3.9132988452911377 Inference time: 1.4830925464630127 Add cuts time: 0.2999091148376465 Cut analysis time: 0.015612602233886719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.51472 (25), -0.51363 (25), -0.51291 (25), -0.51182 (25), -0.50987 (25), -0.50923 (25), -0.50853 (25), -0.50824 (25), -0.50707 (26), -0.50543 (26), -0.50524 (25), -0.50457 (25), -0.50289 (26), -0.50185 (26), -0.50052 (25), -0.49965 (26), -0.49943 (25), -0.49896 (26), -0.49567 (25), -0.49492 (26), 
Length of domains: 153899
Time: pickout 0.5702    decision 4.7545    set_bounds 3.6152    solve 13.9946    add 0.2705    
Accumulated time: pickout 3.7124    decision 23.1496    set_bounds 22.1673    solve 83.2001    add 2.3366    
Current (lb-rhs): -0.5147213935852051
375346 domains visited
Cumulative time: 173.2030086517334

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 992] [/input-8, 1932] [/input-8, 1932] [/input-12, 31] [/input-8, 992] [/input-8, 555] [/input-8, 1932] [/input-8, 995] [/input-8, 1973] [/input-8, 538] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.501431941986084
10 lb beta sum: 0.5473686456680298, worst -0.4967007637023926
Time: prepare 1.6582    bound 11.0122    transfer 0.3176    finalize 0.6324    func 14.0713    
Accumulated time: func 97.1665    prepare 12.4791    bound 71.8172    transfer 2.4031    finalize 5.9773    
all_split False
======================Cut inference begins======================
max lb tensor(1.14041376) min lb tensor(-0.49666214)
Number of Verified Splits: 5952 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 268.
#cuts 1-3: 13
#cuts 4-6: 36
#cuts 7-9: 189
#cuts 10-12: 29
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 6.128528833389282 
BICCOS Cumulative time: 43.29785966873169
Preprocessing time: 4.182296991348267 Inference time: 1.4200830459594727 Add cuts time: 0.5086448192596436 Cut analysis time: 0.017503976821899414
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.51472 (25), -0.51363 (25), -0.51291 (25), -0.51182 (25), -0.50987 (25), -0.50923 (25), -0.50853 (25), -0.50824 (25), -0.50707 (26), -0.50543 (26), -0.50524 (25), -0.50457 (25), -0.50289 (26), -0.50185 (26), -0.49965 (26), -0.49943 (25), -0.49896 (26), -0.49666 (26), -0.49567 (25), -0.49492 (26), 
Length of domains: 180715
Time: pickout 0.5967    decision 3.4654    set_bounds 3.8773    solve 14.0918    add 0.3744    
Accumulated time: pickout 4.3091    decision 26.6150    set_bounds 26.0446    solve 97.2919    add 2.7109    
Current (lb-rhs): -0.5147213935852051
434930 domains visited
Time out!!!!!!!!
Result: unknown in 205.8337 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 117, vnnlib ID: 117 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.25326347, -29.20977402, -29.58987045, -29.97468758, -28.55345345,
         -31.44511604, -30.59437943, -32.45557404, -20.50812531, -28.94949722]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [917]; unstable size 917; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 231, 1, 917] with unstable size 230 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 917] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 917] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [230]; unstable size 230; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 230] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 230] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.87786698, 6.47041273, 6.62653828, 7.17542839, 5.43869448, 8.51929665,
         7.15644932, 9.21667862, 6.34052277]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0688 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 118, vnnlib ID: 118 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-39.46544266, -35.47811127, -39.55927658, -40.74520111, -41.27298355,
         -40.62554169, -41.31734848, -41.73611832, -40.20500565, -38.49017715]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [480]; unstable size 480; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 196, 1, 480] with unstable size 195 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 480] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 480] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [195]; unstable size 195; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 195] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 195] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.30169463, 0.89387369, 2.16803360, 2.54538822, 1.30938387, 2.81093144,
         3.08560801, 2.11052084, 1.51796222]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0340 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 119, vnnlib ID: 119 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.08879089, -37.67105865, -32.32824707, -31.45586586, -32.73893738,
         -31.55480766, -32.31782150, -33.92317200, -36.41706467, -35.99126434]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [959]; unstable size 959; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 416, 1, 959] with unstable size 415 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 55, 1, 959] with unstable size 54 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 959] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [415]; unstable size 415; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 55, 1, 415] with unstable size 54 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 415] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [54]; unstable size 54; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 54] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.15075827,  1.22656870, -3.07250738, -2.22848940, -1.62600327,
         -2.15392113, -2.14227748,  0.54833269, -0.60008836]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.08879089, -37.67105865, -32.32824707, -31.45586586, -32.73893738,
         -31.55480766, -32.31782150, -33.92317200, -36.41706467, -35.99126434]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-36.05398560, -37.95402908, -31.79278183, -31.80822945, -32.63161469,
          -31.88327980, -32.26045227, -33.98756409, -36.69334793, -36.43694305],
         [-36.05398560, -37.95402908, -31.79278183, -31.80822945, -32.63161469,
          -31.88327980, -32.26045227, -33.98756409, -36.69334793, -36.43694305]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 4.24575615, -0.01544762,  0.82338524,  0.07505035,  0.45222282,
           2.17933464,  4.62871361]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0079 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0787 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 120, vnnlib ID: 120 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.95593643, -46.73062134, -38.08637238, -37.20905685, -40.00244904,
         -37.52740097, -41.65859604, -39.03739548, -48.47114182, -46.58289337]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1076]; unstable size 1076; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 290, 1, 1076] with unstable size 289 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 1076] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1076] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [289]; unstable size 289; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 289] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 289] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 7.58574390, -1.39961982, -2.16005373,  0.55018377, -2.06429863,
          2.02685308, -0.51411891,  9.05020332,  7.48977375]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.95593643, -46.73062134, -38.08637238, -37.20905685, -40.00244904,
         -37.52740097, -41.65859604, -39.03739548, -48.47114182, -46.58289337]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-37.39047623, -46.78699875, -37.96483994, -36.76320648, -39.82793808,
          -37.09876251, -41.31368256, -38.90514755, -48.55151367, -46.55239868],
         [-37.39047623, -46.78699875, -37.96483994, -36.76320648, -39.82793808,
          -37.09876251, -41.31368256, -38.90514755, -48.55151367, -46.55239868]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.57436371, -0.62726974, -0.29171371,  1.51467133]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0774 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 121, vnnlib ID: 121 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-57.31090546, -48.96634293, -58.28602219, -57.94768906, -56.98797607,
         -58.15250397, -58.44462585, -57.61904144, -58.11084366, -53.30151749]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [865]; unstable size 865; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 364, 1, 865] with unstable size 363 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 51, 1, 865] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 865] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [363]; unstable size 363; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 51, 1, 363] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 363] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [50]; unstable size 50; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 50] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.20123577, 3.20347118, 3.19394302, 2.28108406, 2.80645466, 3.47073936,
         2.88920784, 4.65659571, 0.77266508]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0816 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 122, vnnlib ID: 122 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.39092255, -30.73262978, -36.56036758, -37.76274872, -38.49478912,
         -38.49353027, -38.82635117, -39.11920547, -32.01846313, -35.47493362]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [734]; unstable size 734; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 309, 1, 734] with unstable size 308 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 33, 1, 734] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 734] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [308]; unstable size 308; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 33, 1, 308] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 308] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [32]; unstable size 32; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.76944304,  1.64481688,  3.01821566,  3.04060888,  3.65480042,
          4.12037182,  3.60606050, -1.58790421,  2.04418516]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.39092255, -30.73262978, -36.56036758, -37.76274872, -38.49478912,
         -38.49353027, -38.82635117, -39.11920547, -32.01846313, -35.47493362]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.75087738, -30.10380745, -34.84928513, -36.00105286, -36.75719833,
          -36.77090454, -37.25571060, -37.57455063, -29.98456001, -34.21001434]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.11924744]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0753 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 123, vnnlib ID: 123 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-42.33901978, -48.43099976, -43.57612228, -47.56918716, -47.71840286,
         -47.91885757, -45.65491867, -49.51371765, -43.74153519, -50.38770676]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [580]; unstable size 580; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 332, 1, 580] with unstable size 331 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 39, 1, 580] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 580] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [331]; unstable size 331; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 39, 1, 331] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 331] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [38]; unstable size 38; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-5.01841402,  0.90163326, -3.64324474,  0.10999799, -0.67403603,
         -0.09725285, -1.62785339,  1.14502764,  3.23520708]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-42.33901978, -48.43099976, -43.57612228, -47.56918716, -47.71840286,
         -47.91885757, -45.65491867, -49.51371765, -43.74153519, -50.38770676]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-42.33901215, -48.43099594, -43.57611847, -47.56918335, -47.71840286,
          -47.91885376, -45.65491486, -49.51371384, -43.74153519, -50.38770294],
         [-42.33901215, -48.43099594, -43.57611847, -47.56918335, -47.71840286,
          -47.91885376, -45.65491486, -49.51371384, -43.74153519, -50.38770294]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.40252304, -0.16541672,  3.97686768,  4.17731857,  1.91337967]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-3.53968143e-01, -6.82538673e-02, -3.65078375e-02,  ...,
             1.11112073e-02, -2.11111009e-01, -5.23808524e-02],
           [-1.15872920e-01, -1.47618949e-01, -1.63491964e-01,  ...,
            -5.23808524e-02, -3.69841158e-01, -1.63491964e-01],
           [-2.42857039e-01, -1.15872920e-01, -2.26984024e-01,  ...,
             1.22222304e-01,  2.49206424e-01, -2.42857039e-01],
           ...,
           [ 1.22222304e-01,  4.28572372e-02,  2.65079439e-01,  ...,
            -7.03174591e-01, -2.11111009e-01, -2.26984024e-01],
           [ 1.53968334e-01,  3.76190543e-01, -2.26984024e-01,  ...,
            -4.17460203e-01, -4.80952382e-01, -2.26984024e-01],
           [ 3.44444513e-01,  5.19047678e-01,  3.92063558e-01,  ...,
            -3.65078375e-02, -2.74603069e-01, -2.11111009e-01]],

          [[ 1.61031820e-02,  2.25442946e-01,  2.73752123e-01,  ...,
             4.02576596e-01,  8.05154145e-02,  2.89855182e-01],
           [ 2.41546005e-01,  1.77133769e-01,  1.93236828e-01,  ...,
             3.86473536e-01, -3.22059989e-02,  1.44927651e-01],
           [ 1.12721533e-01,  2.57649064e-01,  1.61030710e-01,  ...,
             4.99194920e-01,  8.21256101e-01,  1.77133769e-01],
           ...,
           [ 7.56843865e-01,  5.79710245e-01,  6.92431629e-01,  ...,
            -3.86473298e-01,  1.61030710e-01,  2.25442946e-01],
           [ 5.95813274e-01,  7.72946954e-01,  2.09339887e-01,  ...,
             8.05154145e-02, -1.77133530e-01,  1.44927651e-01],
           [ 6.28019392e-01,  8.21256101e-01,  8.37359190e-01,  ...,
             5.31401038e-01,  1.22934580e-07,  9.66184735e-02]],

          [[ 4.51274544e-01,  7.36132085e-01,  7.36132085e-01,  ...,
             8.56072128e-01,  5.56222081e-01,  7.51124620e-01],
           [ 7.21139610e-01,  7.21139610e-01,  6.31184578e-01,  ...,
             7.96102107e-01,  3.46327007e-01,  6.01199567e-01],
           [ 5.26237071e-01,  6.76162124e-01,  6.61169589e-01,  ...,
             9.16042149e-01,  9.76012170e-01,  5.71214557e-01],
           ...,
           [ 1.05097473e+00,  8.86057138e-01,  1.09595215e+00,  ...,
             1.66416958e-01,  5.86207092e-01,  6.16192102e-01],
           [ 1.03598225e+00,  1.08095968e+00,  5.86207092e-01,  ...,
             4.96252000e-01,  3.46327007e-01,  6.31184578e-01],
           [ 1.08095968e+00,  1.15592217e+00,  1.09595215e+00,  ...,
             8.26087117e-01,  5.26237071e-01,  6.61169589e-01]]],


         [[[-3.53968143e-01, -6.82538673e-02, -3.65078375e-02,  ...,
             1.11112073e-02, -2.11111009e-01, -5.23808524e-02],
           [-1.15872920e-01, -1.47618949e-01, -1.63491964e-01,  ...,
            -5.23808524e-02, -3.69841158e-01, -1.63491964e-01],
           [-2.42857039e-01, -1.15872920e-01, -2.26984024e-01,  ...,
             1.22222304e-01,  2.49206424e-01, -2.42857039e-01],
           ...,
           [ 1.22222304e-01,  4.28572372e-02,  2.65079439e-01,  ...,
            -7.03174591e-01, -2.11111009e-01, -2.26984024e-01],
           [ 1.53968334e-01,  3.76190543e-01, -2.26984024e-01,  ...,
            -4.17460203e-01, -4.80952382e-01, -2.26984024e-01],
           [ 3.44444513e-01,  5.19047678e-01,  3.92063558e-01,  ...,
            -3.65078375e-02, -2.74603069e-01, -2.11111009e-01]],

          [[ 1.61031820e-02,  2.25442946e-01,  2.73752123e-01,  ...,
             4.02576596e-01,  8.05154145e-02,  2.89855182e-01],
           [ 2.41546005e-01,  1.77133769e-01,  1.93236828e-01,  ...,
             3.86473536e-01, -3.22059989e-02,  1.44927651e-01],
           [ 1.12721533e-01,  2.57649064e-01,  1.61030710e-01,  ...,
             4.99194920e-01,  8.21256101e-01,  1.77133769e-01],
           ...,
           [ 7.56843865e-01,  5.79710245e-01,  6.92431629e-01,  ...,
            -3.86473298e-01,  1.61030710e-01,  2.25442946e-01],
           [ 5.95813274e-01,  7.72946954e-01,  2.09339887e-01,  ...,
             8.05154145e-02, -1.77133530e-01,  1.44927651e-01],
           [ 6.28019392e-01,  8.21256101e-01,  8.37359190e-01,  ...,
             5.31401038e-01,  1.22934580e-07,  9.66184735e-02]],

          [[ 4.51274544e-01,  7.36132085e-01,  7.36132085e-01,  ...,
             8.56072128e-01,  5.56222081e-01,  7.51124620e-01],
           [ 7.21139610e-01,  7.21139610e-01,  6.31184578e-01,  ...,
             7.96102107e-01,  3.46327007e-01,  6.01199567e-01],
           [ 5.26237071e-01,  6.76162124e-01,  6.61169589e-01,  ...,
             9.16042149e-01,  9.76012170e-01,  5.71214557e-01],
           ...,
           [ 1.05097473e+00,  8.86057138e-01,  1.09595215e+00,  ...,
             1.66416958e-01,  5.86207092e-01,  6.16192102e-01],
           [ 1.03598225e+00,  1.08095968e+00,  5.86207092e-01,  ...,
             4.96252000e-01,  3.46327007e-01,  6.31184578e-01],
           [ 1.08095968e+00,  1.15592217e+00,  1.09595215e+00,  ...,
             8.26087117e-01,  5.26237071e-01,  6.61169589e-01]]],


         [[[-3.53968143e-01, -6.82538673e-02, -3.65078375e-02,  ...,
             1.11112073e-02, -2.11111009e-01, -5.23808524e-02],
           [-1.15872920e-01, -1.47618949e-01, -1.63491964e-01,  ...,
            -5.23808524e-02, -3.69841158e-01, -1.63491964e-01],
           [-2.42857039e-01, -1.15872920e-01, -2.26984024e-01,  ...,
             1.22222304e-01,  2.49206424e-01, -2.42857039e-01],
           ...,
           [ 1.22222304e-01,  4.28572372e-02,  2.65079439e-01,  ...,
            -7.03174591e-01, -2.11111009e-01, -2.26984024e-01],
           [ 1.53968334e-01,  3.76190543e-01, -2.26984024e-01,  ...,
            -4.17460203e-01, -4.80952382e-01, -2.26984024e-01],
           [ 3.44444513e-01,  5.19047678e-01,  3.92063558e-01,  ...,
            -3.65078375e-02, -2.74603069e-01, -2.11111009e-01]],

          [[ 1.61031820e-02,  2.25442946e-01,  2.73752123e-01,  ...,
             4.02576596e-01,  8.05154145e-02,  2.89855182e-01],
           [ 2.41546005e-01,  1.77133769e-01,  1.93236828e-01,  ...,
             3.86473536e-01, -3.22059989e-02,  1.44927651e-01],
           [ 1.12721533e-01,  2.57649064e-01,  1.61030710e-01,  ...,
             4.99194920e-01,  8.21256101e-01,  1.77133769e-01],
           ...,
           [ 7.56843865e-01,  5.79710245e-01,  6.92431629e-01,  ...,
            -3.86473298e-01,  1.61030710e-01,  2.25442946e-01],
           [ 5.95813274e-01,  7.72946954e-01,  2.09339887e-01,  ...,
             8.05154145e-02, -1.77133530e-01,  1.44927651e-01],
           [ 6.28019392e-01,  8.21256101e-01,  8.37359190e-01,  ...,
             5.31401038e-01,  1.22934580e-07,  9.66184735e-02]],

          [[ 4.51274544e-01,  7.36132085e-01,  7.36132085e-01,  ...,
             8.56072128e-01,  5.56222081e-01,  7.51124620e-01],
           [ 7.21139610e-01,  7.21139610e-01,  6.31184578e-01,  ...,
             7.96102107e-01,  3.46327007e-01,  6.01199567e-01],
           [ 5.26237071e-01,  6.76162124e-01,  6.61169589e-01,  ...,
             9.16042149e-01,  9.76012170e-01,  5.71214557e-01],
           ...,
           [ 1.05097473e+00,  8.86057138e-01,  1.09595215e+00,  ...,
             1.66416958e-01,  5.86207092e-01,  6.16192102e-01],
           [ 1.03598225e+00,  1.08095968e+00,  5.86207092e-01,  ...,
             4.96252000e-01,  3.46327007e-01,  6.31184578e-01],
           [ 1.08095968e+00,  1.15592217e+00,  1.09595215e+00,  ...,
             8.26087117e-01,  5.26237071e-01,  6.61169589e-01]]],


         [[[-3.53968143e-01, -6.82538673e-02, -3.65078375e-02,  ...,
             1.11112073e-02, -2.11111009e-01, -5.23808524e-02],
           [-1.15872920e-01, -1.47618949e-01, -1.63491964e-01,  ...,
            -5.23808524e-02, -3.69841158e-01, -1.63491964e-01],
           [-2.42857039e-01, -1.15872920e-01, -2.26984024e-01,  ...,
             1.22222304e-01,  2.49206424e-01, -2.42857039e-01],
           ...,
           [ 1.22222304e-01,  4.28572372e-02,  2.65079439e-01,  ...,
            -7.03174591e-01, -2.11111009e-01, -2.26984024e-01],
           [ 1.53968334e-01,  3.76190543e-01, -2.26984024e-01,  ...,
            -4.17460203e-01, -4.80952382e-01, -2.26984024e-01],
           [ 3.44444513e-01,  5.19047678e-01,  3.92063558e-01,  ...,
            -3.65078375e-02, -2.74603069e-01, -2.11111009e-01]],

          [[ 1.61031820e-02,  2.25442946e-01,  2.73752123e-01,  ...,
             4.02576596e-01,  8.05154145e-02,  2.89855182e-01],
           [ 2.41546005e-01,  1.77133769e-01,  1.93236828e-01,  ...,
             3.86473536e-01, -3.22059989e-02,  1.44927651e-01],
           [ 1.12721533e-01,  2.57649064e-01,  1.61030710e-01,  ...,
             4.99194920e-01,  8.21256101e-01,  1.77133769e-01],
           ...,
           [ 7.56843865e-01,  5.79710245e-01,  6.92431629e-01,  ...,
            -3.86473298e-01,  1.61030710e-01,  2.25442946e-01],
           [ 5.95813274e-01,  7.72946954e-01,  2.09339887e-01,  ...,
             8.05154145e-02, -1.77133530e-01,  1.44927651e-01],
           [ 6.28019392e-01,  8.21256101e-01,  8.37359190e-01,  ...,
             5.31401038e-01,  1.22934580e-07,  9.66184735e-02]],

          [[ 4.51274544e-01,  7.36132085e-01,  7.36132085e-01,  ...,
             8.56072128e-01,  5.56222081e-01,  7.51124620e-01],
           [ 7.21139610e-01,  7.21139610e-01,  6.31184578e-01,  ...,
             7.96102107e-01,  3.46327007e-01,  6.01199567e-01],
           [ 5.26237071e-01,  6.76162124e-01,  6.61169589e-01,  ...,
             9.16042149e-01,  9.76012170e-01,  5.71214557e-01],
           ...,
           [ 1.05097473e+00,  8.86057138e-01,  1.09595215e+00,  ...,
             1.66416958e-01,  5.86207092e-01,  6.16192102e-01],
           [ 1.03598225e+00,  1.08095968e+00,  5.86207092e-01,  ...,
             4.96252000e-01,  3.46327007e-01,  6.31184578e-01],
           [ 1.08095968e+00,  1.15592217e+00,  1.09595215e+00,  ...,
             8.26087117e-01,  5.26237071e-01,  6.61169589e-01]]],


         [[[-3.53968143e-01, -6.82538673e-02, -3.65078375e-02,  ...,
             1.11112073e-02, -2.11111009e-01, -5.23808524e-02],
           [-1.15872920e-01, -1.47618949e-01, -1.63491964e-01,  ...,
            -5.23808524e-02, -3.69841158e-01, -1.63491964e-01],
           [-2.42857039e-01, -1.15872920e-01, -2.26984024e-01,  ...,
             1.22222304e-01,  2.49206424e-01, -2.42857039e-01],
           ...,
           [ 1.22222304e-01,  4.28572372e-02,  2.65079439e-01,  ...,
            -7.03174591e-01, -2.11111009e-01, -2.26984024e-01],
           [ 1.53968334e-01,  3.76190543e-01, -2.26984024e-01,  ...,
            -4.17460203e-01, -4.80952382e-01, -2.26984024e-01],
           [ 3.44444513e-01,  5.19047678e-01,  3.92063558e-01,  ...,
            -3.65078375e-02, -2.74603069e-01, -2.11111009e-01]],

          [[ 1.61031820e-02,  2.25442946e-01,  2.73752123e-01,  ...,
             4.02576596e-01,  8.05154145e-02,  2.89855182e-01],
           [ 2.41546005e-01,  1.77133769e-01,  1.93236828e-01,  ...,
             3.86473536e-01, -3.22059989e-02,  1.44927651e-01],
           [ 1.12721533e-01,  2.57649064e-01,  1.61030710e-01,  ...,
             4.99194920e-01,  8.21256101e-01,  1.77133769e-01],
           ...,
           [ 7.56843865e-01,  5.79710245e-01,  6.92431629e-01,  ...,
            -3.86473298e-01,  1.61030710e-01,  2.25442946e-01],
           [ 5.95813274e-01,  7.72946954e-01,  2.09339887e-01,  ...,
             8.05154145e-02, -1.77133530e-01,  1.44927651e-01],
           [ 6.28019392e-01,  8.21256101e-01,  8.37359190e-01,  ...,
             5.31401038e-01,  1.22934580e-07,  9.66184735e-02]],

          [[ 4.51274544e-01,  7.36132085e-01,  7.36132085e-01,  ...,
             8.56072128e-01,  5.56222081e-01,  7.51124620e-01],
           [ 7.21139610e-01,  7.21139610e-01,  6.31184578e-01,  ...,
             7.96102107e-01,  3.46327007e-01,  6.01199567e-01],
           [ 5.26237071e-01,  6.76162124e-01,  6.61169589e-01,  ...,
             9.16042149e-01,  9.76012170e-01,  5.71214557e-01],
           ...,
           [ 1.05097473e+00,  8.86057138e-01,  1.09595215e+00,  ...,
             1.66416958e-01,  5.86207092e-01,  6.16192102e-01],
           [ 1.03598225e+00,  1.08095968e+00,  5.86207092e-01,  ...,
             4.96252000e-01,  3.46327007e-01,  6.31184578e-01],
           [ 1.08095968e+00,  1.15592217e+00,  1.09595215e+00,  ...,
             8.26087117e-01,  5.26237071e-01,  6.61169589e-01]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0856 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 124, vnnlib ID: 124 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.41716385, -34.91043091, -33.09681702, -33.18154144, -32.18592834,
         -33.71405792, -33.79117203, -32.34539413, -33.30427933, -32.73167801]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [873]; unstable size 873; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 375, 1, 873] with unstable size 374 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 47, 1, 873] with unstable size 46 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 873] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [374]; unstable size 374; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 47, 1, 374] with unstable size 46 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 374] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [46]; unstable size 46; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 46] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.67138648, -1.03464341, -4.54828501, -3.96624041, -4.73308945,
         -3.87207246, -3.78892517, -4.83892441, -2.77549124]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.41716385, -34.91043091, -33.09681702, -33.18154144, -32.18592834,
         -33.71405792, -33.79117203, -32.34539413, -33.30427933, -32.73167801]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.41716003, -34.91042328, -33.09681320, -33.18153763, -32.18592453,
          -33.71405792, -33.79117203, -32.34539413, -33.30427933, -32.73167419],
         [-33.41716003, -34.91042328, -33.09681320, -33.18153763, -32.18592453,
          -33.71405792, -33.79117203, -32.34539413, -33.30427933, -32.73167419]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.68548584,  2.17874908,  0.36513901,  0.44986343, -0.54574966,
           0.98238373,  1.05949783, -0.38628006,  0.57260513]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         ...,


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0820 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 125, vnnlib ID: 125 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.67910004, -29.02583504, -32.03041840, -30.37662506, -32.90485001,
         -30.05278206, -32.54390335, -33.14847565, -29.20802498, -29.10145187]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [924]; unstable size 924; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 317, 1, 924] with unstable size 316 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 45, 1, 924] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 924] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [316]; unstable size 316; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 45, 1, 316] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 316] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [44]; unstable size 44; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.28595638, -3.23423648, -1.97268295, -2.16654873, -0.85518265,
         -2.69359016, -0.91199112,  0.27577543, -3.94698429]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.67910004, -29.02583504, -32.03041840, -30.37662506, -32.90485001,
         -30.05278206, -32.54390335, -33.14847565, -29.20802498, -29.10145187]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-30.67910004, -29.02583694, -32.03042221, -30.37662506, -32.90485382,
          -30.05278206, -32.54390717, -33.14847565, -29.20802498, -29.10145569],
         [-30.67910004, -29.02583694, -32.03042221, -30.37662506, -32.90485382,
          -30.05278206, -32.54390717, -33.14847565, -29.20802498, -29.10145569]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.57764435, -0.07561874,  2.92896652,  1.27516937,  3.80339813,
           0.95132637,  3.44245148,  0.10656929]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         ...,


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0781 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 126, vnnlib ID: 126 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.01600647, -26.40577698, -21.01602745, -22.86212349, -20.15923119,
         -22.91157341, -22.68640900, -22.00185013, -27.78373146, -26.18017387]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [716]; unstable size 716; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 324, 1, 716] with unstable size 323 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 42, 1, 716] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 716] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [323]; unstable size 323; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 42, 1, 323] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 323] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [41]; unstable size 41; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.20899069,  1.95377827, -1.99312150,  0.03016555, -0.23728561,
         -0.76928377, -0.76995921,  3.48477435,  1.19369936]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.01600647, -26.40577698, -21.01602745, -22.86212349, -20.15923119,
         -22.91157341, -22.68640900, -22.00185013, -27.78373146, -26.18017387]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.07602119, -26.54323006, -20.63356781, -23.06815910, -20.82722664,
          -23.09644318, -22.94115639, -22.42404747, -27.93516541, -26.47070694],
         [-25.07602119, -26.54323006, -20.63356781, -23.06815910, -20.82722664,
          -23.09644318, -22.94115639, -22.42404747, -27.93516541, -26.47070694]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.19365883,  2.26921654,  2.11392975,  1.59682083]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0065 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0577 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 127, vnnlib ID: 127 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-43.37466812, -45.73569107, -43.57332993, -42.21264267, -43.12299347,
         -44.43680954, -45.94755554, -45.62817764, -42.16256714, -44.04162216]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1155]; unstable size 1155; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 356, 1, 1155] with unstable size 355 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 50, 1, 1155] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1155] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [355]; unstable size 355; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 50, 1, 355] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 355] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [49]; unstable size 49; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 49] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.44429731, -0.23361909, -3.82402015, -4.18923759, -4.64752388,
         -2.91902924, -1.00031757, -3.46809530, -2.36744094]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-43.37466812, -45.73569107, -43.57332993, -42.21264267, -43.12299347,
         -44.43680954, -45.94755554, -45.62817764, -42.16256714, -44.04162216]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-43.30107880, -45.64381409, -43.49784088, -42.11075974, -43.01500702,
          -44.33026505, -45.84886932, -45.50572205, -42.12451172, -43.94388580],
         [-43.30107880, -45.64381409, -43.49784088, -42.11075974, -43.01500702,
          -44.33026505, -45.84886932, -45.50572205, -42.12451172, -43.94388580]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.17656708,  3.51930237,  1.37332916, -0.01375198,  0.89049530,
           2.20575333,  3.72435760,  3.38121033,  1.81937408]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0053 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0723 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 128, vnnlib ID: 128 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.86639404, -36.44202042, -32.09305573, -31.61445045, -30.43865395,
         -31.96689034, -30.74617386, -31.91513443, -35.14708328, -33.22552109]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [732]; unstable size 732; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 378, 1, 732] with unstable size 377 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 60, 1, 732] with unstable size 59 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 732] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [377]; unstable size 377; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 60, 1, 377] with unstable size 59 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 377] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [59]; unstable size 59; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 59] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.19847298,  0.16086543, -3.53968501, -2.64427042, -4.14651966,
         -2.78594255, -3.75628090, -0.01285291, -3.13416386]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.86639404, -36.44202042, -32.09305573, -31.61445045, -30.43865395,
         -31.96689034, -30.74617386, -31.91513443, -35.14708328, -33.22552109]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.86639404, -36.44202042, -32.09305573, -31.61445427, -30.43865204,
          -31.96689034, -30.74617195, -31.91513443, -35.14708328, -33.22552490],
         [-32.86639404, -36.44202042, -32.09305573, -31.61445427, -30.43865204,
          -31.96689034, -30.74617195, -31.91513443, -35.14708328, -33.22552490]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.12022209,  1.34688377,  0.86828232, -0.30751991,  1.22071838,
           1.16896248,  4.40091133,  2.47935295]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         ...,


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]]]],
       device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0813 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 129, vnnlib ID: 129 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.55327988, -40.48978043, -35.67427826, -33.65659332, -33.36568451,
         -32.93010712, -36.16981888, -36.11104202, -37.03424454, -38.84112930]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [658]; unstable size 658; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 382, 1, 658] with unstable size 381 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 52, 1, 658] with unstable size 51 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 658] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [381]; unstable size 381; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 52, 1, 381] with unstable size 51 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 381] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [51]; unstable size 51; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 51] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.99241632,  2.57067943, -1.29407847, -0.71964777, -2.26002383,
         -0.20106637, -0.36170745, -0.56486845,  1.26322508]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.55327988, -40.48978043, -35.67427826, -33.65659332, -33.36568451,
         -32.93010712, -36.16981888, -36.11104202, -37.03424454, -38.84112930]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.67361450, -39.81694794, -34.76751709, -33.13951111, -31.97811317,
          -32.56710052, -35.47766876, -35.05343246, -36.30713272, -38.11345291],
         [-35.67361450, -39.81694794, -34.76751709, -33.13951111, -31.97811317,
          -32.56710052, -35.47766876, -35.05343246, -36.30713272, -38.11345291]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 3.10651398,  2.20041656,  0.57241058, -0.58898735,  2.91056824,
           2.48633194,  3.74003220]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0776 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 130, vnnlib ID: 130 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-42.02249527, -43.39709091, -36.59678268, -37.63185120, -34.70639038,
         -37.06428528, -39.12929535, -36.05650711, -45.17128372, -42.63040161]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [628]; unstable size 628; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 285, 1, 628] with unstable size 284 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 36, 1, 628] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 628] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [284]; unstable size 284; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 36, 1, 284] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 284] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.56657028,  1.63912737, -2.83244610, -0.35908437, -4.23849392,
         -0.53093648, -3.64275837,  4.36922169,  1.67937839]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-42.02249527, -43.39709091, -36.59678268, -37.63185120, -34.70639038,
         -37.06428528, -39.12929535, -36.05650711, -45.17128372, -42.63040161]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-42.02249908, -43.39708710, -36.59678268, -37.63184738, -34.70639038,
          -37.06428146, -39.12929153, -36.05651093, -45.17128754, -42.63040161],
         [-42.02249908, -43.39708710, -36.59678268, -37.63184738, -34.70639038,
          -37.06428146, -39.12929153, -36.05651093, -45.17128754, -42.63040161]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.46749878,  0.56756592, -2.35789108,  2.06501007, -1.00777054]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0833 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 131, vnnlib ID: 131 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-38.19910049, -42.95392990, -39.38166428, -40.77212524, -40.96166229,
         -41.01519775, -41.01571274, -43.60205460, -34.36704636, -42.96305084]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [760]; unstable size 760; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 299, 1, 760] with unstable size 298 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 39, 1, 760] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 760] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [298]; unstable size 298; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 39, 1, 298] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 298] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [38]; unstable size 38; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.12569094, 4.95627308, 0.43751001, 2.54656243, 2.04138231, 2.11403179,
         2.67772746, 4.33478737, 5.02533245]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0342 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 132, vnnlib ID: 132 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-52.25640869, -46.79635620, -59.10792542, -59.08040619, -58.08992386,
         -60.69271851, -60.53070450, -59.66824722, -54.24492645, -50.35430145]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [975]; unstable size 975; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 294, 1, 975] with unstable size 293 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 41, 1, 975] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 975] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [293]; unstable size 293; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 41, 1, 293] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 293] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [40]; unstable size 40; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.65819168, 7.06729174, 7.56528187, 5.95431137, 8.94286728, 8.78785133,
         7.14825010, 3.25303555, 0.27906609]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0710 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 133, vnnlib ID: 133 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-60.34854889, -71.36402893, -54.99246597, -60.61031723, -67.73551941,
         -61.14411163, -64.52249908, -64.27943420, -70.68788147, -69.99361420]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1042]; unstable size 1042; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 172, 1, 1042] with unstable size 171 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 1042] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1042] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [171]; unstable size 171; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 171] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 171] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.12928724, 14.23993969,  4.35245800, 11.35840702,  4.81596470,
          8.01500607,  7.85443497, 13.59139061, 12.85487461]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0702 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 134, vnnlib ID: 134 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.47070694, -36.03965759, -35.98741913, -38.13320923, -37.88390350,
         -39.73009109, -38.11678696, -40.95288849, -32.21044159, -36.23413467]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1100]; unstable size 1100; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 394, 1, 1100] with unstable size 393 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 46, 1, 1100] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1100] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [393]; unstable size 393; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 46, 1, 393] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 393] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [45]; unstable size 45; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 45] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.48986292, -0.41908503,  1.23637807,  0.97181225,  2.67490959,
          0.16805756,  3.19203711, -3.71497178,  0.44456553]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.47070694, -36.03965759, -35.98741913, -38.13320923, -37.88390350,
         -39.73009109, -38.11678696, -40.95288849, -32.21044159, -36.23413467]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.47070694, -36.03965378, -35.98741531, -38.13320541, -37.88389969,
          -39.73008728, -38.11678696, -40.95288467, -32.21043396, -36.23413086],
         [-32.47070694, -36.03965378, -35.98741531, -38.13320541, -37.88389969,
          -39.73008728, -38.11678696, -40.95288467, -32.21043396, -36.23413086]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 3.56894684,  3.51670837, -0.26027298]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.15396857,  1.01111114,  1.01111114,  ...,  1.02698421,
             1.04285717,  1.10634947],
           [ 1.02698421,  0.94761908,  0.94761908,  ...,  1.12222254,
             1.12222254,  1.16984153],
           [ 0.99523818,  0.91587305,  0.86825401,  ...,  1.12222254,
             1.13809550,  1.16984153],
           ...,
           [-0.14761895, -0.41746020, -0.43333322,  ..., -0.36984116,
            -0.33809513, -0.41746020],
           [-0.30634910, -0.56031746, -0.57619047,  ..., -0.68730158,
            -0.54444444, -0.36984116],
           [-0.22698402, -0.33809513, -0.40158719,  ..., -0.59206349,
            -0.32222211, -0.14761895]],

          [[ 1.20772982,  1.06280196,  1.06280196,  ...,  1.07890511,
             1.09500813,  1.15942061],
           [ 1.07890511,  0.99838978,  0.99838978,  ...,  1.17552364,
             1.17552364,  1.22383285],
           [ 1.04669893,  0.96618366,  0.91787446,  ...,  1.17552364,
             1.19162667,  1.22383285],
           ...,
           [-0.11272129, -0.38647330, -0.40257636,  ..., -0.33816412,
            -0.30595800, -0.38647330],
           [-0.27375188, -0.53140092, -0.54750401,  ..., -0.66022539,
            -0.51529789, -0.33816412],
           [-0.19323659, -0.30595800, -0.37037024,  ..., -0.56360704,
            -0.28985494, -0.11272129]],

          [[ 1.26086998,  1.12593722,  1.12593722,  ...,  1.14092970,
             1.15592217,  1.21589243],
           [ 1.14092970,  1.06596720,  1.06596720,  ...,  1.23088503,
             1.23088503,  1.27586246],
           [ 1.11094475,  1.03598225,  0.99100471,  ...,  1.23088503,
             1.24587750,  1.27586246],
           ...,
           [ 0.03148442, -0.22338814, -0.23838064,  ..., -0.17841063,
            -0.14842562, -0.22338814],
           [-0.11844061, -0.35832080, -0.37331331,  ..., -0.47826082,
            -0.34332830, -0.17841063],
           [-0.04347810, -0.14842562, -0.20839565,  ..., -0.38830581,
            -0.13343313,  0.03148442]]],


         [[[ 1.15396857,  1.01111114,  1.01111114,  ...,  1.02698421,
             1.04285717,  1.10634947],
           [ 1.02698421,  0.94761908,  0.94761908,  ...,  1.12222254,
             1.12222254,  1.16984153],
           [ 0.99523818,  0.91587305,  0.86825401,  ...,  1.12222254,
             1.13809550,  1.16984153],
           ...,
           [-0.14761895, -0.41746020, -0.43333322,  ..., -0.36984116,
            -0.33809513, -0.41746020],
           [-0.30634910, -0.56031746, -0.57619047,  ..., -0.68730158,
            -0.54444444, -0.36984116],
           [-0.22698402, -0.33809513, -0.40158719,  ..., -0.59206349,
            -0.32222211, -0.14761895]],

          [[ 1.20772982,  1.06280196,  1.06280196,  ...,  1.07890511,
             1.09500813,  1.15942061],
           [ 1.07890511,  0.99838978,  0.99838978,  ...,  1.17552364,
             1.17552364,  1.22383285],
           [ 1.04669893,  0.96618366,  0.91787446,  ...,  1.17552364,
             1.19162667,  1.22383285],
           ...,
           [-0.11272129, -0.38647330, -0.40257636,  ..., -0.33816412,
            -0.30595800, -0.38647330],
           [-0.27375188, -0.53140092, -0.54750401,  ..., -0.66022539,
            -0.51529789, -0.33816412],
           [-0.19323659, -0.30595800, -0.37037024,  ..., -0.56360704,
            -0.28985494, -0.11272129]],

          [[ 1.26086998,  1.12593722,  1.12593722,  ...,  1.14092970,
             1.15592217,  1.21589243],
           [ 1.14092970,  1.06596720,  1.06596720,  ...,  1.23088503,
             1.23088503,  1.27586246],
           [ 1.11094475,  1.03598225,  0.99100471,  ...,  1.23088503,
             1.24587750,  1.27586246],
           ...,
           [ 0.03148442, -0.22338814, -0.23838064,  ..., -0.17841063,
            -0.14842562, -0.22338814],
           [-0.11844061, -0.35832080, -0.37331331,  ..., -0.47826082,
            -0.34332830, -0.17841063],
           [-0.04347810, -0.14842562, -0.20839565,  ..., -0.38830581,
            -0.13343313,  0.03148442]]],


         [[[ 1.15396857,  1.01111114,  1.01111114,  ...,  1.02698421,
             1.04285717,  1.10634947],
           [ 1.02698421,  0.94761908,  0.94761908,  ...,  1.12222254,
             1.12222254,  1.16984153],
           [ 0.99523818,  0.91587305,  0.86825401,  ...,  1.12222254,
             1.13809550,  1.16984153],
           ...,
           [-0.14761895, -0.41746020, -0.43333322,  ..., -0.36984116,
            -0.33809513, -0.41746020],
           [-0.30634910, -0.56031746, -0.57619047,  ..., -0.68730158,
            -0.54444444, -0.36984116],
           [-0.22698402, -0.33809513, -0.40158719,  ..., -0.59206349,
            -0.32222211, -0.14761895]],

          [[ 1.20772982,  1.06280196,  1.06280196,  ...,  1.07890511,
             1.09500813,  1.15942061],
           [ 1.07890511,  0.99838978,  0.99838978,  ...,  1.17552364,
             1.17552364,  1.22383285],
           [ 1.04669893,  0.96618366,  0.91787446,  ...,  1.17552364,
             1.19162667,  1.22383285],
           ...,
           [-0.11272129, -0.38647330, -0.40257636,  ..., -0.33816412,
            -0.30595800, -0.38647330],
           [-0.27375188, -0.53140092, -0.54750401,  ..., -0.66022539,
            -0.51529789, -0.33816412],
           [-0.19323659, -0.30595800, -0.37037024,  ..., -0.56360704,
            -0.28985494, -0.11272129]],

          [[ 1.26086998,  1.12593722,  1.12593722,  ...,  1.14092970,
             1.15592217,  1.21589243],
           [ 1.14092970,  1.06596720,  1.06596720,  ...,  1.23088503,
             1.23088503,  1.27586246],
           [ 1.11094475,  1.03598225,  0.99100471,  ...,  1.23088503,
             1.24587750,  1.27586246],
           ...,
           [ 0.03148442, -0.22338814, -0.23838064,  ..., -0.17841063,
            -0.14842562, -0.22338814],
           [-0.11844061, -0.35832080, -0.37331331,  ..., -0.47826082,
            -0.34332830, -0.17841063],
           [-0.04347810, -0.14842562, -0.20839565,  ..., -0.38830581,
            -0.13343313,  0.03148442]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0610 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 135, vnnlib ID: 135 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.88832474, -26.61640167, -36.27928925, -34.23635101, -34.96662903,
         -34.85330963, -36.62691116, -33.88630676, -30.50358963, -28.63460159]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [635]; unstable size 635; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 315, 1, 635] with unstable size 314 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 635] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 635] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [314]; unstable size 314; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 314] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 314] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.09758091,  5.58668995,  3.59488773,  4.11002779,  3.84429550,
          6.46409130,  2.93752384,  1.05226994, -0.14930534]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.88832474, -26.61640167, -36.27928925, -34.23635101, -34.96662903,
         -34.85330963, -36.62691116, -33.88630676, -30.50358963, -28.63460159]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.22it/s]100%|██████████| 1/1 [00:00<00:00,  8.21it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.36097336, -25.82588005, -34.62321472, -32.45495987, -33.08629227,
          -33.00233459, -35.02093506, -31.97499084, -29.01560020, -26.89751434]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.07163429]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1245 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 32.974456787109375
alpha/beta optimization time: 1.3063738346099854
initial alpha-crown bounds: tensor([[ 4.25690126,  5.74247265,  3.77065945,  4.28818130,  4.03490067,
          6.60700846,  3.13222980,  1.20747328, -0.06537104]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.06537103652954102
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50065541267395
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.50061464309692
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.50058460235596
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.50056147575378
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.50054097175598
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.50052118301392
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.50050163269043
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.50048184394836
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 198.50046133995056
Verifying property 8 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.06537104]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.88832474, -26.61640167, -36.27928925, -34.23635101, -34.96662903,
        -34.85330963, -36.62691116, -33.88630676, -30.50358963, -28.63460159],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.06537104]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 635
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 309
Node /15 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 973
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011277198791503906
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0653681755065918
10 lb beta sum: 0.0, worst -0.06537675857543945
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0585    transfer 0.0001    finalize 0.0001    func 0.0590    
Accumulated time: func 0.0590    prepare 0.0002    bound 0.0585    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 11] 
split level 1: [/input-12, 19] 
split level 2: [/input-8, 1507] 
split level 3: [/input-12, 70] 
split level 4: [/input-12, 71] 
split level 5: [/input-12, 28] 
split level 6: [/input-12, 44] 
split level 7: [/input-12, 73] 
split level 8: [/input-8, 1508] 
split level 9: [/input-12, 67] 
split level 10: [/input-12, 58] 
split level 11: [/input-8, 1763] 
split level 12: [/input-12, 85] 
split level 13: [/input-12, 74] 
split level 14: [/input-12, 24] 
split level 15: [/input-8, 1893] 
split level 16: [/input-8, 485] 
split level 17: [/input-8, 1765] 
split level 18: [/input-8, 1516] 
split level 19: [/input-8, 810] 
split level 20: [/input-12, 42] 
split level 21: [/input-8, 2019] 
split level 22: [/input-8, 813] 
split level 23: [/input-8, 997] 
split level 24: [/input, 712] 
split level 25: [/input-8, 1723] 
split level 26: [/input-8, 2035] 
split level 27: [/input-12, 89] 
split level 28: [/input-12, 60] 
split level 29: [/input-8, 1771] 
split level 30: [/input, 710] 
split level 31: [/input-8, 916] 
split level 32: [/input-8, 1674] 
split level 33: [/input-12, 29] 
split level 34: [/input, 3960] 
split level 35: [/input-8, 1547] 
split level 36: [/input, 3527] 
split level 37: [/input, 3945] 
split level 38: [/input-8, 1341] 
split level 39: [/input-8, 1590] 
split level 40: [/input-8, 625] 
split level 41: [/input, 2196] 
split level 42: [/input, 2724] 
split level 43: [/input-12, 36] 
split level 44: [/input-8, 1916] 
split level 45: [/input-12, 51] 
split level 46: [/input-8, 1764] 
split level 47: [/input-8, 326] 
split level 48: [/input-8, 476] 
split level 49: [/input-8, 1950] 
split level 50: [/input, 2742] 
split level 51: [/input, 967] 
split level 52: [/input-8, 862] 
split level 53: [/input, 2503] 
split level 54: [/input, 968] 
split level 55: [/input, 200] 
split level 56: [/input-8, 1510] 
split level 57: [/input, 694] 
split level 58: [/input, 1415] 
split level 59: [/input-8, 1992] 
split level 60: [/input, 697] 
split level 61: [/input, 713] 
split level 62: [/input, 2212] 
split level 63: [/input, 1815] 
split level 64: [/input, 918] 
split level 65: [/input-8, 1724] 
split level 66: [/input-8, 1139] 
split level 67: [/input, 969] 
split level 68: [/input-8, 1634] 
split level 69: [/input, 631] 
split level 70: [/input, 199] 
split level 71: [/input, 1978] 
split level 72: [/input, 711] 
split level 73: [/input, 1016] 
split level 74: [/input, 695] 
split level 75: [/input, 197] 
split level 76: [/input, 3528] 
split level 77: [/input-8, 1342] 
split level 78: [/input, 2711] 
split level 79: [/input, 965] 
split level 80: [/input-8, 1072] 
split level 81: [/input, 202] 
split level 82: [/input, 2743] 
split level 83: [/input-8, 1708] 
split level 84: [/input-8, 1941] 
split level 85: [/input, 201] 
split level 86: [/input, 231] 
split level 87: [/input-8, 477] 
split level 88: [/input-8, 1766] 
split level 89: [/input, 2505] 
split level 90: [/input-8, 1502] 
split level 91: [/input-8, 518] 
split level 92: [/input-8, 1917] 
split level 93: [/input-8, 37] 
split level 94: [/input-8, 421] 
split level 95: [/input, 1954] 
split level 96: [/input-8, 1146] 
split level 97: [/input-8, 1862] 
split level 98: [/input, 746] 
split level 99: [/input, 2741] 
split level 100: [/input, 997] 
split level 101: [/input-8, 436] 
split level 102: [/input-8, 503] 
split level 103: [/input-8, 1614] 
split level 104: [/input-8, 1858] 
split level 105: [/input-8, 418] 
split level 106: [/input, 744] 
split level 107: [/input-8, 1269] 
split level 108: [/input-8, 1595] 
split level 109: [/input, 745] 
split level 110: [/input, 1937] 
split level 111: [/input-12, 88] 
split level 112: [/input-8, 1538] 
split level 113: [/input, 661] 
split level 114: [/input-8, 488] 
split level 115: [/input-8, 766] 
split level 116: [/input, 3019] 
split level 117: [/input-8, 909] 
split level 118: [/input, 615] 
split level 119: [/input, 2692] 
split level 120: [/input-8, 846] 
split level 121: [/input, 1969] 
split level 122: [/input-8, 1596] 
split level 123: [/input-8, 1542] 
split level 124: [/input-8, 533] 
split level 125: [/input-8, 1998] 
split level 126: [/input, 1013] 
split level 127: [/input, 3988] 
split level 128: [/input-8, 1327] 
split level 129: [/input, 981] 
split level 130: [/input, 616] 
split level 131: [/input, 1897] 
split level 132: [/input-8, 1425] 
split level 133: [/input, 1012] 
split level 134: [/input-8, 688] 
split level 135: [/input, 983] 
split level 136: [/input-8, 1600] 
split level 137: [/input, 3976] 
split level 138: [/input-8, 855] 
split level 139: [/input-8, 479] 
split level 140: [/input, 675] 
split level 141: [/input, 196] 
split level 142: [/input-8, 1814] 
split level 143: [/input, 3942] 
split level 144: [/input, 1986] 
split level 145: [/input, 2535] 
split level 146: [/input, 741] 
split level 147: [/input-8, 717] 
split level 148: [/input-8, 281] 
split level 149: [/input-8, 1594] 
split level 150: [/input-8, 1357] 
split level 151: [/input, 999] 
split level 152: [/input, 680] 
split level 153: [/input-8, 1806] 
split level 154: [/input-8, 56] 
split level 155: [/input-8, 914] 
split level 156: [/input, 760] 
split level 157: [/input-8, 1550] 
split level 158: [/input-8, 60] 
split level 159: [/input, 749] 
split level 160: [/input, 618] 
split level 161: [/input, 764] 
split level 162: [/input-8, 1145] 
split level 163: [/input-8, 255] 
split level 164: [/input, 742] 
split level 165: [/input, 2757] 
split level 166: [/input, 215] 
split level 167: [/input-8, 1692] 
split level 168: [/input-8, 333] 
split level 169: [/input, 1894] 
split level 170: [/input, 233] 
split level 171: [/input, 2488] 
split level 172: [/input-8, 1759] 
split level 173: [/input, 677] 
split level 174: [/input-12, 57] 
split level 175: [/input, 2506] 
split level 176: [/input, 203] 
split level 177: [/input, 2536] 
split level 178: [/input, 1092] 
split level 179: [/input, 213] 
split level 180: [/input, 757] 
split level 181: [/input, 1018] 
split level 182: [/input, 183] 
split level 183: [/input, 765] 
split level 184: [/input, 1500] 
split level 185: [/input, 2541] 
split level 186: [/input, 2520] 
split level 187: [/input, 184] 
split level 188: [/input-8, 1878] 
split level 189: [/input-8, 699] 
split level 190: [/input, 2158] 
split level 191: [/input, 762] 
split level 192: [/input-8, 1870] 
split level 193: [/input, 763] 
split level 194: [/input, 761] 
split level 195: [/input, 2537] 
split level 196: [/input, 248] 
split level 197: [/input, 246] 
split level 198: [/input, 2810] 
split level 199: [/input, 2342] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06537222862243652
10 lb beta sum: 0.0, worst -0.0653684139251709
Time: prepare 0.0128    bound 0.1067    transfer 0.0022    finalize 0.0028    func 0.1272    
Accumulated time: func 0.1862    prepare 0.0231    bound 0.1652    transfer 0.0023    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.65166807) min lb tensor(-0.06536436)
Number of Verified Splits: 19 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011979103088378906 
BICCOS Cumulative time: 0.011979103088378906
Preprocessing time: 0.010341882705688477 Inference time: 0.0007865428924560547 Add cuts time: 0.0002589225769042969 Cut analysis time: 0.0005917549133300781
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.5477    set_bounds 0.0088    solve 0.1273    add 0.0103    
Accumulated time: pickout 0.0004    decision 0.5477    set_bounds 0.0088    solve 0.1273    add 0.0103    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 11] 
split level 1: [/input-12, 19] 
split level 2: [/input-8, 1507] 
split level 3: [/input-12, 70] 
split level 4: [/input-12, 71] 
split level 5: [/input-12, 28] 
split level 6: [/input-12, 44] 
split level 7: [/input-12, 85] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.4359246492385864

all verified at 0th iter
Time: prepare 0.0051    bound 0.0045    transfer 0.0013    finalize 0.0014    func 0.0140    
Accumulated time: func 0.2002    prepare 0.0287    bound 0.1698    transfer 0.0036    finalize 0.0044    
all_split False
======================Cut inference begins======================
max lb tensor(1.25611591) min lb tensor(0.43592465)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.007001399993896484 
BICCOS Cumulative time: 0.01898050308227539
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0206    solve 0.0140    add 0.0003    
Accumulated time: pickout 0.0008    decision 0.5706    set_bounds 0.0295    solve 0.1413    add 0.0106    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.8588302135467529

Result: safe in 2.6176 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 136, vnnlib ID: 136 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.06059647, -37.86866760, -35.37166977, -35.50696564, -35.05437469,
         -35.82231140, -37.19294739, -36.32546997, -34.89080811, -37.62431717]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [889]; unstable size 889; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 262, 1, 889] with unstable size 261 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 36, 1, 889] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 889] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [261]; unstable size 261; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 36, 1, 261] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 261] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.38838625, -0.33748198, -0.13316011, -0.79270303,  0.00757360,
          0.88714147,  0.49501598, -0.77243519,  2.18846989]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.06059647, -37.86866760, -35.37166977, -35.50696564, -35.05437469,
         -35.82231140, -37.19294739, -36.32546997, -34.89080811, -37.62431717]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.16it/s]100%|██████████| 1/1 [00:00<00:00,  8.16it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.39433670, -37.76462173, -35.61705017, -35.46442032, -35.11685181,
          -35.82571030, -37.18003845, -36.41670609, -34.27857590, -37.42424011],
         [-33.39433670, -37.76462173, -35.61705017, -35.46442032, -35.11685181,
          -35.82571030, -37.18003845, -36.41670609, -34.27857590, -37.42424011]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.22271347, 2.07008362, 1.72251511, 0.88423920]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1260 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 6.719900608062744
alpha/beta optimization time: 1.3209781646728516
initial alpha-crown bounds: tensor([[ 2.66284490,  0.08596659,  0.17834783, -0.49385947,  0.29038143,
          1.23576546,  0.72536910, -0.44796634,  2.48305130]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.4938594698905945
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.48003721237183
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.4799919128418
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.47996377944946
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.4799416065216
Verifying property 3 with 1 instances.
##### Instance 136 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.49385947]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.06059647, -37.86866760, -35.37166977, -35.50696564, -35.05437469,
        -35.82231140, -37.19294739, -36.32546997, -34.89080811, -37.62431717],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.49385947]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 889
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 251
Node /15 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 1174
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010895729064941406
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.493858277797699
10 lb beta sum: 0.0, worst -0.4938617944717407
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0571    transfer 0.0001    finalize 0.0002    func 0.0576    
Accumulated time: func 0.0576    prepare 0.0002    bound 0.0571    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 62] 
split level 3: [/input-12, 68] 
split level 4: [/input-12, 15] 
split level 5: [/input-12, 56] 
split level 6: [/input-12, 24] 
split level 7: [/input-12, 70] 
split level 8: [/input-12, 35] 
split level 9: [/input-12, 76] 
split level 10: [/input-12, 9] 
split level 11: [/input-12, 37] 
split level 12: [/input-12, 85] 
split level 13: [/input-12, 66] 
split level 14: [/input-8, 1635] 
split level 15: [/input-8, 790] 
split level 16: [/input-8, 1525] 
split level 17: [/input-8, 358] 
split level 18: [/input-8, 1509] 
split level 19: [/input-8, 1526] 
split level 20: [/input-8, 1626] 
split level 21: [/input-8, 797] 
split level 22: [/input-8, 2027] 
split level 23: [/input-8, 1507] 
split level 24: [/input-8, 1930] 
split level 25: [/input-8, 1939] 
split level 26: [/input-8, 1953] 
split level 27: [/input-8, 1012] 
split level 28: [/input, 998] 
split level 29: [/input-8, 1309] 
split level 30: [/input-12, 40] 
split level 31: [/input-8, 1937] 
split level 32: [/input-8, 1945] 
split level 33: [/input-8, 1375] 
split level 34: [/input-8, 925] 
split level 35: [/input-8, 1716] 
split level 36: [/input-8, 85] 
split level 37: [/input-8, 1521] 
split level 38: [/input-8, 1512] 
split level 39: [/input-8, 1387] 
split level 40: [/input-8, 789] 
split level 41: [/input, 729] 
split level 42: [/input-8, 1354] 
split level 43: [/input-8, 737] 
split level 44: [/input, 988] 
split level 45: [/input-8, 1353] 
split level 46: [/input-8, 796] 
split level 47: [/input-8, 1356] 
split level 48: [/input-8, 1894] 
split level 49: [/input, 987] 
split level 50: [/input-8, 1300] 
split level 51: [/input-8, 1577] 
split level 52: [/input-8, 1313] 
split level 53: [/input, 1003] 
split level 54: [/input, 4060] 
split level 55: [/input-8, 1559] 
split level 56: [/input-8, 86] 
split level 57: [/input, 1017] 
split level 58: [/input, 743] 
split level 59: [/input, 744] 
split level 60: [/input, 1004] 
split level 61: [/input-8, 1703] 
split level 62: [/input, 732] 
split level 63: [/input-8, 412] 
split level 64: [/input-8, 1902] 
split level 65: [/input, 747] 
split level 66: [/input, 2409] 
split level 67: [/input-8, 1940] 
split level 68: [/input, 105] 
split level 69: [/input, 2147] 
split level 70: [/input-8, 795] 
split level 71: [/input-8, 1327] 
split level 72: [/input, 4072] 
split level 73: [/input-8, 1970] 
split level 74: [/input-8, 1510] 
split level 75: [/input, 3998] 
split level 76: [/input, 734] 
split level 77: [/input, 740] 
split level 78: [/input, 989] 
split level 79: [/input-8, 90] 
split level 80: [/input, 762] 
split level 81: [/input, 3994] 
split level 82: [/input, 2393] 
split level 83: [/input, 3933] 
split level 84: [/input-8, 1377] 
split level 85: [/input, 2389] 
split level 86: [/input-8, 1530] 
split level 87: [/input, 86] 
split level 88: [/input-8, 611] 
split level 89: [/input, 854] 
split level 90: [/input, 838] 
split level 91: [/input-8, 1379] 
split level 92: [/input, 19] 
split level 93: [/input-8, 811] 
split level 94: [/input, 749] 
split level 95: [/input, 748] 
split level 96: [/input, 2357] 
split level 97: [/input-8, 1504] 
split level 98: [/input-8, 46] 
split level 99: [/input, 2321] 
split level 100: [/input, 2390] 
split level 101: [/input, 996] 
split level 102: [/input, 2391] 
split level 103: [/input-8, 1057] 
split level 104: [/input, 1018] 
split level 105: [/input-8, 913] 
split level 106: [/input-8, 814] 
split level 107: [/input, 109] 
split level 108: [/input, 3979] 
split level 109: [/input, 3189] 
split level 110: [/input, 103] 
split level 111: [/input, 88] 
split level 112: [/input, 598] 
split level 113: [/input, 78] 
split level 114: [/input, 2541] 
split level 115: [/input, 71] 
split level 116: [/input, 2374] 
split level 117: [/input-8, 1933] 
split level 118: [/input, 837] 
split level 119: [/input, 2339] 
split level 120: [/input, 630] 
split level 121: [/input, 1019] 
split level 122: [/input, 2323] 
split level 123: [/input, 53] 
split level 124: [/input, 18] 
split level 125: [/input, 2792] 
split level 126: [/input-8, 682] 
split level 127: [/input, 2373] 
split level 128: [/input, 2358] 
split level 129: [/input, 902] 
split level 130: [/input, 2542] 
split level 131: [/input, 54] 
split level 132: [/input, 853] 
split level 133: [/input-8, 2009] 
split level 134: [/input, 73] 
split level 135: [/input, 953] 
split level 136: [/input, 2322] 
split level 137: [/input, 34] 
split level 138: [/input, 546] 
split level 139: [/input, 77] 
split level 140: [/input, 582] 
split level 141: [/input, 70] 
split level 142: [/input, 599] 
split level 143: [/input, 33] 
split level 144: [/input, 708] 
split level 145: [/input, 530] 
split level 146: [/input, 600] 
split level 147: [/input, 614] 
split level 148: [/input, 870] 
split level 149: [/input, 2410] 
split level 150: [/input, 926] 
split level 151: [/input, 36] 
split level 152: [/input, 87] 
split level 153: [/input, 237] 
split level 154: [/input, 821] 
split level 155: [/input, 2337] 
split level 156: [/input, 1006] 
split level 157: [/input, 566] 
split level 158: [/input, 2375] 
split level 159: [/input, 761] 
split level 160: [/input, 2341] 
split level 161: [/input, 221] 
split level 162: [/input-8, 1362] 
split level 163: [/input-8, 753] 
split level 164: [/input, 2695] 
split level 165: [/input, 17] 
split level 166: [/input, 2359] 
split level 167: [/input, 2340] 
split level 168: [/input, 2342] 
split level 169: [/input, 615] 
split level 170: [/input, 2531] 
split level 171: [/input, 2099] 
split level 172: [/input, 2338] 
split level 173: [/input, 869] 
split level 174: [/input, 35] 
split level 175: [/input, 2325] 
split level 176: [/input, 565] 
split level 177: [/input, 2324] 
split level 178: [/input, 2382] 
split level 179: [/input, 2376] 
split level 180: [/input, 652] 
split level 181: [/input, 2378] 
split level 182: [/input, 2532] 
split level 183: [/input, 1112] 
split level 184: [/input-8, 1886] 
split level 185: [/input, 2529] 
split level 186: [/input, 583] 
split level 187: [/input, 995] 
split level 188: [/input, 2377] 
split level 189: [/input, 4056] 
split level 190: [/input, 60] 
split level 191: [/input, 2307] 
split level 192: [/input, 2361] 
split level 193: [/input, 3943] 
split level 194: [/input, 2306] 
split level 195: [/input, 81] 
split level 196: [/input, 567] 
split level 197: [/input, 72] 
split level 198: [/input, 570] 
split level 199: [/input, 55] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4937688112258911
10 lb beta sum: 0.0, worst -0.4937763810157776
Time: prepare 0.0113    bound 0.1050    transfer 0.0026    finalize 0.0030    func 0.1246    
Accumulated time: func 0.1821    prepare 0.0218    bound 0.1621    transfer 0.0027    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.44547135) min lb tensor(-0.49376190)
Number of Verified Splits: 5 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.010827064514160156 
BICCOS Cumulative time: 0.010827064514160156
Preprocessing time: 0.010195732116699219 Inference time: 0.0002415180206298828 Add cuts time: 0.0001163482666015625 Cut analysis time: 0.0002734661102294922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.47784 (1), -0.47775 (1), -0.47761 (1), -0.47759 (1), -0.47747 (1), -0.47534 (1), -0.47533 (1), -0.47530 (1), -0.47447 (1), -0.47389 (1), -0.47376 (1), -0.47247 (1), -0.47198 (1), -0.47160 (1), -0.47066 (1), -0.47056 (1), -0.46775 (1), -0.46717 (1), -0.46658 (1), -0.46511 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5541    set_bounds 0.0089    solve 0.1247    add 0.1207    
Accumulated time: pickout 0.0004    decision 0.5541    set_bounds 0.0089    solve 0.1247    add 0.1207    
Current (lb-rhs): -0.47783833742141724
50 domains visited
Cumulative time: 0.8898012638092041

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
split level 1: [/input-12, 68] [/input-12, 68] [/input-12, 58] [/input-12, 68] [/input-12, 68] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 2: [/input-12, 15] [/input-12, 70] [/input-12, 68] [/input-12, 15] [/input-12, 15] [/input-12, 68] [/input-12, 15] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
split level 3: [/input-12, 70] [/input-12, 15] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.41303467750549316
10 lb beta sum: 0.9840720295906067, worst -0.39095479249954224
Time: prepare 0.0072    bound 0.1297    transfer 0.0007    finalize 0.0024    func 0.1426    
Accumulated time: func 0.3248    prepare 0.0292    bound 0.2918    transfer 0.0034    finalize 0.0055    
all_split False
======================Cut inference begins======================
max lb tensor(0.02636671) min lb tensor(-0.39084005)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.0123291015625 
BICCOS Cumulative time: 0.023156166076660156
Preprocessing time: 0.011849641799926758 Inference time: 9.72747802734375e-05 Add cuts time: 9.822845458984375e-05 Cut analysis time: 0.00028395652770996094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13931 (2), -0.13924 (2), -0.13901 (2), -0.13851 (2), -0.13808 (2), -0.13734 (2), -0.13626 (2), -0.13509 (2), -0.13428 (2), -0.13426 (2), -0.13400 (2), -0.13219 (2), -0.13207 (2), -0.13156 (2), -0.13151 (2), -0.13062 (2), -0.13055 (2), -0.13046 (2), -0.12982 (2), -0.12800 (2), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0242    set_bounds 0.0128    solve 0.1427    add 0.1036    
Accumulated time: pickout 0.0016    decision 0.5783    set_bounds 0.0216    solve 0.2674    add 0.2244    
Current (lb-rhs): -0.13930755853652954
100 domains visited
Cumulative time: 1.186948537826538

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 58] [/input-12, 68] [/input-12, 68] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-12, 68] [/input-12, 15] [/input-12, 15] [/input-12, 56] [/input-12, 56] [/input-12, 68] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
split level 2: [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 15] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 3: [/input-12, 15] [/input-12, 56] [/input-12, 56] [/input-12, 15] [/input-12, 15] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11091035604476929
10 lb beta sum: 0.7233335971832275, worst -0.08869537711143494
Time: prepare 0.0064    bound 0.1249    transfer 0.0007    finalize 0.0021    func 0.1371    
Accumulated time: func 0.4619    prepare 0.0359    bound 0.4167    transfer 0.0041    finalize 0.0076    
all_split False
======================Cut inference begins======================
max lb tensor(0.20694375) min lb tensor(-0.08846745)
Number of Verified Splits: 212 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.026369571685791016 
BICCOS Cumulative time: 0.04952573776245117
Preprocessing time: 0.011862993240356445 Inference time: 0.010269641876220703 Add cuts time: 0.0040204524993896484 Cut analysis time: 0.00021648406982421875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0209    set_bounds 0.0162    solve 0.1372    add 0.0183    
Accumulated time: pickout 0.0027    decision 0.5992    set_bounds 0.0378    solve 0.4046    add 0.2426    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 88] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 68] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 56] 
split level 5: [/input-12, 70] 
split level 6: [/input-12, 37] 
split level 7: [/input-12, 85] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.22134184837341309

all verified at 0th iter
Time: prepare 0.0036    bound 0.0044    transfer 0.0009    finalize 0.0014    func 0.0124    
Accumulated time: func 0.4743    prepare 0.0399    bound 0.4211    transfer 0.0050    finalize 0.0090    
all_split False
======================Cut inference begins======================
max lb tensor(0.39329380) min lb tensor(0.22134185)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006712436676025391 
BICCOS Cumulative time: 0.05623817443847656
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0252    set_bounds 0.0179    solve 0.0125    add 0.0001    
Accumulated time: pickout 0.0031    decision 0.6243    set_bounds 0.0558    solve 0.4171    add 0.2427    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
Cumulative time: 1.473423719406128


Properties batch 4, size 1
Remaining timeout: 196.76889991760254
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 196.76825881004333
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 196.7682318687439
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 196.76821064949036
Verifying property 7 with 1 instances.
##### Instance 136 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.44796634]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.06059647, -37.86866760, -35.37166977, -35.50696564, -35.05437469,
        -35.82231140, -37.19294739, -36.32546997, -34.89080811, -37.62431717],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.44796634]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 889
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 251
Node /15 input 0: size torch.Size([100]) unstable 34
-----------------
# of unstable neurons: 1174
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.775161743164062e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4479639530181885
10 lb beta sum: 0.0, worst -0.44797658920288086
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0563    transfer 0.0001    finalize 0.0001    func 0.0568    
Accumulated time: func 0.0568    prepare 0.0002    bound 0.0563    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 74] 
split level 1: [/input-12, 0] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 75] 
split level 4: [/input-12, 24] 
split level 5: [/input-12, 76] 
split level 6: [/input-12, 9] 
split level 7: [/input-12, 87] 
split level 8: [/input-12, 35] 
split level 9: [/input-12, 88] 
split level 10: [/input-12, 57] 
split level 11: [/input-12, 85] 
split level 12: [/input-12, 70] 
split level 13: [/input-12, 66] 
split level 14: [/input-12, 11] 
split level 15: [/input-12, 37] 
split level 16: [/input-8, 344] 
split level 17: [/input-12, 25] 
split level 18: [/input-8, 750] 
split level 19: [/input-8, 1842] 
split level 20: [/input-8, 1375] 
split level 21: [/input-8, 1846] 
split level 22: [/input-8, 1507] 
split level 23: [/input-8, 737] 
split level 24: [/input-8, 2027] 
split level 25: [/input-8, 757] 
split level 26: [/input-8, 1635] 
split level 27: [/input-8, 741] 
split level 28: [/input-8, 1843] 
split level 29: [/input-8, 1353] 
split level 30: [/input-8, 926] 
split level 31: [/input-8, 985] 
split level 32: [/input-8, 1509] 
split level 33: [/input-8, 753] 
split level 34: [/input-8, 298] 
split level 35: [/input-8, 1112] 
split level 36: [/input-8, 358] 
split level 37: [/input-8, 766] 
split level 38: [/input, 889] 
split level 39: [/input-8, 1595] 
split level 40: [/input-8, 925] 
split level 41: [/input-8, 763] 
split level 42: [/input-8, 1327] 
split level 43: [/input, 632] 
split level 44: [/input, 2147] 
split level 45: [/input, 631] 
split level 46: [/input, 3960] 
split level 47: [/input-8, 693] 
split level 48: [/input, 3270] 
split level 49: [/input-8, 1391] 
split level 50: [/input-8, 297] 
split level 51: [/input-8, 183] 
split level 52: [/input-8, 236] 
split level 53: [/input, 666] 
split level 54: [/input-8, 790] 
split level 55: [/input-8, 1377] 
split level 56: [/input-8, 1096] 
split level 57: [/input-8, 1390] 
split level 58: [/input, 3979] 
split level 59: [/input-8, 993] 
split level 60: [/input-8, 1500] 
split level 61: [/input-8, 1594] 
split level 62: [/input, 1987] 
split level 63: [/input-8, 1621] 
split level 64: [/input, 630] 
split level 65: [/input-12, 81] 
split level 66: [/input, 649] 
split level 67: [/input, 921] 
split level 68: [/input, 3994] 
split level 69: [/input, 634] 
split level 70: [/input, 4050] 
split level 71: [/input, 1239] 
split level 72: [/input, 3285] 
split level 73: [/input-8, 1481] 
split level 74: [/input, 3929] 
split level 75: [/input, 616] 
split level 76: [/input-8, 1354] 
split level 77: [/input, 3990] 
split level 78: [/input-8, 1727] 
split level 79: [/input-8, 761] 
split level 80: [/input, 892] 
split level 81: [/input-8, 354] 
split level 82: [/input, 4068] 
split level 83: [/input-8, 1309] 
split level 84: [/input-8, 970] 
split level 85: [/input, 706] 
split level 86: [/input-8, 1492] 
split level 87: [/input, 3998] 
split level 88: [/input, 1256] 
split level 89: [/input-8, 1039] 
split level 90: [/input, 3292] 
split level 91: [/input, 633] 
split level 92: [/input, 902] 
split level 93: [/input, 945] 
split level 94: [/input, 643] 
split level 95: [/input-8, 811] 
split level 96: [/input, 689] 
split level 97: [/input-8, 1902] 
split level 98: [/input-8, 1075] 
split level 99: [/input, 2481] 
split level 100: [/input, 854] 
split level 101: [/input, 961] 
split level 102: [/input, 1233] 
split level 103: [/input, 665] 
split level 104: [/input, 1976] 
split level 105: [/input, 664] 
split level 106: [/input, 3291] 
split level 107: [/input, 4034] 
split level 108: [/input, 652] 
split level 109: [/input, 1246] 
split level 110: [/input-8, 1521] 
split level 111: [/input, 1250] 
split level 112: [/input, 193] 
split level 113: [/input, 870] 
split level 114: [/input, 2230] 
split level 115: [/input, 1228] 
split level 116: [/input, 190] 
split level 117: [/input, 1236] 
split level 118: [/input, 615] 
split level 119: [/input, 158] 
split level 120: [/input, 2146] 
split level 121: [/input, 2510] 
split level 122: [/input, 3301] 
split level 123: [/input-8, 43] 
split level 124: [/input-8, 1356] 
split level 125: [/input, 4056] 
split level 126: [/input, 598] 
split level 127: [/input-8, 1525] 
split level 128: [/input-8, 1278] 
split level 129: [/input, 1235] 
split level 130: [/input, 3184] 
split level 131: [/input, 1255] 
split level 132: [/input-8, 1073] 
split level 133: [/input, 614] 
split level 134: [/input, 177] 
split level 135: [/input, 893] 
split level 136: [/input, 2526] 
split level 137: [/input, 3217] 
split level 138: [/input, 600] 
split level 139: [/input, 226] 
split level 140: [/input, 2433] 
split level 141: [/input, 4072] 
split level 142: [/input, 1234] 
split level 143: [/input, 2767] 
split level 144: [/input, 869] 
split level 145: [/input, 653] 
split level 146: [/input-8, 25] 
split level 147: [/input-8, 1076] 
split level 148: [/input, 2498] 
split level 149: [/input, 231] 
split level 150: [/input, 2814] 
split level 151: [/input, 1262] 
split level 152: [/input-8, 1967] 
split level 153: [/input, 2478] 
split level 154: [/input, 2497] 
split level 155: [/input, 705] 
split level 156: [/input, 2690] 
split level 157: [/input, 2527] 
split level 158: [/input, 225] 
split level 159: [/input, 207] 
split level 160: [/input, 2553] 
split level 161: [/input, 2511] 
split level 162: [/input, 3302] 
split level 163: [/input, 143] 
split level 164: [/input-8, 2009] 
split level 165: [/input, 191] 
split level 166: [/input-8, 1980] 
split level 167: [/input, 210] 
split level 168: [/input, 599] 
split level 169: [/input, 2513] 
split level 170: [/input, 209] 
split level 171: [/input, 2695] 
split level 172: [/input, 2722] 
split level 173: [/input-8, 1057] 
split level 174: [/input, 227] 
split level 175: [/input, 998] 
split level 176: [/input, 103] 
split level 177: [/input-8, 1384] 
split level 178: [/input, 175] 
split level 179: [/input, 223] 
split level 180: [/input, 2542] 
split level 181: [/input, 1212] 
split level 182: [/input, 853] 
split level 183: [/input, 619] 
split level 184: [/input, 2390] 
split level 185: [/input, 3943] 
split level 186: [/input, 820] 
split level 187: [/input-8, 85] 
split level 188: [/input, 856] 
split level 189: [/input, 2726] 
split level 190: [/input, 743] 
split level 191: [/input, 3959] 
split level 192: [/input-8, 1049] 
split level 193: [/input, 2375] 
split level 194: [/input, 239] 
split level 195: [/input, 641] 
split level 196: [/input, 1019] 
split level 197: [/input, 2813] 
split level 198: [/input, 2514] 
split level 199: [/input, 2529] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4477715492248535
10 lb beta sum: 0.0, worst -0.44779157638549805
Time: prepare 0.0116    bound 0.1027    transfer 0.0026    finalize 0.0030    func 0.1224    
Accumulated time: func 0.1792    prepare 0.0217    bound 0.1590    transfer 0.0027    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.41658747) min lb tensor(-0.44777060)
Number of Verified Splits: 8 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.010947227478027344 
BICCOS Cumulative time: 0.010947227478027344
Preprocessing time: 0.01019430160522461 Inference time: 0.0003409385681152344 Add cuts time: 0.0001289844512939453 Cut analysis time: 0.0002830028533935547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.43237 (1), -0.43183 (1), -0.43011 (1), -0.42957 (1), -0.42929 (1), -0.42842 (1), -0.42739 (1), -0.42682 (1), -0.42609 (1), -0.42565 (1), -0.42504 (1), -0.42467 (1), -0.42397 (1), -0.42359 (1), -0.42173 (1), -0.42044 (1), -0.41935 (1), -0.41823 (1), -0.41762 (1), -0.41657 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5417    set_bounds 0.0086    solve 0.1225    add 0.1142    
Accumulated time: pickout 0.0004    decision 0.5417    set_bounds 0.0086    solve 0.1225    add 0.1142    
Current (lb-rhs): -0.43236875534057617
50 domains visited
Cumulative time: 0.8609561920166016

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] 
split level 1: [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 90] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] 
split level 2: [/input-12, 75] [/input-12, 90] [/input-12, 90] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 90] [/input-12, 75] [/input-12, 75] 
split level 3: [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 75] [/input-12, 88] [/input-12, 88] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.38387393951416016
10 lb beta sum: 1.2668949365615845, worst -0.16032254695892334
Time: prepare 0.0073    bound 0.1269    transfer 0.0008    finalize 0.0029    func 0.1410    
Accumulated time: func 0.3202    prepare 0.0292    bound 0.2859    transfer 0.0035    finalize 0.0060    
all_split False
======================Cut inference begins======================
max lb tensor(0.59068501) min lb tensor(-0.15297759)
Number of Verified Splits: 230 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.027783870697021484 
BICCOS Cumulative time: 0.03873109817504883
Preprocessing time: 0.012590646743774414 Inference time: 0.009315252304077148 Add cuts time: 0.005644798278808594 Cut analysis time: 0.00023317337036132812
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0015    decision 0.0222    set_bounds 0.0136    solve 0.1411    add 0.0152    
Accumulated time: pickout 0.0019    decision 0.5639    set_bounds 0.0221    solve 0.2636    add 0.1293    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 74] 
split level 1: [/input-12, 0] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 75] 
split level 4: [/input-12, 88] 
split level 5: [/input-12, 85] 
split level 6: [/input-12, 70] 
split level 7: [/input-12, 66] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.27067017555236816

all verified at 0th iter
Time: prepare 0.0036    bound 0.0043    transfer 0.0009    finalize 0.0013    func 0.0117    
Accumulated time: func 0.3319    prepare 0.0333    bound 0.2902    transfer 0.0044    finalize 0.0073    
all_split False
======================Cut inference begins======================
max lb tensor(1.45861125) min lb tensor(0.27067018)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006321907043457031 
BICCOS Cumulative time: 0.04505300521850586
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0165    solve 0.0118    add 0.0003    
Accumulated time: pickout 0.0022    decision 0.5870    set_bounds 0.0387    solve 0.2754    add 0.1296    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.1440520286560059


Properties batch 8, size 1
Remaining timeout: 195.43748903274536
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 4.5626 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 137, vnnlib ID: 137 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.83466721, -36.65896988, -29.37007904, -30.16363335, -31.48695946,
         -30.66126823, -28.76849556, -33.52209854, -35.60262680, -34.12106705]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [571]; unstable size 571; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 380, 1, 571] with unstable size 379 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 52, 1, 571] with unstable size 51 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 571] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [379]; unstable size 379; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 52, 1, 379] with unstable size 51 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 379] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [51]; unstable size 51; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 51] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.11052155,  2.80691481, -2.82822967, -1.48347151, -1.11186218,
         -1.54414582, -0.06860805,  2.23364830, -0.09015560]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.83466721, -36.65896988, -29.37007904, -30.16363335, -31.48695946,
         -30.66126823, -28.76849556, -33.52209854, -35.60262680, -34.12106705]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.26071167, -35.82791138, -27.60193825, -29.03044510, -30.09301567,
          -29.41004944, -28.28551674, -31.92242432, -34.38005447, -33.12072754],
         [-34.26071167, -35.82791138, -27.60193825, -29.03044510, -30.09301567,
          -29.41004944, -28.28551674, -31.92242432, -34.38005447, -33.12072754]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.68357849,  0.74492836,  1.80749893,  1.12453270,  3.63690758,
           4.83521080]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0068 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0767 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 138, vnnlib ID: 138 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.90389442, -25.57161140, -23.04403496, -22.29045868, -23.64795113,
         -23.41537666, -22.64059830, -24.92478561, -24.33445549, -23.37991714]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [733]; unstable size 733; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 242, 1, 733] with unstable size 241 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 35, 1, 733] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 733] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [241]; unstable size 241; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 35, 1, 241] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 241] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [34]; unstable size 34; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.99267340, -1.71139348, -2.02224755, -1.44177055, -1.06771338,
         -2.04471779, -0.37539661, -0.17014408, -1.43613327]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.90389442, -25.57161140, -23.04403496, -22.29045868, -23.64795113,
         -23.41537666, -22.64059830, -24.92478561, -24.33445549, -23.37991714]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.04287338, -25.39374733, -22.67065811, -21.46038246, -23.18366623,
          -22.60782814, -21.82315254, -24.48106003, -24.14313698, -23.24012566],
         [-22.04287338, -25.39374733, -22.67065811, -21.46038246, -23.18366623,
          -22.60782814, -21.82315254, -24.48106003, -24.14313698, -23.24012566]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.62778473, -0.58249092,  1.14079285,  0.56495476, -0.21972084,
           2.43818665,  2.10026360,  1.19725227]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0139 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0423 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 139, vnnlib ID: 139 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.03122711, -37.19699478, -31.84561920, -33.64174652, -31.08056068,
         -34.18182373, -28.38290024, -34.26268387, -37.11890793, -38.15292740]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [600]; unstable size 600; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 373, 1, 600] with unstable size 372 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 51, 1, 600] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 600] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [372]; unstable size 372; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 51, 1, 372] with unstable size 50 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 372] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [50]; unstable size 50; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 50] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.62568927,  3.45429254, -1.31699038,  1.72314346, -1.18160915,
          1.17435312,  0.89717007,  3.75266123,  4.05658150]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.03122711, -37.19699478, -31.84561920, -33.64174652, -31.08056068,
         -34.18182373, -28.38290024, -34.26268387, -37.11890793, -38.15292740]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.13it/s]100%|██████████| 1/1 [00:00<00:00,  8.12it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.96290970, -35.60878754, -29.74576378, -31.52229500, -28.55191803,
          -31.79289055, -27.06997871, -31.92802811, -35.22123718, -36.18610001],
         [-33.96290970, -35.60878754, -29.74576378, -31.52229500, -28.55191803,
          -31.79289055, -27.06997871, -31.92802811, -35.22123718, -36.18610001]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.67578506, 1.48193932]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1262 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.29000473022461
alpha/beta optimization time: 1.3129889965057373
initial alpha-crown bounds: tensor([[ 2.85417652,  3.75655508, -1.13647318,  1.88907409, -0.97248840,
          1.37413013,  1.14203095,  4.01940823,  4.36359215]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -1.1364731788635254
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.49371123313904
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.4936683177948
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.49363946914673
Verifying property 2 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.13647318]], device='cuda:0') need to verify.
Model prediction is: tensor([-36.03122711, -37.19699478, -31.84561920, -33.64174652, -31.08056068,
        -34.18182373, -28.38290024, -34.26268387, -37.11890793, -38.15292740],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.13647318]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 600
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 368
Node /15 input 0: size torch.Size([100]) unstable 49
-----------------
# of unstable neurons: 1017
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010514259338378906
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.136467456817627
10 lb beta sum: 0.0, worst -1.1364822387695312
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0562    transfer 0.0001    finalize 0.0001    func 0.0567    
Accumulated time: func 0.0567    prepare 0.0002    bound 0.0562    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] 
split level 1: [/input-12, 62] 
split level 2: [/input-12, 92] 
split level 3: [/input-12, 66] 
split level 4: [/input-12, 22] 
split level 5: [/input-12, 28] 
split level 6: [/input-12, 15] 
split level 7: [/input-12, 7] 
split level 8: [/input-12, 71] 
split level 9: [/input-12, 83] 
split level 10: [/input-12, 48] 
split level 11: [/input-12, 61] 
split level 12: [/input-12, 50] 
split level 13: [/input-12, 95] 
split level 14: [/input-12, 16] 
split level 15: [/input-12, 14] 
split level 16: [/input-12, 46] 
split level 17: [/input-12, 85] 
split level 18: [/input-12, 67] 
split level 19: [/input-12, 19] 
split level 20: [/input-12, 84] 
split level 21: [/input-12, 73] 
split level 22: [/input-12, 74] 
split level 23: [/input-8, 1315] 
split level 24: [/input-8, 1308] 
split level 25: [/input-8, 1891] 
split level 26: [/input-8, 1876] 
split level 27: [/input-8, 1892] 
split level 28: [/input-8, 1778] 
split level 29: [/input-8, 616] 
split level 30: [/input-8, 1497] 
split level 31: [/input-8, 1884] 
split level 32: [/input-8, 410] 
split level 33: [/input-12, 97] 
split level 34: [/input-8, 1005] 
split level 35: [/input-8, 1387] 
split level 36: [/input-8, 733] 
split level 37: [/input-8, 1757] 
split level 38: [/input-8, 411] 
split level 39: [/input-8, 1885] 
split level 40: [/input-8, 1509] 
split level 41: [/input-8, 1779] 
split level 42: [/input-8, 1498] 
split level 43: [/input-8, 418] 
split level 44: [/input-12, 94] 
split level 45: [/input-8, 924] 
split level 46: [/input-8, 932] 
split level 47: [/input-8, 699] 
split level 48: [/input-8, 1877] 
split level 49: [/input-8, 419] 
split level 50: [/input-8, 403] 
split level 51: [/input-12, 35] 
split level 52: [/input-8, 564] 
split level 53: [/input-8, 585] 
split level 54: [/input-8, 1548] 
split level 55: [/input-8, 1780] 
split level 56: [/input-8, 1324] 
split level 57: [/input-8, 1490] 
split level 58: [/input-8, 1502] 
split level 59: [/input-8, 1765] 
split level 60: [/input-8, 1787] 
split level 61: [/input-8, 1147] 
split level 62: [/input-8, 1140] 
split level 63: [/input-8, 618] 
split level 64: [/input-8, 1510] 
split level 65: [/input-8, 586] 
split level 66: [/input-8, 1865] 
split level 67: [/input-8, 914] 
split level 68: [/input-8, 1306] 
split level 69: [/input-8, 1561] 
split level 70: [/input-8, 1542] 
split level 71: [/input-8, 428] 
split level 72: [/input-8, 500] 
split level 73: [/input-8, 724] 
split level 74: [/input-8, 243] 
split level 75: [/input-8, 1436] 
split level 76: [/input-8, 1501] 
split level 77: [/input-8, 1874] 
split level 78: [/input-8, 1507] 
split level 79: [/input-8, 1890] 
split level 80: [/input-8, 723] 
split level 81: [/input-8, 1052] 
split level 82: [/input-8, 412] 
split level 83: [/input-8, 1472] 
split level 84: [/input-8, 1289] 
split level 85: [/input-8, 1962] 
split level 86: [/input-8, 1549] 
split level 87: [/input-8, 1489] 
split level 88: [/input-8, 1566] 
split level 89: [/input-8, 1917] 
split level 90: [/input-8, 650] 
split level 91: [/input-8, 1297] 
split level 92: [/input-8, 557] 
split level 93: [/input-8, 1867] 
split level 94: [/input-8, 1541] 
split level 95: [/input-8, 1752] 
split level 96: [/input-8, 518] 
split level 97: [/input-8, 1482] 
split level 98: [/input-8, 429] 
split level 99: [/input-8, 1015] 
split level 100: [/input-8, 1869] 
split level 101: [/input-8, 1468] 
split level 102: [/input-8, 1144] 
split level 103: [/input-8, 1946] 
split level 104: [/input-8, 1041] 
split level 105: [/input-8, 474] 
split level 106: [/input-8, 626] 
split level 107: [/input-12, 82] 
split level 108: [/input-8, 400] 
split level 109: [/input-8, 605] 
split level 110: [/input, 3926] 
split level 111: [/input-8, 726] 
split level 112: [/input-8, 1754] 
split level 113: [/input-8, 1494] 
split level 114: [/input-8, 1146] 
split level 115: [/input-8, 1491] 
split level 116: [/input, 3927] 
split level 117: [/input-8, 1301] 
split level 118: [/input, 633] 
split level 119: [/input-8, 473] 
split level 120: [/input-8, 1067] 
split level 121: [/input-8, 1545] 
split level 122: [/input-8, 1557] 
split level 123: [/input-8, 1069] 
split level 124: [/input-8, 1483] 
split level 125: [/input, 3894] 
split level 126: [/input-8, 401] 
split level 127: [/input, 3271] 
split level 128: [/input-8, 421] 
split level 129: [/input-8, 1947] 
split level 130: [/input-8, 1777] 
split level 131: [/input-8, 940] 
split level 132: [/input-8, 1746] 
split level 133: [/input-8, 1480] 
split level 134: [/input-8, 334] 
split level 135: [/input-8, 1078] 
split level 136: [/input-8, 2031] 
split level 137: [/input, 1890] 
split level 138: [/input-8, 1142] 
split level 139: [/input-8, 633] 
split level 140: [/input, 3929] 
split level 141: [/input, 2276] 
split level 142: [/input-8, 1070] 
split level 143: [/input-8, 1658] 
split level 144: [/input-8, 1747] 
split level 145: [/input-8, 1058] 
split level 146: [/input, 1731] 
split level 147: [/input-8, 1396] 
split level 148: [/input-8, 1136] 
split level 149: [/input-8, 394] 
split level 150: [/input, 870] 
split level 151: [/input-8, 746] 
split level 152: [/input-8, 968] 
split level 153: [/input-8, 1068] 
split level 154: [/input-8, 1641] 
split level 155: [/input-8, 1072] 
split level 156: [/input-8, 1370] 
split level 157: [/input-8, 1645] 
split level 158: [/input-8, 1050] 
split level 159: [/input-12, 2] 
split level 160: [/input-8, 1614] 
split level 161: [/input, 3893] 
split level 162: [/input, 2771] 
split level 163: [/input-8, 560] 
split level 164: [/input-8, 1558] 
split level 165: [/input-8, 396] 
split level 166: [/input-8, 1492] 
split level 167: [/input-8, 1900] 
split level 168: [/input-8, 834] 
split level 169: [/input, 3524] 
split level 170: [/input, 3958] 
split level 171: [/input-8, 1386] 
split level 172: [/input-8, 76] 
split level 173: [/input-8, 1293] 
split level 174: [/input, 2938] 
split level 175: [/input, 2226] 
split level 176: [/input, 2937] 
split level 177: [/input, 598] 
split level 178: [/input, 297] 
split level 179: [/input, 1051] 
split level 180: [/input, 597] 
split level 181: [/input-8, 1481] 
split level 182: [/input-8, 113] 
split level 183: [/input-8, 729] 
split level 184: [/input-8, 1062] 
split level 185: [/input-8, 1582] 
split level 186: [/input-8, 649] 
split level 187: [/input-8, 856] 
split level 188: [/input, 2953] 
split level 189: [/input, 2900] 
split level 190: [/input, 4074] 
split level 191: [/input, 2916] 
split level 192: [/input, 3094] 
split level 193: [/input, 1715] 
split level 194: [/input-8, 1249] 
split level 195: [/input, 839] 
split level 196: [/input, 2954] 
split level 197: [/input, 740] 
split level 198: [/input-8, 350] 
split level 199: [/input-8, 482] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.136134147644043
10 lb beta sum: 0.0, worst -1.1361312866210938
Time: prepare 0.0115    bound 0.1052    transfer 0.0027    finalize 0.0031    func 0.1253    
Accumulated time: func 0.1820    prepare 0.0223    bound 0.1615    transfer 0.0028    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(-0.55168152) min lb tensor(-1.13612175)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.011218547821044922 
BICCOS Cumulative time: 0.011218547821044922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.08940 (1), -1.08924 (1), -1.08752 (1), -1.08655 (1), -1.08590 (1), -1.08440 (1), -1.08339 (1), -1.08081 (1), -1.08072 (1), -1.07662 (1), -1.07514 (1), -1.07216 (1), -1.07213 (1), -1.07019 (1), -1.06852 (1), -1.05868 (1), -1.05809 (1), -1.05779 (1), -1.05574 (1), -1.04787 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5540    set_bounds 0.0092    solve 0.1254    add 0.1938    
Accumulated time: pickout 0.0003    decision 0.5540    set_bounds 0.0092    solve 0.1254    add 0.1938    
Current (lb-rhs): -1.0893969535827637
50 domains visited
Cumulative time: 0.9631574153900146

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 62] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 62] 
split level 1: [/input-12, 66] [/input-12, 62] [/input-12, 62] [/input-12, 92] [/input-12, 66] [/input-12, 92] [/input-12, 22] [/input-12, 62] [/input-12, 62] [/input-12, 57] 
split level 2: [/input-12, 92] [/input-12, 66] [/input-12, 92] [/input-12, 66] [/input-12, 92] [/input-12, 62] [/input-12, 66] [/input-12, 92] [/input-12, 66] [/input-12, 92] 
split level 3: [/input-12, 62] [/input-12, 92] [/input-12, 66] [/input-12, 22] [/input-12, 22] [/input-12, 66] [/input-12, 62] [/input-12, 22] [/input-12, 22] [/input-12, 66] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8972582817077637
10 lb beta sum: 0.0, worst -0.895958423614502
Time: prepare 0.0116    bound 0.1045    transfer 0.0008    finalize 0.0021    func 0.1216    
Accumulated time: func 0.3035    prepare 0.0342    bound 0.2660    transfer 0.0035    finalize 0.0054    
all_split False
======================Cut inference begins======================
max lb tensor(-0.16510630) min lb tensor(-0.89548779)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.011782169342041016 
BICCOS Cumulative time: 0.023000717163085938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.45586 (2), -0.45577 (2), -0.45216 (2), -0.45203 (2), -0.44695 (2), -0.43536 (2), -0.42410 (2), -0.42394 (2), -0.42337 (2), -0.42314 (2), -0.41976 (2), -0.41941 (2), -0.41758 (2), -0.41717 (2), -0.41431 (2), -0.41325 (2), -0.41229 (2), -0.41134 (2), -0.40927 (2), -0.39325 (2), 
Length of domains: 50
Time: pickout 0.0153    decision 0.0210    set_bounds 0.0147    solve 0.1216    add 0.1611    
Accumulated time: pickout 0.0156    decision 0.5750    set_bounds 0.0239    solve 0.2470    add 0.3549    
Current (lb-rhs): -0.4558577537536621
100 domains visited
Cumulative time: 1.3089244365692139

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] [/input-12, 92] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 62] [/input-12, 57] [/input-12, 57] [/input-12, 92] 
split level 1: [/input-12, 92] [/input-12, 62] [/input-12, 22] [/input-12, 92] [/input-12, 62] [/input-12, 66] [/input-12, 92] [/input-12, 66] [/input-12, 62] [/input-12, 62] 
split level 2: [/input-12, 62] [/input-12, 66] [/input-12, 66] [/input-12, 62] [/input-12, 66] [/input-12, 92] [/input-12, 66] [/input-12, 92] [/input-12, 66] [/input-12, 66] 
split level 3: [/input-12, 22] [/input-12, 22] [/input-12, 62] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2697744369506836
10 lb beta sum: 0.0, worst -0.26915621757507324
Time: prepare 0.0111    bound 0.1049    transfer 0.0008    finalize 0.0026    func 0.1221    
Accumulated time: func 0.4256    prepare 0.0456    bound 0.3709    transfer 0.0044    finalize 0.0080    
all_split False
======================Cut inference begins======================
max lb tensor(0.23344040) min lb tensor(-0.26674271)
Number of Verified Splits: 140 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 6
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.021714210510253906 
BICCOS Cumulative time: 0.044714927673339844
Preprocessing time: 0.012186288833618164 Inference time: 0.007323503494262695 Add cuts time: 0.0017261505126953125 Cut analysis time: 0.0004782676696777344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06073 (3), -0.05939 (3), -0.05933 (3), -0.05882 (3), -0.05762 (3), -0.05235 (3), -0.05231 (3), -0.05196 (3), -0.05189 (3), -0.05150 (3), -0.05141 (3), -0.04932 (3), -0.04908 (3), -0.04815 (3), -0.04815 (3), -0.04776 (3), -0.04764 (3), -0.04399 (3), -0.02956 (3), -0.02948 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0208    set_bounds 0.0157    solve 0.1222    add 0.0945    
Accumulated time: pickout 0.0166    decision 0.5957    set_bounds 0.0397    solve 0.3692    add 0.4494    
Current (lb-rhs): -0.060730934143066406
150 domains visited
Cumulative time: 1.585085391998291

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 1: [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] 
split level 2: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
split level 3: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.09633183479309082

all verified at 0th iter
Time: prepare 0.0062    bound 0.0056    transfer 0.0023    finalize 0.0025    func 0.0191    
Accumulated time: func 0.4447    prepare 0.0520    bound 0.3764    transfer 0.0067    finalize 0.0104    
all_split False
======================Cut inference begins======================
max lb tensor(0.42676306) min lb tensor(0.09633183)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 7
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.03822731971740723 
BICCOS Cumulative time: 0.08294224739074707
Preprocessing time: 0.011971712112426758 Inference time: 0.02213001251220703 Add cuts time: 0.0034890174865722656 Cut analysis time: 0.0006365776062011719
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0205    set_bounds 0.0160    solve 0.0192    add 0.0242    
Accumulated time: pickout 0.0176    decision 0.6162    set_bounds 0.0556    solve 0.3884    add 0.4736    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] 
split level 1: [/input-12, 62] 
split level 2: [/input-12, 92] 
split level 3: [/input-12, 66] 
split level 4: [/input-12, 22] 
split level 5: [/input-12, 15] 
split level 6: [/input-12, 7] 
split level 7: [/input-12, 61] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.6458711624145508

all verified at 0th iter
Time: prepare 0.0036    bound 0.0049    transfer 0.0009    finalize 0.0014    func 0.0125    
Accumulated time: func 0.4573    prepare 0.0561    bound 0.3814    transfer 0.0076    finalize 0.0119    
all_split False
======================Cut inference begins======================
max lb tensor(1.41603601) min lb tensor(0.64587116)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 15.
#cuts 1-3: 7
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.006396770477294922 
BICCOS Cumulative time: 0.08933901786804199
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0170    solve 0.0126    add 0.0003    
Accumulated time: pickout 0.0180    decision 0.6396    set_bounds 0.0726    solve 0.4010    add 0.4739    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
Cumulative time: 1.7685015201568604


Properties batch 3, size 1
Remaining timeout: 196.534601688385
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 196.53451681137085
Verifying property 4 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.97248840]], device='cuda:0') need to verify.
Model prediction is: tensor([-36.03122711, -37.19699478, -31.84561920, -33.64174652, -31.08056068,
        -34.18182373, -28.38290024, -34.26268387, -37.11890793, -38.15292740],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.97248840]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 600
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 368
Node /15 input 0: size torch.Size([100]) unstable 49
-----------------
# of unstable neurons: 1017
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.000102996826171875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9724850654602051
10 lb beta sum: 0.0, worst -0.9725055694580078
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0582    transfer 0.0001    finalize 0.0001    func 0.0587    
Accumulated time: func 0.0587    prepare 0.0002    bound 0.0582    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-12, 95] 
split level 2: [/input-12, 61] 
split level 3: [/input-12, 88] 
split level 4: [/input-12, 58] 
split level 5: [/input-12, 62] 
split level 6: [/input-12, 22] 
split level 7: [/input-12, 73] 
split level 8: [/input-12, 29] 
split level 9: [/input-12, 50] 
split level 10: [/input-12, 19] 
split level 11: [/input-12, 67] 
split level 12: [/input-12, 16] 
split level 13: [/input-12, 94] 
split level 14: [/input-12, 82] 
split level 15: [/input-12, 48] 
split level 16: [/input-12, 46] 
split level 17: [/input-8, 1778] 
split level 18: [/input-12, 15] 
split level 19: [/input-8, 1490] 
split level 20: [/input-8, 429] 
split level 21: [/input-8, 1387] 
split level 22: [/input-8, 428] 
split level 23: [/input-8, 1497] 
split level 24: [/input-8, 418] 
split level 25: [/input-8, 1005] 
split level 26: [/input-8, 1509] 
split level 27: [/input-8, 410] 
split level 28: [/input-12, 35] 
split level 29: [/input-12, 36] 
split level 30: [/input-8, 419] 
split level 31: [/input-8, 1306] 
split level 32: [/input-8, 1498] 
split level 33: [/input-8, 1507] 
split level 34: [/input-8, 1780] 
split level 35: [/input-12, 14] 
split level 36: [/input-8, 421] 
split level 37: [/input-8, 1491] 
split level 38: [/input-8, 616] 
split level 39: [/input-12, 92] 
split level 40: [/input-8, 1140] 
split level 41: [/input-8, 1483] 
split level 42: [/input-8, 1482] 
split level 43: [/input-8, 1147] 
split level 44: [/input-8, 1779] 
split level 45: [/input-12, 54] 
split level 46: [/input-8, 411] 
split level 47: [/input-8, 243] 
split level 48: [/input-8, 1517] 
split level 49: [/input-8, 1289] 
split level 50: [/input-8, 1361] 
split level 51: [/input-8, 1501] 
split level 52: [/input-8, 1489] 
split level 53: [/input-8, 1962] 
split level 54: [/input-8, 474] 
split level 55: [/input, 1944] 
split level 56: [/input-8, 1297] 
split level 57: [/input-8, 1787] 
split level 58: [/input-8, 1308] 
split level 59: [/input-8, 1068] 
split level 60: [/input-8, 854] 
split level 61: [/input-8, 1385] 
split level 62: [/input-8, 403] 
split level 63: [/input, 3926] 
split level 64: [/input-8, 412] 
split level 65: [/input-8, 1492] 
split level 66: [/input-8, 1069] 
split level 67: [/input-8, 1757] 
split level 68: [/input-8, 1747] 
split level 69: [/input-8, 1396] 
split level 70: [/input-8, 853] 
split level 71: [/input-8, 1502] 
split level 72: [/input-8, 1468] 
split level 73: [/input-8, 1561] 
split level 74: [/input-12, 85] 
split level 75: [/input-8, 1070] 
split level 76: [/input-8, 1525] 
split level 77: [/input, 3958] 
split level 78: [/input-8, 1524] 
split level 79: [/input-8, 477] 
split level 80: [/input-8, 1641] 
split level 81: [/input-8, 1315] 
split level 82: [/input-8, 1481] 
split level 83: [/input-8, 1523] 
split level 84: [/input-8, 2031] 
split level 85: [/input, 650] 
split level 86: [/input-8, 932] 
split level 87: [/input, 3894] 
split level 88: [/input-8, 1515] 
split level 89: [/input-8, 1642] 
split level 90: [/input-8, 1136] 
split level 91: [/input-8, 1510] 
split level 92: [/input-8, 856] 
split level 93: [/input-8, 924] 
split level 94: [/input, 633] 
split level 95: [/input-8, 1146] 
split level 96: [/input-8, 1078] 
split level 97: [/input-8, 1514] 
split level 98: [/input-8, 1067] 
split level 99: [/input-8, 1144] 
split level 100: [/input, 3995] 
split level 101: [/input-8, 1072] 
split level 102: [/input-8, 1494] 
split level 103: [/input-8, 401] 
split level 104: [/input-8, 1015] 
split level 105: [/input, 666] 
split level 106: [/input, 3927] 
split level 107: [/input-8, 1746] 
split level 108: [/input-8, 1386] 
split level 109: [/input-8, 618] 
split level 110: [/input-8, 1257] 
split level 111: [/input-8, 586] 
split level 112: [/input, 599] 
split level 113: [/input-8, 1658] 
split level 114: [/input-8, 1645] 
split level 115: [/input, 651] 
split level 116: [/input, 1843] 
split level 117: [/input, 598] 
split level 118: [/input, 649] 
split level 119: [/input, 1890] 
split level 120: [/input-8, 626] 
split level 121: [/input, 613] 
split level 122: [/input, 682] 
split level 123: [/input, 595] 
split level 124: [/input-8, 81] 
split level 125: [/input-8, 335] 
split level 126: [/input, 629] 
split level 127: [/input-8, 1876] 
split level 128: [/input-8, 1219] 
split level 129: [/input, 2771] 
split level 130: [/input-8, 2029] 
split level 131: [/input, 597] 
split level 132: [/input-8, 394] 
split level 133: [/input, 3893] 
split level 134: [/input, 615] 
split level 135: [/input-8, 1947] 
split level 136: [/input-8, 1917] 
split level 137: [/input-8, 1228] 
split level 138: [/input-8, 371] 
split level 139: [/input, 870] 
split level 140: [/input, 2953] 
split level 141: [/input-8, 1869] 
split level 142: [/input-8, 1891] 
split level 143: [/input, 2110] 
split level 144: [/input-8, 396] 
split level 145: [/input, 3862] 
split level 146: [/input-8, 1391] 
split level 147: [/input-8, 1077] 
split level 148: [/input-8, 650] 
split level 149: [/input, 2226] 
split level 150: [/input-8, 605] 
split level 151: [/input-8, 1142] 
split level 152: [/input, 683] 
split level 153: [/input-8, 400] 
split level 154: [/input-8, 1249] 
split level 155: [/input, 2952] 
split level 156: [/input-8, 482] 
split level 157: [/input, 2937] 
split level 158: [/input-8, 1777] 
split level 159: [/input, 611] 
split level 160: [/input-8, 1480] 
split level 161: [/input, 679] 
split level 162: [/input-8, 1058] 
split level 163: [/input, 667] 
split level 164: [/input-8, 1679] 
split level 165: [/input-8, 1925] 
split level 166: [/input-8, 1097] 
split level 167: [/input-8, 1062] 
split level 168: [/input-8, 305] 
split level 169: [/input, 971] 
split level 170: [/input-8, 834] 
split level 171: [/input, 3975] 
split level 172: [/input-8, 1304] 
split level 173: [/input-8, 328] 
split level 174: [/input, 4074] 
split level 175: [/input, 2276] 
split level 176: [/input-8, 1765] 
split level 177: [/input-8, 473] 
split level 178: [/input-8, 1926] 
split level 179: [/input, 4043] 
split level 180: [/input, 2951] 
split level 181: [/input-8, 485] 
split level 182: [/input-8, 1275] 
split level 183: [/input, 740] 
split level 184: [/input, 648] 
split level 185: [/input, 1141] 
split level 186: [/input-8, 891] 
split level 187: [/input-8, 1383] 
split level 188: [/input-8, 1614] 
split level 189: [/input, 839] 
split level 190: [/input-8, 587] 
split level 191: [/input, 3524] 
split level 192: [/input, 4059] 
split level 193: [/input, 600] 
split level 194: [/input, 1169] 
split level 195: [/input, 2954] 
split level 196: [/input, 2900] 
split level 197: [/input, 987] 
split level 198: [/input, 2916] 
split level 199: [/input, 3860] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9720044136047363
10 lb beta sum: 0.0, worst -0.9720020294189453
Time: prepare 0.0114    bound 0.1066    transfer 0.0008    finalize 0.0027    func 0.1241    
Accumulated time: func 0.1828    prepare 0.0220    bound 0.1649    transfer 0.0009    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(-0.05494738) min lb tensor(-0.97197819)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010138273239135742 
BICCOS Cumulative time: 0.010138273239135742
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.93485 (1), -0.93426 (1), -0.93424 (1), -0.93337 (1), -0.93264 (1), -0.93229 (1), -0.93221 (1), -0.93175 (1), -0.92911 (1), -0.92903 (1), -0.92812 (1), -0.92578 (1), -0.92475 (1), -0.92389 (1), -0.92230 (1), -0.92201 (1), -0.91974 (1), -0.91952 (1), -0.91905 (1), -0.91821 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5510    set_bounds 0.0088    solve 0.1242    add 0.1329    
Accumulated time: pickout 0.0004    decision 0.5510    set_bounds 0.0088    solve 0.1242    add 0.1329    
Current (lb-rhs): -0.9348535537719727
50 domains visited
Cumulative time: 0.9018993377685547

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 95] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
split level 1: [/input-12, 88] [/input-12, 95] [/input-12, 95] [/input-12, 61] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] 
split level 2: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 88] [/input-12, 88] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 88] 
split level 3: [/input-12, 58] [/input-12, 88] [/input-12, 88] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 88] [/input-12, 58] [/input-12, 88] [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.845921516418457
10 lb beta sum: 0.0, worst -0.8412380218505859
Time: prepare 0.0118    bound 0.1046    transfer 0.0007    finalize 0.0023    func 0.1220    
Accumulated time: func 0.3048    prepare 0.0340    bound 0.2695    transfer 0.0016    finalize 0.0051    
all_split False
======================Cut inference begins======================
max lb tensor(0.56408453) min lb tensor(-0.84110737)
Number of Verified Splits: 52 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.015178680419921875 
BICCOS Cumulative time: 0.025316953659057617
Preprocessing time: 0.011658668518066406 Inference time: 0.0021054744720458984 Add cuts time: 0.00110626220703125 Cut analysis time: 0.0003082752227783203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40007 (2), -0.39981 (2), -0.39129 (2), -0.38859 (2), -0.37819 (2), -0.37675 (2), -0.37654 (2), -0.37562 (2), -0.36570 (2), -0.36223 (2), -0.34766 (2), -0.34554 (2), -0.34524 (2), -0.33976 (2), -0.33922 (2), -0.33710 (2), -0.31815 (2), -0.31773 (2), -0.31502 (2), -0.31389 (2), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0210    set_bounds 0.0142    solve 0.1220    add 0.1476    
Accumulated time: pickout 0.0015    decision 0.5720    set_bounds 0.0230    solve 0.2462    add 0.2805    
Current (lb-rhs): -0.40006542205810547
100 domains visited
Cumulative time: 1.2233359813690186

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
split level 1: [/input-12, 95] [/input-12, 95] [/input-12, 88] [/input-12, 88] [/input-12, 61] [/input-12, 61] [/input-12, 95] [/input-12, 61] [/input-12, 61] [/input-12, 95] 
split level 2: [/input-12, 88] [/input-12, 88] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 61] [/input-12, 88] [/input-12, 88] [/input-12, 58] 
split level 3: [/input-12, 58] [/input-12, 58] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 62] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.322235107421875
10 lb beta sum: 0.29072651267051697, worst -0.3125848174095154
Time: prepare 0.0060    bound 0.1297    transfer 0.0008    finalize 0.0021    func 0.1410    
Accumulated time: func 0.4458    prepare 0.0402    bound 0.3991    transfer 0.0024    finalize 0.0072    
all_split False
======================Cut inference begins======================
max lb tensor(0.70951796) min lb tensor(-0.31186873)
Number of Verified Splits: 275 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.02916240692138672 
BICCOS Cumulative time: 0.054479360580444336
Preprocessing time: 0.01179814338684082 Inference time: 0.01349949836730957 Add cuts time: 0.003566741943359375 Cut analysis time: 0.0002980232238769531
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0207    set_bounds 0.0157    solve 0.1411    add 0.0192    
Accumulated time: pickout 0.0025    decision 0.5927    set_bounds 0.0387    solve 0.3873    add 0.2997    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-12, 95] 
split level 2: [/input-12, 61] 
split level 3: [/input-12, 88] 
split level 4: [/input-12, 58] 
split level 5: [/input-12, 62] 
split level 6: [/input-12, 22] 
split level 7: [/input-12, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.2740154266357422

all verified at 0th iter
Time: prepare 0.0037    bound 0.0051    transfer 0.0005    finalize 0.0015    func 0.0126    
Accumulated time: func 0.4584    prepare 0.0444    bound 0.4042    transfer 0.0029    finalize 0.0087    
all_split False
======================Cut inference begins======================
max lb tensor(1.82204127) min lb tensor(0.27401543)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.00662541389465332 
BICCOS Cumulative time: 0.061104774475097656
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0167    solve 0.0126    add 0.0003    
Accumulated time: pickout 0.0029    decision 0.6158    set_bounds 0.0554    solve 0.4000    add 0.3000    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
Cumulative time: 1.5134260654449463


Properties batch 5, size 1
Remaining timeout: 194.80127573013306
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 194.8006579875946
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 194.8006100654602
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 194.8005871772766
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 5.1995 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 140, vnnlib ID: 140 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-41.78656387, -38.11541367, -42.88183594, -44.09627533, -44.12385178,
         -44.65552521, -46.82250595, -41.88090897, -40.49269485, -33.53180695]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [584]; unstable size 584; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 281, 1, 584] with unstable size 280 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 584] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 584] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [280]; unstable size 280; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 280] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 280] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.99224997, 1.85157418, 5.59965134, 7.27410078, 7.11642361, 7.56109905,
         9.27128029, 4.79926872, 3.70465088]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0778 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 141, vnnlib ID: 141 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.95235443, -31.11459923, -34.58056259, -33.71871185, -35.73379898,
         -34.21944809, -35.76564789, -35.46648407, -32.42971802, -29.75218773]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [769]; unstable size 769; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 338, 1, 769] with unstable size 337 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 49, 1, 769] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 769] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [337]; unstable size 337; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 49, 1, 337] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 337] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [48]; unstable size 48; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 48] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.98524737, -1.48201561, -1.62548852, -0.99893188, -1.43233800,
         -0.18337965, -2.27135086, -1.75458407, -3.99435282]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.95235443, -31.11459923, -34.58056259, -33.71871185, -35.73379898,
         -34.21944809, -35.76564789, -35.46648407, -32.42971802, -29.75218773]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.95235443, -31.11459732, -34.58055878, -33.71870804, -35.73379517,
          -34.21945190, -35.76564026, -35.46648407, -32.42971420, -29.75218391],
         [-32.95235443, -31.11459732, -34.58055878, -33.71870804, -35.73379517,
          -34.21945190, -35.76564026, -35.46648407, -32.42971420, -29.75218391]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.83775711,  3.46596146,  2.60411072,  4.61919785,  3.10485458,
           4.65104294,  4.35188675,  1.31511688, -1.36241341]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         ...,


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0671 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 142, vnnlib ID: 142 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-44.09682083, -45.67701340, -39.98918152, -40.47320557, -41.27986145,
         -42.15982819, -36.64125443, -44.18291855, -45.00037766, -44.64403152]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [701]; unstable size 701; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 358, 1, 701] with unstable size 357 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 49, 1, 701] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 701] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [357]; unstable size 357; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 49, 1, 357] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 357] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [48]; unstable size 48; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 48] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.73933792,  3.78200769, -0.72239256,  0.75284088,  1.05316353,
          1.50621080,  2.79517555,  3.15303922,  2.66565895]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-44.09682083, -45.67701340, -39.98918152, -40.47320557, -41.27986145,
         -42.15982819, -36.64125443, -44.18291855, -45.00037766, -44.64403152]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.79it/s]100%|██████████| 1/1 [00:00<00:00,  7.78it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-42.41464615, -44.42914581, -38.04760742, -39.44133759, -40.02369690,
          -41.06446838, -36.17947006, -42.75760269, -43.45193100, -43.85363388]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.86813736]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1319 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.747961044311523
alpha/beta optimization time: 1.3409643173217773
initial alpha-crown bounds: tensor([[ 2.97720909,  4.02066326, -0.52607846,  0.91834998,  1.23809016,
          1.71192980,  3.04679775,  3.44464803,  2.91635132]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.526078462600708
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.45003056526184
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.44998717308044
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.44995856285095
Verifying property 2 with 1 instances.
##### Instance 142 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.52607846]], device='cuda:0') need to verify.
Model prediction is: tensor([-44.09682083, -45.67701340, -39.98918152, -40.47320557, -41.27986145,
        -42.15982819, -36.64125443, -44.18291855, -45.00037766, -44.64403152],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.52607846]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 701
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 351
Node /15 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 1097
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011301040649414062
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5260717868804932
10 lb beta sum: 0.0, worst -0.5260918140411377
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0606    transfer 0.0001    finalize 0.0001    func 0.0611    
Accumulated time: func 0.0611    prepare 0.0002    bound 0.0606    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 62] 
split level 1: [/input-12, 15] 
split level 2: [/input-12, 66] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 48] 
split level 5: [/input-12, 83] 
split level 6: [/input-12, 49] 
split level 7: [/input-12, 61] 
split level 8: [/input-12, 10] 
split level 9: [/input-12, 95] 
split level 10: [/input-12, 71] 
split level 11: [/input-12, 14] 
split level 12: [/input-12, 50] 
split level 13: [/input-12, 46] 
split level 14: [/input-12, 31] 
split level 15: [/input-12, 84] 
split level 16: [/input-12, 74] 
split level 17: [/input-12, 73] 
split level 18: [/input-12, 19] 
split level 19: [/input-8, 1498] 
split level 20: [/input-12, 85] 
split level 21: [/input-12, 67] 
split level 22: [/input-8, 995] 
split level 23: [/input-8, 985] 
split level 24: [/input-8, 1499] 
split level 25: [/input-8, 1490] 
split level 26: [/input-8, 1574] 
split level 27: [/input-8, 996] 
split level 28: [/input-8, 1875] 
split level 29: [/input-8, 923] 
split level 30: [/input-8, 916] 
split level 31: [/input-8, 1300] 
split level 32: [/input-12, 72] 
split level 33: [/input-8, 1634] 
split level 34: [/input-8, 1505] 
split level 35: [/input-8, 428] 
split level 36: [/input-8, 867] 
split level 37: [/input-8, 1891] 
split level 38: [/input-8, 1542] 
split level 39: [/input-8, 427] 
split level 40: [/input-8, 1549] 
split level 41: [/input-8, 723] 
split level 42: [/input-8, 1388] 
split level 43: [/input-8, 1564] 
split level 44: [/input-8, 715] 
split level 45: [/input-8, 732] 
split level 46: [/input-8, 1501] 
split level 47: [/input-8, 480] 
split level 48: [/input-8, 556] 
split level 49: [/input, 2029] 
split level 50: [/input-8, 1541] 
split level 51: [/input-8, 1484] 
split level 52: [/input-8, 244] 
split level 53: [/input-8, 1540] 
split level 54: [/input-8, 1977] 
split level 55: [/input-8, 1765] 
split level 56: [/input, 1961] 
split level 57: [/input-8, 437] 
split level 58: [/input-8, 323] 
split level 59: [/input-8, 666] 
split level 60: [/input-8, 1562] 
split level 61: [/input-8, 1761] 
split level 62: [/input-8, 1868] 
split level 63: [/input-8, 1291] 
split level 64: [/input-8, 984] 
split level 65: [/input-8, 658] 
split level 66: [/input-8, 1427] 
split level 67: [/input-8, 324] 
split level 68: [/input-8, 1547] 
split level 69: [/input, 1979] 
split level 70: [/input, 4076] 
split level 71: [/input-8, 1496] 
split level 72: [/input-8, 1548] 
split level 73: [/input-8, 307] 
split level 74: [/input-8, 586] 
split level 75: [/input-8, 1475] 
split level 76: [/input-8, 593] 
split level 77: [/input-8, 1550] 
split level 78: [/input-8, 968] 
split level 79: [/input-8, 492] 
split level 80: [/input-8, 1621] 
split level 81: [/input, 3944] 
split level 82: [/input-8, 497] 
split level 83: [/input-8, 1289] 
split level 84: [/input-8, 1482] 
split level 85: [/input-8, 1747] 
split level 86: [/input-8, 1485] 
split level 87: [/input-8, 1779] 
split level 88: [/input-8, 1788] 
split level 89: [/input-8, 1885] 
split level 90: [/input-8, 585] 
split level 91: [/input-8, 1468] 
split level 92: [/input-8, 1050] 
split level 93: [/input-8, 1071] 
split level 94: [/input-8, 617] 
split level 95: [/input-8, 215] 
split level 96: [/input-8, 933] 
split level 97: [/input-8, 1108] 
split level 98: [/input-12, 82] 
split level 99: [/input-8, 1325] 
split level 100: [/input-8, 1488] 
split level 101: [/input-8, 661] 
split level 102: [/input-8, 517] 
split level 103: [/input, 872] 
split level 104: [/input-8, 285] 
split level 105: [/input, 600] 
split level 106: [/input-8, 1552] 
split level 107: [/input-8, 1754] 
split level 108: [/input, 3965] 
split level 109: [/input-8, 1510] 
split level 110: [/input-8, 837] 
split level 111: [/input-8, 907] 
split level 112: [/input-8, 1418] 
split level 113: [/input-8, 633] 
split level 114: [/input-8, 1568] 
split level 115: [/input-8, 1969] 
split level 116: [/input-8, 708] 
split level 117: [/input-8, 493] 
split level 118: [/input-8, 1766] 
split level 119: [/input, 2920] 
split level 120: [/input-8, 243] 
split level 121: [/input, 2787] 
split level 122: [/input, 3281] 
split level 123: [/input, 3940] 
split level 124: [/input-8, 1893] 
split level 125: [/input-8, 742] 
split level 126: [/input-8, 628] 
split level 127: [/input-8, 1034] 
split level 128: [/input, 1844] 
split level 129: [/input-8, 395] 
split level 130: [/input, 2986] 
split level 131: [/input-8, 1069] 
split level 132: [/input, 1881] 
split level 133: [/input-8, 1649] 
split level 134: [/input-8, 458] 
split level 135: [/input, 2952] 
split level 136: [/input-8, 516] 
split level 137: [/input-8, 1596] 
split level 138: [/input, 3001] 
split level 139: [/input, 3981] 
split level 140: [/input-8, 1900] 
split level 141: [/input-8, 1494] 
split level 142: [/input, 2919] 
split level 143: [/input-8, 429] 
split level 144: [/input-8, 1865] 
split level 145: [/input-8, 325] 
split level 146: [/input, 3890] 
split level 147: [/input, 994] 
split level 148: [/input-8, 439] 
split level 149: [/input, 1890] 
split level 150: [/input, 3273] 
split level 151: [/input, 3002] 
split level 152: [/input, 3868] 
split level 153: [/input-8, 1755] 
split level 154: [/input, 2936] 
split level 155: [/input-12, 4] 
split level 156: [/input-8, 944] 
split level 157: [/input-8, 641] 
split level 158: [/input, 3972] 
split level 159: [/input, 220] 
split level 160: [/input, 563] 
split level 161: [/input, 2358] 
split level 162: [/input, 2938] 
split level 163: [/input-8, 286] 
split level 164: [/input, 2985] 
split level 165: [/input, 2225] 
split level 166: [/input, 3003] 
split level 167: [/input-8, 1477] 
split level 168: [/input, 3998] 
split level 169: [/input, 1819] 
split level 170: [/input-8, 1583] 
split level 171: [/input, 2771] 
split level 172: [/input, 3004] 
split level 173: [/input, 3000] 
split level 174: [/input-8, 587] 
split level 175: [/input, 1814] 
split level 176: [/input, 597] 
split level 177: [/input, 3431] 
split level 178: [/input, 414] 
split level 179: [/input, 1715] 
split level 180: [/input, 2970] 
split level 181: [/input, 1714] 
split level 182: [/input, 2947] 
split level 183: [/input-8, 274] 
split level 184: [/input, 2753] 
split level 185: [/input-8, 1860] 
split level 186: [/input, 1716] 
split level 187: [/input, 2987] 
split level 188: [/input, 1730] 
split level 189: [/input, 3473] 
split level 190: [/input-8, 1433] 
split level 191: [/input, 3020] 
split level 192: [/input-8, 507] 
split level 193: [/input, 1737] 
split level 194: [/input, 3863] 
split level 195: [/input, 2940] 
split level 196: [/input, 2924] 
split level 197: [/input, 1852] 
split level 198: [/input, 2979] 
split level 199: [/input, 1731] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5259451866149902
10 lb beta sum: 0.0, worst -0.525946855545044
Time: prepare 0.0114    bound 0.1058    transfer 0.0027    finalize 0.0032    func 0.1257    
Accumulated time: func 0.1868    prepare 0.0219    bound 0.1664    transfer 0.0028    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(0.64264107) min lb tensor(-0.52592945)
Number of Verified Splits: 7 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.011385679244995117 
BICCOS Cumulative time: 0.011385679244995117
Preprocessing time: 0.010617256164550781 Inference time: 0.0003342628479003906 Add cuts time: 0.00013899803161621094 Cut analysis time: 0.0002951622009277344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.48577 (1), -0.48523 (1), -0.48467 (1), -0.48389 (1), -0.48389 (1), -0.48302 (1), -0.47983 (1), -0.47892 (1), -0.47745 (1), -0.47662 (1), -0.47661 (1), -0.47459 (1), -0.47341 (1), -0.47169 (1), -0.46934 (1), -0.46867 (1), -0.46753 (1), -0.46295 (1), -0.46282 (1), -0.46101 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5451    set_bounds 0.0097    solve 0.1258    add 0.1306    
Accumulated time: pickout 0.0004    decision 0.5451    set_bounds 0.0097    solve 0.1258    add 0.1306    
Current (lb-rhs): -0.4857664108276367
50 domains visited
Cumulative time: 0.9006798267364502

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 15] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] 
split level 1: [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 15] [/input-12, 66] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
split level 2: [/input-12, 15] [/input-12, 15] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 15] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 7] 
split level 3: [/input-12, 7] [/input-12, 7] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 83] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3311784267425537
10 lb beta sum: 1.2754026651382446, worst -0.2517266273498535
Time: prepare 0.0066    bound 0.1254    transfer 0.0007    finalize 0.0022    func 0.1375    
Accumulated time: func 0.3244    prepare 0.0288    bound 0.2918    transfer 0.0035    finalize 0.0055    
all_split False
======================Cut inference begins======================
max lb tensor(0.39034820) min lb tensor(-0.25145972)
Number of Verified Splits: 214 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.0241086483001709 
BICCOS Cumulative time: 0.035494327545166016
Preprocessing time: 0.011994361877441406 Inference time: 0.008998632431030273 Add cuts time: 0.002925872802734375 Cut analysis time: 0.00018978118896484375
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0013    decision 0.0211    set_bounds 0.0139    solve 0.1376    add 0.0156    
Accumulated time: pickout 0.0016    decision 0.5663    set_bounds 0.0236    solve 0.2635    add 0.1462    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 62] 
split level 1: [/input-12, 15] 
split level 2: [/input-12, 66] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 83] 
split level 5: [/input-12, 61] 
split level 6: [/input-12, 71] 
split level 7: [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.7364120483398438

all verified at 0th iter
Time: prepare 0.0037    bound 0.0043    transfer 0.0009    finalize 0.0013    func 0.0119    
Accumulated time: func 0.3363    prepare 0.0329    bound 0.2961    transfer 0.0044    finalize 0.0068    
all_split False
======================Cut inference begins======================
max lb tensor(1.61432242) min lb tensor(0.73641205)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006556510925292969 
BICCOS Cumulative time: 0.042050838470458984
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0240    set_bounds 0.0178    solve 0.0119    add 0.0003    
Accumulated time: pickout 0.0020    decision 0.5902    set_bounds 0.0414    solve 0.2754    add 0.1465    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.1785998344421387


Properties batch 3, size 1
Remaining timeout: 197.05387544631958
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.05379581451416
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.0537712574005
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.05374956130981
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.05372834205627
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.0537073612213
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.9464 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 143, vnnlib ID: 143 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.42520142, -38.19776535, -31.00104713, -32.47894287, -29.10529900,
         -31.62840462, -32.16874695, -31.99430847, -38.53659821, -38.13212204]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [652]; unstable size 652; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 323, 1, 652] with unstable size 322 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 48, 1, 652] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 652] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [322]; unstable size 322; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 48, 1, 322] with unstable size 47 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 322] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [47]; unstable size 47; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 47] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.39786196,  4.58728027, -1.42259693,  0.50572515, -0.81767559,
         -0.75962615, -0.45176995,  5.66944981,  4.51944256]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.42520142, -38.19776535, -31.00104713, -32.47894287, -29.10529900,
         -31.62840462, -32.16874695, -31.99430847, -38.53659821, -38.13212204]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.19it/s]100%|██████████| 1/1 [00:00<00:00,  8.18it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.64036560, -36.50936127, -29.10029221, -31.14245415, -28.13720703,
          -30.35297585, -30.70919037, -31.20031357, -37.04366684, -36.66723251],
         [-33.64036560, -36.50936127, -29.10029221, -31.14245415, -28.13720703,
          -30.35297585, -30.70919037, -31.20031357, -37.04366684, -36.66723251]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.96308517, 2.21576881, 2.57198334, 3.06310654]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1261 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.846553802490234
alpha/beta optimization time: 1.2959988117218018
initial alpha-crown bounds: tensor([[ 2.56986332,  4.80845928, -1.26127422,  0.65632617, -0.62733102,
         -0.55131471, -0.30603015,  5.85646629,  4.70138931]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 4 ; Worst class: (+ rhs) -1.2612742185592651
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50584244728088
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.50579857826233
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.50577187538147
Verifying property 2 with 1 instances.
##### Instance 143 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.26127422]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.42520142, -38.19776535, -31.00104713, -32.47894287, -29.10529900,
        -31.62840462, -32.16874695, -31.99430847, -38.53659821, -38.13212204],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.26127422]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 652
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 316
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1015
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010538101196289062
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 15] 
split level 1: [/input-12, 57] 
split level 2: [/input-12, 92] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 66] 
split level 5: [/input-12, 28] 
split level 6: [/input-12, 22] 
split level 7: [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16787075996398926
10 lb beta sum: 0.0, worst -0.1633208692073822
Time: prepare 0.0019    bound 0.1009    transfer 0.0009    finalize 0.0015    func 0.1071    
Accumulated time: func 0.1071    prepare 0.0023    bound 0.1009    transfer 0.0009    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(0.95583713) min lb tensor(-0.16089624)
Number of Verified Splits: 244 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2612676620483398
10 lb beta sum: 0.0, worst -1.2612802982330322
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 2
#cuts 4-6: 10
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.21268177032470703 
BICCOS Cumulative time: 0.21268177032470703
Preprocessing time: 0.006808280944824219 Inference time: 0.20243430137634277 Add cuts time: 0.0024039745330810547 Cut analysis time: 0.0010352134704589844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16090 (8), -0.12487 (8), -0.10174 (8), -0.09655 (8), -0.06397 (8), -0.05455 (8), -0.04662 (8), -0.03664 (8), -0.01892 (8), -0.01745 (8), -0.01725 (8), -0.01584 (8), 
Length of domains: 12
Time: pickout 0.0005    decision 0.0232    set_bounds 0.0166    solve 0.1072    add 0.0399    
Accumulated time: pickout 0.0005    decision 0.0232    set_bounds 0.0166    solve 0.1072    add 0.0399    
Current (lb-rhs): -0.16089624166488647
12 domains visited
Cumulative time: 0.41211462020874023

BaB round 2
batch: 12
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] 
split level 1: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 2: [/input-12, 50] [/input-12, 14] [/input-12, 50] [/input-12, 14] [/input-12, 14] [/input-12, 50] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 50] 
split level 3: [/input-12, 14] [/input-12, 50] [/input-12, 14] [/input-12, 50] [/input-12, 50] [/input-12, 14] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 14] 
split level 4: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.06234443187713623

all verified at 0th iter
Time: prepare 0.0063    bound 0.0080    transfer 0.0025    finalize 0.0022    func 0.0214    
Accumulated time: func 0.1285    prepare 0.0089    bound 0.1089    transfer 0.0034    finalize 0.0037    
all_split False
======================Cut inference begins======================
max lb tensor(0.74247205) min lb tensor(0.06234443)
Number of Verified Splits: 384 of 384
No cut inferred: All or none verified.
Total number of valid cuts: 19.
#cuts 1-3: 2
#cuts 4-6: 10
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.011470556259155273 
BICCOS Cumulative time: 0.2241523265838623
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0013    decision 0.0176    set_bounds 0.0199    solve 0.0215    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0407    set_bounds 0.0365    solve 0.1287    add 0.0400    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
12 domains visited
Cumulative time: 0.48502445220947266


Properties batch 3, size 1
Remaining timeout: 197.79816722869873
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.79808950424194
Verifying property 4 with 1 instances.
##### Instance 143 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.62733102]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.42520142, -38.19776535, -31.00104713, -32.47894287, -29.10529900,
        -31.62840462, -32.16874695, -31.99430847, -38.53659821, -38.13212204],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.62733102]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 652
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 316
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1015
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010204315185546875
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 85] 
split level 1: [/input-12, 46] 
split level 2: [/input-12, 82] 
split level 3: [/input-12, 33] 
split level 4: [/input-12, 35] 
split level 5: [/input-12, 89] 
split level 6: [/input-12, 14] 
split level 7: [/input-12, 94] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.2974398136138916

all verified at 0th iter
Time: prepare 0.0019    bound 0.0046    transfer 0.0009    finalize 0.0015    func 0.0107    
Accumulated time: func 0.0107    prepare 0.0023    bound 0.0046    transfer 0.0009    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(2.31962705) min lb tensor(0.29743981)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006768941879272461 
BICCOS Cumulative time: 0.006768941879272461
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.0233    set_bounds 0.0163    solve 0.0108    add 0.0003    
Accumulated time: pickout 0.0003    decision 0.0233    set_bounds 0.0163    solve 0.0108    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06239676475524902


Properties batch 5, size 1
Remaining timeout: 197.5566439628601
Verifying property 5 with 1 instances.
##### Instance 143 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55131471]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.42520142, -38.19776535, -31.00104713, -32.47894287, -29.10529900,
        -31.62840462, -32.16874695, -31.99430847, -38.53659821, -38.13212204],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55131471]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 652
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 316
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1015
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010085105895996094
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 76] 
split level 1: [/input-12, 44] 
split level 2: [/input-12, 87] 
split level 3: [/input-12, 6] 
split level 4: [/input-12, 37] 
split level 5: [/input-12, 9] 
split level 6: [/input-12, 56] 
split level 7: [/input-12, 81] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.6507530808448792

all verified at 0th iter
Time: prepare 0.0018    bound 0.0043    transfer 0.0005    finalize 0.0014    func 0.0097    
Accumulated time: func 0.0097    prepare 0.0023    bound 0.0043    transfer 0.0005    finalize 0.0014    
all_split False
======================Cut inference begins======================
max lb tensor(2.31852865) min lb tensor(0.65075308)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006809234619140625 
BICCOS Cumulative time: 0.006809234619140625
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.0232    set_bounds 0.0160    solve 0.0098    add 0.0003    
Accumulated time: pickout 0.0003    decision 0.0232    set_bounds 0.0160    solve 0.0098    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06127285957336426


Properties batch 6, size 1
Remaining timeout: 197.3284649848938
Verifying property 6 with 1 instances.
##### Instance 143 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.30603015]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.42520142, -38.19776535, -31.00104713, -32.47894287, -29.10529900,
        -31.62840462, -32.16874695, -31.99430847, -38.53659821, -38.13212204],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.30603015]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 652
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 316
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1015
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010037422180175781
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 67] 
split level 1: [/input-12, 29] 
split level 2: [/input-12, 94] 
split level 3: [/input-12, 10] 
split level 4: [/input-12, 54] 
split level 5: [/input-12, 14] 
split level 6: [/input-12, 50] 
split level 7: [/input-12, 35] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 1.0209381580352783

all verified at 0th iter
Time: prepare 0.0018    bound 0.0072    transfer 0.0005    finalize 0.0015    func 0.0128    
Accumulated time: func 0.0128    prepare 0.0023    bound 0.0072    transfer 0.0005    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(3.09225941) min lb tensor(1.02093816)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006880998611450195 
BICCOS Cumulative time: 0.006880998611450195
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0161    solve 0.0129    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0161    solve 0.0129    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0644521713256836


Properties batch 7, size 1
Remaining timeout: 197.09081292152405
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.09074330329895
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.9093 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 144, vnnlib ID: 144 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.84703827, -36.06641769, -31.00195885, -29.03855515, -31.07243156,
         -28.66406059, -32.23881912, -31.17780685, -33.13336945, -34.92200851]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [657]; unstable size 657; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 320, 1, 657] with unstable size 319 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 34, 1, 657] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 657] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [319]; unstable size 319; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 34, 1, 319] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 319] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.50064349,  3.53083229,  0.14966457, -0.70645589,  0.13605857,
          1.07077944,  0.52213049,  0.72359467,  1.94960427]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.84703827, -36.06641769, -31.00195885, -29.03855515, -31.07243156,
         -28.66406059, -32.23881912, -31.17780685, -33.13336945, -34.92200851]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.57295609, -35.67802811, -30.90494728, -28.62854385, -30.85589790,
          -28.83883858, -31.86949348, -31.29751968, -32.33618546, -34.65185547]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.21029472]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0069 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0710 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 145, vnnlib ID: 145 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.67695236, -33.33475876, -27.77721596, -26.96713066, -28.33288383,
         -26.88466835, -29.82781601, -31.28023529, -34.67578888, -32.42662811]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [819]; unstable size 819; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 318, 1, 819] with unstable size 317 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 36, 1, 819] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 819] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [317]; unstable size 317; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 36, 1, 317] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 317] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.32107091,  2.82707524, -2.18140030, -0.96956259, -1.02566910,
          0.33770323,  1.51783013,  4.36705589,  2.46604156]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.67695236, -33.33475876, -27.77721596, -26.96713066, -28.33288383,
         -26.88466835, -29.82781601, -31.28023529, -34.67578888, -32.42662811]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-30.09407234, -33.06455231, -26.95234108, -27.07019997, -28.04712105,
          -27.05810547, -29.62667274, -31.11605644, -34.30634308, -32.42207336],
         [-30.09407234, -33.06455231, -26.95234108, -27.07019997, -28.04712105,
          -27.05810547, -29.62667274, -31.11605644, -34.30634308, -32.42207336]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.10576439,  0.01209450,  0.98901558]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0063 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0762 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 146, vnnlib ID: 146 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-40.75046921, -40.07085037, -44.19500732, -43.47600937, -44.60328674,
         -45.00149536, -44.27608490, -46.96129990, -36.62760544, -41.48382568]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [685]; unstable size 685; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 268, 1, 685] with unstable size 267 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 34, 1, 685] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 685] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [267]; unstable size 267; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 34, 1, 267] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 267] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.21587896, 0.89945412, 4.38611126, 3.77816057, 4.73527050, 4.97682190,
         4.26779222, 5.71251202, 2.75587273]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0689 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 147, vnnlib ID: 147 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-50.70461655, -53.20791245, -46.10743713, -52.44087982, -52.42652893,
         -52.79460144, -50.24275589, -51.63857269, -52.86488724, -56.29644394]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [915]; unstable size 915; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 323, 1, 915] with unstable size 322 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 31, 1, 915] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 915] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [322]; unstable size 322; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 31, 1, 322] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 322] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.78565359, 3.08584213, 3.23028088, 3.34331989, 3.27430534, 1.27940321,
         2.13095284, 3.02511883, 6.29925680]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0776 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 148, vnnlib ID: 148 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.36499596, -27.86391258, -25.40992546, -22.70177078, -25.86301041,
         -22.33859062, -26.37132645, -19.25885010, -27.29139900, -25.33686447]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [981]; unstable size 981; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 291, 1, 981] with unstable size 290 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 44, 1, 981] with unstable size 43 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 981] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [290]; unstable size 290; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 44, 1, 290] with unstable size 43 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 290] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [43]; unstable size 43; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.97364235, 4.47967100, 2.98223257, 0.96046281, 3.61384583, 0.34389400,
         3.79478598, 3.92156053, 2.10381222]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0643 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 149, vnnlib ID: 149 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-34.72857285, -36.44308853, -30.15933418, -32.52383804, -31.88551903,
         -32.40394592, -29.39424896, -36.06048203, -37.76941299, -36.49939346]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [829]; unstable size 829; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 432, 1, 829] with unstable size 431 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 52, 1, 829] with unstable size 51 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 829] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [431]; unstable size 431; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 52, 1, 431] with unstable size 51 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 431] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [51]; unstable size 51; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 51] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.51788586,  1.87096405, -1.01890755, -1.89973640, -1.61283767,
         -4.39886999,  0.67399418,  2.52943754,  0.73605728]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-34.72857285, -36.44308853, -30.15933418, -32.52383804, -31.88551903,
         -32.40394592, -29.39424896, -36.06048203, -37.76941299, -36.49939346]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.72858047, -36.44309235, -30.15933418, -32.52383804, -31.88552284,
          -32.40394592, -29.39424896, -36.06048965, -37.76941299, -36.49939346],
         [-34.72858047, -36.44309235, -30.15933418, -32.52383804, -31.88552284,
          -32.40394592, -29.39424896, -36.06048965, -37.76941299, -36.49939346]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.36450386,  1.72618866,  2.24461174, -0.76508522]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.32222211, -1.13174593, -1.17936504,  ..., -0.68730158,
            -0.81428570, -0.54444444],
           [-1.24285710, -1.09999990, -1.38571417,  ..., -0.68730158,
            -0.78253967, -0.79841268],
           [-1.08412695, -0.90952379, -1.13174593,  ..., -0.49682540,
            -0.84603173, -0.87777776],
           ...,
           [-0.19523799,  1.31269872,  0.43968260,  ..., -0.95714283,
            -0.84603173, -0.68730158],
           [ 0.07460327,  1.37619078,  0.90000004,  ..., -0.95714283,
            -0.75079364, -0.84603173],
           [ 0.26507944,  0.78888893,  0.43968260,  ..., -0.97301590,
            -0.92539680, -0.97301590]],

          [[-1.30434775, -1.01449275, -0.98228657,  ..., -0.51529789,
            -0.45088565, -0.25764883],
           [-1.06280184, -0.83735907, -1.19162631,  ..., -0.43478248,
            -0.41867942, -0.30595800],
           [-0.93397743, -0.67632848, -0.93397743,  ..., -0.35426718,
            -0.38647330, -0.41867942],
           ...,
           [-0.24154577,  0.62801939,  0.12882459,  ..., -0.98228657,
            -0.85346210, -0.70853460],
           [-0.09661824,  0.70853472,  0.43478271,  ..., -0.99838966,
            -0.78904986, -0.91787434],
           [ 0.04830930,  0.51529801,  0.28985518,  ..., -0.95008045,
            -0.90177131, -0.98228657]],

          [[-1.16791618, -0.98800600, -1.03298354,  ..., -0.70314842,
            -0.65817088, -0.28335828],
           [-1.00299859, -0.92803597, -1.16791618,  ..., -0.58320838,
            -0.53823084, -0.49325335],
           [-0.92803597, -0.86806595, -1.06296861,  ..., -0.26836565,
            -0.53823084, -0.55322337],
           ...,
           [-0.35832080,  0.45127454, -0.05847061,  ..., -0.85307342,
            -0.74812591, -0.56821585],
           [-0.26836565,  0.48125952,  0.33133450,  ..., -0.85307342,
            -0.70314842, -0.76311839],
           [ 0.03148442,  0.51124454,  0.42128953,  ..., -0.83808094,
            -0.79310340, -0.82308841]]],


         [[[-1.32222211, -1.13174593, -1.17936504,  ..., -0.68730158,
            -0.81428570, -0.54444444],
           [-1.24285710, -1.09999990, -1.38571417,  ..., -0.68730158,
            -0.78253967, -0.79841268],
           [-1.08412695, -0.90952379, -1.13174593,  ..., -0.49682540,
            -0.84603173, -0.87777776],
           ...,
           [-0.19523799,  1.31269872,  0.43968260,  ..., -0.95714283,
            -0.84603173, -0.68730158],
           [ 0.07460327,  1.37619078,  0.90000004,  ..., -0.95714283,
            -0.75079364, -0.84603173],
           [ 0.26507944,  0.78888893,  0.43968260,  ..., -0.97301590,
            -0.92539680, -0.97301590]],

          [[-1.30434775, -1.01449275, -0.98228657,  ..., -0.51529789,
            -0.45088565, -0.25764883],
           [-1.06280184, -0.83735907, -1.19162631,  ..., -0.43478248,
            -0.41867942, -0.30595800],
           [-0.93397743, -0.67632848, -0.93397743,  ..., -0.35426718,
            -0.38647330, -0.41867942],
           ...,
           [-0.24154577,  0.62801939,  0.12882459,  ..., -0.98228657,
            -0.85346210, -0.70853460],
           [-0.09661824,  0.70853472,  0.43478271,  ..., -0.99838966,
            -0.78904986, -0.91787434],
           [ 0.04830930,  0.51529801,  0.28985518,  ..., -0.95008045,
            -0.90177131, -0.98228657]],

          [[-1.16791618, -0.98800600, -1.03298354,  ..., -0.70314842,
            -0.65817088, -0.28335828],
           [-1.00299859, -0.92803597, -1.16791618,  ..., -0.58320838,
            -0.53823084, -0.49325335],
           [-0.92803597, -0.86806595, -1.06296861,  ..., -0.26836565,
            -0.53823084, -0.55322337],
           ...,
           [-0.35832080,  0.45127454, -0.05847061,  ..., -0.85307342,
            -0.74812591, -0.56821585],
           [-0.26836565,  0.48125952,  0.33133450,  ..., -0.85307342,
            -0.70314842, -0.76311839],
           [ 0.03148442,  0.51124454,  0.42128953,  ..., -0.83808094,
            -0.79310340, -0.82308841]]],


         [[[-1.32222211, -1.13174593, -1.17936504,  ..., -0.68730158,
            -0.81428570, -0.54444444],
           [-1.24285710, -1.09999990, -1.38571417,  ..., -0.68730158,
            -0.78253967, -0.79841268],
           [-1.08412695, -0.90952379, -1.13174593,  ..., -0.49682540,
            -0.84603173, -0.87777776],
           ...,
           [-0.19523799,  1.31269872,  0.43968260,  ..., -0.95714283,
            -0.84603173, -0.68730158],
           [ 0.07460327,  1.37619078,  0.90000004,  ..., -0.95714283,
            -0.75079364, -0.84603173],
           [ 0.26507944,  0.78888893,  0.43968260,  ..., -0.97301590,
            -0.92539680, -0.97301590]],

          [[-1.30434775, -1.01449275, -0.98228657,  ..., -0.51529789,
            -0.45088565, -0.25764883],
           [-1.06280184, -0.83735907, -1.19162631,  ..., -0.43478248,
            -0.41867942, -0.30595800],
           [-0.93397743, -0.67632848, -0.93397743,  ..., -0.35426718,
            -0.38647330, -0.41867942],
           ...,
           [-0.24154577,  0.62801939,  0.12882459,  ..., -0.98228657,
            -0.85346210, -0.70853460],
           [-0.09661824,  0.70853472,  0.43478271,  ..., -0.99838966,
            -0.78904986, -0.91787434],
           [ 0.04830930,  0.51529801,  0.28985518,  ..., -0.95008045,
            -0.90177131, -0.98228657]],

          [[-1.16791618, -0.98800600, -1.03298354,  ..., -0.70314842,
            -0.65817088, -0.28335828],
           [-1.00299859, -0.92803597, -1.16791618,  ..., -0.58320838,
            -0.53823084, -0.49325335],
           [-0.92803597, -0.86806595, -1.06296861,  ..., -0.26836565,
            -0.53823084, -0.55322337],
           ...,
           [-0.35832080,  0.45127454, -0.05847061,  ..., -0.85307342,
            -0.74812591, -0.56821585],
           [-0.26836565,  0.48125952,  0.33133450,  ..., -0.85307342,
            -0.70314842, -0.76311839],
           [ 0.03148442,  0.51124454,  0.42128953,  ..., -0.83808094,
            -0.79310340, -0.82308841]]],


         [[[-1.32222211, -1.13174593, -1.17936504,  ..., -0.68730158,
            -0.81428570, -0.54444444],
           [-1.24285710, -1.09999990, -1.38571417,  ..., -0.68730158,
            -0.78253967, -0.79841268],
           [-1.08412695, -0.90952379, -1.13174593,  ..., -0.49682540,
            -0.84603173, -0.87777776],
           ...,
           [-0.19523799,  1.31269872,  0.43968260,  ..., -0.95714283,
            -0.84603173, -0.68730158],
           [ 0.07460327,  1.37619078,  0.90000004,  ..., -0.95714283,
            -0.75079364, -0.84603173],
           [ 0.26507944,  0.78888893,  0.43968260,  ..., -0.97301590,
            -0.92539680, -0.97301590]],

          [[-1.30434775, -1.01449275, -0.98228657,  ..., -0.51529789,
            -0.45088565, -0.25764883],
           [-1.06280184, -0.83735907, -1.19162631,  ..., -0.43478248,
            -0.41867942, -0.30595800],
           [-0.93397743, -0.67632848, -0.93397743,  ..., -0.35426718,
            -0.38647330, -0.41867942],
           ...,
           [-0.24154577,  0.62801939,  0.12882459,  ..., -0.98228657,
            -0.85346210, -0.70853460],
           [-0.09661824,  0.70853472,  0.43478271,  ..., -0.99838966,
            -0.78904986, -0.91787434],
           [ 0.04830930,  0.51529801,  0.28985518,  ..., -0.95008045,
            -0.90177131, -0.98228657]],

          [[-1.16791618, -0.98800600, -1.03298354,  ..., -0.70314842,
            -0.65817088, -0.28335828],
           [-1.00299859, -0.92803597, -1.16791618,  ..., -0.58320838,
            -0.53823084, -0.49325335],
           [-0.92803597, -0.86806595, -1.06296861,  ..., -0.26836565,
            -0.53823084, -0.55322337],
           ...,
           [-0.35832080,  0.45127454, -0.05847061,  ..., -0.85307342,
            -0.74812591, -0.56821585],
           [-0.26836565,  0.48125952,  0.33133450,  ..., -0.85307342,
            -0.70314842, -0.76311839],
           [ 0.03148442,  0.51124454,  0.42128953,  ..., -0.83808094,
            -0.79310340, -0.82308841]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1062 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 150, vnnlib ID: 150 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-40.21208954, -37.47401810, -45.92300034, -45.22758484, -44.35440063,
         -46.91486359, -47.12097549, -45.06463242, -40.81108856, -39.30743790]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [981]; unstable size 981; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 392, 1, 981] with unstable size 391 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 50, 1, 981] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 981] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [391]; unstable size 391; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 50, 1, 391] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 391] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [49]; unstable size 49; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 49] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.98072004,  1.33805943,  1.68333483, -0.55090046,  3.19083023,
          2.63048077, -0.72509480, -1.69835567, -2.45176864]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-40.21208954, -37.47401810, -45.92300034, -45.22758484, -44.35440063,
         -46.91486359, -47.12097549, -45.06463242, -40.81108856, -39.30743790]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.66it/s]100%|██████████| 1/1 [00:00<00:00,  7.66it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-40.27201843, -38.27974701, -45.85271454, -45.14772034, -44.07323456,
          -46.79408264, -47.01058578, -44.76593018, -41.04291534, -38.90047836],
         [-40.27201843, -38.27974701, -45.85271454, -45.14772034, -44.07323456,
          -46.79408264, -47.01058578, -44.76593018, -41.04291534, -38.90047836]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.99227142, 5.79348755, 6.48618317, 2.76316833, 0.62073135]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.1339 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 6.328061580657959
alpha/beta optimization time: 1.3853812217712402
initial alpha-crown bounds: tensor([[-2.27919769,  2.10925102,  2.38175488,  0.25422382,  3.87729788,
          3.23935604,  0.11640835, -1.31218004, -2.05885267]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 3 ; Worst class: (+ rhs) -2.2791976928710938
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.4125006198883
Verifying property 0 with 1 instances.
##### Instance 150 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.27919769]], device='cuda:0') need to verify.
Model prediction is: tensor([-40.21208954, -37.47401810, -45.92300034, -45.22758484, -44.35440063,
        -46.91486359, -47.12097549, -45.06463242, -40.81108856, -39.30743790],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.27919769]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 981
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 384
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1412
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010943412780761719
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 36] 
split level 1: [/input-12, 28] 
split level 2: [/input-12, 51] 
split level 3: [/input-12, 30] 
split level 4: [/input-12, 22] 
split level 5: [/input-12, 48] 
split level 6: [/input-12, 56] 
split level 7: [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9697623252868652
10 lb beta sum: 0.0, worst -0.9667682647705078
Time: prepare 0.0019    bound 0.1041    transfer 0.0011    finalize 0.0022    func 0.1112    
Accumulated time: func 0.1112    prepare 0.0023    bound 0.1041    transfer 0.0011    finalize 0.0022    
all_split False
======================Cut inference begins======================
max lb tensor(0.80397224) min lb tensor(-0.96523380)
Number of Verified Splits: 157 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -2.2791881561279297
10 lb beta sum: 0.0, worst -2.279181957244873
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 4-6: 12
#cuts 7-9: 31
#cuts >= 20: 0
BICCOS time: 0.1815183162689209 
BICCOS Cumulative time: 0.1815183162689209
Preprocessing time: 0.007422208786010742 Inference time: 0.16484379768371582 Add cuts time: 0.006703376770019531 Cut analysis time: 0.0025489330291748047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.96523 (8), -0.92670 (8), -0.91777 (8), -0.90760 (8), -0.88507 (8), -0.88150 (8), -0.84144 (8), -0.82923 (8), -0.75280 (8), -0.70640 (8), -0.69086 (8), -0.66998 (8), -0.66532 (8), -0.66063 (8), -0.62107 (8), -0.62002 (8), -0.61523 (8), -0.61231 (8), -0.60753 (8), -0.59220 (8), 
Length of domains: 99
Time: pickout 0.0004    decision 0.0240    set_bounds 0.0169    solve 0.1113    add 0.0269    
Accumulated time: pickout 0.0004    decision 0.0240    set_bounds 0.0169    solve 0.1113    add 0.0269    
Current (lb-rhs): -0.9652338027954102
99 domains visited
Cumulative time: 0.3661062717437744

BaB round 2
batch: 99
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 1: [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8357224464416504
10 lb beta sum: 0.0, worst -0.833855152130127
Time: prepare 0.0056    bound 0.1298    transfer 0.0028    finalize 0.0020    func 0.1427    
Accumulated time: func 0.2539    prepare 0.0081    bound 0.2339    transfer 0.0039    finalize 0.0041    
all_split False
======================Cut inference begins======================
max lb tensor(0.90109110) min lb tensor(-0.83281994)
Number of Verified Splits: 308 of 396
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -2.0428199768066406
10 lb beta sum: 0.13569329679012299, worst -1.9466252326965332
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 105.
#cuts 4-6: 34
#cuts 7-9: 70
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.3327350616455078 
BICCOS Cumulative time: 0.5142533779144287
Preprocessing time: 0.011437416076660156 Inference time: 0.2836751937866211 Add cuts time: 0.03194785118103027 Cut analysis time: 0.005674600601196289
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.83282 (10), -0.79753 (10), -0.78145 (10), -0.77672 (10), -0.75444 (10), -0.74702 (10), -0.70815 (10), -0.69486 (10), -0.61610 (10), -0.56739 (10), -0.54906 (10), -0.53668 (10), -0.52617 (10), -0.51471 (10), -0.48638 (10), -0.48504 (10), -0.47916 (10), -0.47506 (10), -0.46236 (10), -0.45611 (10), 
Length of domains: 88
Time: pickout 0.0019    decision 0.0186    set_bounds 0.0130    solve 0.1428    add 0.0018    
Accumulated time: pickout 0.0023    decision 0.0426    set_bounds 0.0299    solve 0.2541    add 0.0287    
Current (lb-rhs): -0.832819938659668
187 domains visited
Cumulative time: 0.8791368007659912

BaB round 3
batch: 88
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] 
split level 1: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6853752136230469
10 lb beta sum: 0.0, worst -0.6840996742248535
Time: prepare 0.0051    bound 0.1275    transfer 0.0023    finalize 0.0021    func 0.1399    
Accumulated time: func 0.3938    prepare 0.0134    bound 0.3614    transfer 0.0061    finalize 0.0062    
all_split False
======================Cut inference begins======================
max lb tensor(0.54320669) min lb tensor(-0.68361712)
Number of Verified Splits: 252 of 352
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 6
#cuts 4-6: 2
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.043182373046875 
BICCOS Cumulative time: 0.5574357509613037
Preprocessing time: 0.010321617126464844 Inference time: 0.025751352310180664 Add cuts time: 0.006236076354980469 Cut analysis time: 0.0008733272552490234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.68362 (12), -0.64913 (12), -0.62946 (12), -0.62733 (12), -0.61854 (12), -0.60478 (12), -0.59592 (12), -0.57989 (12), -0.57113 (12), -0.55696 (12), -0.55213 (12), -0.54280 (12), -0.53820 (12), -0.52608 (12), -0.50308 (12), -0.48036 (12), -0.46112 (12), -0.41443 (12), -0.39351 (12), -0.39333 (12), 
Length of domains: 100
Time: pickout 0.0021    decision 0.0168    set_bounds 0.0120    solve 0.1400    add 0.0013    
Accumulated time: pickout 0.0044    decision 0.0594    set_bounds 0.0419    solve 0.3941    add 0.0300    
Current (lb-rhs): -0.683617115020752
287 domains visited
Cumulative time: 1.0961425304412842

BaB round 4
batch: 100
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 1: [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5538086891174316
10 lb beta sum: 0.02075311169028282, worst -0.5530986785888672
Time: prepare 0.0057    bound 0.1283    transfer 0.0008    finalize 0.0019    func 0.1392    
Accumulated time: func 0.5331    prepare 0.0193    bound 0.4897    transfer 0.0069    finalize 0.0082    
all_split False
======================Cut inference begins======================
max lb tensor(0.33345509) min lb tensor(-0.55282974)
Number of Verified Splits: 289 of 400
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 8
#cuts 4-6: 3
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.04707908630371094 
BICCOS Cumulative time: 0.6045148372650146
Preprocessing time: 0.011617422103881836 Inference time: 0.032244205474853516 Add cuts time: 0.002370119094848633 Cut analysis time: 0.0008473396301269531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.55283 (14), -0.55051 (14), -0.51852 (14), -0.51601 (14), -0.49684 (14), -0.49680 (14), -0.49271 (14), -0.49132 (14), -0.48556 (14), -0.48367 (14), -0.47273 (14), -0.47032 (14), -0.46399 (14), -0.45775 (14), -0.44706 (14), -0.44207 (14), -0.44118 (14), -0.43403 (14), -0.42337 (14), -0.42023 (14), 
Length of domains: 111
Time: pickout 0.0027    decision 0.0189    set_bounds 0.0135    solve 0.1393    add 0.0017    
Accumulated time: pickout 0.0070    decision 0.0783    set_bounds 0.0554    solve 0.5335    add 0.0317    
Current (lb-rhs): -0.5528297424316406
398 domains visited
Cumulative time: 1.3208849430084229

BaB round 5
batch: 111
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5035815238952637
10 lb beta sum: 0.053002506494522095, worst -0.5030298233032227
Time: prepare 0.0034    bound 0.1294    transfer 0.0010    finalize 0.0015    func 0.1369    
Accumulated time: func 0.6699    prepare 0.0228    bound 0.6191    transfer 0.0079    finalize 0.0097    
all_split False
======================Cut inference begins======================
max lb tensor(0.24932018) min lb tensor(-0.50285101)
Number of Verified Splits: 85 of 222
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 9
#cuts 4-6: 5
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.01900482177734375 
BICCOS Cumulative time: 0.6235196590423584
Preprocessing time: 0.00695037841796875 Inference time: 0.009700298309326172 Add cuts time: 0.0014154911041259766 Cut analysis time: 0.0009386539459228516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50285 (15), -0.50053 (15), -0.46888 (15), -0.46663 (15), -0.45050 (15), -0.44893 (15), -0.44687 (15), -0.44591 (15), -0.44483 (15), -0.44156 (15), -0.43307 (15), -0.43041 (15), -0.42395 (15), -0.42169 (15), -0.41728 (15), -0.41080 (15), -0.40877 (15), -0.40701 (15), -0.39879 (15), -0.39431 (15), 
Length of domains: 137
Time: pickout 0.0022    decision 0.0219    set_bounds 0.0062    solve 0.1369    add 0.0061    
Accumulated time: pickout 0.0092    decision 0.1002    set_bounds 0.0616    solve 0.6704    add 0.0378    
Current (lb-rhs): -0.5028510093688965
535 domains visited
Cumulative time: 1.5139625072479248

BaB round 6
batch: 137
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.45430755615234375
10 lb beta sum: 0.013110293075442314, worst -0.4537620544433594
Time: prepare 0.0041    bound 0.1239    transfer 0.0006    finalize 0.0014    func 0.1316    
Accumulated time: func 0.8016    prepare 0.0272    bound 0.7430    transfer 0.0085    finalize 0.0111    
all_split False
======================Cut inference begins======================
max lb tensor(0.22020251) min lb tensor(-0.45357037)
Number of Verified Splits: 63 of 274
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 10
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.018219947814941406 
BICCOS Cumulative time: 0.6417396068572998
Preprocessing time: 0.008115053176879883 Inference time: 0.007611274719238281 Add cuts time: 0.0017750263214111328 Cut analysis time: 0.0007185935974121094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.45357 (16), -0.45190 (16), -0.41887 (16), -0.41686 (16), -0.41131 (16), -0.41104 (16), -0.40159 (16), -0.39923 (16), -0.39912 (16), -0.39701 (16), -0.39492 (16), -0.39395 (16), -0.38599 (16), -0.38344 (16), -0.38295 (16), -0.37904 (16), -0.37568 (16), -0.37335 (16), -0.36781 (16), -0.36137 (16), 
Length of domains: 211
Time: pickout 0.0024    decision 0.0226    set_bounds 0.0077    solve 0.1317    add 0.0791    
Accumulated time: pickout 0.0116    decision 0.1228    set_bounds 0.0693    solve 0.8021    add 0.1168    
Current (lb-rhs): -0.4535703659057617
746 domains visited
Cumulative time: 1.7832458019256592

BaB round 7
batch: 211
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 50] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.40535449981689453
10 lb beta sum: 0.05153743550181389, worst -0.4049215316772461
Time: prepare 0.0061    bound 0.1415    transfer 0.0023    finalize 0.0025    func 0.1568    
Accumulated time: func 0.9584    prepare 0.0335    bound 0.8844    transfer 0.0107    finalize 0.0136    
all_split False
======================Cut inference begins======================
max lb tensor(0.29305413) min lb tensor(-0.40483856)
Number of Verified Splits: 135 of 422
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 12
#cuts 4-6: 1
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.034102439880371094 
BICCOS Cumulative time: 0.6758420467376709
Preprocessing time: 0.013001680374145508 Inference time: 0.01827526092529297 Add cuts time: 0.0021283626556396484 Cut analysis time: 0.0006971359252929688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40484 (17), -0.40271 (17), -0.37209 (17), -0.37102 (17), -0.36906 (17), -0.36681 (17), -0.36217 (17), -0.36176 (17), -0.35225 (17), -0.35089 (17), -0.35019 (17), -0.34727 (17), -0.34671 (17), -0.34603 (17), -0.34150 (17), -0.33901 (17), -0.33773 (17), -0.33471 (17), -0.33210 (17), -0.33015 (17), 
Length of domains: 287
Time: pickout 0.0031    decision 0.0268    set_bounds 0.0118    solve 0.1569    add 0.0036    
Accumulated time: pickout 0.0147    decision 0.1495    set_bounds 0.0811    solve 0.9590    add 0.1205    
Current (lb-rhs): -0.40483856201171875
1033 domains visited
Cumulative time: 2.0211853981018066

BaB round 8
batch: 287
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.374971866607666
10 lb beta sum: 0.02513306587934494, worst -0.4036015570163727
Time: prepare 0.0084    bound 0.1253    transfer 0.0013    finalize 0.0026    func 0.1415    
Accumulated time: func 1.0999    prepare 0.0421    bound 1.0098    transfer 0.0120    finalize 0.0162    
all_split False
======================Cut inference begins======================
max lb tensor(0.26527929) min lb tensor(-0.37474442)
Number of Verified Splits: 309 of 574
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 10
#cuts 4-6: 3
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.06503844261169434 
BICCOS Cumulative time: 0.7408804893493652
Preprocessing time: 0.017137765884399414 Inference time: 0.043799400329589844 Add cuts time: 0.003446817398071289 Cut analysis time: 0.0006544589996337891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.37474 (18), -0.37266 (18), -0.34149 (18), -0.34070 (18), -0.33910 (18), -0.33686 (18), -0.33100 (18), -0.33069 (18), -0.32388 (18), -0.32115 (18), -0.31906 (18), -0.31901 (18), -0.31638 (18), -0.31535 (18), -0.31074 (18), -0.30873 (18), -0.30752 (18), -0.30471 (18), -0.30210 (18), -0.30032 (18), 
Length of domains: 265
Time: pickout 0.0054    decision 0.0250    set_bounds 0.0169    solve 0.1416    add 0.0031    
Accumulated time: pickout 0.0201    decision 0.1745    set_bounds 0.0980    solve 1.1007    add 0.1235    
Current (lb-rhs): -0.3747444152832031
1298 domains visited
Cumulative time: 2.2800967693328857

BaB round 9
batch: 265
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 94] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 94] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.31662559509277344
10 lb beta sum: 0.07939650118350983, worst -0.3163027763366699
Time: prepare 0.0084    bound 0.1374    transfer 0.0026    finalize 0.0030    func 0.1548    
Accumulated time: func 1.2546    prepare 0.0507    bound 1.1472    transfer 0.0146    finalize 0.0192    
all_split False
======================Cut inference begins======================
max lb tensor(0.43578798) min lb tensor(-0.31623077)
Number of Verified Splits: 195 of 530
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 13
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.0477137565612793 
BICCOS Cumulative time: 0.7885942459106445
Preprocessing time: 0.01632094383239746 Inference time: 0.028643369674682617 Add cuts time: 0.0021822452545166016 Cut analysis time: 0.0005671977996826172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31623 (19), -0.31488 (19), -0.31243 (19), -0.30991 (19), -0.28451 (19), -0.28336 (19), -0.28308 (19), -0.28069 (19), -0.27715 (19), -0.27712 (19), -0.27523 (19), -0.27476 (19), -0.27350 (19), -0.27312 (19), -0.26547 (19), -0.26543 (19), -0.26317 (19), -0.26260 (19), -0.26234 (19), -0.26169 (19), 
Length of domains: 335
Time: pickout 0.0047    decision 0.0291    set_bounds 0.1707    solve 0.1549    add 0.0032    
Accumulated time: pickout 0.0248    decision 0.2036    set_bounds 0.2687    solve 1.2556    add 0.1267    
Current (lb-rhs): -0.31623077392578125
1633 domains visited
Cumulative time: 2.6922035217285156

BaB round 10
batch: 335
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 73] [/input-12, 80] [/input-12, 80] [/input-8, 1498] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-8, 1498] [/input-12, 73] [/input-12, 80] 
cut re-enabled after branching node selection
0 lb beta sum: 0.01735583133995533, worst -0.2895221710205078
10 lb beta sum: 0.40237244963645935, worst -0.2894287109375
Time: prepare 0.0279    bound 0.1420    transfer 0.0022    finalize 0.0037    func 0.1802    
Accumulated time: func 1.4348    prepare 0.0788    bound 1.2892    transfer 0.0168    finalize 0.0229    
all_split False
======================Cut inference begins======================
max lb tensor(0.35965198) min lb tensor(-0.28940630)
Number of Verified Splits: 514 of 670
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.09906601905822754 
BICCOS Cumulative time: 0.8876602649688721
Preprocessing time: 0.01958775520324707 Inference time: 0.07320666313171387 Add cuts time: 0.0060007572174072266 Cut analysis time: 0.000270843505859375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28941 (20), -0.28553 (20), -0.24933 (20), -0.24526 (20), -0.24011 (20), -0.23391 (20), -0.23223 (20), -0.22521 (20), -0.22512 (20), -0.21999 (20), -0.21751 (20), -0.21586 (20), -0.21377 (20), -0.21265 (20), -0.21101 (20), -0.20950 (20), -0.20393 (20), -0.20296 (20), -0.20099 (20), -0.20065 (20), 
Length of domains: 156
Time: pickout 0.0068    decision 0.0338    set_bounds 0.0185    solve 0.1804    add 0.0022    
Accumulated time: pickout 0.0315    decision 0.2375    set_bounds 0.2872    solve 1.4360    add 0.1288    
Current (lb-rhs): -0.28940629959106445
1789 domains visited
Cumulative time: 3.035923719406128

BaB round 11
batch: 156
splitting decisions: 
split level 0: [/input-12, 80] [/input-12, 73] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 73] [/input-12, 73] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2480912208557129
10 lb beta sum: 0.304694801568985, worst -0.008401423692703247

all verified at 11th iter
Time: prepare 0.0051    bound 0.0630    transfer 0.0006    finalize 0.0017    func 0.0725    
Accumulated time: func 1.5073    prepare 0.0842    bound 1.3522    transfer 0.0174    finalize 0.0246    
all_split False
======================Cut inference begins======================
max lb tensor(0.26662600) min lb tensor(0.02720356)
Number of Verified Splits: 312 of 312
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.009127140045166016 
BICCOS Cumulative time: 0.8967874050140381
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0036    decision 0.0182    set_bounds 0.0085    solve 0.0725    add 0.0004    
Accumulated time: pickout 0.0351    decision 0.2557    set_bounds 0.2958    solve 1.5085    add 0.1292    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1789 domains visited
Cumulative time: 3.149304151535034


Properties batch 1, size 1
Remaining timeout: 195.04943704605103
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 195.04936146736145
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 195.0493359565735
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 195.04931449890137
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 195.0492935180664
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 195.04927372932434
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 195.04925346374512
Verifying property 7 with 1 instances.
##### Instance 150 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.31218004]], device='cuda:0') need to verify.
Model prediction is: tensor([-40.21208954, -37.47401810, -45.92300034, -45.22758484, -44.35440063,
        -46.91486359, -47.12097549, -45.06463242, -40.81108856, -39.30743790],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.31218004]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 981
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 384
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1412
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00014448165893554688
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 47] 
split level 1: [/input-12, 0] 
split level 2: [/input-12, 84] 
split level 3: [/input-12, 75] 
split level 4: [/input-12, 8] 
split level 5: [/input-12, 24] 
split level 6: [/input-12, 81] 
split level 7: [/input-12, 94] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.16994190216064453

all verified at 0th iter
Time: prepare 0.0019    bound 0.0044    transfer 0.0005    finalize 0.0017    func 0.0102    
Accumulated time: func 0.0102    prepare 0.0023    bound 0.0044    transfer 0.0005    finalize 0.0017    
all_split False
======================Cut inference begins======================
max lb tensor(1.53849912) min lb tensor(0.16994190)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006734371185302734 
BICCOS Cumulative time: 0.006734371185302734
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0164    solve 0.0103    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0164    solve 0.0103    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06255078315734863


Properties batch 8, size 1
Remaining timeout: 194.77666902542114
Verifying property 8 with 1 instances.
##### Instance 150 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.05885267]], device='cuda:0') need to verify.
Model prediction is: tensor([-40.21208954, -37.47401810, -45.92300034, -45.22758484, -44.35440063,
        -46.91486359, -47.12097549, -45.06463242, -40.81108856, -39.30743790],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.05885267]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 981
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 384
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1412
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010585784912109375
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 97] 
split level 1: [/input-12, 11] 
split level 2: [/input-12, 45] 
split level 3: [/input-12, 81] 
split level 4: [/input-12, 50] 
split level 5: [/input-12, 14] 
split level 6: [/input-12, 71] 
split level 7: [/input-12, 28] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6480730772018433
10 lb beta sum: 0.0, worst -0.641533613204956
Time: prepare 0.0021    bound 0.1311    transfer 0.0054    finalize 0.0030    func 0.1436    
Accumulated time: func 0.1436    prepare 0.0026    bound 0.1311    transfer 0.0054    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.41697705) min lb tensor(-0.63810623)
Number of Verified Splits: 130 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -2.0588457584381104
10 lb beta sum: 0.0, worst -2.0588455200195312
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.18879246711730957 
BICCOS Cumulative time: 0.18879246711730957
Preprocessing time: 0.008152008056640625 Inference time: 0.1788790225982666 Add cuts time: 0.0009641647338867188 Cut analysis time: 0.000797271728515625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.63811 (8), -0.63192 (8), -0.61975 (8), -0.61942 (8), -0.61618 (8), -0.60916 (8), -0.59596 (8), -0.58899 (8), -0.52803 (8), -0.52142 (8), -0.50281 (8), -0.50131 (8), -0.49869 (8), -0.49810 (8), -0.49449 (8), -0.48810 (8), -0.48456 (8), -0.48364 (8), -0.47101 (8), -0.46660 (8), 
Length of domains: 126
Time: pickout 0.0004    decision 0.0242    set_bounds 0.0253    solve 0.1438    add 0.0026    
Accumulated time: pickout 0.0004    decision 0.0242    set_bounds 0.0253    solve 0.1438    add 0.0026    
Current (lb-rhs): -0.6381062269210815
126 domains visited
Cumulative time: 0.39093780517578125

BaB round 2
batch: 126
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1498] [/input-12, 44] [/input-8, 1498] [/input-8, 1498] [/input-8, 1498] [/input-8, 1498] [/input-8, 1498] [/input-12, 44] [/input-12, 44] [/input-8, 1498] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6275684833526611
10 lb beta sum: 0.0, worst -0.6244966983795166
Time: prepare 0.0051    bound 0.1312    transfer 0.0053    finalize 0.0018    func 0.1453    
Accumulated time: func 0.2889    prepare 0.0078    bound 0.2623    transfer 0.0107    finalize 0.0047    
all_split False
======================Cut inference begins======================
max lb tensor(0.08099222) min lb tensor(-0.62314796)
Number of Verified Splits: 17 of 252
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.7029316425323486
10 lb beta sum: 0.0, worst -1.588679552078247
Total number of valid cuts: 10.
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.15276575088500977 
BICCOS Cumulative time: 0.34155821800231934
Preprocessing time: 0.0077593326568603516 Inference time: 0.14463496208190918 Add cuts time: 0.0003552436828613281 Cut analysis time: 1.621246337890625e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.62315 (9), -0.61680 (9), -0.60614 (9), -0.60245 (9), -0.59051 (9), -0.58237 (9), -0.57915 (9), -0.57477 (9), -0.52628 (9), -0.51794 (9), -0.50290 (9), -0.50075 (9), -0.48273 (9), -0.47997 (9), -0.47832 (9), -0.47780 (9), -0.47380 (9), -0.47173 (9), -0.46810 (9), -0.46710 (9), 
Length of domains: 235
Time: pickout 0.0021    decision 0.0221    set_bounds 0.0042    solve 0.1454    add 0.0041    
Accumulated time: pickout 0.0024    decision 0.0463    set_bounds 0.0295    solve 0.2891    add 0.0067    
Current (lb-rhs): -0.6231479644775391
361 domains visited
Cumulative time: 0.72220778465271

BaB round 3
batch: 235
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1498] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-8, 1498] [/input-8, 1498] [/input-12, 44] [/input-12, 44] [/input-12, 44] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5981166362762451
10 lb beta sum: 0.0, worst -0.5967729091644287
Time: prepare 0.0211    bound 0.1435    transfer 0.0048    finalize 0.0029    func 0.1754    
Accumulated time: func 0.4644    prepare 0.0292    bound 0.4058    transfer 0.0155    finalize 0.0076    
all_split False
======================Cut inference begins======================
max lb tensor(0.20363396) min lb tensor(-0.59612596)
Number of Verified Splits: 138 of 470
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.8958543539047241
10 lb beta sum: 0.00504858186468482, worst -1.6461156606674194
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 7-9: 11
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.24360299110412598 
BICCOS Cumulative time: 0.5851612091064453
Preprocessing time: 0.014492511749267578 Inference time: 0.22678589820861816 Add cuts time: 0.0013015270233154297 Cut analysis time: 0.0010230541229248047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.59613 (10), -0.58983 (10), -0.57964 (10), -0.57947 (10), -0.57558 (10), -0.56754 (10), -0.55488 (10), -0.54766 (10), -0.49535 (10), -0.48817 (10), -0.48741 (10), -0.47300 (10), -0.47073 (10), -0.47073 (10), -0.45150 (10), -0.45126 (10), -0.44974 (10), -0.44700 (10), -0.44678 (10), -0.44293 (10), 
Length of domains: 332
Time: pickout 0.0040    decision 0.0272    set_bounds 0.0123    solve 0.1756    add 0.0033    
Accumulated time: pickout 0.0064    decision 0.0734    set_bounds 0.0417    solve 0.4647    add 0.0100    
Current (lb-rhs): -0.5961259603500366
693 domains visited
Cumulative time: 1.1905043125152588

BaB round 4
batch: 332
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 56] [/input-8, 355] [/input-8, 355] [/input-12, 56] [/input-8, 355] [/input-8, 355] [/input-12, 56] [/input-8, 355] [/input-8, 355] [/input-8, 355] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5637820959091187
10 lb beta sum: 0.0, worst -0.5628612041473389
Time: prepare 0.0177    bound 0.1657    transfer 0.0047    finalize 0.0049    func 0.1973    
Accumulated time: func 0.6616    prepare 0.0470    bound 0.5715    transfer 0.0202    finalize 0.0125    
all_split False
======================Cut inference begins======================
max lb tensor(0.09812880) min lb tensor(-0.56249607)
Number of Verified Splits: 144 of 664
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 4
#cuts 4-6: 6
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.03876948356628418 
BICCOS Cumulative time: 0.6239306926727295
Preprocessing time: 0.02000260353088379 Inference time: 0.015396595001220703 Add cuts time: 0.0024673938751220703 Cut analysis time: 0.0009028911590576172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.56250 (11), -0.55591 (11), -0.54608 (11), -0.54606 (11), -0.54238 (11), -0.53493 (11), -0.52172 (11), -0.51446 (11), -0.47848 (11), -0.46686 (11), -0.46001 (11), -0.45296 (11), -0.45248 (11), -0.45187 (11), -0.45060 (11), -0.44734 (11), -0.43892 (11), -0.43679 (11), -0.43474 (11), -0.43290 (11), 
Length of domains: 520
Time: pickout 0.0053    decision 0.0318    set_bounds 0.0173    solve 0.1975    add 0.0037    
Accumulated time: pickout 0.0118    decision 0.1052    set_bounds 0.0591    solve 0.6622    add 0.0137    
Current (lb-rhs): -0.5624960660934448
1213 domains visited
Cumulative time: 1.4864673614501953

BaB round 5
batch: 520
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 355] [/input-12, 56] [/input-8, 355] [/input-12, 56] [/input-12, 56] [/input-8, 355] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.522878885269165
10 lb beta sum: 0.11348693817853928, worst -0.5223809480667114
Time: prepare 0.0237    bound 0.1579    transfer 0.0048    finalize 0.0064    func 0.2006    
Accumulated time: func 0.8622    prepare 0.0710    bound 0.7294    transfer 0.0250    finalize 0.0189    
all_split False
======================Cut inference begins======================
max lb tensor(0.14804073) min lb tensor(-0.52219510)
Number of Verified Splits: 328 of 1040
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 9
#cuts 4-6: 6
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.07500934600830078 
BICCOS Cumulative time: 0.6989400386810303
Preprocessing time: 0.037012338638305664 Inference time: 0.033442020416259766 Add cuts time: 0.00374603271484375 Cut analysis time: 0.0008089542388916016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52220 (12), -0.52062 (12), -0.51600 (12), -0.51376 (12), -0.50671 (12), -0.50619 (12), -0.50343 (12), -0.50274 (12), -0.49991 (12), -0.49979 (12), -0.49603 (12), -0.48925 (12), -0.48365 (12), -0.47688 (12), -0.47168 (12), -0.46472 (12), -0.45895 (12), -0.42399 (12), -0.42193 (12), -0.41836 (12), 
Length of domains: 712
Time: pickout 0.0103    decision 0.0485    set_bounds 0.0332    solve 0.2010    add 0.0987    
Accumulated time: pickout 0.0221    decision 0.1538    set_bounds 0.0923    solve 0.8631    add 0.1123    
Current (lb-rhs): -0.5221951007843018
1925 domains visited
Cumulative time: 1.9648289680480957

BaB round 6
batch: 712
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 75] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5079877376556396
10 lb beta sum: 0.16897207498550415, worst -0.5077633857727051
Time: prepare 0.0334    bound 0.1708    transfer 0.0069    finalize 0.0102    func 0.2308    
Accumulated time: func 1.0930    prepare 0.1046    bound 0.9002    transfer 0.0319    finalize 0.0291    
all_split False
======================Cut inference begins======================
max lb tensor(0.39682913) min lb tensor(-0.50767124)
Number of Verified Splits: 555 of 1424
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 9
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.11914682388305664 
BICCOS Cumulative time: 0.8180868625640869
Preprocessing time: 0.04960060119628906 Inference time: 0.06331753730773926 Add cuts time: 0.005671977996826172 Cut analysis time: 0.0005567073822021484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50767 (13), -0.50595 (13), -0.50138 (13), -0.49921 (13), -0.49166 (13), -0.49014 (13), -0.48861 (13), -0.48825 (13), -0.48515 (13), -0.48266 (13), -0.47999 (13), -0.47246 (13), -0.46928 (13), -0.46267 (13), -0.45959 (13), -0.45697 (13), -0.45108 (13), -0.45015 (13), -0.44983 (13), -0.44140 (13), 
Length of domains: 869
Time: pickout 0.0180    decision 0.0570    set_bounds 0.0417    solve 0.2311    add 0.1836    
Accumulated time: pickout 0.0401    decision 0.2107    set_bounds 0.1339    solve 1.0942    add 0.2959    
Current (lb-rhs): -0.5076712369918823
2794 domains visited
Cumulative time: 2.626537322998047

BaB round 7
batch: 869
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] [/input-12, 61] [/input-8, 1492] [/input-12, 61] [/input-12, 75] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-8, 1492] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.493320107460022
10 lb beta sum: 0.4109925627708435, worst -0.49306726455688477
Time: prepare 0.0372    bound 0.1797    transfer 0.0088    finalize 0.0131    func 0.2504    
Accumulated time: func 1.3434    prepare 0.1421    bound 1.0799    transfer 0.0407    finalize 0.0423    
all_split False
======================Cut inference begins======================
max lb tensor(0.54500359) min lb tensor(-0.49297988)
Number of Verified Splits: 892 of 1738
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 7
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.17382287979125977 
BICCOS Cumulative time: 0.9919097423553467
Preprocessing time: 0.06369614601135254 Inference time: 0.10099315643310547 Add cuts time: 0.00842142105102539 Cut analysis time: 0.0007121562957763672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.49298 (14), -0.49139 (14), -0.48752 (14), -0.48538 (14), -0.47761 (14), -0.47474 (14), -0.47455 (14), -0.47161 (14), -0.46269 (14), -0.45526 (14), -0.45372 (14), -0.44590 (14), -0.43192 (14), -0.42343 (14), -0.42343 (14), -0.42290 (14), -0.42231 (14), -0.41703 (14), -0.41678 (14), -0.41648 (14), 
Length of domains: 846
Time: pickout 0.0196    decision 0.0656    set_bounds 0.0544    solve 0.2508    add 0.0079    
Accumulated time: pickout 0.0598    decision 0.2764    set_bounds 0.1884    solve 1.3450    add 0.3038    
Current (lb-rhs): -0.49297988414764404
3640 domains visited
Cumulative time: 3.21244215965271

BaB round 8
batch: 846
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 75] [/input-8, 412] [/input-12, 61] [/input-12, 75] [/input-12, 61] [/input-12, 75] [/input-8, 412] [/input-8, 412] [/input-12, 61] [/input-12, 75] 
cut re-enabled after branching node selection
0 lb beta sum: 0.46726885437965393, worst -0.828818678855896
10 lb beta sum: 0.5302637219429016, worst -0.46264857053756714
Time: prepare 0.0830    bound 0.1811    transfer 0.0024    finalize 0.0121    func 0.2898    
Accumulated time: func 1.6332    prepare 0.2254    bound 1.2610    transfer 0.0430    finalize 0.0544    
all_split False
======================Cut inference begins======================
max lb tensor(0.54288340) min lb tensor(-0.46261400)
Number of Verified Splits: 331 of 1692
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 8
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.10632014274597168 
BICCOS Cumulative time: 1.0982298851013184
Preprocessing time: 0.059352874755859375 Inference time: 0.041985273361206055 Add cuts time: 0.004277229309082031 Cut analysis time: 0.0007047653198242188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.46261 (15), -0.46252 (15), -0.46111 (15), -0.45669 (15), -0.45518 (15), -0.45465 (15), -0.45367 (15), -0.44640 (15), -0.44585 (15), -0.44546 (15), -0.44425 (15), -0.44402 (15), -0.44264 (15), -0.44255 (15), -0.44190 (15), -0.44126 (15), -0.43939 (15), -0.43938 (15), -0.43754 (15), -0.43485 (15), 
Length of domains: 1361
Time: pickout 0.0215    decision 0.0693    set_bounds 0.0539    solve 0.2901    add 0.0319    
Accumulated time: pickout 0.0813    decision 0.3457    set_bounds 0.2423    solve 1.6351    add 0.3357    
Current (lb-rhs): -0.4626139998435974
5001 domains visited
Cumulative time: 3.792872428894043

BaB round 9
batch: 1361
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 73] [/input-12, 75] [/input-12, 75] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4359893798828125
10 lb beta sum: 0.3577713966369629, worst -0.4358522891998291
Time: prepare 0.0613    bound 0.2378    transfer 0.0114    finalize 0.0170    func 0.3636    
Accumulated time: func 1.9968    prepare 0.2870    bound 1.4988    transfer 0.0544    finalize 0.0713    
all_split False
======================Cut inference begins======================
max lb tensor(0.40140772) min lb tensor(-0.43581748)
Number of Verified Splits: 906 of 2722
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 10
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.21889066696166992 
BICCOS Cumulative time: 1.3171205520629883
Preprocessing time: 0.08917713165283203 Inference time: 0.11504554748535156 Add cuts time: 0.013997077941894531 Cut analysis time: 0.0006709098815917969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.43582 (16), -0.43448 (16), -0.43166 (16), -0.42963 (16), -0.42778 (16), -0.42438 (16), -0.42344 (16), -0.42233 (16), -0.42020 (16), -0.42017 (16), -0.41939 (16), -0.41915 (16), -0.41883 (16), -0.41713 (16), -0.41675 (16), -0.41626 (16), -0.41602 (16), -0.41573 (16), -0.41476 (16), -0.41458 (16), 
Length of domains: 1816
Time: pickout 0.0204    decision 0.1029    set_bounds 0.2520    solve 0.3664    add 0.0126    
Accumulated time: pickout 0.1017    decision 0.4486    set_bounds 0.4943    solve 2.0015    add 0.3483    
Current (lb-rhs): -0.4358174800872803
6817 domains visited
Cumulative time: 4.777646780014038

BaB round 10
batch: 1816
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1492] [/input-12, 73] [/input-12, 73] [/input-8, 1492] [/input-12, 58] [/input-12, 73] [/input-12, 73] [/input-8, 1492] [/input-12, 67] [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4246464967727661
10 lb beta sum: 0.5103399157524109, worst -0.42017197608947754
Time: prepare 0.0766    bound 0.2742    transfer 0.0158    finalize 0.1585    func 0.5491    
Accumulated time: func 2.5459    prepare 0.3639    bound 1.7731    transfer 0.0702    finalize 0.2298    
all_split False
======================Cut inference begins======================
max lb tensor(0.51783699) min lb tensor(-0.42015618)
Number of Verified Splits: 997 of 3632
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 12
#cuts 4-6: 4
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.26255106925964355 
BICCOS Cumulative time: 1.5796716213226318
Preprocessing time: 0.11488032341003418 Inference time: 0.13359737396240234 Add cuts time: 0.013241052627563477 Cut analysis time: 0.0008323192596435547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.42016 (17), -0.41327 (17), -0.41179 (17), -0.40708 (17), -0.40531 (17), -0.39949 (17), -0.39583 (17), -0.39535 (17), -0.39522 (17), -0.39331 (17), -0.39285 (17), -0.39184 (17), -0.39096 (17), -0.38877 (17), -0.38877 (17), -0.38865 (17), -0.38691 (17), -0.38594 (17), -0.38540 (17), -0.38533 (17), 
Length of domains: 2635
Time: pickout 0.0363    decision 0.1189    set_bounds 0.1037    solve 0.5501    add 0.0222    
Accumulated time: pickout 0.1380    decision 0.5675    set_bounds 0.5980    solve 2.5516    add 0.3705    
Current (lb-rhs): -0.42015618085861206
9452 domains visited
Cumulative time: 5.88818097114563

BaB round 11
batch: 2635
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-8, 412] [/input-12, 67] [/input-12, 67] [/input-12, 58] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.40358543395996094
10 lb beta sum: 0.5848166942596436, worst -0.4428284168243408
Time: prepare 0.1140    bound 0.3634    transfer 0.0166    finalize 0.2060    func 0.7347    
Accumulated time: func 3.2807    prepare 0.4786    bound 2.1364    transfer 0.0868    finalize 0.4359    
all_split False
======================Cut inference begins======================
max lb tensor(0.84749568) min lb tensor(-0.39931095)
Number of Verified Splits: 2610 of 5270
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 16
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.550445556640625 
BICCOS Cumulative time: 2.130117177963257
Preprocessing time: 0.16470861434936523 Inference time: 0.35275936126708984 Add cuts time: 0.032103776931762695 Cut analysis time: 0.0008738040924072266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39931 (18), -0.39229 (18), -0.39212 (18), -0.39082 (18), -0.38865 (18), -0.38763 (18), -0.38593 (18), -0.38587 (18), -0.38538 (18), -0.38533 (18), -0.38434 (18), -0.38391 (18), -0.38242 (18), -0.38217 (18), -0.38190 (18), -0.38043 (18), -0.37970 (18), -0.37852 (18), -0.37751 (18), -0.37696 (18), 
Length of domains: 2660
Time: pickout 0.0397    decision 0.1704    set_bounds 0.1465    solve 0.7356    add 0.1468    
Accumulated time: pickout 0.1776    decision 0.7379    set_bounds 0.7445    solve 3.2873    add 0.5173    
Current (lb-rhs): -0.3993109464645386
12112 domains visited
Cumulative time: 7.713965177536011

BaB round 12
batch: 2660
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 24] [/input-12, 58] [/input-8, 412] [/input-12, 24] [/input-12, 24] [/input-12, 58] [/input-12, 58] [/input-12, 24] [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3922916650772095
10 lb beta sum: 1.132672905921936, worst -0.39219844341278076
Time: prepare 0.1137    bound 0.3651    transfer 0.0075    finalize 0.0385    func 0.5598    
Accumulated time: func 3.8405    prepare 0.5926    bound 2.5015    transfer 0.0943    finalize 0.4743    
all_split False
======================Cut inference begins======================
max lb tensor(0.96002185) min lb tensor(-0.39217150)
Number of Verified Splits: 4595 of 5320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 1.0284032821655273 
BICCOS Cumulative time: 3.158520460128784
Preprocessing time: 0.16982293128967285 Inference time: 0.8001983165740967 Add cuts time: 0.05761122703552246 Cut analysis time: 0.0007708072662353516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39217 (19), -0.38574 (19), -0.35837 (19), -0.34849 (19), -0.34146 (19), -0.34080 (19), -0.33844 (19), -0.33733 (19), -0.33628 (19), -0.33336 (19), -0.32231 (19), -0.31837 (19), -0.31749 (19), -0.31450 (19), -0.31203 (19), -0.30495 (19), -0.30467 (19), -0.30279 (19), -0.29297 (19), -0.28696 (19), 
Length of domains: 725
Time: pickout 0.0674    decision 0.1652    set_bounds 0.2929    solve 0.5616    add 0.0651    
Accumulated time: pickout 0.2450    decision 0.9031    set_bounds 1.0374    solve 3.8488    add 0.5824    
Current (lb-rhs): -0.3921715021133423
12837 domains visited
Cumulative time: 9.94318175315857

BaB round 13
batch: 725
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3817070722579956
10 lb beta sum: 2.426539897918701, worst -0.3058609962463379
Time: prepare 0.0297    bound 0.1671    transfer 0.0069    finalize 0.0088    func 0.2219    
Accumulated time: func 4.0624    prepare 0.6227    bound 2.6686    transfer 0.1013    finalize 0.4832    
all_split False
======================Cut inference begins======================
max lb tensor(0.95483404) min lb tensor(-0.30553940)
Number of Verified Splits: 1290 of 1450
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 0.23969221115112305 
BICCOS Cumulative time: 3.3982126712799072
Preprocessing time: 0.0465240478515625 Inference time: 0.1775827407836914 Add cuts time: 0.014919757843017578 Cut analysis time: 0.0006656646728515625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30554 (20), -0.29022 (20), -0.25926 (20), -0.25824 (20), -0.25507 (20), -0.24329 (20), -0.24304 (20), -0.23805 (20), -0.23018 (20), -0.21697 (20), -0.21423 (20), -0.20973 (20), -0.20336 (20), -0.20254 (20), -0.19869 (20), -0.18897 (20), -0.18513 (20), -0.18490 (20), -0.17777 (20), -0.17379 (20), 
Length of domains: 160
Time: pickout 0.0144    decision 0.0580    set_bounds 0.0393    solve 0.2222    add 0.0771    
Accumulated time: pickout 0.2594    decision 0.9610    set_bounds 1.0767    solve 4.0710    add 0.6595    
Current (lb-rhs): -0.30553939938545227
12997 domains visited
Cumulative time: 10.609164237976074

BaB round 14
batch: 160
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 67] [/input-8, 172] [/input-8, 172] [/input-12, 24] [/input-12, 24] [/input-8, 172] [/input-8, 172] [/input-12, 24] [/input-12, 67] [/input-12, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.36954545974731445
10 lb beta sum: 2.276179075241089, worst -0.2945100665092468
Time: prepare 0.0067    bound 0.1414    transfer 0.0007    finalize 0.0024    func 0.1533    
Accumulated time: func 4.2157    prepare 0.6296    bound 2.8100    transfer 0.1019    finalize 0.4855    
all_split False
======================Cut inference begins======================
max lb tensor(0.44202638) min lb tensor(-0.29424816)
Number of Verified Splits: 119 of 320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 0.029810667037963867 
BICCOS Cumulative time: 3.428023338317871
Preprocessing time: 0.00978994369506836 Inference time: 0.017545700073242188 Add cuts time: 0.0019571781158447266 Cut analysis time: 0.0005178451538085938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29425 (21), -0.28058 (21), -0.27487 (21), -0.25507 (21), -0.24867 (21), -0.24654 (21), -0.23187 (21), -0.22916 (21), -0.22812 (21), -0.22685 (21), -0.22514 (21), -0.22017 (21), -0.21782 (21), -0.21489 (21), -0.20579 (21), -0.20318 (21), -0.20254 (21), -0.20210 (21), -0.19918 (21), -0.19364 (21), 
Length of domains: 201
Time: pickout 0.0055    decision 0.0248    set_bounds 0.0086    solve 0.1534    add 0.0040    
Accumulated time: pickout 0.2649    decision 0.9858    set_bounds 1.0854    solve 4.2244    add 0.6634    
Current (lb-rhs): -0.29424816370010376
13198 domains visited
Cumulative time: 10.836138486862183

BaB round 15
batch: 201
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 412] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-8, 1892] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 2.6357195377349854, worst -0.2942487597465515
10 lb beta sum: 2.6423075199127197, worst -0.2940254807472229
Time: prepare 0.0201    bound 0.1526    transfer 0.0022    finalize 0.0027    func 0.1802    
Accumulated time: func 4.3959    prepare 0.6499    bound 2.9626    transfer 0.1041    finalize 0.4882    
all_split False
======================Cut inference begins======================
max lb tensor(0.38865972) min lb tensor(-0.29391545)
Number of Verified Splits: 99 of 402
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 0.028665781021118164 
BICCOS Cumulative time: 3.4566891193389893
Preprocessing time: 0.011908292770385742 Inference time: 0.013806819915771484 Add cuts time: 0.0024399757385253906 Cut analysis time: 0.0005106925964355469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29392 (22), -0.28036 (22), -0.27332 (22), -0.26490 (22), -0.25507 (22), -0.24867 (22), -0.24867 (22), -0.24654 (22), -0.24654 (22), -0.23187 (22), -0.22916 (22), -0.22916 (22), -0.22812 (22), -0.22812 (22), -0.22685 (22), -0.22514 (22), -0.22514 (22), -0.22017 (22), -0.21782 (22), -0.21489 (22), 
Length of domains: 303
Time: pickout 0.0039    decision 0.0263    set_bounds 0.0104    solve 0.1803    add 0.0059    
Accumulated time: pickout 0.2688    decision 1.0121    set_bounds 1.0958    solve 4.4047    add 0.6693    
Current (lb-rhs): -0.29391545057296753
13501 domains visited
Cumulative time: 11.092435121536255

BaB round 16
batch: 303
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1892] [/input-8, 1892] [/input-8, 1892] [/input-8, 1628] [/input-8, 1892] [/input-8, 1885] [/input-8, 172] [/input-8, 1892] [/input-8, 1885] [/input-8, 1628] 
cut re-enabled after branching node selection
0 lb beta sum: 2.6324708461761475, worst -0.29391640424728394
10 lb beta sum: 2.6367480754852295, worst -0.2938222289085388
Time: prepare 0.0274    bound 0.1531    transfer 0.0010    finalize 0.0031    func 0.1885    
Accumulated time: func 4.5844    prepare 0.6775    bound 3.1157    transfer 0.1051    finalize 0.4913    
all_split False
======================Cut inference begins======================
max lb tensor(0.31365275) min lb tensor(-0.29375511)
Number of Verified Splits: 171 of 606
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.046575069427490234 
BICCOS Cumulative time: 3.5032641887664795
Preprocessing time: 0.017847299575805664 Inference time: 0.026767492294311523 Add cuts time: 0.0017693042755126953 Cut analysis time: 0.00019097328186035156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29376 (23), -0.28030 (23), -0.27268 (23), -0.26863 (23), -0.26343 (23), -0.25700 (23), -0.25507 (23), -0.24867 (23), -0.24867 (23), -0.24738 (23), -0.24654 (23), -0.24654 (23), -0.24654 (23), -0.24654 (23), -0.24030 (23), -0.23187 (23), -0.22916 (23), -0.22916 (23), -0.22812 (23), -0.22812 (23), 
Length of domains: 435
Time: pickout 0.0061    decision 0.0318    set_bounds 0.0167    solve 0.1886    add 0.0045    
Accumulated time: pickout 0.2749    decision 1.0439    set_bounds 1.1125    solve 4.5933    add 0.6738    
Current (lb-rhs): -0.29375511407852173
13936 domains visited
Cumulative time: 11.388047695159912

BaB round 17
batch: 435
splitting decisions: 
split level 0: [/input-8, 1892] [/input-8, 1628] [/input-8, 1892] [/input-8, 1140] [/input-8, 1140] [/input-8, 1885] [/input-8, 411] [/input-8, 172] [/input-8, 1140] [/input-8, 1885] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3348388671875

all verified at 8th iter
Time: prepare 0.0168    bound 0.0582    transfer 0.0060    finalize 0.0044    func 0.0914    
Accumulated time: func 4.6758    prepare 0.6945    bound 3.1739    transfer 0.1111    finalize 0.4958    
all_split False
======================Cut inference begins======================
max lb tensor(0.28778833) min lb tensor(0.03878978)
Number of Verified Splits: 870 of 870
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.02537846565246582 
BICCOS Cumulative time: 3.5286426544189453
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0085    decision 0.0383    set_bounds 0.0227    solve 0.0916    add 0.0014    
Accumulated time: pickout 0.2834    decision 1.0822    set_bounds 1.1352    solve 4.6849    add 0.6752    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
13936 domains visited
Cumulative time: 11.579710245132446

Result: safe in 16.9611 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 151, vnnlib ID: 151 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.19466782, -22.66065407, -17.39609146, -16.48542595, -18.10617638,
         -16.38319588, -19.94363785, -17.39924622, -24.26309776, -22.04083633]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [755]; unstable size 755; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 342, 1, 755] with unstable size 341 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 35, 1, 755] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 755] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [341]; unstable size 341; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 35, 1, 341] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 341] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [34]; unstable size 34; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.71719766,  2.94491959, -1.58161807, -0.93340802, -0.46130306,
          1.34312582, -1.42370296,  4.26212311,  2.19915152]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.19466782, -22.66065407, -17.39609146, -16.48542595, -18.10617638,
         -16.38319588, -19.94363785, -17.39924622, -24.26309776, -22.04083633]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.72876740, -22.42153740, -17.17454720, -15.92553997, -17.64330101,
          -16.19105148, -19.48685265, -17.10886383, -23.88085938, -21.71193314],
         [-20.72876740, -22.42153740, -17.17454720, -15.92553997, -17.64330101,
          -16.19105148, -19.48685265, -17.10886383, -23.88085938, -21.71193314]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.98349571, -0.26551151,  1.45224953,  0.91781235]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0072 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0836 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 152, vnnlib ID: 152 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.83067322, -36.98228836, -28.81441116, -32.38808441, -30.07877350,
         -33.05393219, -31.01095200, -33.45640182, -36.36339951, -37.03667450]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [512]; unstable size 512; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 283, 1, 512] with unstable size 282 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 41, 1, 512] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 512] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [282]; unstable size 282; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 41, 1, 282] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 282] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [40]; unstable size 40; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.11599183,  4.47801161,  0.90312266, -1.69963193,  1.23615754,
         -0.73574275,  1.06902337,  3.54006720,  3.86227107]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-31.83067322, -36.98228836, -28.81441116, -32.38808441, -30.07877350,
         -33.05393219, -31.01095200, -33.45640182, -36.36339951, -37.03667450]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.23it/s]100%|██████████| 1/1 [00:00<00:00,  8.22it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.48471832, -37.17822647, -29.67317390, -32.59946060, -29.75833130,
          -33.11799240, -31.33660126, -33.27915573, -36.59161758, -37.11522675],
         [-32.48471832, -37.17822647, -29.67317390, -32.59946060, -29.75833130,
          -33.11799240, -31.33660126, -33.27915573, -36.59161758, -37.11522675]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.81154442, 0.08515739, 1.66342735]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1247 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 14.42790699005127
alpha/beta optimization time: 1.3125030994415283
initial alpha-crown bounds: tensor([[ 0.00636482,  4.68382406,  1.08298230, -1.46272004,  1.42966402,
         -0.55529547,  1.30996203,  3.78952026,  4.14360428]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -1.4627200365066528
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.48920440673828
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.489159822464
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.48913097381592
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.48910689353943
Verifying property 3 with 1 instances.
##### Instance 152 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.46272004]], device='cuda:0') need to verify.
Model prediction is: tensor([-31.83067322, -36.98228836, -28.81441116, -32.38808441, -30.07877350,
        -33.05393219, -31.01095200, -33.45640182, -36.36339951, -37.03667450],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.46272004]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 512
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 280
Node /15 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 830
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010418891906738281
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.4627176523208618
10 lb beta sum: 0.0, worst -1.462723970413208
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0557    transfer 0.0001    finalize 0.0001    func 0.0561    
Accumulated time: func 0.0561    prepare 0.0002    bound 0.0557    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] 
split level 1: [/input-12, 95] 
split level 2: [/input-12, 58] 
split level 3: [/input-12, 71] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 54] 
split level 6: [/input-12, 73] 
split level 7: [/input-12, 29] 
split level 8: [/input-12, 53] 
split level 9: [/input-12, 36] 
split level 10: [/input-12, 81] 
split level 11: [/input-12, 8] 
split level 12: [/input-12, 80] 
split level 13: [/input-8, 1515] 
split level 14: [/input-8, 1508] 
split level 15: [/input-12, 32] 
split level 16: [/input-8, 1523] 
split level 17: [/input-12, 67] 
split level 18: [/input-12, 42] 
split level 19: [/input-8, 1506] 
split level 20: [/input-8, 1505] 
split level 21: [/input-8, 2003] 
split level 22: [/input, 682] 
split level 23: [/input-8, 345] 
split level 24: [/input, 648] 
split level 25: [/input-8, 168] 
split level 26: [/input-8, 1644] 
split level 27: [/input-8, 1692] 
split level 28: [/input-8, 1499] 
split level 29: [/input, 650] 
split level 30: [/input-8, 1691] 
split level 31: [/input-8, 2004] 
split level 32: [/input-8, 475] 
split level 33: [/input, 3992] 
split level 34: [/input-8, 1726] 
split level 35: [/input-8, 1690] 
split level 36: [/input-8, 2017] 
split level 37: [/input-8, 99] 
split level 38: [/input, 1918] 
split level 39: [/input-8, 411] 
split level 40: [/input-8, 161] 
split level 41: [/input, 630] 
split level 42: [/input-8, 686] 
split level 43: [/input, 1900] 
split level 44: [/input-8, 834] 
split level 45: [/input, 1914] 
split level 46: [/input-8, 1520] 
split level 47: [/input, 3998] 
split level 48: [/input, 659] 
split level 49: [/input-8, 987] 
split level 50: [/input-12, 11] 
split level 51: [/input, 978] 
split level 52: [/input-8, 100] 
split level 53: [/input-8, 1131] 
split level 54: [/input, 670] 
split level 55: [/input, 945] 
split level 56: [/input-8, 162] 
split level 57: [/input, 1895] 
split level 58: [/input-8, 347] 
split level 59: [/input-8, 1704] 
split level 60: [/input-8, 1701] 
split level 61: [/input-8, 915] 
split level 62: [/input, 1898] 
split level 63: [/input, 706] 
split level 64: [/input, 3929] 
split level 65: [/input, 1882] 
split level 66: [/input-8, 1474] 
split level 67: [/input, 2731] 
split level 68: [/input-8, 1898] 
split level 69: [/input, 2180] 
split level 70: [/input-8, 413] 
split level 71: [/input, 926] 
split level 72: [/input-12, 35] 
split level 73: [/input-8, 410] 
split level 74: [/input-8, 1260] 
split level 75: [/input-8, 922] 
split level 76: [/input, 932] 
split level 77: [/input-8, 1483] 
split level 78: [/input-8, 1268] 
split level 79: [/input, 599] 
split level 80: [/input, 664] 
split level 81: [/input-8, 907] 
split level 82: [/input, 654] 
split level 83: [/input, 3292] 
split level 84: [/input-8, 2028] 
split level 85: [/input-8, 312] 
split level 86: [/input, 642] 
split level 87: [/input, 651] 
split level 88: [/input, 2099] 
split level 89: [/input-8, 430] 
split level 90: [/input, 826] 
split level 91: [/input-8, 1491] 
split level 92: [/input, 2940] 
split level 93: [/input, 652] 
split level 94: [/input-8, 483] 
split level 95: [/input, 715] 
split level 96: [/input-8, 1375] 
split level 97: [/input, 598] 
split level 98: [/input-8, 1651] 
split level 99: [/input-8, 1265] 
split level 100: [/input-12, 43] 
split level 101: [/input, 2601] 
split level 102: [/input, 565] 
split level 103: [/input-8, 1481] 
split level 104: [/input-8, 1476] 
split level 105: [/input, 4010] 
split level 106: [/input, 1150] 
split level 107: [/input-8, 848] 
split level 108: [/input, 1125] 
split level 109: [/input, 2900] 
split level 110: [/input, 553] 
split level 111: [/input, 673] 
split level 112: [/input-8, 1262] 
split level 113: [/input-8, 418] 
split level 114: [/input, 2796] 
split level 115: [/input-8, 61] 
split level 116: [/input, 1131] 
split level 117: [/input-8, 1903] 
split level 118: [/input, 1919] 
split level 119: [/input, 540] 
split level 120: [/input, 82] 
split level 121: [/input-8, 1695] 
split level 122: [/input, 2118] 
split level 123: [/input-8, 1741] 
split level 124: [/input, 57] 
split level 125: [/input-8, 1266] 
split level 126: [/input-8, 920] 
split level 127: [/input-8, 1229] 
split level 128: [/input-12, 49] 
split level 129: [/input-8, 171] 
split level 130: [/input, 2134] 
split level 131: [/input, 2771] 
split level 132: [/input, 571] 
split level 133: [/input, 554] 
split level 134: [/input-8, 1497] 
split level 135: [/input-8, 151] 
split level 136: [/input, 1129] 
split level 137: [/input-8, 1269] 
split level 138: [/input, 627] 
split level 139: [/input, 3158] 
split level 140: [/input, 551] 
split level 141: [/input, 2772] 
split level 142: [/input, 3306] 
split level 143: [/input, 141] 
split level 144: [/input, 723] 
split level 145: [/input, 1140] 
split level 146: [/input, 2237] 
split level 147: [/input, 1612] 
split level 148: [/input, 2916] 
split level 149: [/input, 1124] 
split level 150: [/input-8, 134] 
split level 151: [/input, 3910] 
split level 152: [/input, 98] 
split level 153: [/input, 1596] 
split level 154: [/input-8, 101] 
split level 155: [/input, 123] 
split level 156: [/input-8, 1117] 
split level 157: [/input, 119] 
split level 158: [/input, 106] 
split level 159: [/input, 671] 
split level 160: [/input, 552] 
split level 161: [/input, 2901] 
split level 162: [/input, 3185] 
split level 163: [/input, 2100] 
split level 164: [/input, 555] 
split level 165: [/input, 958] 
split level 166: [/input, 3154] 
split level 167: [/input, 2781] 
split level 168: [/input, 2148] 
split level 169: [/input-8, 1261] 
split level 170: [/input-8, 1721] 
split level 171: [/input, 2616] 
split level 172: [/input, 534] 
split level 173: [/input-8, 53] 
split level 174: [/input, 3884] 
split level 175: [/input, 2615] 
split level 176: [/input, 2515] 
split level 177: [/input, 134] 
split level 178: [/input, 2343] 
split level 179: [/input, 2690] 
split level 180: [/input, 727] 
split level 181: [/input, 2105] 
split level 182: [/input, 1151] 
split level 183: [/input, 964] 
split level 184: [/input-8, 62] 
split level 185: [/input, 2904] 
split level 186: [/input, 3870] 
split level 187: [/input, 1052] 
split level 188: [/input, 2917] 
split level 189: [/input, 49] 
split level 190: [/input, 1063] 
split level 191: [/input, 3897] 
split level 192: [/input, 2101] 
split level 193: [/input, 2300] 
split level 194: [/input, 2276] 
split level 195: [/input, 160] 
split level 196: [/input-8, 1935] 
split level 197: [/input, 41] 
split level 198: [/input, 2599] 
split level 199: [/input-8, 1905] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.4626288414001465
10 lb beta sum: 0.0, worst -1.4626271724700928
Time: prepare 0.0113    bound 0.1022    transfer 0.0036    finalize 0.0027    func 0.1224    
Accumulated time: func 0.1785    prepare 0.0214    bound 0.1578    transfer 0.0037    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(-0.30742645) min lb tensor(-1.46261716)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010678529739379883 
BICCOS Cumulative time: 0.010678529739379883
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.43775 (1), -1.43737 (1), -1.43655 (1), -1.43590 (1), -1.43571 (1), -1.43499 (1), -1.43490 (1), -1.43461 (1), -1.43336 (1), -1.43295 (1), -1.43244 (1), -1.43235 (1), -1.43211 (1), -1.43093 (1), -1.42855 (1), -1.42765 (1), -1.42152 (1), -1.41986 (1), -1.41938 (1), -1.41855 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5359    set_bounds 0.0087    solve 0.1225    add 0.0720    
Accumulated time: pickout 0.0003    decision 0.5359    set_bounds 0.0087    solve 0.1225    add 0.0720    
Current (lb-rhs): -1.437749981880188
50 domains visited
Cumulative time: 0.8112313747406006

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] [/input-12, 58] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
split level 1: [/input-12, 58] [/input-12, 71] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 71] [/input-12, 71] [/input-12, 58] 
split level 2: [/input-12, 71] [/input-12, 61] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 3: [/input-12, 61] [/input-12, 29] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3473713397979736
10 lb beta sum: 0.0, worst -1.345295786857605
Time: prepare 0.0121    bound 0.1025    transfer 0.0008    finalize 0.0024    func 0.1203    
Accumulated time: func 0.2988    prepare 0.0338    bound 0.2603    transfer 0.0045    finalize 0.0052    
all_split False
======================Cut inference begins======================
max lb tensor(0.53594756) min lb tensor(-1.34462333)
Number of Verified Splits: 6 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.012940645217895508 
BICCOS Cumulative time: 0.02361917495727539
Preprocessing time: 0.011725902557373047 Inference time: 0.0003075599670410156 Add cuts time: 0.00011134147644042969 Cut analysis time: 0.0007958412170410156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53768 (2), -0.53440 (2), -0.53434 (2), -0.53360 (2), -0.53322 (2), -0.52385 (2), -0.52080 (2), -0.51899 (2), -0.51873 (2), -0.51626 (2), -0.51339 (2), -0.50915 (2), -0.50527 (2), -0.50103 (2), -0.49983 (2), -0.49294 (2), -0.48820 (2), -0.47813 (2), -0.47800 (2), -0.45860 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0212    set_bounds 0.0136    solve 0.1203    add 0.2241    
Accumulated time: pickout 0.0015    decision 0.5571    set_bounds 0.0223    solve 0.2428    add 0.2961    
Current (lb-rhs): -0.5376782417297363
100 domains visited
Cumulative time: 1.2115871906280518

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 58] [/input-12, 71] [/input-12, 71] [/input-12, 88] [/input-12, 58] 
split level 1: [/input-12, 71] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 71] [/input-12, 61] [/input-12, 61] [/input-12, 58] [/input-12, 71] 
split level 2: [/input-12, 61] [/input-12, 61] [/input-12, 71] [/input-12, 61] [/input-12, 71] [/input-12, 61] [/input-12, 29] [/input-12, 29] [/input-12, 61] [/input-12, 61] 
split level 3: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 80] [/input-12, 80] [/input-12, 29] [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4732222557067871
10 lb beta sum: 0.11058419197797775, worst -0.4245494306087494
Time: prepare 0.0062    bound 0.1237    transfer 0.0007    finalize 0.0021    func 0.1358    
Accumulated time: func 0.4346    prepare 0.0403    bound 0.3840    transfer 0.0052    finalize 0.0073    
all_split False
======================Cut inference begins======================
max lb tensor(0.64914274) min lb tensor(-0.41864812)
Number of Verified Splits: 94 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 9
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.018712759017944336 
BICCOS Cumulative time: 0.04233193397521973
Preprocessing time: 0.01175236701965332 Inference time: 0.004301786422729492 Add cuts time: 0.002244234085083008 Cut analysis time: 0.0004143714904785156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13834 (3), -0.13677 (3), -0.13617 (3), -0.13571 (3), -0.13547 (3), -0.13390 (3), -0.12981 (3), -0.12942 (3), -0.11490 (3), -0.11488 (3), -0.11283 (3), -0.11146 (3), -0.10559 (3), -0.10473 (3), -0.10408 (3), -0.10371 (3), -0.10235 (3), -0.10205 (3), -0.09955 (3), -0.09820 (3), 
Length of domains: 50
Time: pickout 0.0082    decision 0.0206    set_bounds 0.0153    solve 0.1359    add 0.1947    
Accumulated time: pickout 0.0097    decision 0.5777    set_bounds 0.0376    solve 0.3787    add 0.4908    
Current (lb-rhs): -0.138339564204216
150 domains visited
Cumulative time: 1.6053845882415771

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 95] [/input-12, 95] [/input-12, 88] [/input-12, 88] [/input-12, 95] [/input-12, 95] [/input-12, 88] [/input-12, 88] [/input-12, 71] 
split level 1: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 71] [/input-12, 71] [/input-12, 61] [/input-12, 61] [/input-12, 71] [/input-12, 71] [/input-12, 61] 
split level 2: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 3: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15680527687072754
10 lb beta sum: 0.1871684193611145, worst -0.12348836660385132
Time: prepare 0.0057    bound 0.1223    transfer 0.0008    finalize 0.0017    func 0.1330    
Accumulated time: func 0.5677    prepare 0.0462    bound 0.5062    transfer 0.0060    finalize 0.0090    
all_split False
======================Cut inference begins======================
max lb tensor(0.75803447) min lb tensor(-0.08435649)
Number of Verified Splits: 359 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.03671097755432129 
BICCOS Cumulative time: 0.07904291152954102
Preprocessing time: 0.011629819869995117 Inference time: 0.019247055053710938 Add cuts time: 0.0055811405181884766 Cut analysis time: 0.0002529621124267578
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0009    decision 0.0205    set_bounds 0.0155    solve 0.1331    add 0.0225    
Accumulated time: pickout 0.0106    decision 0.5982    set_bounds 0.0531    solve 0.5119    add 0.5134    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 88] 
split level 1: [/input-12, 95] 
split level 2: [/input-12, 58] 
split level 3: [/input-12, 71] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 54] 
split level 6: [/input-12, 29] 
split level 7: [/input-12, 80] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5388897061347961
10 lb beta sum: 0.11869288980960846, worst -0.5331864953041077
Time: prepare 0.0036    bound 0.1239    transfer 0.0018    finalize 0.0015    func 0.1330    
Accumulated time: func 0.7007    prepare 0.0502    bound 0.6302    transfer 0.0078    finalize 0.0105    
all_split False
======================Cut inference begins======================
max lb tensor(0.77519691) min lb tensor(-0.53110415)
Number of Verified Splits: 192 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.159075140953064
10 lb beta sum: 0.7491306066513062, worst -1.0581367015838623
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.3514900207519531 
BICCOS Cumulative time: 0.43053293228149414
Preprocessing time: 0.0064983367919921875 Inference time: 0.3432025909423828 Add cuts time: 0.0012257099151611328 Cut analysis time: 0.0005633831024169922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53110 (8), -0.52404 (8), -0.52063 (8), -0.51653 (8), -0.51363 (8), -0.51345 (8), -0.49674 (8), -0.49548 (8), -0.49388 (8), -0.48919 (8), -0.48858 (8), -0.48240 (8), -0.48098 (8), -0.47996 (8), -0.47262 (8), -0.47028 (8), -0.46724 (8), -0.46612 (8), -0.45769 (8), -0.45750 (8), 
Length of domains: 64
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0166    solve 0.1331    add 0.0190    
Accumulated time: pickout 0.0110    decision 0.6215    set_bounds 0.0697    solve 0.6450    add 0.5323    
Current (lb-rhs): -0.5311041474342346
214 domains visited
Cumulative time: 2.3832247257232666

BaB round 2
batch: 64
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
split level 1: [/input-12, 36] [/input-12, 36] [/input-12, 81] [/input-12, 36] [/input-12, 81] [/input-12, 36] [/input-12, 81] [/input-12, 36] [/input-12, 81] [/input-12, 36] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23719769716262817, worst -0.4883699417114258
10 lb beta sum: 0.23719769716262817, worst -0.4859170913696289
Time: prepare 0.0103    bound 0.1198    transfer 0.0006    finalize 0.0012    func 0.1339    
Accumulated time: func 0.8346    prepare 0.0607    bound 0.7500    transfer 0.0084    finalize 0.0117    
all_split False
======================Cut inference begins======================
max lb tensor(0.28941995) min lb tensor(-0.48448855)
Number of Verified Splits: 116 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.23732656240463257, worst -1.2593634128570557
10 lb beta sum: 0.7764061093330383, worst -0.7812579870223999
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.20489096641540527 
BICCOS Cumulative time: 0.6354238986968994
Preprocessing time: 0.007585763931274414 Inference time: 0.19720101356506348 Add cuts time: 8.845329284667969e-05 Cut analysis time: 1.5735626220703125e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.48449 (10), -0.47740 (10), -0.47330 (10), -0.46913 (10), -0.46682 (10), -0.46659 (10), -0.44943 (10), -0.44527 (10), -0.44321 (10), -0.43733 (10), -0.43638 (10), -0.43564 (10), -0.42804 (10), -0.42629 (10), -0.42244 (10), -0.42166 (10), -0.40199 (10), -0.40022 (10), -0.38857 (10), -0.38616 (10), 
Length of domains: 140
Time: pickout 0.0016    decision 0.0151    set_bounds 0.0118    solve 0.1340    add 0.0021    
Accumulated time: pickout 0.0126    decision 0.6366    set_bounds 0.0815    solve 0.7790    add 0.5344    
Current (lb-rhs): -0.4844885468482971
354 domains visited
Cumulative time: 2.754006862640381

BaB round 3
batch: 140
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-8, 1515] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] 
cut re-enabled after branching node selection
0 lb beta sum: 0.23709093034267426, worst -0.4668450951576233
10 lb beta sum: 0.23709093034267426, worst -0.4654332995414734
Time: prepare 0.0115    bound 0.1306    transfer 0.0016    finalize 0.0015    func 0.1471    
Accumulated time: func 0.9817    prepare 0.0725    bound 0.8807    transfer 0.0100    finalize 0.0132    
all_split False
======================Cut inference begins======================
max lb tensor(0.34976143) min lb tensor(-0.46469384)
Number of Verified Splits: 129 of 280
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 6
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.023596763610839844 
BICCOS Cumulative time: 0.6590206623077393
Preprocessing time: 0.008283138275146484 Inference time: 0.013821601867675781 Add cuts time: 0.0010073184967041016 Cut analysis time: 0.00048470497131347656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.46469 (11), -0.45812 (11), -0.45321 (11), -0.44992 (11), -0.44775 (11), -0.44718 (11), -0.42996 (11), -0.42596 (11), -0.42359 (11), -0.41805 (11), -0.41789 (11), -0.41756 (11), -0.40922 (11), -0.40766 (11), -0.40377 (11), -0.40341 (11), -0.38284 (11), -0.38159 (11), -0.37031 (11), -0.36741 (11), 
Length of domains: 151
Time: pickout 0.0022    decision 0.0222    set_bounds 0.0119    solve 0.1472    add 0.0540    
Accumulated time: pickout 0.0148    decision 0.6588    set_bounds 0.0934    solve 0.9262    add 0.5884    
Current (lb-rhs): -0.4646938443183899
505 domains visited
Cumulative time: 3.016157627105713

BaB round 4
batch: 151
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1515] [/input-8, 1515] [/input-12, 73] [/input-8, 1515] [/input-12, 81] [/input-8, 1515] [/input-8, 1515] [/input-8, 1523] [/input-8, 1523] [/input-8, 1515] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4287400245666504
10 lb beta sum: 0.29859286546707153, worst -0.42597928643226624
Time: prepare 0.0048    bound 0.1240    transfer 0.0017    finalize 0.0016    func 0.1342    
Accumulated time: func 1.1159    prepare 0.0775    bound 1.0046    transfer 0.0117    finalize 0.0148    
all_split False
======================Cut inference begins======================
max lb tensor(0.56397671) min lb tensor(-0.42548978)
Number of Verified Splits: 155 of 302
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.02575230598449707 
BICCOS Cumulative time: 0.6847729682922363
Preprocessing time: 0.008841991424560547 Inference time: 0.015596628189086914 Add cuts time: 0.0010292530059814453 Cut analysis time: 0.00028443336486816406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.42549 (12), -0.41928 (12), -0.41429 (12), -0.41151 (12), -0.40943 (12), -0.40892 (12), -0.39341 (12), -0.39242 (12), -0.39161 (12), -0.38810 (12), -0.38597 (12), -0.38139 (12), -0.38090 (12), -0.38012 (12), -0.36665 (12), -0.36633 (12), -0.36586 (12), -0.36432 (12), -0.35446 (12), -0.35428 (12), 
Length of domains: 147
Time: pickout 0.0131    decision 0.0180    set_bounds 0.0124    solve 0.1342    add 0.0013    
Accumulated time: pickout 0.0278    decision 0.6768    set_bounds 0.1058    solve 1.0604    add 0.5897    
Current (lb-rhs): -0.42548978328704834
652 domains visited
Cumulative time: 3.221953868865967

BaB round 5
batch: 147
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-8, 1523] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.3047913610935211, worst -0.41405153274536133
10 lb beta sum: 0.3098563253879547, worst -0.41337668895721436
Time: prepare 0.0133    bound 0.1344    transfer 0.0017    finalize 0.0022    func 0.1535    
Accumulated time: func 1.2694    prepare 0.0910    bound 1.1390    transfer 0.0134    finalize 0.0170    
all_split False
======================Cut inference begins======================
max lb tensor(0.30055058) min lb tensor(-0.41315120)
Number of Verified Splits: 50 of 294
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.014614582061767578 
BICCOS Cumulative time: 0.6993875503540039
Preprocessing time: 0.00889897346496582 Inference time: 0.0049839019775390625 Add cuts time: 0.000446319580078125 Cut analysis time: 0.0002853870391845703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.41315 (13), -0.40683 (13), -0.40167 (13), -0.39939 (13), -0.39754 (13), -0.39659 (13), -0.38069 (13), -0.38062 (13), -0.37922 (13), -0.37631 (13), -0.37417 (13), -0.36964 (13), -0.36917 (13), -0.36861 (13), -0.36826 (13), -0.36291 (13), -0.35624 (13), -0.35440 (13), -0.35393 (13), -0.35308 (13), 
Length of domains: 244
Time: pickout 0.0020    decision 0.0223    set_bounds 0.0081    solve 0.1536    add 0.0025    
Accumulated time: pickout 0.0298    decision 0.6990    set_bounds 0.1139    solve 1.2140    add 0.5923    
Current (lb-rhs): -0.41315120458602905
896 domains visited
Cumulative time: 3.425938844680786

BaB round 6
batch: 244
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 73] [/input-12, 32] [/input-8, 1523] [/input-8, 1515] [/input-8, 1523] [/input-8, 1515] [/input-12, 32] [/input-8, 1523] [/input-12, 32] [/input-8, 1523] 
cut re-enabled after branching node selection
0 lb beta sum: 0.28281667828559875, worst -0.3978293538093567
10 lb beta sum: 0.2831099331378937, worst -0.3976445198059082
Time: prepare 0.0224    bound 0.1357    transfer 0.0038    finalize 0.0026    func 0.1675    
Accumulated time: func 1.4369    prepare 0.1136    bound 1.2747    transfer 0.0172    finalize 0.0196    
all_split False
======================Cut inference begins======================
max lb tensor(0.28362581) min lb tensor(-0.39759672)
Number of Verified Splits: 69 of 488
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 7
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.02357172966003418 
BICCOS Cumulative time: 0.7229592800140381
Preprocessing time: 0.014457941055297852 Inference time: 0.007184267044067383 Add cuts time: 0.00067901611328125 Cut analysis time: 0.0012505054473876953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39760 (14), -0.39141 (14), -0.38626 (14), -0.38340 (14), -0.38191 (14), -0.38143 (14), -0.36476 (14), -0.36465 (14), -0.36370 (14), -0.36042 (14), -0.35826 (14), -0.35361 (14), -0.35324 (14), -0.35268 (14), -0.35156 (14), -0.34583 (14), -0.34445 (14), -0.34268 (14), -0.33923 (14), -0.33841 (14), 
Length of domains: 419
Time: pickout 0.0033    decision 0.0277    set_bounds 0.0213    solve 0.1677    add 0.0045    
Accumulated time: pickout 0.0331    decision 0.7268    set_bounds 0.1352    solve 1.3817    add 0.5968    
Current (lb-rhs): -0.39759671688079834
1315 domains visited
Cumulative time: 3.674931287765503

BaB round 7
batch: 419
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1508] [/input-8, 1515] [/input-12, 32] [/input-8, 1692] [/input-12, 32] [/input-8, 1523] [/input-12, 32] [/input-8, 1523] [/input-12, 32] [/input-8, 1515] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.39052343368530273
10 lb beta sum: 0.1942920684814453, worst -0.3883547782897949
Time: prepare 0.0164    bound 0.1527    transfer 0.0030    finalize 0.0042    func 0.1818    
Accumulated time: func 1.6187    prepare 0.1302    bound 1.4275    transfer 0.0203    finalize 0.0238    
all_split False
======================Cut inference begins======================
max lb tensor(0.09981069) min lb tensor(-0.38810992)
Number of Verified Splits: 123 of 838
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 7
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.04221677780151367 
BICCOS Cumulative time: 0.7651760578155518
Preprocessing time: 0.02456498146057129 Inference time: 0.015202760696411133 Add cuts time: 0.0019512176513671875 Cut analysis time: 0.0004978179931640625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38811 (15), -0.38193 (15), -0.37644 (15), -0.37410 (15), -0.37258 (15), -0.37161 (15), -0.36705 (15), -0.36086 (15), -0.35514 (15), -0.35467 (15), -0.35314 (15), -0.35302 (15), -0.35246 (15), -0.35096 (15), -0.34851 (15), -0.34810 (15), -0.34749 (15), -0.34123 (15), -0.34028 (15), -0.33861 (15), 
Length of domains: 715
Time: pickout 0.0079    decision 0.0394    set_bounds 0.0354    solve 0.1828    add 0.0082    
Accumulated time: pickout 0.0410    decision 0.7661    set_bounds 0.1706    solve 1.5644    add 0.6050    
Current (lb-rhs): -0.3881099224090576
2030 domains visited
Cumulative time: 3.9924821853637695

BaB round 8
batch: 715
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1523] [/input-8, 1506] [/input-8, 1506] [/input-8, 1515] [/input-8, 1508] [/input-8, 1506] [/input-8, 1508] [/input-8, 1505] [/input-8, 1508] [/input-8, 1505] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3856489062309265
10 lb beta sum: 0.19147367775440216, worst -0.38366395235061646
Time: prepare 0.0277    bound 0.1631    transfer 0.0078    finalize 0.0065    func 0.2146    
Accumulated time: func 1.8333    prepare 0.1581    bound 1.5905    transfer 0.0281    finalize 0.0303    
all_split False
======================Cut inference begins======================
max lb tensor(0.11438796) min lb tensor(-0.38356191)
Number of Verified Splits: 231 of 1430
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 8
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.0754094123840332 
BICCOS Cumulative time: 0.840585470199585
Preprocessing time: 0.04421186447143555 Inference time: 0.02800130844116211 Add cuts time: 0.0024983882904052734 Cut analysis time: 0.0006978511810302734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38356 (16), -0.37324 (16), -0.37181 (16), -0.36971 (16), -0.36690 (16), -0.36266 (16), -0.35521 (16), -0.35296 (16), -0.35223 (16), -0.35153 (16), -0.34817 (16), -0.34791 (16), -0.34422 (16), -0.34357 (16), -0.34174 (16), -0.33944 (16), -0.33678 (16), -0.33563 (16), -0.33555 (16), -0.33498 (16), 
Length of domains: 1199
Time: pickout 0.0108    decision 0.0551    set_bounds 0.0603    solve 0.2148    add 0.0062    
Accumulated time: pickout 0.0518    decision 0.8213    set_bounds 0.2309    solve 1.7792    add 0.6112    
Current (lb-rhs): -0.383561909198761
3229 domains visited
Cumulative time: 4.417949676513672

BaB round 9
batch: 1199
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1506] [/input-8, 1692] [/input-8, 1508] [/input-8, 1505] [/input-8, 1506] [/input-8, 1508] [/input-8, 1506] [/input-8, 1508] [/input-8, 1506] [/input-8, 1508] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.375343382358551
10 lb beta sum: 0.1910722404718399, worst -0.3732893466949463
Time: prepare 0.0495    bound 0.2074    transfer 0.0093    finalize 0.0129    func 0.2947    
Accumulated time: func 2.1281    prepare 0.2079    bound 1.7980    transfer 0.0374    finalize 0.0432    
all_split False
======================Cut inference begins======================
max lb tensor(0.06472912) min lb tensor(-0.37315509)
Number of Verified Splits: 445 of 2398
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 10
#cuts 4-6: 8
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.13458967208862305 
BICCOS Cumulative time: 0.975175142288208
Preprocessing time: 0.07350540161132812 Inference time: 0.05582261085510254 Add cuts time: 0.004466533660888672 Cut analysis time: 0.0007951259613037109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.37316 (17), -0.36882 (17), -0.36379 (17), -0.36308 (17), -0.35798 (17), -0.35244 (17), -0.35236 (17), -0.35098 (17), -0.35026 (17), -0.34872 (17), -0.34776 (17), -0.34648 (17), -0.34301 (17), -0.33983 (17), -0.33938 (17), -0.33501 (17), -0.33460 (17), -0.33216 (17), -0.33107 (17), -0.33107 (17), 
Length of domains: 1953
Time: pickout 0.0176    decision 0.0836    set_bounds 0.2749    solve 0.2959    add 0.0283    
Accumulated time: pickout 0.0694    decision 0.9049    set_bounds 0.5058    solve 2.0751    add 0.6395    
Current (lb-rhs): -0.3731550872325897
5182 domains visited
Cumulative time: 5.258072137832642

BaB round 10
batch: 1953
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1505] [/input-8, 1508] [/input-8, 1505] [/input-8, 1508] [/input-8, 1692] [/input-8, 1505] [/input-8, 1505] [/input-8, 1506] [/input-8, 1505] [/input-8, 1691] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.36622947454452515
10 lb beta sum: 0.20897731184959412, worst -0.36436665058135986
Time: prepare 0.0816    bound 0.2838    transfer 0.0152    finalize 0.1983    func 0.6045    
Accumulated time: func 2.7325    prepare 0.2897    bound 2.0818    transfer 0.0526    finalize 0.2415    
all_split False
======================Cut inference begins======================
max lb tensor(0.07359156) min lb tensor(-0.36434221)
Number of Verified Splits: 573 of 3906
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 13
#cuts 4-6: 9
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.20781970024108887 
BICCOS Cumulative time: 1.1829948425292969
Preprocessing time: 0.12443041801452637 Inference time: 0.07660174369812012 Add cuts time: 0.0057888031005859375 Cut analysis time: 0.0009987354278564453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36434 (18), -0.35991 (18), -0.35505 (18), -0.35258 (18), -0.34708 (18), -0.34358 (18), -0.34352 (18), -0.34073 (18), -0.33923 (18), -0.33880 (18), -0.33800 (18), -0.33771 (18), -0.33748 (18), -0.33592 (18), -0.33421 (18), -0.33290 (18), -0.33170 (18), -0.33111 (18), -0.33001 (18), -0.32910 (18), 
Length of domains: 3333
Time: pickout 0.0343    decision 0.1258    set_bounds 0.1662    solve 0.6052    add 0.0182    
Accumulated time: pickout 0.1038    decision 1.0307    set_bounds 0.6720    solve 2.6803    add 0.6577    
Current (lb-rhs): -0.36434221267700195
8515 domains visited
Cumulative time: 6.425455808639526

BaB round 11
batch: 3333
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1692] [/input-8, 1505] [/input-8, 99] [/input-8, 1506] [/input-8, 1505] [/input-8, 411] [/input-8, 99] [/input-8, 1692] [/input-8, 99] [/input-8, 1692] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.35154980421066284
10 lb beta sum: 0.2123664915561676, worst -0.34986454248428345
Time: prepare 0.1405    bound 0.4267    transfer 0.0388    finalize 0.0365    func 0.6871    
Accumulated time: func 3.4196    prepare 0.4305    bound 2.5085    transfer 0.0914    finalize 0.2779    
all_split False
======================Cut inference begins======================
max lb tensor(0.20081003) min lb tensor(-0.34943110)
Number of Verified Splits: 1220 of 6666
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 16
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.4052281379699707 
BICCOS Cumulative time: 1.5882229804992676
Preprocessing time: 0.2085263729095459 Inference time: 0.17847228050231934 Add cuts time: 0.01717400550842285 Cut analysis time: 0.0010554790496826172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34943 (19), -0.34780 (19), -0.34764 (19), -0.34427 (19), -0.33961 (19), -0.33655 (19), -0.33438 (19), -0.33247 (19), -0.33218 (19), -0.32975 (19), -0.32851 (19), -0.32825 (19), -0.32805 (19), -0.32740 (19), -0.32695 (19), -0.32681 (19), -0.32679 (19), -0.32653 (19), -0.32634 (19), -0.32441 (19), 
Length of domains: 5446
Time: pickout 0.0459    decision 0.2021    set_bounds 0.4502    solve 0.6891    add 0.0355    
Accumulated time: pickout 0.1496    decision 1.2328    set_bounds 1.1222    solve 3.3694    add 0.6932    
Current (lb-rhs): -0.3494310975074768
13961 domains visited
Cumulative time: 8.273184061050415

BaB round 12
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 99] [/input-8, 1691] [/input-8, 1692] [/input-8, 1499] [/input-8, 99] [/input-8, 1692] [/input-8, 475] [/input-8, 1131] [/input-8, 100] [/input-8, 1506] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3387448191642761
10 lb beta sum: 0.23844856023788452, worst -0.3369104266166687
Time: prepare 0.1785    bound 0.5044    transfer 0.0213    finalize 0.0421    func 0.8010    
Accumulated time: func 4.2206    prepare 0.6092    bound 3.0129    transfer 0.1127    finalize 0.3201    
all_split False
======================Cut inference begins======================
max lb tensor(0.23082310) min lb tensor(-0.33688700)
Number of Verified Splits: 1584 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 17
#cuts 4-6: 22
#cuts >= 20: 0
BICCOS time: 0.7563648223876953 
BICCOS Cumulative time: 2.344587802886963
Preprocessing time: 0.26242971420288086 Inference time: 0.46946072578430176 Add cuts time: 0.022983789443969727 Cut analysis time: 0.0014905929565429688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34780 (19), -0.33961 (19), -0.33689 (20), -0.33655 (19), -0.33201 (20), -0.33019 (20), -0.32935 (20), -0.32901 (20), -0.32714 (20), -0.32695 (19), -0.32653 (19), -0.32540 (20), -0.32379 (20), -0.32269 (19), -0.32140 (20), -0.32107 (20), -0.32012 (20), -0.31958 (20), -0.31844 (19), -0.31811 (19), 
Length of domains: 7958
Time: pickout 0.0589    decision 0.2366    set_bounds 0.5284    solve 0.8030    add 0.0557    
Accumulated time: pickout 0.2086    decision 1.4693    set_bounds 1.6506    solve 4.1724    add 0.7489    
Current (lb-rhs): -0.3477964997291565
20569 domains visited
current_vram/total_varm: 11.2GB/99.9GB, batch_size increase to 8192
Cumulative time: 10.739115715026855

BaB round 13
batch: 7958
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1692] [/input-8, 1131] [/input-8, 1691] [/input-8, 475] [/input-8, 1499] [/input-8, 100] [/input-8, 411] [/input-8, 1499] [/input-8, 1499] [/input-8, 1505] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34227055311203003
10 lb beta sum: 0.24706442654132843, worst -0.3404492735862732
Time: prepare 0.3547    bound 0.9245    transfer 0.0801    finalize 0.3081    func 1.7724    
Accumulated time: func 5.9930    prepare 0.9643    bound 3.9374    transfer 0.1928    finalize 0.6281    
all_split False
======================Cut inference begins======================
max lb tensor(0.26672336) min lb tensor(-0.34042841)
Number of Verified Splits: 3400 of 15916
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 66.
#cuts 1-3: 19
#cuts 4-6: 20
#cuts 7-9: 27
#cuts >= 20: 0
BICCOS time: 1.1448872089385986 
BICCOS Cumulative time: 3.4894750118255615
Preprocessing time: 0.5192198753356934 Inference time: 0.5682148933410645 Add cuts time: 0.05440092086791992 Cut analysis time: 0.0030515193939208984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34043 (20), -0.33055 (21), -0.32591 (21), -0.32377 (21), -0.32302 (21), -0.32293 (21), -0.32153 (21), -0.32130 (20), -0.32098 (20), -0.32008 (21), -0.31957 (20), -0.31946 (20), -0.31861 (20), -0.31728 (20), -0.31610 (21), -0.31487 (21), -0.31434 (20), -0.31348 (21), -0.31210 (21), -0.31109 (20), 
Length of domains: 12516
Time: pickout 0.1944    decision 0.4561    set_bounds 0.9207    solve 1.7763    add 0.0709    
Accumulated time: pickout 0.4030    decision 1.9254    set_bounds 2.5714    solve 5.9487    add 0.8197    
Current (lb-rhs): -0.3404284119606018
33085 domains visited
Cumulative time: 15.358825445175171

BaB round 14
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1499] [/input-8, 99] [/input-8, 1726] [/input-8, 1499] [/input-8, 1726] [/input-8, 1499] [/input-8, 1131] [/input-8, 99] [/input-12, 42] [/input-8, 1692] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.335871160030365
10 lb beta sum: 0.2495729625225067, worst -0.33405306935310364
Time: prepare 0.3638    bound 0.9557    transfer 0.0629    finalize 0.1080    func 1.5966    
Accumulated time: func 7.5897    prepare 1.3286    bound 4.8931    transfer 0.2558    finalize 0.7361    
all_split False
======================Cut inference begins======================
max lb tensor(0.27804247) min lb tensor(-0.33404398)
Number of Verified Splits: 3183 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 118.
#cuts 1-3: 21
#cuts 4-6: 43
#cuts 7-9: 54
#cuts >= 20: 0
BICCOS time: 1.5017740726470947 
BICCOS Cumulative time: 4.991249084472656
Preprocessing time: 0.8462784290313721 Inference time: 0.5643143653869629 Add cuts time: 0.08575248718261719 Cut analysis time: 0.005428791046142578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33404 (21), -0.32591 (21), -0.32377 (21), -0.32293 (21), -0.32282 (22), -0.32153 (21), -0.32008 (21), -0.31577 (22), -0.31514 (21), -0.31495 (21), -0.31487 (21), -0.31355 (22), -0.31318 (21), -0.31309 (21), -0.31236 (21), -0.31160 (21), -0.30925 (21), -0.30897 (21), -0.30840 (21), -0.30744 (22), 
Length of domains: 17525
Time: pickout 0.1187    decision 0.7337    set_bounds 1.0091    solve 1.6005    add 0.0657    
Accumulated time: pickout 0.5217    decision 2.6592    set_bounds 3.5805    solve 7.5492    add 0.8854    
Current (lb-rhs): -0.3340439796447754
46286 domains visited
current_vram/total_varm: 24.9GB/99.9GB, batch_size increase to 16384
Cumulative time: 20.44475507736206

BaB round 15
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1690] [/input-8, 1499] [/input-8, 100] [/input-8, 1691] [/input-8, 1692] [/input-8, 1131] [/input-8, 411] [/input-12, 42] [/input-8, 1474] [/input-8, 1644] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32828837633132935
10 lb beta sum: 0.2757962942123413, worst -0.3263793885707855
Time: prepare 0.7488    bound 1.9055    transfer 0.1531    finalize 0.5747    func 3.5991    
Accumulated time: func 11.1887    prepare 2.0778    bound 6.7986    transfer 0.4089    finalize 1.3108    
all_split False
======================Cut inference begins======================
max lb tensor(0.52232695) min lb tensor(-0.32633179)
Number of Verified Splits: 6725 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 135.
#cuts 1-3: 23
#cuts 4-6: 69
#cuts 7-9: 43
#cuts >= 20: 0
BICCOS time: 2.9602668285369873 
BICCOS Cumulative time: 7.9515159130096436
Preprocessing time: 1.0834376811981201 Inference time: 1.6880316734313965 Add cuts time: 0.18284177780151367 Cut analysis time: 0.005955696105957031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32633 (22), -0.31872 (22), -0.31754 (23), -0.31697 (22), -0.31621 (22), -0.31535 (22), -0.31462 (22), -0.31355 (22), -0.31159 (22), -0.31086 (22), -0.30805 (22), -0.30783 (22), -0.30783 (22), -0.30772 (23), -0.30761 (22), -0.30744 (22), -0.30670 (22), -0.30634 (22), -0.30631 (22), -0.30616 (22), 
Length of domains: 27184
Time: pickout 0.2363    decision 1.7528    set_bounds 1.8635    solve 3.6052    add 0.2631    
Accumulated time: pickout 0.7580    decision 4.4120    set_bounds 5.4440    solve 11.1544    add 1.1484    
Current (lb-rhs): -0.3263317942619324
72329 domains visited
current_vram/total_varm: 33.8GB/99.9GB, batch_size increase to 32768
Cumulative time: 31.339412927627563

BaB round 16
batch: 27184
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1691] [/input-8, 1499] [/input-8, 1499] [/input-8, 1691] [/input-8, 475] [/input-8, 1690] [/input-8, 1499] [/input-8, 1499] [/input-8, 1499] [/input-8, 347] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3226948380470276
10 lb beta sum: 0.36123600602149963, worst -0.33908534049987793
Time: prepare 1.2875    bound 3.1674    transfer 0.2777    finalize 0.3994    func 5.5013    
Accumulated time: func 16.6901    prepare 3.3658    bound 9.9660    transfer 0.6866    finalize 1.7102    
all_split False
======================Cut inference begins======================
max lb tensor(0.91019917) min lb tensor(-0.32079679)
Number of Verified Splits: 15441 of 54368
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 111.
#cuts 1-3: 30
#cuts 4-6: 55
#cuts 7-9: 25
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 5.961259365081787 
BICCOS Cumulative time: 13.91277527809143
Preprocessing time: 1.880669355392456 Inference time: 3.684506416320801 Add cuts time: 0.39128589630126953 Cut analysis time: 0.004797697067260742
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32080 (23), -0.31186 (23), -0.31052 (23), -0.31024 (23), -0.30923 (24), -0.30701 (23), -0.30649 (23), -0.30506 (23), -0.30499 (24), -0.30449 (23), -0.30442 (23), -0.30280 (23), -0.30230 (23), -0.30190 (23), -0.30175 (23), -0.30173 (23), -0.30160 (24), -0.30140 (23), -0.30025 (23), -0.29992 (23), 
Length of domains: 38927
Time: pickout 0.5874    decision 2.9075    set_bounds 3.6711    solve 6.0573    add 0.1798    
Accumulated time: pickout 1.3454    decision 7.3195    set_bounds 9.1151    solve 17.2116    add 1.3283    
Current (lb-rhs): -0.32079678773880005
111256 domains visited
Cumulative time: 50.960731983184814

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1499] [/input-8, 915] [/input-8, 100] [/input-8, 411] [/input-8, 1499] [/input-8, 347] [/input-8, 1692] [/input-8, 347] [/input-8, 100] [/input-8, 1690] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.314521849155426
10 lb beta sum: 0.40569037199020386, worst -0.31263822317123413
Time: prepare 1.5747    bound 8.9085    transfer 0.3135    finalize 1.1861    func 12.4233    
Accumulated time: func 29.1133    prepare 4.9410    bound 18.8745    transfer 1.0001    finalize 2.8963    
all_split False
======================Cut inference begins======================
max lb tensor(0.59238249) min lb tensor(-0.31261468)
Number of Verified Splits: 29591 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 133.
#cuts 1-3: 15
#cuts 4-6: 64
#cuts 7-9: 52
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 10.45189380645752 
BICCOS Cumulative time: 24.36466908454895
Preprocessing time: 3.089251756668091 Inference time: 6.673570394515991 Add cuts time: 0.6821906566619873 Cut analysis time: 0.006880998611450195
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31261 (24), -0.31186 (23), -0.30794 (24), -0.30653 (25), -0.30499 (24), -0.30458 (24), -0.30222 (24), -0.30171 (24), -0.30016 (24), -0.30014 (24), -0.29901 (24), -0.29764 (24), -0.29754 (24), -0.29744 (25), -0.29742 (24), -0.29707 (24), -0.29640 (24), -0.29562 (24), -0.29365 (24), -0.29364 (24), 
Length of domains: 42104
Time: pickout 0.5460    decision 3.9928    set_bounds 3.8601    solve 12.4378    add 0.1725    
Accumulated time: pickout 1.8914    decision 11.3123    set_bounds 12.9752    solve 29.6494    add 1.5008    
Current (lb-rhs): -0.31261467933654785
147201 domains visited
Cumulative time: 83.19814443588257

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1289] [/input-8, 411] [/input-8, 915] [/input-8, 168] [/input-8, 1644] [/input-8, 1131] [/input-8, 1474] [/input-8, 1474] [/input-8, 1690] [/input-8, 475] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.311718225479126
10 lb beta sum: 0.3027414381504059, worst -0.3098977506160736
Time: prepare 1.8102    bound 8.9937    transfer 0.3174    finalize 0.6285    func 12.2122    
Accumulated time: func 41.3255    prepare 6.7517    bound 27.8682    transfer 1.3175    finalize 3.5249    
all_split False
======================Cut inference begins======================
max lb tensor(0.76048851) min lb tensor(-0.30988690)
Number of Verified Splits: 20987 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 30
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 8.349838018417358 
BICCOS Cumulative time: 32.71450710296631
Preprocessing time: 2.451949119567871 Inference time: 5.384693145751953 Add cuts time: 0.5117490291595459 Cut analysis time: 0.0014467239379882812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30989 (25), -0.30794 (24), -0.30340 (24), -0.30238 (26), -0.30212 (25), -0.30041 (25), -0.30016 (24), -0.29943 (24), -0.29927 (25), -0.29881 (25), -0.29764 (24), -0.29742 (24), -0.29640 (24), -0.29610 (25), -0.29592 (25), -0.29341 (25), -0.29258 (25), -0.29175 (24), -0.29141 (25), -0.29071 (25), 
Length of domains: 53885
Time: pickout 0.7011    decision 3.5116    set_bounds 7.1204    solve 13.1916    add 0.3523    
Accumulated time: pickout 2.5925    decision 14.8238    set_bounds 20.0956    solve 42.8410    add 1.8531    
Current (lb-rhs): -0.3098869025707245
191750 domains visited
Cumulative time: 116.86858081817627

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1644] [/input-8, 483] [/input-8, 99] [/input-8, 1491] [/input-8, 1644] [/input-8, 1651] [/input-8, 411] [/input-8, 1523] [/input-8, 1692] [/input-8, 1491] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.30703264474868774
10 lb beta sum: 2.5226874351501465, worst -0.27213966846466064
Time: prepare 1.7176    bound 8.7224    transfer 0.3094    finalize 0.5932    func 11.7980    
Accumulated time: func 53.1235    prepare 8.4700    bound 36.5906    transfer 1.6269    finalize 4.1180    
all_split False
======================Cut inference begins======================
max lb tensor(1.26436591) min lb tensor(-0.27201974)
Number of Verified Splits: 56105 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 17.25414514541626 
BICCOS Cumulative time: 49.96865224838257
Preprocessing time: 3.5619688034057617 Inference time: 12.814544439315796 Add cuts time: 0.8766074180603027 Cut analysis time: 0.001024484634399414
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30989 (25), -0.29927 (25), -0.29881 (25), -0.29610 (25), -0.29071 (25), -0.29041 (25), -0.29010 (25), -0.28969 (25), -0.28663 (26), -0.28605 (25), -0.28580 (25), -0.28503 (25), -0.28496 (26), -0.28450 (25), -0.28174 (25), -0.28174 (25), -0.28157 (25), -0.28140 (25), -0.28091 (25), -0.28090 (25), 
Length of domains: 30548
Time: pickout 0.6628    decision 3.4767    set_bounds 5.6814    solve 11.8184    add 0.1333    
Accumulated time: pickout 3.2553    decision 18.3006    set_bounds 25.7771    solve 54.6594    add 1.9864    
Current (lb-rhs): -0.3098869025707245
201181 domains visited
Cumulative time: 156.80116510391235

BaB round 20
batch: 30548
splitting decisions: 
split level 0: [/input-8, 1691] [/input-8, 2028] [/input-8, 168] [/input-8, 1644] [/input-8, 1690] [/input-8, 171] [/input-8, 1690] [/input-8, 100] [/input-8, 100] [/input-8, 1651] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3075786828994751
10 lb beta sum: 0.2869457006454468, worst -0.016543656587600708
Time: prepare 1.5476    bound 2.5556    transfer 0.3097    finalize 1.2717    func 6.0963    
Accumulated time: func 59.2198    prepare 10.0182    bound 39.1462    transfer 1.9366    finalize 5.3897    
all_split False
======================Cut inference begins======================
max lb tensor(0.52656138) min lb tensor(8.58306885e-06)
Number of Verified Splits: 61096 of 61096
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 2.21844220161438 
BICCOS Cumulative time: 52.18709444999695
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.5857    decision 3.6468    set_bounds 4.1087    solve 6.1098    add 0.0136    
Accumulated time: pickout 3.8410    decision 21.9474    set_bounds 29.8857    solve 60.7692    add 2.0000    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
201181 domains visited
Cumulative time: 174.1136610507965


Properties batch 4, size 1
Remaining timeout: 24.16209650039673
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 24.161669731140137
Verifying property 5 with 1 instances.
##### Instance 152 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55529547]], device='cuda:0') need to verify.
Model prediction is: tensor([-31.83067322, -36.98228836, -28.81441116, -32.38808441, -30.07877350,
        -33.05393219, -31.01095200, -33.45640182, -36.36339951, -37.03667450],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55529547]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 512
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 280
Node /15 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 830
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011944770812988281
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5552910566329956
10 lb beta sum: 0.0, worst -0.5553120374679565
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0579    transfer 0.0001    finalize 0.0001    func 0.0584    
Accumulated time: func 0.0584    prepare 0.0002    bound 0.0579    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 87] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 80] 
split level 3: [/input-12, 81] 
split level 4: [/input-12, 58] 
split level 5: [/input-12, 53] 
split level 6: [/input-12, 56] 
split level 7: [/input-12, 9] 
split level 8: [/input-12, 42] 
split level 9: [/input-12, 43] 
split level 10: [/input-12, 90] 
split level 11: [/input-12, 32] 
split level 12: [/input-12, 54] 
split level 13: [/input-12, 75] 
split level 14: [/input-12, 25] 
split level 15: [/input-12, 36] 
split level 16: [/input-8, 1515] 
split level 17: [/input-12, 88] 
split level 18: [/input-8, 1508] 
split level 19: [/input-8, 1506] 
split level 20: [/input-8, 1973] 
split level 21: [/input-8, 573] 
split level 22: [/input-12, 29] 
split level 23: [/input-8, 2017] 
split level 24: [/input-8, 754] 
split level 25: [/input-8, 1331] 
split level 26: [/input-8, 1691] 
split level 27: [/input-8, 475] 
split level 28: [/input-8, 1692] 
split level 29: [/input-8, 168] 
split level 30: [/input-8, 1338] 
split level 31: [/input-12, 11] 
split level 32: [/input-8, 1966] 
split level 33: [/input, 2395] 
split level 34: [/input-8, 1998] 
split level 35: [/input-8, 161] 
split level 36: [/input-8, 1505] 
split level 37: [/input-8, 1726] 
split level 38: [/input-8, 162] 
split level 39: [/input-8, 1898] 
split level 40: [/input-8, 762] 
split level 41: [/input-8, 1897] 
split level 42: [/input-8, 1701] 
split level 43: [/input-8, 1037] 
split level 44: [/input-8, 1913] 
split level 45: [/input, 628] 
split level 46: [/input-8, 1695] 
split level 47: [/input-8, 1905] 
split level 48: [/input-8, 756] 
split level 49: [/input-8, 1580] 
split level 50: [/input-8, 686] 
split level 51: [/input-8, 1644] 
split level 52: [/input, 682] 
split level 53: [/input-8, 483] 
split level 54: [/input-8, 86] 
split level 55: [/input-8, 2004] 
split level 56: [/input-8, 1914] 
split level 57: [/input, 899] 
split level 58: [/input, 670] 
split level 59: [/input-8, 1588] 
split level 60: [/input, 2180] 
split level 61: [/input-8, 1356] 
split level 62: [/input-8, 1690] 
split level 63: [/input, 2134] 
split level 64: [/input-8, 1846] 
split level 65: [/input-8, 1802] 
split level 66: [/input, 945] 
split level 67: [/input, 2674] 
split level 68: [/input-8, 1520] 
split level 69: [/input, 650] 
split level 70: [/input, 106] 
split level 71: [/input, 3160] 
split level 72: [/input, 119] 
split level 73: [/input, 912] 
split level 74: [/input, 642] 
split level 75: [/input-8, 1942] 
split level 76: [/input, 659] 
split level 77: [/input-8, 1265] 
split level 78: [/input-8, 1594] 
split level 79: [/input, 926] 
split level 80: [/input, 2099] 
split level 81: [/input-8, 551] 
split level 82: [/input-8, 217] 
split level 83: [/input-8, 1559] 
split level 84: [/input-8, 765] 
split level 85: [/input, 129] 
split level 86: [/input-8, 1337] 
split level 87: [/input-8, 1548] 
split level 88: [/input, 2425] 
split level 89: [/input-8, 848] 
split level 90: [/input, 2100] 
split level 91: [/input-8, 171] 
split level 92: [/input, 932] 
split level 93: [/input, 1046] 
split level 94: [/input, 2478] 
split level 95: [/input-8, 1268] 
split level 96: [/input-8, 1290] 
split level 97: [/input, 26] 
split level 98: [/input-8, 559] 
split level 99: [/input-8, 1953] 
split level 100: [/input-8, 2028] 
split level 101: [/input-8, 763] 
split level 102: [/input, 2118] 
split level 103: [/input, 3113] 
split level 104: [/input, 1898] 
split level 105: [/input, 1895] 
split level 106: [/input, 958] 
split level 107: [/input, 1814] 
split level 108: [/input, 2683] 
split level 109: [/input, 630] 
split level 110: [/input-8, 1048] 
split level 111: [/input-8, 1289] 
split level 112: [/input, 3158] 
split level 113: [/input-8, 1339] 
split level 114: [/input, 2690] 
split level 115: [/input, 3992] 
split level 116: [/input, 3144] 
split level 117: [/input, 132] 
split level 118: [/input-8, 1355] 
split level 119: [/input-8, 1135] 
split level 120: [/input, 2190] 
split level 121: [/input-8, 1903] 
split level 122: [/input-8, 1551] 
split level 123: [/input-8, 347] 
split level 124: [/input, 99] 
split level 125: [/input-8, 1809] 
split level 126: [/input, 664] 
split level 127: [/input, 1848] 
split level 128: [/input-8, 1741] 
split level 129: [/input, 1129] 
split level 130: [/input-8, 504] 
split level 131: [/input-8, 1293] 
split level 132: [/input, 1080] 
split level 133: [/input, 627] 
split level 134: [/input-8, 1751] 
split level 135: [/input, 2102] 
split level 136: [/input, 123] 
split level 137: [/input-8, 1056] 
split level 138: [/input, 57] 
split level 139: [/input, 2403] 
split level 140: [/input, 1048] 
split level 141: [/input, 141] 
split level 142: [/input, 706] 
split level 143: [/input-8, 657] 
split level 144: [/input, 2101] 
split level 145: [/input, 1914] 
split level 146: [/input, 654] 
split level 147: [/input, 87] 
split level 148: [/input, 3091] 
split level 149: [/input-8, 909] 
split level 150: [/input, 1063] 
split level 151: [/input, 599] 
split level 152: [/input, 3112] 
split level 153: [/input-8, 1266] 
split level 154: [/input, 1150] 
split level 155: [/input-8, 1589] 
split level 156: [/input-8, 1090] 
split level 157: [/input, 3161] 
split level 158: [/input, 1140] 
split level 159: [/input, 1125] 
split level 160: [/input-8, 819] 
split level 161: [/input, 1798] 
split level 162: [/input, 673] 
split level 163: [/input, 1064] 
split level 164: [/input, 2378] 
split level 165: [/input, 3108] 
split level 166: [/input, 852] 
split level 167: [/input, 651] 
split level 168: [/input, 134] 
split level 169: [/input, 2460] 
split level 170: [/input, 2148] 
split level 171: [/input-8, 47] 
split level 172: [/input, 1687] 
split level 173: [/input, 43] 
split level 174: [/input, 1092] 
split level 175: [/input-8, 85] 
split level 176: [/input, 2391] 
split level 177: [/input, 386] 
split level 178: [/input-8, 509] 
split level 179: [/input-8, 1106] 
split level 180: [/input, 2136] 
split level 181: [/input, 1641] 
split level 182: [/input, 3306] 
split level 183: [/input-8, 2001] 
split level 184: [/input, 3078] 
split level 185: [/input, 2459] 
split level 186: [/input, 1076] 
split level 187: [/input, 4010] 
split level 188: [/input, 1157] 
split level 189: [/input, 1596] 
split level 190: [/input, 2628] 
split level 191: [/input, 3897] 
split level 192: [/input-8, 1721] 
split level 193: [/input-8, 1523] 
split level 194: [/input, 41] 
split level 195: [/input, 2432] 
split level 196: [/input, 1813] 
split level 197: [/input, 2071] 
split level 198: [/input, 2910] 
split level 199: [/input, 652] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5551890730857849
10 lb beta sum: 0.0, worst -0.555186927318573
Time: prepare 0.0115    bound 0.1069    transfer 0.0036    finalize 0.0030    func 0.1281    
Accumulated time: func 0.1865    prepare 0.0221    bound 0.1648    transfer 0.0037    finalize 0.0032    
all_split False
======================Cut inference begins======================
max lb tensor(0.16164589) min lb tensor(-0.55517638)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.011411666870117188 
BICCOS Cumulative time: 0.011411666870117188
Preprocessing time: 0.01058053970336914 Inference time: 0.00012946128845214844 Add cuts time: 6.628036499023438e-05 Cut analysis time: 0.0006353855133056641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52632 (1), -0.52630 (1), -0.52588 (1), -0.52419 (1), -0.52393 (1), -0.52384 (1), -0.52339 (1), -0.52337 (1), -0.52308 (1), -0.52238 (1), -0.52230 (1), -0.51981 (1), -0.51966 (1), -0.51962 (1), -0.51947 (1), -0.51923 (1), -0.51909 (1), -0.51726 (1), -0.51714 (1), -0.51358 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5470    set_bounds 0.0091    solve 0.1282    add 0.0961    
Accumulated time: pickout 0.0004    decision 0.5470    set_bounds 0.0091    solve 0.1282    add 0.0961    
Current (lb-rhs): -0.5263214111328125
50 domains visited
Cumulative time: 0.8664205074310303

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] 
split level 1: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 58] [/input-12, 80] [/input-12, 80] 
split level 2: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 56] [/input-12, 58] [/input-12, 58] 
split level 3: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 9] [/input-12, 56] [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.45829159021377563
10 lb beta sum: 0.43831077218055725, worst -0.45055341720581055
Time: prepare 0.0068    bound 0.1256    transfer 0.0008    finalize 0.0024    func 0.1382    
Accumulated time: func 0.3247    prepare 0.0292    bound 0.2903    transfer 0.0045    finalize 0.0056    
all_split False
======================Cut inference begins======================
max lb tensor(0.67142987) min lb tensor(-0.45049554)
Number of Verified Splits: 87 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 11
#cuts >= 20: 0
BICCOS time: 0.019382238388061523 
BICCOS Cumulative time: 0.03079390525817871
Preprocessing time: 0.01316976547241211 Inference time: 0.0034835338592529297 Add cuts time: 0.0022001266479492188 Cut analysis time: 0.0005288124084472656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13330 (2), -0.13212 (2), -0.12539 (2), -0.12534 (2), -0.12443 (2), -0.11449 (2), -0.11391 (2), -0.11164 (2), -0.11132 (2), -0.11001 (2), -0.10894 (2), -0.10872 (2), -0.10817 (2), -0.10223 (2), -0.10219 (2), -0.10189 (2), -0.10168 (2), -0.10120 (2), -0.10082 (2), -0.09935 (2), 
Length of domains: 50
Time: pickout 0.0013    decision 0.0277    set_bounds 0.0137    solve 0.1383    add 0.1203    
Accumulated time: pickout 0.0016    decision 0.5747    set_bounds 0.0228    solve 0.2665    add 0.2164    
Current (lb-rhs): -0.13330486416816711
100 domains visited
Cumulative time: 1.187425136566162

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] 
split level 1: [/input-12, 58] [/input-12, 80] [/input-12, 81] [/input-12, 81] [/input-12, 80] [/input-12, 58] [/input-12, 58] [/input-12, 81] [/input-12, 81] [/input-12, 80] 
split level 2: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 58] [/input-12, 56] [/input-12, 56] [/input-12, 58] [/input-12, 58] [/input-12, 56] 
split level 3: [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 56] [/input-12, 56] [/input-12, 9] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18781918287277222
10 lb beta sum: 1.2944178581237793, worst -0.015684962272644043
Time: prepare 0.0060    bound 0.1282    transfer 0.0008    finalize 0.0021    func 0.1398    
Accumulated time: func 0.4645    prepare 0.0355    bound 0.4185    transfer 0.0052    finalize 0.0077    
all_split False
======================Cut inference begins======================
max lb tensor(0.49786574) min lb tensor(0.00046480)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.039771080017089844 
BICCOS Cumulative time: 0.07056498527526855
Preprocessing time: 0.01227259635925293 Inference time: 0.019199848175048828 Add cuts time: 0.007878541946411133 Cut analysis time: 0.0004200935363769531
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0211    set_bounds 0.0158    solve 0.1399    add 0.0211    
Accumulated time: pickout 0.0027    decision 0.5958    set_bounds 0.0386    solve 0.4064    add 0.2375    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 87] 
split level 1: [/input-12, 80] 
split level 2: [/input-12, 81] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 53] 
split level 5: [/input-12, 56] 
split level 6: [/input-12, 9] 
split level 7: [/input-12, 90] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.1675732135772705

all verified at 0th iter
Time: prepare 0.0038    bound 0.0052    transfer 0.0009    finalize 0.0012    func 0.0128    
Accumulated time: func 0.4773    prepare 0.0397    bound 0.4237    transfer 0.0062    finalize 0.0090    
all_split False
======================Cut inference begins======================
max lb tensor(1.20659065) min lb tensor(0.16757321)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.006658315658569336 
BICCOS Cumulative time: 0.07722330093383789
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0174    solve 0.0128    add 0.0001    
Accumulated time: pickout 0.0031    decision 0.6189    set_bounds 0.0560    solve 0.4192    add 0.2376    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
Cumulative time: 1.491102695465088


Properties batch 6, size 1
Remaining timeout: 22.325191020965576
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 22.325103521347046
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 22.324593782424927
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 177.6755 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 153, vnnlib ID: 153 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-55.21225357, -52.66218948, -56.67029572, -55.96726227, -56.95858765,
         -56.72839737, -58.98479462, -57.65303802, -52.33299637, -48.00667953]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [910]; unstable size 910; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 317, 1, 910] with unstable size 316 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 34, 1, 910] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 910] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [316]; unstable size 316; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 34, 1, 316] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 316] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.17546940, 1.28998613, 4.23788834, 4.15643787, 5.17553902, 4.87116051,
         6.70792389, 6.10428572, 0.11370564]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0564 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 154, vnnlib ID: 154 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.45230484, -37.53636551, -30.08795357, -29.98173332, -30.27563667,
         -29.24738884, -30.25860596, -31.80614090, -34.46796036, -38.35593033]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1000]; unstable size 1000; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 328, 1, 1000] with unstable size 327 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 38, 1, 1000] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1000] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [327]; unstable size 327; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 38, 1, 327] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 327] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [37]; unstable size 37; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.57248592,  4.43592215, -2.05395746, -0.28894693, -1.93113720,
         -1.04635739, -0.08143759,  1.61135292,  5.35426521]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.45230484, -37.53636551, -30.08795357, -29.98173332, -30.27563667,
         -29.24738884, -30.25860596, -31.80614090, -34.46796036, -38.35593033]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.82070160, -37.15142059, -29.26690292, -29.91500282, -29.86318970,
          -29.34457207, -29.91120529, -31.42502022, -33.97954941, -37.99973297],
         [-35.82070160, -37.15142059, -29.26690292, -29.91500282, -29.86318970,
          -29.34457207, -29.91120529, -31.42502022, -33.97954941, -37.99973297]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.07766914,  0.57043076,  0.51861763,  0.56663322,  2.08044815]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0069 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0706 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 155, vnnlib ID: 155 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.41662979, -33.05809021, -30.40747070, -29.73370171, -30.33473396,
         -30.57143211, -28.27796555, -31.88813400, -29.76372147, -32.43921280]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [619]; unstable size 619; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 324, 1, 619] with unstable size 323 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 49, 1, 619] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 619] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [323]; unstable size 323; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 49, 1, 323] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 323] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [48]; unstable size 48; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 48] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.29495239, -0.78453362, -2.16939640, -1.64347649, -1.15755367,
         -1.23448575, -0.61102259, -3.68292975, -1.54184258]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.41662979, -33.05809021, -30.40747070, -29.73370171, -30.33473396,
         -30.57143211, -28.27796555, -31.88813400, -29.76372147, -32.43921280]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.86544228, -32.62520981, -30.36194992, -29.76649666, -30.42771339,
          -30.56462669, -28.81473923, -31.77112198, -28.76875496, -32.08283615],
         [-31.86544228, -32.62520981, -30.36194992, -29.76649666, -30.42771339,
          -30.56462669, -28.81473923, -31.77112198, -28.76875496, -32.08283615]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 3.05070305,  3.81047058,  1.54721069,  0.95175743,  1.61297417,
           1.74988747,  2.95638275, -0.04598427,  3.26809692]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0067 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0752 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 156, vnnlib ID: 156 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.67522430, -31.70158768, -27.43582916, -25.52312279, -26.26327896,
         -26.41509628, -26.40889740, -29.34256744, -31.57395363, -31.80458832]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [947]; unstable size 947; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 313, 1, 947] with unstable size 312 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 45, 1, 947] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 947] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [312]; unstable size 312; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 45, 1, 312] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 312] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [44]; unstable size 44; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.32481599,  0.58116126, -2.69340467, -1.99725294, -2.72913933,
         -3.07450080,  0.08789611,  0.71671402,  1.02941275]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.67522430, -31.70158768, -27.43582916, -25.52312279, -26.26327896,
         -26.41509628, -26.40889740, -29.34256744, -31.57395363, -31.80458832]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.67522621, -31.70159149, -27.43583107, -25.52312660, -26.26328278,
          -26.41509819, -26.40889931, -29.34257126, -31.57395363, -31.80459213],
         [-29.67522621, -31.70159149, -27.43583107, -25.52312660, -26.26328278,
          -26.41509819, -26.40889931, -29.34257126, -31.57395363, -31.80459213]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 3.26012802,  1.02073288, -0.89197159, -0.15181541, -0.00619888]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0832 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 157, vnnlib ID: 157 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-46.85865402, -44.36671829, -51.05926514, -48.54542923, -50.64384842,
         -50.42626953, -50.67787170, -50.50956345, -45.68328857, -39.71395493]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [665]; unstable size 665; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 215, 1, 665] with unstable size 214 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 37, 1, 665] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 665] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [214]; unstable size 214; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 37, 1, 214] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 214] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [36]; unstable size 36; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.00841475, 2.12536788, 7.75464821, 5.59915638, 7.42814445, 7.26710129,
         7.52408075, 7.07451630, 3.22524738]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0506 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 158, vnnlib ID: 158 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.14921570, -30.57461548, -32.77136993, -30.52422142, -34.68899918,
         -31.28227615, -33.47130966, -31.75806046, -29.19857216, -33.00989532]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [696]; unstable size 696; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 696] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 31, 1, 696] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 696] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 31, 1, 288] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.07192731, -1.44020939,  0.71535254, -1.68543625,  1.82293797,
         -1.52535200,  1.10213947, -0.57789898,  0.90367627]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.14921570, -30.57461548, -32.77136993, -30.52422142, -34.68899918,
         -31.28227615, -33.47130966, -31.75806046, -29.19857216, -33.00989532]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.17062378, -28.56073761, -30.36628151, -27.77830315, -32.05456924,
          -28.36208916, -30.93023300, -29.06210899, -27.78639793, -30.85525131],
         [-31.17062378, -28.56073761, -30.36628151, -27.77830315, -32.05456924,
          -28.36208916, -30.93023300, -29.06210899, -27.78639793, -30.85525131]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.77433968, -0.00809479,  0.57569122,  1.27571106]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0075 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0439 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 159, vnnlib ID: 159 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-61.39009094, -60.66245651, -60.73851395, -58.18397522, -62.18739319,
         -60.48060226, -57.57823944, -64.82869720, -62.96115494, -59.14886093]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1099]; unstable size 1099; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 351, 1, 1099] with unstable size 350 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 36, 1, 1099] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1099] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [350]; unstable size 350; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 36, 1, 350] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 350] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.54546559, -1.49614596, -0.41602802, -1.72764921,  0.92070580,
         -0.04978988,  2.22739267,  0.56133538, -2.21699691]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-61.39009094, -60.66245651, -60.73851395, -58.18397522, -62.18739319,
         -60.48060226, -57.57823944, -64.82869720, -62.96115494, -59.14886093]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-60.94681168, -60.50905991, -60.26168823, -57.64382172, -61.70215225,
          -59.91961288, -57.70376205, -64.26365662, -62.54486084, -58.92007065],
         [-60.94681168, -60.50905991, -60.26168823, -57.64382172, -61.70215225,
          -59.91961288, -57.70376205, -64.26365662, -62.54486084, -58.92007065]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 3.24304962,  2.80529785,  2.55792618, -0.05994034,  2.21585083,
           1.21630859]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0065 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0717 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 160, vnnlib ID: 160 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.67956924, -31.83858299, -23.70592499, -26.11718369, -22.09289742,
         -26.40730476, -25.20326805, -26.95974350, -28.80583572, -31.36259270]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [987]; unstable size 987; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 390, 1, 987] with unstable size 389 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 57, 1, 987] with unstable size 56 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 987] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [389]; unstable size 389; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 57, 1, 389] with unstable size 56 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 389] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [56]; unstable size 56; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 56] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.85869515,  4.61210823, -1.91588581,  0.80078578,  0.74816370,
         -0.76234841,  0.88448787,  1.80578899,  3.76432610]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.67956924, -31.83858299, -23.70592499, -26.11718369, -22.09289742,
         -26.40730476, -25.20326805, -26.95974350, -28.80583572, -31.36259270]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.18it/s]100%|██████████| 1/1 [00:00<00:00,  8.17it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.30299568, -31.68195343, -22.90585327, -25.90927315, -22.29280281,
          -26.25172234, -24.98943710, -26.94409180, -28.53614998, -31.29737663],
         [-27.30299568, -31.68195343, -22.90585327, -25.90927315, -22.29280281,
          -26.25172234, -24.98943710, -26.94409180, -28.53614998, -31.29737663]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.61305046, 2.69663429]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1252 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 14.21639633178711
alpha/beta optimization time: 1.3239860534667969
initial alpha-crown bounds: tensor([[ 1.21955991,  5.07474756, -1.57844925,  1.13587785,  1.12140083,
         -0.36337066,  1.24188733,  2.20007610,  4.16466761]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -1.5784492492675781
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.48235702514648
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.4823133945465
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.48228311538696
Verifying property 2 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.57844925]], device='cuda:0') need to verify.
Model prediction is: tensor([-27.67956924, -31.83858299, -23.70592499, -26.11718369, -22.09289742,
        -26.40730476, -25.20326805, -26.95974350, -28.80583572, -31.36259270],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.57844925]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 987
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 380
Node /15 input 0: size torch.Size([100]) unstable 55
-----------------
# of unstable neurons: 1422
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010728836059570312
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.5784351825714111
10 lb beta sum: 0.0, worst -1.5784592628479004
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0638    transfer 0.0001    finalize 0.0002    func 0.0643    
Accumulated time: func 0.0643    prepare 0.0002    bound 0.0638    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] 
split level 1: [/input-12, 92] 
split level 2: [/input-12, 57] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 30] 
split level 5: [/input-12, 28] 
split level 6: [/input-12, 38] 
split level 7: [/input-12, 70] 
split level 8: [/input-12, 83] 
split level 9: [/input-12, 22] 
split level 10: [/input-12, 7] 
split level 11: [/input-12, 65] 
split level 12: [/input-12, 62] 
split level 13: [/input-12, 51] 
split level 14: [/input-12, 48] 
split level 15: [/input-12, 50] 
split level 16: [/input-12, 10] 
split level 17: [/input-12, 90] 
split level 18: [/input-12, 33] 
split level 19: [/input-12, 76] 
split level 20: [/input-12, 46] 
split level 21: [/input-8, 554] 
split level 22: [/input-12, 97] 
split level 23: [/input-8, 1884] 
split level 24: [/input-8, 546] 
split level 25: [/input-12, 9] 
split level 26: [/input-8, 555] 
split level 27: [/input-8, 1876] 
split level 28: [/input-12, 87] 
split level 29: [/input-12, 74] 
split level 30: [/input-8, 716] 
split level 31: [/input-12, 84] 
split level 32: [/input-12, 85] 
split level 33: [/input-8, 539] 
split level 34: [/input-8, 1892] 
split level 35: [/input-8, 558] 
split level 36: [/input-8, 1875] 
split level 37: [/input-12, 45] 
split level 38: [/input-8, 1566] 
split level 39: [/input-8, 1562] 
split level 40: [/input-8, 548] 
split level 41: [/input-8, 537] 
split level 42: [/input-12, 75] 
split level 43: [/input-8, 1572] 
split level 44: [/input-8, 332] 
split level 45: [/input-8, 1557] 
split level 46: [/input-12, 25] 
split level 47: [/input-8, 731] 
split level 48: [/input-8, 545] 
split level 49: [/input-8, 538] 
split level 50: [/input-8, 1885] 
split level 51: [/input-8, 1867] 
split level 52: [/input-8, 1978] 
split level 53: [/input-8, 1930] 
split level 54: [/input-8, 740] 
split level 55: [/input-8, 1582] 
split level 56: [/input-12, 6] 
split level 57: [/input-8, 1970] 
split level 58: [/input-12, 20] 
split level 59: [/input-8, 1907] 
split level 60: [/input-8, 1873] 
split level 61: [/input-8, 1427] 
split level 62: [/input-8, 714] 
split level 63: [/input-8, 1550] 
split level 64: [/input-8, 1558] 
split level 65: [/input-8, 1945] 
split level 66: [/input-8, 1971] 
split level 67: [/input-8, 542] 
split level 68: [/input-8, 715] 
split level 69: [/input-8, 1865] 
split level 70: [/input-8, 1900] 
split level 71: [/input-8, 1938] 
split level 72: [/input-8, 552] 
split level 73: [/input-8, 1868] 
split level 74: [/input-8, 713] 
split level 75: [/input-8, 1581] 
split level 76: [/input-8, 723] 
split level 77: [/input-8, 1857] 
split level 78: [/input-8, 660] 
split level 79: [/input-8, 650] 
split level 80: [/input-8, 917] 
split level 81: [/input-8, 700] 
split level 82: [/input-8, 707] 
split level 83: [/input-8, 741] 
split level 84: [/input-8, 1965] 
split level 85: [/input-8, 1929] 
split level 86: [/input-8, 325] 
split level 87: [/input-8, 497] 
split level 88: [/input-8, 1914] 
split level 89: [/input-8, 498] 
split level 90: [/input-8, 708] 
split level 91: [/input-8, 756] 
split level 92: [/input-8, 1969] 
split level 93: [/input-8, 1893] 
split level 94: [/input-8, 748] 
split level 95: [/input-8, 562] 
split level 96: [/input-8, 541] 
split level 97: [/input-8, 1906] 
split level 98: [/input-8, 1860] 
split level 99: [/input-12, 37] 
split level 100: [/input-8, 755] 
split level 101: [/input-8, 330] 
split level 102: [/input-8, 986] 
split level 103: [/input-8, 698] 
split level 104: [/input-8, 1421] 
split level 105: [/input-8, 1590] 
split level 106: [/input-8, 718] 
split level 107: [/input-8, 1589] 
split level 108: [/input-8, 1878] 
split level 109: [/input-8, 978] 
split level 110: [/input-8, 533] 
split level 111: [/input-8, 1870] 
split level 112: [/input-8, 155] 
split level 113: [/input-8, 709] 
split level 114: [/input-8, 338] 
split level 115: [/input-8, 1035] 
split level 116: [/input-8, 733] 
split level 117: [/input-8, 1859] 
split level 118: [/input-8, 1915] 
split level 119: [/input-8, 600] 
split level 120: [/input-8, 1043] 
split level 121: [/input-8, 666] 
split level 122: [/input-8, 1981] 
split level 123: [/input-8, 763] 
split level 124: [/input-8, 915] 
split level 125: [/input-8, 762] 
split level 126: [/input-8, 1052] 
split level 127: [/input-8, 749] 
split level 128: [/input-8, 1937] 
split level 129: [/input-8, 761] 
split level 130: [/input-8, 523] 
split level 131: [/input-8, 970] 
split level 132: [/input-8, 1843] 
split level 133: [/input-8, 710] 
split level 134: [/input-8, 721] 
split level 135: [/input-8, 1918] 
split level 136: [/input-8, 1909] 
split level 137: [/input-8, 691] 
split level 138: [/input-8, 1067] 
split level 139: [/input-8, 977] 
split level 140: [/input-8, 1901] 
split level 141: [/input-8, 329] 
split level 142: [/input-8, 1299] 
split level 143: [/input-8, 643] 
split level 144: [/input, 3239] 
split level 145: [/input-8, 1964] 
split level 146: [/input-8, 754] 
split level 147: [/input-8, 860] 
split level 148: [/input, 2469] 
split level 149: [/input-8, 676] 
split level 150: [/input, 2195] 
split level 151: [/input-8, 367] 
split level 152: [/input-8, 507] 
split level 153: [/input, 869] 
split level 154: [/input, 1363] 
split level 155: [/input-8, 1109] 
split level 156: [/input-8, 1015] 
split level 157: [/input-8, 1917] 
split level 158: [/input-8, 734] 
split level 159: [/input-8, 657] 
split level 160: [/input, 1964] 
split level 161: [/input, 1190] 
split level 162: [/input-8, 684] 
split level 163: [/input-8, 1939] 
split level 164: [/input-8, 1822] 
split level 165: [/input-8, 1494] 
split level 166: [/input-8, 532] 
split level 167: [/input-8, 624] 
split level 168: [/input-8, 2034] 
split level 169: [/input-8, 188] 
split level 170: [/input-8, 631] 
split level 171: [/input-12, 4] 
split level 172: [/input-8, 914] 
split level 173: [/input-8, 233] 
split level 174: [/input-8, 1804] 
split level 175: [/input-8, 745] 
split level 176: [/input-8, 765] 
split level 177: [/input-8, 1118] 
split level 178: [/input-12, 44] 
split level 179: [/input-8, 750] 
split level 180: [/input-8, 742] 
split level 181: [/input-8, 510] 
split level 182: [/input, 2260] 
split level 183: [/input-8, 1486] 
split level 184: [/input, 2246] 
split level 185: [/input, 867] 
split level 186: [/input-8, 1838] 
split level 187: [/input-8, 508] 
split level 188: [/input, 1981] 
split level 189: [/input-8, 1034] 
split level 190: [/input, 3287] 
split level 191: [/input-8, 189] 
split level 192: [/input, 1230] 
split level 193: [/input, 3768] 
split level 194: [/input-8, 2033] 
split level 195: [/input, 1256] 
split level 196: [/input, 1255] 
split level 197: [/input-8, 1126] 
split level 198: [/input-8, 937] 
split level 199: [/input-8, 1060] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.578153371810913
10 lb beta sum: 0.0, worst -1.5781491994857788
Time: prepare 0.0114    bound 0.1074    transfer 0.0015    finalize 0.0032    func 0.1262    
Accumulated time: func 0.1905    prepare 0.0218    bound 0.1712    transfer 0.0016    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(-0.27288127) min lb tensor(-1.57813454)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010452508926391602 
BICCOS Cumulative time: 0.010452508926391602
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.52741 (1), -1.52713 (1), -1.52018 (1), -1.51841 (1), -1.51776 (1), -1.51749 (1), -1.51585 (1), -1.51470 (1), -1.51200 (1), -1.51184 (1), -1.51118 (1), -1.51054 (1), -1.50698 (1), -1.50276 (1), -1.50082 (1), -1.50045 (1), -1.49470 (1), -1.48345 (1), -1.47798 (1), -1.47488 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5501    set_bounds 0.0089    solve 0.1263    add 0.1153    
Accumulated time: pickout 0.0004    decision 0.5501    set_bounds 0.0089    solve 0.1263    add 0.1153    
Current (lb-rhs): -1.5274080038070679
50 domains visited
Cumulative time: 0.8897838592529297

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] [/input-12, 66] [/input-12, 92] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] 
split level 1: [/input-12, 28] [/input-12, 28] [/input-12, 30] [/input-12, 92] [/input-12, 28] [/input-12, 92] [/input-12, 28] [/input-12, 92] [/input-12, 28] [/input-12, 28] 
split level 2: [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] 
split level 3: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.499990463256836
10 lb beta sum: 0.0, worst -1.4981443881988525
Time: prepare 0.0116    bound 0.1026    transfer 0.0007    finalize 0.0023    func 0.1198    
Accumulated time: func 0.3103    prepare 0.0337    bound 0.2739    transfer 0.0024    finalize 0.0056    
all_split False
======================Cut inference begins======================
max lb tensor(0.59900463) min lb tensor(-1.49803352)
Number of Verified Splits: 35 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 31
#cuts >= 20: 0
BICCOS time: 0.015266656875610352 
BICCOS Cumulative time: 0.025719165802001953
Preprocessing time: 0.01182866096496582 Inference time: 0.0015201568603515625 Add cuts time: 0.0005619525909423828 Cut analysis time: 0.001355886459350586
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23009 (2), -0.22504 (2), -0.22499 (2), -0.22006 (2), -0.21691 (2), -0.21510 (2), -0.21262 (2), -0.20601 (2), -0.20437 (2), -0.19974 (2), -0.19806 (2), -0.19399 (2), -0.19285 (2), -0.19266 (2), -0.18582 (2), -0.18240 (2), -0.17987 (2), -0.17971 (2), -0.17376 (2), -0.17344 (2), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0230    set_bounds 0.0147    solve 0.1199    add 0.0889    
Accumulated time: pickout 0.0016    decision 0.5731    set_bounds 0.0236    solve 0.2462    add 0.2043    
Current (lb-rhs): -0.23008763790130615
100 domains visited
Cumulative time: 1.1529302597045898

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 92] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 92] [/input-12, 66] 
split level 1: [/input-12, 30] [/input-12, 30] [/input-12, 28] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 28] [/input-12, 30] [/input-12, 28] [/input-12, 30] 
split level 2: [/input-12, 28] [/input-12, 70] [/input-12, 70] [/input-12, 28] [/input-12, 70] [/input-12, 28] [/input-12, 30] [/input-12, 28] [/input-12, 70] [/input-12, 70] 
split level 3: [/input-12, 70] [/input-12, 7] [/input-12, 7] [/input-12, 70] [/input-12, 7] [/input-12, 7] [/input-12, 70] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1979818344116211
10 lb beta sum: 0.0393371507525444, worst -0.18661044538021088
Time: prepare 0.0063    bound 0.1363    transfer 0.0008    finalize 0.0028    func 0.1489    
Accumulated time: func 0.4593    prepare 0.0403    bound 0.4102    transfer 0.0032    finalize 0.0084    
all_split False
======================Cut inference begins======================
max lb tensor(0.64509177) min lb tensor(-0.10198280)
Number of Verified Splits: 365 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.03721952438354492 
BICCOS Cumulative time: 0.06293869018554688
Preprocessing time: 0.011775970458984375 Inference time: 0.01731252670288086 Add cuts time: 0.0077250003814697266 Cut analysis time: 0.00040602684020996094
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0217    set_bounds 0.0154    solve 0.1490    add 0.0199    
Accumulated time: pickout 0.0026    decision 0.5947    set_bounds 0.0390    solve 0.3952    add 0.2241    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] 
split level 1: [/input-12, 92] 
split level 2: [/input-12, 30] 
split level 3: [/input-12, 28] 
split level 4: [/input-12, 70] 
split level 5: [/input-12, 7] 
split level 6: [/input-12, 62] 
split level 7: [/input-12, 51] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7671936750411987
10 lb beta sum: 0.1471571922302246, worst -0.7540794014930725
Time: prepare 0.0036    bound 0.1221    transfer 0.0006    finalize 0.0015    func 0.1296    
Accumulated time: func 0.5889    prepare 0.0443    bound 0.5323    transfer 0.0038    finalize 0.0099    
all_split False
======================Cut inference begins======================
max lb tensor(1.30796349) min lb tensor(-0.75265545)
Number of Verified Splits: 209 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.1015650033950806
10 lb beta sum: 0.9304243922233582, worst -1.042302131652832
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 6
#cuts 4-6: 2
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.24283480644226074 
BICCOS Cumulative time: 0.3057734966278076
Preprocessing time: 0.0066301822662353516 Inference time: 0.23311948776245117 Add cuts time: 0.0024290084838867188 Cut analysis time: 0.0006561279296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.75266 (8), -0.70419 (8), -0.69533 (8), -0.68836 (8), -0.64156 (8), -0.64094 (8), -0.63168 (8), -0.60272 (8), -0.57921 (8), -0.56091 (8), -0.53526 (8), -0.52383 (8), -0.49691 (8), -0.48638 (8), -0.46178 (8), -0.42897 (8), -0.39334 (8), -0.35867 (8), -0.32063 (8), -0.31205 (8), 
Length of domains: 47
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0167    solve 0.1297    add 0.0263    
Accumulated time: pickout 0.0030    decision 0.6177    set_bounds 0.0557    solve 0.5249    add 0.2504    
Current (lb-rhs): -0.7526554465293884
147 domains visited
Cumulative time: 1.8412036895751953

BaB round 2
batch: 47
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] 
split level 1: [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] 
split level 2: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5584332942962646
10 lb beta sum: 0.1406341940164566, worst -0.5458087921142578
Time: prepare 0.0053    bound 0.1240    transfer 0.0026    finalize 0.0022    func 0.1366    
Accumulated time: func 0.7255    prepare 0.0498    bound 0.6564    transfer 0.0064    finalize 0.0121    
all_split False
======================Cut inference begins======================
max lb tensor(0.77112395) min lb tensor(-0.54503918)
Number of Verified Splits: 284 of 376
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8976314067840576
10 lb beta sum: 0.5770240426063538, worst -0.7391061782836914
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 75.
#cuts 1-3: 6
#cuts 4-6: 11
#cuts 7-9: 51
#cuts 10-12: 7
#cuts >= 20: 0
BICCOS time: 0.3177018165588379 
BICCOS Cumulative time: 0.6234753131866455
Preprocessing time: 0.01096796989440918 Inference time: 0.280576229095459 Add cuts time: 0.02184748649597168 Cut analysis time: 0.004310131072998047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.54504 (11), -0.50540 (11), -0.49365 (11), -0.49195 (11), -0.48666 (11), -0.47564 (11), -0.45150 (11), -0.44753 (11), -0.44278 (11), -0.43702 (11), -0.43245 (11), -0.43216 (11), -0.42491 (11), -0.42456 (11), -0.42354 (11), -0.42153 (11), -0.39610 (11), -0.39149 (11), -0.39073 (11), -0.39066 (11), 
Length of domains: 92
Time: pickout 0.0012    decision 0.0147    set_bounds 0.0196    solve 0.1367    add 0.0757    
Accumulated time: pickout 0.0043    decision 0.6323    set_bounds 0.0753    solve 0.6616    add 0.3261    
Current (lb-rhs): -0.545039176940918
239 domains visited
Cumulative time: 2.4153072834014893

BaB round 3
batch: 92
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 65] 
split level 1: [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.47404909133911133
10 lb beta sum: 0.2573578655719757, worst -0.46291810274124146
Time: prepare 0.0055    bound 0.1275    transfer 0.0013    finalize 0.0022    func 0.1393    
Accumulated time: func 0.8648    prepare 0.0555    bound 0.7838    transfer 0.0077    finalize 0.0143    
all_split False
======================Cut inference begins======================
max lb tensor(0.35282046) min lb tensor(-0.46254593)
Number of Verified Splits: 252 of 368
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 12
#cuts 4-6: 10
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 0.046674489974975586 
BICCOS Cumulative time: 0.6701498031616211
Preprocessing time: 0.010973691940307617 Inference time: 0.027817487716674805 Add cuts time: 0.006307840347290039 Cut analysis time: 0.001575469970703125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.46255 (13), -0.42409 (13), -0.40937 (13), -0.40723 (13), -0.40319 (13), -0.39371 (13), -0.36842 (13), -0.36596 (13), -0.36204 (13), -0.35485 (13), -0.34547 (13), -0.34422 (13), -0.34196 (13), -0.34062 (13), -0.33802 (13), -0.33606 (13), -0.30945 (13), -0.30927 (13), -0.30616 (13), -0.30513 (13), 
Length of domains: 116
Time: pickout 0.0138    decision 0.0174    set_bounds 0.1824    solve 0.1394    add 0.0099    
Accumulated time: pickout 0.0181    decision 0.6497    set_bounds 0.2577    solve 0.8010    add 0.3360    
Current (lb-rhs): -0.4625459313392639
355 domains visited
Cumulative time: 2.8282532691955566

BaB round 4
batch: 116
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4395005702972412
10 lb beta sum: 0.4571326971054077, worst -0.5896944999694824
Time: prepare 0.0035    bound 0.1249    transfer 0.0009    finalize 0.0012    func 0.1322    
Accumulated time: func 0.9969    prepare 0.0592    bound 0.9088    transfer 0.0086    finalize 0.0155    
all_split False
======================Cut inference begins======================
max lb tensor(0.42046922) min lb tensor(-0.42855984)
Number of Verified Splits: 125 of 232
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 13
#cuts 4-6: 11
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 0.0267183780670166 
BICCOS Cumulative time: 0.6968681812286377
Preprocessing time: 0.0069580078125 Inference time: 0.015166759490966797 Add cuts time: 0.0030574798583984375 Cut analysis time: 0.0015361309051513672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.42856 (14), -0.39069 (14), -0.37345 (14), -0.37305 (14), -0.36906 (14), -0.36105 (14), -0.34882 (14), -0.33496 (14), -0.33243 (14), -0.33004 (14), -0.32078 (14), -0.31130 (14), -0.30989 (14), -0.30938 (14), -0.30524 (14), -0.30495 (14), -0.30463 (14), -0.30320 (14), -0.29435 (14), -0.29256 (14), 
Length of domains: 107
Time: pickout 0.0024    decision 0.0161    set_bounds 0.0098    solve 0.1322    add 0.0013    
Accumulated time: pickout 0.0205    decision 0.6658    set_bounds 0.2675    solve 0.9332    add 0.3374    
Current (lb-rhs): -0.4285598397254944
462 domains visited
Cumulative time: 3.017817735671997

BaB round 5
batch: 107
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 555] [/input-8, 555] [/input-12, 9] [/input-8, 555] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4217289686203003
10 lb beta sum: 0.33069974184036255, worst -0.5694785118103027
Time: prepare 0.0039    bound 0.1236    transfer 0.0009    finalize 0.0015    func 0.1312    
Accumulated time: func 1.1282    prepare 0.0633    bound 1.0323    transfer 0.0095    finalize 0.0169    
all_split False
======================Cut inference begins======================
max lb tensor(0.29564810) min lb tensor(-0.41099384)
Number of Verified Splits: 85 of 214
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 18
#cuts 4-6: 9
#cuts 7-9: 11
#cuts >= 20: 0
BICCOS time: 0.020742177963256836 
BICCOS Cumulative time: 0.7176103591918945
Preprocessing time: 0.006356954574584961 Inference time: 0.009686470031738281 Add cuts time: 0.0031578540802001953 Cut analysis time: 0.0015408992767333984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.41099 (15), -0.37251 (15), -0.36743 (15), -0.35176 (15), -0.34990 (15), -0.34690 (15), -0.34392 (15), -0.32456 (15), -0.32370 (15), -0.31505 (15), -0.31228 (15), -0.31170 (15), -0.30090 (15), -0.29599 (15), -0.29374 (15), -0.28770 (15), -0.28718 (15), -0.28604 (15), -0.28354 (15), -0.28031 (15), 
Length of domains: 129
Time: pickout 0.0025    decision 0.0213    set_bounds 0.0087    solve 0.1313    add 0.0017    
Accumulated time: pickout 0.0230    decision 0.6871    set_bounds 0.2762    solve 1.0645    add 0.3391    
Current (lb-rhs): -0.4109938442707062
591 domains visited
Cumulative time: 3.204807996749878

BaB round 6
batch: 129
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 83] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.39967983961105347
10 lb beta sum: 0.4541548490524292, worst -0.5398445129394531
Time: prepare 0.0046    bound 0.1343    transfer 0.0006    finalize 0.0015    func 0.1428    
Accumulated time: func 1.2710    prepare 0.0682    bound 1.1666    transfer 0.0101    finalize 0.0185    
all_split False
======================Cut inference begins======================
max lb tensor(0.34153780) min lb tensor(-0.38904488)
Number of Verified Splits: 128 of 258
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 16
#cuts 4-6: 13
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.028548240661621094 
BICCOS Cumulative time: 0.7461585998535156
Preprocessing time: 0.007864713668823242 Inference time: 0.015906333923339844 Add cuts time: 0.0031049251556396484 Cut analysis time: 0.0016722679138183594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38904 (16), -0.35011 (16), -0.34561 (16), -0.33345 (16), -0.33143 (16), -0.32140 (16), -0.32041 (16), -0.30548 (16), -0.30233 (16), -0.29434 (16), -0.29322 (16), -0.29260 (16), -0.29146 (16), -0.28919 (16), -0.28143 (16), -0.27974 (16), -0.27341 (16), -0.27297 (16), -0.27061 (16), -0.26482 (16), 
Length of domains: 130
Time: pickout 0.0026    decision 0.0179    set_bounds 0.0113    solve 0.1429    add 0.0022    
Accumulated time: pickout 0.0256    decision 0.7050    set_bounds 0.2876    solve 1.2074    add 0.3413    
Current (lb-rhs): -0.3890448808670044
721 domains visited
Cumulative time: 3.411167621612549

BaB round 7
batch: 130
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 9] [/input-8, 555] [/input-12, 74] [/input-8, 555] [/input-12, 9] [/input-12, 9] [/input-8, 555] [/input-12, 9] [/input-8, 555] [/input-12, 74] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3704131841659546
10 lb beta sum: 0.6697304248809814, worst -0.4689377546310425
Time: prepare 0.0049    bound 0.1508    transfer 0.0009    finalize 0.0015    func 0.1598    
Accumulated time: func 1.4308    prepare 0.0733    bound 1.3174    transfer 0.0110    finalize 0.0200    
all_split False
======================Cut inference begins======================
max lb tensor(0.21935499) min lb tensor(-0.35986882)
Number of Verified Splits: 79 of 260
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 16
#cuts 4-6: 14
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.0217740535736084 
BICCOS Cumulative time: 0.767932653427124
Preprocessing time: 0.007731914520263672 Inference time: 0.00970005989074707 Add cuts time: 0.002942800521850586 Cut analysis time: 0.0013992786407470703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35987 (17), -0.32085 (17), -0.31597 (17), -0.30594 (17), -0.30354 (17), -0.30242 (17), -0.29159 (17), -0.27343 (17), -0.27265 (17), -0.27238 (17), -0.26723 (17), -0.26477 (17), -0.26363 (17), -0.26283 (17), -0.26186 (17), -0.25945 (17), -0.24967 (17), -0.24327 (17), -0.24202 (17), -0.24137 (17), 
Length of domains: 181
Time: pickout 0.0023    decision 0.0165    set_bounds 0.0101    solve 0.1604    add 0.0025    
Accumulated time: pickout 0.0279    decision 0.7215    set_bounds 0.2976    solve 1.3678    add 0.3437    
Current (lb-rhs): -0.3598688244819641
902 domains visited
Cumulative time: 3.6256611347198486

BaB round 8
batch: 181
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 84] [/input-12, 74] [/input-12, 84] [/input-12, 74] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3308817148208618
10 lb beta sum: 0.6367555856704712, worst -0.42781180143356323
Time: prepare 0.0071    bound 0.1575    transfer 0.0008    finalize 0.0023    func 0.1700    
Accumulated time: func 1.6008    prepare 0.0806    bound 1.4750    transfer 0.0118    finalize 0.0223    
all_split False
======================Cut inference begins======================
max lb tensor(0.07617749) min lb tensor(-0.32008937)
Number of Verified Splits: 65 of 362
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 16
#cuts 4-6: 14
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.023776769638061523 
BICCOS Cumulative time: 0.7917094230651855
Preprocessing time: 0.010729789733886719 Inference time: 0.008484601974487305 Add cuts time: 0.003162860870361328 Cut analysis time: 0.0013995170593261719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32009 (18), -0.31702 (18), -0.28175 (18), -0.27658 (18), -0.27537 (18), -0.27416 (18), -0.26599 (18), -0.26396 (18), -0.26303 (18), -0.26247 (18), -0.26193 (18), -0.25730 (18), -0.25201 (18), -0.24769 (18), -0.23549 (18), -0.23323 (18), -0.23266 (18), -0.23232 (18), -0.22929 (18), -0.22810 (18), 
Length of domains: 297
Time: pickout 0.0030    decision 0.0239    set_bounds 0.0151    solve 0.1702    add 0.0039    
Accumulated time: pickout 0.0310    decision 0.7455    set_bounds 0.3127    solve 1.5380    add 0.3476    
Current (lb-rhs): -0.3200893700122833
1199 domains visited
Cumulative time: 3.8663363456726074

BaB round 9
batch: 297
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 87] [/input-12, 84] [/input-12, 84] [/input-12, 87] [/input-12, 85] [/input-12, 84] [/input-12, 87] [/input-12, 84] [/input-12, 87] [/input-12, 87] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7010467648506165, worst -0.30267634987831116
10 lb beta sum: 0.7044026851654053, worst -0.32987838983535767
Time: prepare 0.0274    bound 0.1486    transfer 0.0020    finalize 0.0034    func 0.1852    
Accumulated time: func 1.7861    prepare 0.1082    bound 1.6236    transfer 0.0138    finalize 0.0257    
all_split False
======================Cut inference begins======================
max lb tensor(0.16129339) min lb tensor(-0.30238417)
Number of Verified Splits: 115 of 594
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 18
#cuts 4-6: 14
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.040049076080322266 
BICCOS Cumulative time: 0.8317584991455078
Preprocessing time: 0.017551898956298828 Inference time: 0.016907930374145508 Add cuts time: 0.004108428955078125 Cut analysis time: 0.0014808177947998047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30238 (19), -0.29891 (19), -0.26308 (19), -0.25805 (19), -0.25764 (19), -0.25635 (19), -0.24505 (19), -0.24448 (19), -0.24368 (19), -0.23918 (19), -0.23562 (19), -0.23323 (19), -0.23266 (19), -0.23218 (19), -0.23082 (19), -0.23073 (19), -0.23052 (19), -0.22857 (19), -0.21751 (19), -0.21369 (19), 
Length of domains: 479
Time: pickout 0.0057    decision 0.0262    set_bounds 0.0279    solve 0.1854    add 0.0540    
Accumulated time: pickout 0.0367    decision 0.7716    set_bounds 0.3406    solve 1.7234    add 0.4016    
Current (lb-rhs): -0.3023841679096222
1678 domains visited
Cumulative time: 4.206900596618652

BaB round 10
batch: 479
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 85] [/input-12, 87] [/input-12, 84] [/input-12, 87] [/input-12, 22] [/input-12, 87] [/input-12, 84] [/input-12, 22] [/input-12, 87] [/input-12, 22] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.28067106008529663
10 lb beta sum: 0.5426152944564819, worst -0.3801461458206177
Time: prepare 0.0192    bound 0.1583    transfer 0.0044    finalize 0.0049    func 0.1937    
Accumulated time: func 1.9798    prepare 0.1277    bound 1.7818    transfer 0.0182    finalize 0.0306    
all_split False
======================Cut inference begins======================
max lb tensor(0.38274604) min lb tensor(-0.27019876)
Number of Verified Splits: 369 of 958
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 19
#cuts 4-6: 13
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.08975982666015625 
BICCOS Cumulative time: 0.9215183258056641
Preprocessing time: 0.02950572967529297 Inference time: 0.05145907402038574 Add cuts time: 0.0071032047271728516 Cut analysis time: 0.0016918182373046875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27020 (20), -0.26639 (20), -0.26380 (20), -0.26131 (20), -0.23259 (20), -0.23214 (20), -0.22672 (20), -0.22590 (20), -0.22564 (20), -0.22371 (20), -0.22016 (20), -0.22006 (20), -0.21918 (20), -0.21572 (20), -0.21448 (20), -0.21301 (20), -0.21295 (20), -0.21206 (20), -0.21110 (20), -0.21102 (20), 
Length of domains: 589
Time: pickout 0.0071    decision 0.0377    set_bounds 0.0421    solve 0.1941    add 0.0807    
Accumulated time: pickout 0.0438    decision 0.8093    set_bounds 0.3827    solve 1.9174    add 0.4824    
Current (lb-rhs): -0.2701987624168396
2267 domains visited
Cumulative time: 4.669055223464966

BaB round 11
batch: 589
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1875] [/input-12, 85] [/input-12, 85] [/input-12, 87] [/input-12, 22] [/input-12, 87] [/input-8, 1875] [/input-12, 87] [/input-12, 85] [/input-12, 85] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6559711694717407, worst -0.4054216146469116
10 lb beta sum: 1.0303136110305786, worst -0.25767678022384644
Time: prepare 0.0534    bound 0.1595    transfer 0.0053    finalize 0.0088    func 0.2349    
Accumulated time: func 2.2147    prepare 0.1814    bound 1.9413    transfer 0.0235    finalize 0.0393    
all_split False
======================Cut inference begins======================
max lb tensor(0.82598180) min lb tensor(-0.25763965)
Number of Verified Splits: 584 of 1178
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 19
#cuts 4-6: 4
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.29745054244995117 
BICCOS Cumulative time: 1.2189688682556152
Preprocessing time: 0.03623795509338379 Inference time: 0.2500784397125244 Add cuts time: 0.009922027587890625 Cut analysis time: 0.0012121200561523438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25764 (21), -0.25391 (21), -0.24842 (21), -0.22473 (21), -0.21438 (21), -0.21319 (21), -0.21122 (21), -0.20638 (21), -0.20127 (21), -0.19536 (21), -0.19273 (21), -0.18985 (21), -0.18923 (21), -0.18819 (21), -0.18677 (21), -0.18530 (21), -0.18490 (21), -0.18090 (21), -0.18088 (21), -0.17972 (21), 
Length of domains: 594
Time: pickout 0.0546    decision 0.0514    set_bounds 0.0506    solve 0.2352    add 0.0296    
Accumulated time: pickout 0.0984    decision 0.8607    set_bounds 0.4333    solve 2.1526    add 0.5120    
Current (lb-rhs): -0.25763964653015137
2861 domains visited
Cumulative time: 5.3949949741363525

BaB round 12
batch: 594
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 87] [/input-8, 1875] [/input-12, 22] [/input-8, 545] [/input-8, 1875] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-8, 1875] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24140632152557373
10 lb beta sum: 0.6529210805892944, worst -0.23103377223014832
Time: prepare 0.0239    bound 0.1599    transfer 0.0020    finalize 0.0071    func 0.2014    
Accumulated time: func 2.4161    prepare 0.2055    bound 2.1012    transfer 0.0255    finalize 0.0464    
all_split False
======================Cut inference begins======================
max lb tensor(0.63287568) min lb tensor(-0.23097424)
Number of Verified Splits: 875 of 1188
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 20
#cuts 4-6: 3
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.18152689933776855 
BICCOS Cumulative time: 1.4004957675933838
Preprocessing time: 0.036612749099731445 Inference time: 0.13218045234680176 Add cuts time: 0.011571884155273438 Cut analysis time: 0.001161813735961914
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23097 (22), -0.22754 (22), -0.22350 (22), -0.21732 (22), -0.19746 (22), -0.18975 (22), -0.18814 (22), -0.17715 (22), -0.17416 (22), -0.17410 (22), -0.17197 (22), -0.16931 (22), -0.16858 (22), -0.16796 (22), -0.16751 (22), -0.16604 (22), -0.16319 (22), -0.16234 (22), -0.16130 (22), -0.16002 (22), 
Length of domains: 313
Time: pickout 0.0102    decision 0.0507    set_bounds 0.0513    solve 0.2017    add 0.0147    
Accumulated time: pickout 0.1086    decision 0.9114    set_bounds 0.4846    solve 2.3543    add 0.5267    
Current (lb-rhs): -0.2309742420911789
3174 domains visited
Cumulative time: 5.9108147621154785

BaB round 13
batch: 313
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 22] [/input-12, 22] [/input-8, 545] [/input-12, 22] [/input-8, 545] [/input-8, 546] [/input-8, 545] [/input-8, 545] [/input-8, 545] [/input-8, 545] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2326362133026123
10 lb beta sum: 0.8887009024620056, worst -0.22121404111385345
Time: prepare 0.0128    bound 0.1501    transfer 0.0013    finalize 0.0037    func 0.1719    
Accumulated time: func 2.5880    prepare 0.2186    bound 2.2513    transfer 0.0268    finalize 0.0502    
all_split False
======================Cut inference begins======================
max lb tensor(0.31442329) min lb tensor(-0.22114341)
Number of Verified Splits: 396 of 626
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 24
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.08439230918884277 
BICCOS Cumulative time: 1.4848880767822266
Preprocessing time: 0.01851963996887207 Inference time: 0.059903621673583984 Add cuts time: 0.005353212356567383 Cut analysis time: 0.0006158351898193359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22114 (23), -0.21264 (23), -0.20849 (23), -0.20259 (23), -0.18537 (23), -0.18348 (23), -0.17714 (23), -0.17479 (23), -0.17197 (23), -0.16028 (23), -0.15363 (23), -0.15090 (23), -0.15026 (23), -0.14263 (23), -0.13545 (23), -0.13169 (23), -0.13135 (23), -0.13076 (23), -0.12943 (23), -0.12941 (23), 
Length of domains: 230
Time: pickout 0.0082    decision 0.0312    set_bounds 0.0274    solve 0.1721    add 0.0022    
Accumulated time: pickout 0.1168    decision 0.9427    set_bounds 0.5120    solve 2.5264    add 0.5289    
Current (lb-rhs): -0.22114340960979462
3404 domains visited
Cumulative time: 6.241198301315308

BaB round 14
batch: 230
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-8, 545] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-8, 1875] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22648650407791138
10 lb beta sum: 1.0290182828903198, worst -0.21286365389823914
Time: prepare 0.0096    bound 0.1460    transfer 0.0013    finalize 0.0027    func 0.1625    
Accumulated time: func 2.7504    prepare 0.2283    bound 2.3973    transfer 0.0281    finalize 0.0529    
all_split False
======================Cut inference begins======================
max lb tensor(0.41398495) min lb tensor(-0.21264374)
Number of Verified Splits: 381 of 460
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 26
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.07655167579650879 
BICCOS Cumulative time: 1.5614397525787354
Preprocessing time: 0.013515949249267578 Inference time: 0.05803990364074707 Add cuts time: 0.0043487548828125 Cut analysis time: 0.0006470680236816406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21264 (24), -0.20527 (24), -0.16604 (24), -0.16342 (24), -0.15946 (24), -0.15899 (24), -0.14475 (24), -0.13801 (24), -0.12061 (24), -0.12032 (24), -0.12024 (24), -0.11662 (24), -0.11353 (24), -0.11219 (24), -0.11166 (24), -0.10747 (24), -0.09567 (24), -0.09249 (24), -0.09175 (24), -0.08949 (24), 
Length of domains: 79
Time: pickout 0.0045    decision 0.0224    set_bounds 0.0205    solve 0.1632    add 0.0019    
Accumulated time: pickout 0.1213    decision 0.9651    set_bounds 0.5324    solve 2.6896    add 0.5308    
Current (lb-rhs): -0.21264374256134033
3483 domains visited
Cumulative time: 6.532621145248413

BaB round 15
batch: 79
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 75] [/input-12, 90] [/input-12, 90] [/input-12, 75] [/input-8, 1875] [/input-12, 75] [/input-8, 545] [/input-12, 75] [/input-12, 75] [/input-12, 90] 
split level 1: [/input-8, 1582] [/input-8, 1875] [/input-8, 1582] [/input-8, 1582] [/input-8, 1582] [/input-8, 1582] [/input-8, 1582] [/input-8, 545] [/input-8, 1582] [/input-8, 1582] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20033907890319824
10 lb beta sum: 1.1634140014648438, worst -0.1789644956588745
Time: prepare 0.0071    bound 0.1417    transfer 0.0007    finalize 0.0024    func 0.1539    
Accumulated time: func 2.9043    prepare 0.2356    bound 2.5390    transfer 0.0287    finalize 0.0553    
all_split False
======================Cut inference begins======================
max lb tensor(0.43392849) min lb tensor(-0.17888796)
Number of Verified Splits: 261 of 316
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 27
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.054331302642822266 
BICCOS Cumulative time: 1.6157710552215576
Preprocessing time: 0.009887456893920898 Inference time: 0.041330814361572266 Add cuts time: 0.0024263858795166016 Cut analysis time: 0.0006866455078125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17889 (26), -0.13434 (26), -0.12291 (26), -0.11731 (26), -0.11148 (26), -0.10498 (26), -0.10007 (26), -0.08718 (26), -0.08694 (26), -0.08480 (26), -0.07833 (26), -0.07715 (26), -0.07349 (26), -0.06679 (26), -0.06647 (26), -0.06555 (26), -0.05602 (26), -0.05545 (26), -0.04872 (26), -0.04845 (26), 
Length of domains: 55
Time: pickout 0.0024    decision 0.0161    set_bounds 0.0209    solve 0.1539    add 0.0017    
Accumulated time: pickout 0.1237    decision 0.9812    set_bounds 0.5534    solve 2.8435    add 0.5324    
Current (lb-rhs): -0.1788879632949829
3538 domains visited
Cumulative time: 6.783475399017334

BaB round 16
batch: 55
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1582] [/input-12, 45] [/input-8, 1582] [/input-12, 90] [/input-12, 90] [/input-8, 1885] [/input-12, 75] [/input-8, 1582] [/input-8, 1885] [/input-8, 1582] 
split level 1: [/input-8, 1581] [/input-8, 731] [/input-8, 1581] [/input-8, 1885] [/input-8, 1581] [/input-8, 723] [/input-8, 1885] [/input-8, 1581] [/input-8, 723] [/input-8, 1581] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17534184455871582
10 lb beta sum: 0.9045937061309814, worst -0.15354210138320923
Time: prepare 0.0045    bound 0.1406    transfer 0.0015    finalize 0.0014    func 0.1494    
Accumulated time: func 3.0537    prepare 0.2403    bound 2.6795    transfer 0.0302    finalize 0.0567    
all_split False
======================Cut inference begins======================
max lb tensor(0.58566618) min lb tensor(-0.15332982)
Number of Verified Splits: 139 of 220
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 27
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.03305363655090332 
BICCOS Cumulative time: 1.648824691772461
Preprocessing time: 0.006617307662963867 Inference time: 0.023725509643554688 Add cuts time: 0.0020599365234375 Cut analysis time: 0.0006508827209472656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15333 (28), -0.14171 (28), -0.11289 (28), -0.10329 (28), -0.09906 (28), -0.09628 (28), -0.09509 (28), -0.08688 (28), -0.08639 (28), -0.08452 (28), -0.07849 (28), -0.07689 (28), -0.07493 (28), -0.07447 (28), -0.07307 (28), -0.07291 (28), -0.07247 (28), -0.07002 (28), -0.06656 (28), -0.06636 (28), 
Length of domains: 81
Time: pickout 0.0019    decision 0.0141    set_bounds 0.0133    solve 0.1495    add 0.0021    
Accumulated time: pickout 0.1256    decision 0.9953    set_bounds 0.5667    solve 2.9930    add 0.5345    
Current (lb-rhs): -0.15332981944084167
3619 domains visited
Cumulative time: 6.998317003250122

BaB round 17
batch: 81
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 45] [/input-12, 25] [/input-12, 45] [/input-8, 1885] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 90] [/input-12, 45] [/input-12, 45] 
split level 1: [/input-8, 1885] [/input-8, 1978] [/input-8, 1885] [/input-8, 723] [/input-8, 1885] [/input-8, 1885] [/input-8, 545] [/input-8, 1885] [/input-8, 545] [/input-8, 1929] 
cut re-enabled after branching node selection
0 lb beta sum: 1.091086506843567, worst -0.1374703049659729
10 lb beta sum: 1.091086506843567, worst -0.1387055516242981
Time: prepare 0.0148    bound 0.1425    transfer 0.0018    finalize 0.0023    func 0.1636    
Accumulated time: func 3.2173    prepare 0.2554    bound 2.8220    transfer 0.0320    finalize 0.0590    
all_split False
======================Cut inference begins======================
max lb tensor(0.30201238) min lb tensor(-0.13267359)
Number of Verified Splits: 118 of 324
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.034928083419799805 
BICCOS Cumulative time: 1.6837527751922607
Preprocessing time: 0.009736061096191406 Inference time: 0.023413896560668945 Add cuts time: 0.0015435218811035156 Cut analysis time: 0.0002346038818359375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13267 (30), -0.12216 (30), -0.11319 (30), -0.11289 (30), -0.11289 (30), -0.11221 (30), -0.10329 (30), -0.10329 (30), -0.09628 (30), -0.09628 (30), -0.09509 (30), -0.09509 (30), -0.08703 (30), -0.08639 (30), -0.08639 (30), -0.07493 (30), -0.07493 (30), -0.07480 (30), -0.07447 (30), -0.07447 (30), 
Length of domains: 206
Time: pickout 0.0022    decision 0.0161    set_bounds 0.0222    solve 0.1637    add 0.0039    
Accumulated time: pickout 0.1278    decision 1.0114    set_bounds 0.5889    solve 3.1567    add 0.5384    
Current (lb-rhs): -0.13267359137535095
3825 domains visited
Cumulative time: 7.242321968078613

BaB round 18
batch: 206
splitting decisions: 
split level 0: [/input-12, 25] [/input-8, 546] [/input-12, 45] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-8, 723] [/input-12, 25] [/input-12, 25] [/input-8, 723] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14318382740020752
10 lb beta sum: 0.20251744985580444, worst -0.00791969895362854

all verified at 18th iter
Time: prepare 0.0093    bound 0.1149    transfer 0.0031    finalize 0.0026    func 0.1326    
Accumulated time: func 3.3499    prepare 0.2649    bound 2.9370    transfer 0.0351    finalize 0.0616    
all_split False
======================Cut inference begins======================
max lb tensor(0.48884541) min lb tensor(0.00098450)
Number of Verified Splits: 412 of 412
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.012336969375610352 
BICCOS Cumulative time: 1.696089744567871
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0043    decision 0.0266    set_bounds 0.0180    solve 0.1327    add 0.0006    
Accumulated time: pickout 0.1321    decision 1.0380    set_bounds 0.6069    solve 3.2894    add 0.5389    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3825 domains visited
Cumulative time: 7.438664197921753


Properties batch 3, size 1
Remaining timeout: 190.5883753299713
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 190.5877366065979
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 190.58771014213562
Verifying property 5 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.36337066]], device='cuda:0') need to verify.
Model prediction is: tensor([-27.67956924, -31.83858299, -23.70592499, -26.11718369, -22.09289742,
        -26.40730476, -25.20326805, -26.95974350, -28.80583572, -31.36259270],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.36337066]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 987
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 380
Node /15 input 0: size torch.Size([100]) unstable 55
-----------------
# of unstable neurons: 1422
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.000110626220703125
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3633606433868408
10 lb beta sum: 0.0, worst -0.36337924003601074
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0567    transfer 0.0001    finalize 0.0002    func 0.0572    
Accumulated time: func 0.0572    prepare 0.0002    bound 0.0567    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 37] 
split level 1: [/input-12, 76] 
split level 2: [/input-12, 44] 
split level 3: [/input-12, 87] 
split level 4: [/input-12, 20] 
split level 5: [/input-12, 51] 
split level 6: [/input-12, 90] 
split level 7: [/input-12, 9] 
split level 8: [/input-12, 6] 
split level 9: [/input-12, 24] 
split level 10: [/input-12, 65] 
split level 11: [/input-12, 70] 
split level 12: [/input-12, 81] 
split level 13: [/input-12, 45] 
split level 14: [/input-12, 75] 
split level 15: [/input-12, 25] 
split level 16: [/input-12, 53] 
split level 17: [/input-12, 83] 
split level 18: [/input-12, 97] 
split level 19: [/input-12, 66] 
split level 20: [/input-12, 28] 
split level 21: [/input-12, 32] 
split level 22: [/input-8, 332] 
split level 23: [/input-8, 555] 
split level 24: [/input-8, 1930] 
split level 25: [/input-8, 1929] 
split level 26: [/input-8, 548] 
split level 27: [/input-12, 57] 
split level 28: [/input-8, 558] 
split level 29: [/input-8, 1550] 
split level 30: [/input-8, 1965] 
split level 31: [/input-12, 7] 
split level 32: [/input-8, 1945] 
split level 33: [/input-8, 1873] 
split level 34: [/input-8, 1937] 
split level 35: [/input-8, 554] 
split level 36: [/input-12, 10] 
split level 37: [/input-8, 1562] 
split level 38: [/input-8, 1884] 
split level 39: [/input-8, 537] 
split level 40: [/input-8, 666] 
split level 41: [/input-8, 1558] 
split level 42: [/input-8, 364] 
split level 43: [/input-8, 1302] 
split level 44: [/input-8, 1581] 
split level 45: [/input-8, 546] 
split level 46: [/input-8, 1974] 
split level 47: [/input-8, 660] 
split level 48: [/input-8, 545] 
split level 49: [/input-8, 1557] 
split level 50: [/input-12, 74] 
split level 51: [/input-8, 748] 
split level 52: [/input-8, 498] 
split level 53: [/input-8, 1421] 
split level 54: [/input, 627] 
split level 55: [/input-8, 330] 
split level 56: [/input-8, 1035] 
split level 57: [/input-8, 723] 
split level 58: [/input-8, 745] 
split level 59: [/input-8, 1043] 
split level 60: [/input-8, 1971] 
split level 61: [/input-8, 731] 
split level 62: [/input-8, 1837] 
split level 63: [/input-8, 1936] 
split level 64: [/input-8, 741] 
split level 65: [/input, 909] 
split level 66: [/input-8, 1964] 
split level 67: [/input-8, 1838] 
split level 68: [/input-8, 1938] 
split level 69: [/input, 2659] 
split level 70: [/input-8, 1981] 
split level 71: [/input-8, 1892] 
split level 72: [/input-8, 1865] 
split level 73: [/input-8, 1052] 
split level 74: [/input-8, 1449] 
split level 75: [/input-8, 755] 
split level 76: [/input-8, 1582] 
split level 77: [/input-8, 1876] 
split level 78: [/input-8, 1845] 
split level 79: [/input-8, 362] 
split level 80: [/input-8, 329] 
split level 81: [/input-8, 740] 
split level 82: [/input, 867] 
split level 83: [/input-8, 713] 
split level 84: [/input-8, 1105] 
split level 85: [/input-8, 538] 
split level 86: [/input-8, 1867] 
split level 87: [/input-8, 1860] 
split level 88: [/input-8, 650] 
split level 89: [/input-8, 1053] 
split level 90: [/input, 2658] 
split level 91: [/input-8, 562] 
split level 92: [/input-8, 1885] 
split level 93: [/input-8, 1868] 
split level 94: [/input-8, 657] 
split level 95: [/input-8, 707] 
split level 96: [/input-8, 714] 
split level 97: [/input-8, 749] 
split level 98: [/input-8, 1448] 
split level 99: [/input-8, 258] 
split level 100: [/input-8, 1859] 
split level 101: [/input-8, 2034] 
split level 102: [/input, 3308] 
split level 103: [/input, 3239] 
split level 104: [/input-8, 721] 
split level 105: [/input, 2435] 
split level 106: [/input, 2452] 
split level 107: [/input-8, 1151] 
split level 108: [/input, 925] 
split level 109: [/input-8, 552] 
split level 110: [/input-8, 523] 
split level 111: [/input-8, 2033] 
split level 112: [/input-8, 750] 
split level 113: [/input-12, 11] 
split level 114: [/input-8, 233] 
split level 115: [/input, 1190] 
split level 116: [/input-8, 271] 
split level 117: [/input, 2389] 
split level 118: [/input-8, 84] 
split level 119: [/input, 114] 
split level 120: [/input-8, 763] 
split level 121: [/input, 611] 
split level 122: [/input, 2444] 
split level 123: [/input, 2442] 
split level 124: [/input-8, 325] 
split level 125: [/input-8, 700] 
split level 126: [/input-8, 1875] 
split level 127: [/input-8, 1967] 
split level 128: [/input, 2692] 
split level 129: [/input, 2436] 
split level 130: [/input, 99] 
split level 131: [/input-8, 684] 
split level 132: [/input, 1957] 
split level 133: [/input, 963] 
split level 134: [/input-8, 733] 
split level 135: [/input-8, 272] 
split level 136: [/input, 1096] 
split level 137: [/input, 2459] 
split level 138: [/input-8, 1906] 
split level 139: [/input, 148] 
split level 140: [/input, 2469] 
split level 141: [/input, 1080] 
split level 142: [/input-8, 676] 
split level 143: [/input, 610] 
split level 144: [/input, 893] 
split level 145: [/input-8, 155] 
split level 146: [/input, 3287] 
split level 147: [/input, 2476] 
split level 148: [/input-8, 319] 
split level 149: [/input-8, 509] 
split level 150: [/input-8, 1843] 
split level 151: [/input, 2246] 
split level 152: [/input, 2730] 
split level 153: [/input, 2441] 
split level 154: [/input, 851] 
split level 155: [/input-8, 754] 
split level 156: [/input, 2195] 
split level 157: [/input, 2471] 
split level 158: [/input, 2434] 
split level 159: [/input-8, 708] 
split level 160: [/input-8, 1846] 
split level 161: [/input, 155] 
split level 162: [/input, 3274] 
split level 163: [/input-8, 1901] 
split level 164: [/input, 1160] 
split level 165: [/input, 2475] 
split level 166: [/input-8, 1054] 
split level 167: [/input, 137] 
split level 168: [/input-8, 1015] 
split level 169: [/input, 2642] 
split level 170: [/input, 1159] 
split level 171: [/input-8, 765] 
split level 172: [/input, 964] 
split level 173: [/input, 3947] 
split level 174: [/input, 1174] 
split level 175: [/input-8, 1952] 
split level 176: [/input, 3305] 
split level 177: [/input, 594] 
split level 178: [/input-8, 1119] 
split level 179: [/input, 874] 
split level 180: [/input, 83] 
split level 181: [/input, 2682] 
split level 182: [/input, 2501] 
split level 183: [/input, 2755] 
split level 184: [/input, 169] 
split level 185: [/input-8, 715] 
split level 186: [/input, 1176] 
split level 187: [/input-8, 524] 
split level 188: [/input, 947] 
split level 189: [/input-8, 1915] 
split level 190: [/input-8, 698] 
split level 191: [/input, 1207] 
split level 192: [/input, 138] 
split level 193: [/input-8, 1792] 
split level 194: [/input, 84] 
split level 195: [/input, 3273] 
split level 196: [/input-8, 709] 
split level 197: [/input, 2427] 
split level 198: [/input, 98] 
split level 199: [/input, 3897] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3629417419433594
10 lb beta sum: 0.0, worst -0.3629598617553711
Time: prepare 0.0115    bound 0.1038    transfer 0.0015    finalize 0.0031    func 0.1225    
Accumulated time: func 0.1797    prepare 0.0216    bound 0.1605    transfer 0.0016    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(0.24749482) min lb tensor(-0.36294007)
Number of Verified Splits: 6 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.010938167572021484 
BICCOS Cumulative time: 0.010938167572021484
Preprocessing time: 0.010288476943969727 Inference time: 0.00027298927307128906 Add cuts time: 0.00010418891906738281 Cut analysis time: 0.00027251243591308594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33190 (1), -0.33117 (1), -0.33095 (1), -0.32926 (1), -0.32915 (1), -0.32911 (1), -0.32874 (1), -0.32799 (1), -0.32665 (1), -0.32652 (1), -0.32556 (1), -0.32406 (1), -0.32349 (1), -0.32256 (1), -0.32041 (1), -0.31747 (1), -0.31740 (1), -0.31527 (1), -0.31360 (1), -0.31345 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5431    set_bounds 0.0091    solve 0.1226    add 0.1926    
Accumulated time: pickout 0.0004    decision 0.5431    set_bounds 0.0091    solve 0.1226    add 0.1926    
Current (lb-rhs): -0.331900954246521
50 domains visited
Cumulative time: 0.946213960647583

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] 
split level 1: [/input-12, 44] [/input-12, 44] [/input-12, 87] [/input-12, 44] [/input-12, 87] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] 
split level 2: [/input-12, 87] [/input-12, 87] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] 
split level 3: [/input-12, 51] [/input-12, 51] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 6] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27621614933013916
10 lb beta sum: 0.5989490747451782, worst -0.13489970564842224
Time: prepare 0.0064    bound 0.1233    transfer 0.0008    finalize 0.0024    func 0.1354    
Accumulated time: func 0.3152    prepare 0.0282    bound 0.2838    transfer 0.0024    finalize 0.0057    
all_split False
======================Cut inference begins======================
max lb tensor(0.56781077) min lb tensor(-0.13464439)
Number of Verified Splits: 368 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03350973129272461 
BICCOS Cumulative time: 0.044447898864746094
Preprocessing time: 0.011754035949707031 Inference time: 0.015210151672363281 Add cuts time: 0.006353139877319336 Cut analysis time: 0.00019240379333496094
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0203    set_bounds 0.0141    solve 0.1355    add 0.0152    
Accumulated time: pickout 0.0015    decision 0.5633    set_bounds 0.0232    solve 0.2581    add 0.2079    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 37] 
split level 1: [/input-12, 76] 
split level 2: [/input-12, 44] 
split level 3: [/input-12, 87] 
split level 4: [/input-12, 51] 
split level 5: [/input-12, 9] 
split level 6: [/input-12, 6] 
split level 7: [/input-12, 70] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.8767301440238953

all verified at 0th iter
Time: prepare 0.0036    bound 0.0043    transfer 0.0005    finalize 0.0015    func 0.0116    
Accumulated time: func 0.3267    prepare 0.0323    bound 0.2881    transfer 0.0029    finalize 0.0071    
all_split False
======================Cut inference begins======================
max lb tensor(2.16274071) min lb tensor(0.87673014)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006486415863037109 
BICCOS Cumulative time: 0.0509343147277832
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0228    set_bounds 0.0168    solve 0.0116    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.5862    set_bounds 0.0400    solve 0.2698    add 0.2079    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.2276740074157715


Properties batch 6, size 1
Remaining timeout: 189.14077186584473
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 189.1406967639923
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 189.1401515007019
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 10.8599 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 161, vnnlib ID: 161 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-37.62417984, -39.89875412, -33.03932190, -32.79184341, -34.24950027,
         -29.84721184, -35.69597244, -34.26110840, -39.29799271, -38.27119827]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [606]; unstable size 606; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 282, 1, 606] with unstable size 281 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 35, 1, 606] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 606] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [281]; unstable size 281; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 35, 1, 281] with unstable size 34 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 281] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [34]; unstable size 34; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 34] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.85051775, 7.18766403, 0.25595045, 1.62082386, 1.86580896, 2.76406574,
         1.79746902, 6.26467514, 5.54630136]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0557 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 162, vnnlib ID: 162 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.98514938, -35.03454208, -25.57122993, -29.28861618, -27.47637367,
         -29.77011108, -26.99920273, -31.43451309, -30.73294640, -34.96639252]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1028]; unstable size 1028; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 287, 1, 1028] with unstable size 286 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 40, 1, 1028] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1028] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [286]; unstable size 286; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 40, 1, 286] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 286] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [39]; unstable size 39; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.80222607,  4.78285503,  0.83124781, -0.68609798,  0.99806929,
         -1.65057206,  3.19828248,  1.55984402,  5.49832058]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.98514938, -35.03454208, -25.57122993, -29.28861618, -27.47637367,
         -29.77011108, -26.99920273, -31.43451309, -30.73294640, -34.96639252]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.33it/s]100%|██████████| 1/1 [00:00<00:00,  8.32it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.40156364, -35.33096313, -26.27838135, -29.47885132, -27.65226555,
          -29.95708847, -26.83075714, -31.83309174, -31.00418854, -35.23109436],
         [-29.40156364, -35.33096313, -26.27838135, -29.47885132, -27.65226555,
          -29.95708847, -26.83075714, -31.83309174, -31.00418854, -35.23109436]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.37388420, 0.55237579]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1232 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 16.54782485961914
alpha/beta optimization time: 1.2994520664215088
initial alpha-crown bounds: tensor([[ 0.89406681,  4.96312332,  0.95899105, -0.56654787,  1.14118743,
         -1.54403114,  3.35564828,  1.68900537,  5.65638208]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -1.5440311431884766
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50622415542603
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.50618386268616
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.50614881515503
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.50612473487854
Verifying property 3 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.56654787]], device='cuda:0') need to verify.
Model prediction is: tensor([-28.98514938, -35.03454208, -25.57122993, -29.28861618, -27.47637367,
        -29.77011108, -26.99920273, -31.43451309, -30.73294640, -34.96639252],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.56654787]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1028
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 284
Node /15 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 1350
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011801719665527344
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5665453672409058
10 lb beta sum: 0.0, worst -0.566551148891449
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0558    transfer 0.0001    finalize 0.0001    func 0.0562    
Accumulated time: func 0.0562    prepare 0.0002    bound 0.0558    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 88] 
split level 2: [/input-12, 71] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 29] 
split level 5: [/input-12, 54] 
split level 6: [/input-12, 53] 
split level 7: [/input-12, 80] 
split level 8: [/input-8, 1507] 
split level 9: [/input-8, 1506] 
split level 10: [/input-12, 8] 
split level 11: [/input-12, 81] 
split level 12: [/input-12, 93] 
split level 13: [/input-12, 82] 
split level 14: [/input-8, 420] 
split level 15: [/input-12, 94] 
split level 16: [/input-8, 1499] 
split level 17: [/input-12, 32] 
split level 18: [/input-8, 1513] 
split level 19: [/input-8, 1707] 
split level 20: [/input-8, 2011] 
split level 21: [/input, 3991] 
split level 22: [/input, 648] 
split level 23: [/input-8, 1708] 
split level 24: [/input-8, 1491] 
split level 25: [/input-8, 229] 
split level 26: [/input-8, 419] 
split level 27: [/input, 4008] 
split level 28: [/input-8, 1524] 
split level 29: [/input-8, 1492] 
split level 30: [/input-8, 1709] 
split level 31: [/input-8, 1514] 
split level 32: [/input-8, 141] 
split level 33: [/input-8, 2026] 
split level 34: [/input-8, 1460] 
split level 35: [/input-8, 1377] 
split level 36: [/input-12, 60] 
split level 37: [/input-8, 2012] 
split level 38: [/input, 678] 
split level 39: [/input-8, 179] 
split level 40: [/input-8, 1370] 
split level 41: [/input, 681] 
split level 42: [/input-8, 2004] 
split level 43: [/input-8, 1444] 
split level 44: [/input-8, 1443] 
split level 45: [/input-8, 849] 
split level 46: [/input-8, 1652] 
split level 47: [/input-8, 1644] 
split level 48: [/input-8, 1390] 
split level 49: [/input, 677] 
split level 50: [/input-8, 413] 
split level 51: [/input, 650] 
split level 52: [/input-8, 1451] 
split level 53: [/input-8, 1130] 
split level 54: [/input, 693] 
split level 55: [/input, 682] 
split level 56: [/input, 901] 
split level 57: [/input-8, 178] 
split level 58: [/input-8, 345] 
split level 59: [/input, 697] 
split level 60: [/input-8, 1383] 
split level 61: [/input-8, 182] 
split level 62: [/input, 649] 
split level 63: [/input, 709] 
split level 64: [/input, 569] 
split level 65: [/input, 724] 
split level 66: [/input-8, 1523] 
split level 67: [/input-8, 2013] 
split level 68: [/input-8, 346] 
split level 69: [/input, 708] 
split level 70: [/input-8, 1897] 
split level 71: [/input, 3960] 
split level 72: [/input-8, 1414] 
split level 73: [/input, 666] 
split level 74: [/input-8, 1701] 
split level 75: [/input, 714] 
split level 76: [/input, 3897] 
split level 77: [/input-12, 35] 
split level 78: [/input, 585] 
split level 79: [/input-8, 1366] 
split level 80: [/input, 684] 
split level 81: [/input-8, 337] 
split level 82: [/input, 1942] 
split level 83: [/input, 710] 
split level 84: [/input, 2762] 
split level 85: [/input-8, 685] 
split level 86: [/input, 3964] 
split level 87: [/input, 615] 
split level 88: [/input-8, 1485] 
split level 89: [/input, 616] 
split level 90: [/input, 4052] 
split level 91: [/input-8, 1149] 
split level 92: [/input, 4068] 
split level 93: [/input-8, 1116] 
split level 94: [/input, 4012] 
split level 95: [/input-8, 338] 
split level 96: [/input, 618] 
split level 97: [/input-8, 426] 
split level 98: [/input, 584] 
split level 99: [/input, 583] 
split level 100: [/input-8, 1421] 
split level 101: [/input-8, 434] 
split level 102: [/input-8, 1500] 
split level 103: [/input, 554] 
split level 104: [/input, 600] 
split level 105: [/input, 841] 
split level 106: [/input, 601] 
split level 107: [/input, 2604] 
split level 108: [/input-8, 1131] 
split level 109: [/input, 696] 
split level 110: [/input, 711] 
split level 111: [/input-8, 1772] 
split level 112: [/input, 567] 
split level 113: [/input, 602] 
split level 114: [/input-8, 1230] 
split level 115: [/input, 809] 
split level 116: [/input, 568] 
split level 117: [/input-8, 149] 
split level 118: [/input, 920] 
split level 119: [/input, 136] 
split level 120: [/input-8, 1517] 
split level 121: [/input, 1930] 
split level 122: [/input, 631] 
split level 123: [/input, 4019] 
split level 124: [/input, 3959] 
split level 125: [/input, 727] 
split level 126: [/input, 4067] 
split level 127: [/input-8, 121] 
split level 128: [/input, 3865] 
split level 129: [/input, 726] 
split level 130: [/input-8, 1254] 
split level 131: [/input, 931] 
split level 132: [/input-12, 49] 
split level 133: [/input, 793] 
split level 134: [/input, 3929] 
split level 135: [/input-8, 1950] 
split level 136: [/input-8, 422] 
split level 137: [/input-8, 642] 
split level 138: [/input, 348] 
split level 139: [/input, 838] 
split level 140: [/input-8, 737] 
split level 141: [/input, 2417] 
split level 142: [/input, 552] 
split level 143: [/input, 2386] 
split level 144: [/input-8, 1125] 
split level 145: [/input, 1148] 
split level 146: [/input-8, 689] 
split level 147: [/input, 565] 
split level 148: [/input, 70] 
split level 149: [/input, 2358] 
split level 150: [/input, 2603] 
split level 151: [/input, 3966] 
split level 152: [/input-8, 1355] 
split level 153: [/input-8, 1151] 
split level 154: [/input, 69] 
split level 155: [/input, 82] 
split level 156: [/input, 98] 
split level 157: [/input, 2374] 
split level 158: [/input, 2421] 
split level 159: [/input, 581] 
split level 160: [/input, 887] 
split level 161: [/input, 52] 
split level 162: [/input-8, 1363] 
split level 163: [/input, 652] 
split level 164: [/input, 535] 
split level 165: [/input, 839] 
split level 166: [/input, 2265] 
split level 167: [/input, 536] 
split level 168: [/input, 573] 
split level 169: [/input, 823] 
split level 170: [/input, 985] 
split level 171: [/input, 533] 
split level 172: [/input, 2388] 
split level 173: [/input, 2588] 
split level 174: [/input, 138] 
split level 175: [/input, 564] 
split level 176: [/input, 2404] 
split level 177: [/input, 50] 
split level 178: [/input, 51] 
split level 179: [/input, 2401] 
split level 180: [/input, 1128] 
split level 181: [/input, 2372] 
split level 182: [/input, 822] 
split level 183: [/input, 332] 
split level 184: [/input, 1077] 
split level 185: [/input, 2341] 
split level 186: [/input, 2356] 
split level 187: [/input, 1181] 
split level 188: [/input-8, 148] 
split level 189: [/input, 2370] 
split level 190: [/input, 2353] 
split level 191: [/input, 99] 
split level 192: [/input, 2354] 
split level 193: [/input, 2693] 
split level 194: [/input, 104] 
split level 195: [/input, 2585] 
split level 196: [/input, 67] 
split level 197: [/input, 3183] 
split level 198: [/input, 2387] 
split level 199: [/input, 611] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5664395689964294
10 lb beta sum: 0.0, worst -0.566430926322937
Time: prepare 0.0115    bound 0.1033    transfer 0.0014    finalize 0.0027    func 0.1216    
Accumulated time: func 0.1778    prepare 0.0218    bound 0.1591    transfer 0.0015    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(0.29088926) min lb tensor(-0.56642514)
Number of Verified Splits: 4 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.011251211166381836 
BICCOS Cumulative time: 0.011251211166381836
Preprocessing time: 0.010297298431396484 Inference time: 0.00020456314086914062 Add cuts time: 0.0001068115234375 Cut analysis time: 0.0006425380706787109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.54180 (1), -0.54122 (1), -0.54108 (1), -0.54039 (1), -0.53945 (1), -0.53863 (1), -0.53847 (1), -0.53821 (1), -0.53783 (1), -0.53639 (1), -0.53608 (1), -0.53586 (1), -0.53584 (1), -0.53569 (1), -0.53564 (1), -0.53523 (1), -0.53494 (1), -0.53415 (1), -0.53291 (1), -0.53276 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5427    set_bounds 0.0090    solve 0.1217    add 0.2211    
Accumulated time: pickout 0.0004    decision 0.5427    set_bounds 0.0090    solve 0.1217    add 0.2211    
Current (lb-rhs): -0.541796088218689
50 domains visited
Cumulative time: 0.9849967956542969

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 71] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
split level 2: [/input-12, 71] [/input-12, 71] [/input-12, 78] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 78] [/input-12, 71] [/input-12, 71] [/input-12, 78] 
split level 3: [/input-12, 78] [/input-12, 78] [/input-12, 80] [/input-12, 78] [/input-12, 80] [/input-12, 78] [/input-12, 80] [/input-12, 78] [/input-12, 80] [/input-12, 80] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.508297324180603
10 lb beta sum: 0.8497604727745056, worst -0.37828099727630615
Time: prepare 0.0072    bound 0.1273    transfer 0.0008    finalize 0.0025    func 0.1405    
Accumulated time: func 0.3183    prepare 0.0293    bound 0.2864    transfer 0.0023    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.42493922) min lb tensor(-0.37810934)
Number of Verified Splits: 123 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.019304752349853516 
BICCOS Cumulative time: 0.03055596351623535
Preprocessing time: 0.011914968490600586 Inference time: 0.005347728729248047 Add cuts time: 0.0016994476318359375 Cut analysis time: 0.0003426074981689453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15179 (2), -0.15137 (2), -0.15121 (2), -0.15098 (2), -0.15042 (2), -0.14983 (2), -0.14979 (2), -0.14941 (2), -0.14849 (2), -0.14574 (2), -0.14554 (2), -0.14479 (2), -0.14467 (2), -0.14436 (2), -0.14389 (2), -0.14388 (2), -0.14135 (2), -0.14114 (2), -0.14059 (2), -0.13997 (2), 
Length of domains: 50
Time: pickout 0.0082    decision 0.0224    set_bounds 0.0140    solve 0.1406    add 0.1980    
Accumulated time: pickout 0.0086    decision 0.5651    set_bounds 0.0230    solve 0.2622    add 0.4190    
Current (lb-rhs): -0.15179014205932617
100 domains visited
Cumulative time: 1.3944637775421143

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
split level 2: [/input-12, 71] [/input-12, 78] [/input-12, 71] [/input-12, 53] [/input-12, 71] [/input-12, 53] [/input-12, 78] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
split level 3: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.30936193466186523
10 lb beta sum: 1.3752355575561523, worst -0.3917062282562256
Time: prepare 0.0072    bound 0.1311    transfer 0.0016    finalize 0.0025    func 0.1450    
Accumulated time: func 0.4633    prepare 0.0368    bound 0.4176    transfer 0.0039    finalize 0.0078    
all_split False
======================Cut inference begins======================
max lb tensor(0.54157323) min lb tensor(-0.12078023)
Number of Verified Splits: 373 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 12
#cuts >= 20: 0
BICCOS time: 0.036477088928222656 
BICCOS Cumulative time: 0.06703305244445801
Preprocessing time: 0.012269735336303711 Inference time: 0.015878915786743164 Add cuts time: 0.007901668548583984 Cut analysis time: 0.0004267692565917969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11751 (3), -0.11745 (3), -0.11727 (3), -0.11724 (3), -0.08661 (3), -0.08648 (3), -0.07809 (3), -0.07805 (3), -0.01841 (3), -0.01830 (3), 
Length of domains: 10
Time: pickout 0.0078    decision 0.0204    set_bounds 0.0161    solve 0.1451    add 0.2101    
Accumulated time: pickout 0.0165    decision 0.5855    set_bounds 0.0391    solve 0.4073    add 0.6291    
Current (lb-rhs): -0.1175147294998169
110 domains visited
Cumulative time: 1.837611198425293

Shallow-BaB round 4
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 88] [/input-12, 88] 
split level 1: [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 2: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
split level 3: [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
split level 4: [/input-8, 1507] [/input-8, 1507] [/input-8, 1507] [/input-8, 1507] [/input-8, 1507] [/input-8, 1507] [/input-8, 1507] [/input-8, 1507] [/input-8, 1507] [/input-8, 1507] 
split level 5: [/input-8, 1506] [/input-8, 1506] [/input-8, 1506] [/input-8, 1506] [/input-8, 1506] [/input-8, 1506] [/input-8, 1506] [/input-8, 1506] [/input-8, 1506] [/input-8, 1506] 
split level 6: [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] 
split level 7: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 8: [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] 
split level 9: [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] 
split level 10: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-8, 1513] [/input-8, 1513] [/input-12, 32] [/input-12, 32] 
split level 11: [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1707] [/input-8, 1707] [/input-8, 1513] [/input-8, 1513] 
split level 12: [/input-8, 1707] [/input-8, 1707] [/input-8, 1707] [/input-8, 1707] [/input-8, 1707] [/input-8, 1707] [/input-12, 32] [/input-12, 32] [/input-8, 419] [/input-8, 419] 
split level 13: [/input-8, 419] [/input-8, 419] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 419] [/input-8, 419] [/input-8, 1707] [/input-8, 1707] 
split level 14: [/input-8, 1708] [/input-8, 1708] [/input-8, 419] [/input-8, 419] [/input-8, 419] [/input-8, 419] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] 
split level 15: [/input-8, 1524] [/input-8, 1524] [/input-8, 1491] [/input-8, 1491] [/input-8, 1524] [/input-8, 1524] [/input-8, 1524] [/input-8, 1524] [/input-8, 1491] [/input-8, 1491] 
split level 16: [/input-8, 1491] [/input-8, 1491] [/input-8, 1524] [/input-8, 1524] [/input-8, 1491] [/input-8, 1491] [/input-8, 1491] [/input-8, 1491] [/input-8, 1524] [/input-8, 1524] 
split level 17: [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] 
split level 18: [/input-8, 2012] [/input-8, 2012] [/input-8, 1443] [/input-8, 1443] [/input-8, 2012] [/input-8, 2012] [/input-8, 2012] [/input-8, 2012] [/input-8, 2012] [/input-8, 2012] 
split level 19: [/input-8, 1523] [/input-8, 1523] [/input-8, 2012] [/input-8, 2012] [/input-8, 1523] [/input-8, 1523] [/input-8, 1443] [/input-8, 1443] [/input-8, 1443] [/input-8, 1443] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.28572916984558105
10 lb beta sum: 2.0236034393310547, worst -0.06954032182693481
Time: prepare 0.0071    bound 0.1471    transfer 0.0008    finalize 0.0022    func 0.1598    
Accumulated time: func 0.6231    prepare 0.0450    bound 0.5647    transfer 0.0046    finalize 0.0100    
all_split False
======================Cut inference begins======================
max lb tensor(0.72528392) min lb tensor(-0.06922525)
Number of Verified Splits: 152 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 13
#cuts >= 20: 0
BICCOS time: 0.02298140525817871 
BICCOS Cumulative time: 0.09001445770263672
Preprocessing time: 0.011969327926635742 Inference time: 0.007929086685180664 Add cuts time: 0.002641916275024414 Cut analysis time: 0.0004410743713378906
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0652    set_bounds 0.0132    solve 0.1599    add 0.0254    
Accumulated time: pickout 0.0172    decision 0.6507    set_bounds 0.0522    solve 0.5672    add 0.6545    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
110 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 88] 
split level 2: [/input-12, 71] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 53] 
split level 5: [/input-12, 80] 
split level 6: [/input-12, 81] 
split level 7: [/input-12, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.014248251914978027

all verified at 1th iter
Time: prepare 0.0036    bound 0.0163    transfer 0.0010    finalize 0.0013    func 0.0238    
Accumulated time: func 0.6469    prepare 0.0490    bound 0.5809    transfer 0.0056    finalize 0.0113    
all_split False
======================Cut inference begins======================
max lb tensor(1.10872078) min lb tensor(0.01406342)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 13.
#cuts 1-3: 13
#cuts >= 20: 0
BICCOS time: 0.006507158279418945 
BICCOS Cumulative time: 0.09652161598205566
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0238    set_bounds 0.0167    solve 0.0239    add 0.0001    
Accumulated time: pickout 0.0177    decision 0.6745    set_bounds 0.0689    solve 0.5910    add 0.6546    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
110 domains visited
Cumulative time: 2.203986167907715


Properties batch 4, size 1
Remaining timeout: 196.0800244808197
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 196.07957458496094
Verifying property 5 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.54403114]], device='cuda:0') need to verify.
Model prediction is: tensor([-28.98514938, -35.03454208, -25.57122993, -29.28861618, -27.47637367,
        -29.77011108, -26.99920273, -31.43451309, -30.73294640, -34.96639252],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.54403114]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1028
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 284
Node /15 input 0: size torch.Size([100]) unstable 38
-----------------
# of unstable neurons: 1350
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010633468627929688
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.5440285205841064
10 lb beta sum: 0.0, worst -1.5440409183502197
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0575    transfer 0.0001    finalize 0.0001    func 0.0580    
Accumulated time: func 0.0580    prepare 0.0002    bound 0.0575    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 44] 
split level 1: [/input-12, 20] 
split level 2: [/input-12, 37] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 6] 
split level 5: [/input-12, 80] 
split level 6: [/input-12, 53] 
split level 7: [/input-12, 81] 
split level 8: [/input-12, 9] 
split level 9: [/input-12, 90] 
split level 10: [/input-12, 78] 
split level 11: [/input-12, 54] 
split level 12: [/input-12, 32] 
split level 13: [/input-12, 75] 
split level 14: [/input-12, 93] 
split level 15: [/input-12, 25] 
split level 16: [/input-8, 1506] 
split level 17: [/input-8, 1507] 
split level 18: [/input-8, 1708] 
split level 19: [/input-8, 1709] 
split level 20: [/input-12, 29] 
split level 21: [/input-8, 1707] 
split level 22: [/input-12, 88] 
split level 23: [/input-8, 1966] 
split level 24: [/input-8, 1513] 
split level 25: [/input-8, 1444] 
split level 26: [/input-8, 2011] 
split level 27: [/input-8, 1701] 
split level 28: [/input-8, 2026] 
split level 29: [/input-8, 1974] 
split level 30: [/input-8, 1897] 
split level 31: [/input-8, 2004] 
split level 32: [/input-8, 2012] 
split level 33: [/input-8, 1443] 
split level 34: [/input-8, 1451] 
split level 35: [/input, 678] 
split level 36: [/input, 931] 
split level 37: [/input-8, 178] 
split level 38: [/input-8, 1514] 
split level 39: [/input, 901] 
split level 40: [/input-8, 179] 
split level 41: [/input, 677] 
split level 42: [/input, 2005] 
split level 43: [/input, 709] 
split level 44: [/input-8, 948] 
split level 45: [/input, 693] 
split level 46: [/input, 724] 
split level 47: [/input-8, 1905] 
split level 48: [/input, 4052] 
split level 49: [/input-8, 533] 
split level 50: [/input-8, 1414] 
split level 51: [/input-8, 663] 
split level 52: [/input-8, 2013] 
split level 53: [/input, 2409] 
split level 54: [/input, 648] 
split level 55: [/input, 4068] 
split level 56: [/input, 4008] 
split level 57: [/input, 172] 
split level 58: [/input-8, 1950] 
split level 59: [/input, 103] 
split level 60: [/input, 4067] 
split level 61: [/input, 710] 
split level 62: [/input, 2506] 
split level 63: [/input, 2419] 
split level 64: [/input-8, 182] 
split level 65: [/input, 2389] 
split level 66: [/input, 104] 
split level 67: [/input, 100] 
split level 68: [/input, 136] 
split level 69: [/input-8, 413] 
split level 70: [/input, 711] 
split level 71: [/input, 2708] 
split level 72: [/input-8, 1437] 
split level 73: [/input, 2452] 
split level 74: [/input, 101] 
split level 75: [/input, 2434] 
split level 76: [/input, 650] 
split level 77: [/input, 2411] 
split level 78: [/input, 697] 
split level 79: [/input-8, 1038] 
split level 80: [/input, 2403] 
split level 81: [/input, 2449] 
split level 82: [/input, 2436] 
split level 83: [/input, 726] 
split level 84: [/input, 714] 
split level 85: [/input, 116] 
split level 86: [/input, 2404] 
split level 87: [/input, 98] 
split level 88: [/input, 2420] 
split level 89: [/input, 146] 
split level 90: [/input-8, 121] 
split level 91: [/input, 681] 
split level 92: [/input, 2418] 
split level 93: [/input, 946] 
split level 94: [/input, 649] 
split level 95: [/input, 4019] 
split level 96: [/input, 2450] 
split level 97: [/input-8, 689] 
split level 98: [/input, 84] 
split level 99: [/input, 2435] 
split level 100: [/input, 2462] 
split level 101: [/input-8, 1366] 
split level 102: [/input, 157] 
split level 103: [/input, 173] 
split level 104: [/input, 682] 
split level 105: [/input, 3160] 
split level 106: [/input, 82] 
split level 107: [/input, 147] 
split level 108: [/input, 2386] 
split level 109: [/input, 71] 
split level 110: [/input, 2417] 
split level 111: [/input, 113] 
split level 112: [/input, 158] 
split level 113: [/input, 138] 
split level 114: [/input, 644] 
split level 115: [/input, 2477] 
split level 116: [/input, 70] 
split level 117: [/input, 99] 
split level 118: [/input, 2394] 
split level 119: [/input, 696] 
split level 120: [/input, 97] 
split level 121: [/input, 129] 
split level 122: [/input, 670] 
split level 123: [/input-8, 1460] 
split level 124: [/input, 2388] 
split level 125: [/input, 130] 
split level 126: [/input-8, 1551] 
split level 127: [/input, 2433] 
split level 128: [/input, 1128] 
split level 129: [/input, 659] 
split level 130: [/input, 2357] 
split level 131: [/input, 115] 
split level 132: [/input, 2401] 
split level 133: [/input-8, 1066] 
split level 134: [/input-8, 681] 
split level 135: [/input-8, 1039] 
split level 136: [/input-8, 952] 
split level 137: [/input, 885] 
split level 138: [/input, 727] 
split level 139: [/input, 3159] 
split level 140: [/input, 2466] 
split level 141: [/input-8, 158] 
split level 142: [/input, 132] 
split level 143: [/input, 50] 
split level 144: [/input-8, 1844] 
split level 145: [/input, 2676] 
split level 146: [/input-8, 1655] 
split level 147: [/input, 2421] 
split level 148: [/input, 164] 
split level 149: [/input, 85] 
split level 150: [/input, 117] 
split level 151: [/input, 3176] 
split level 152: [/input, 156] 
split level 153: [/input, 2478] 
split level 154: [/input, 1181] 
split level 155: [/input, 2446] 
split level 156: [/input, 2762] 
split level 157: [/input-8, 433] 
split level 158: [/input, 83] 
split level 159: [/input, 1988] 
split level 160: [/input, 629] 
split level 161: [/input, 2374] 
split level 162: [/input, 2358] 
split level 163: [/input, 2412] 
split level 164: [/input, 1127] 
split level 165: [/input, 55] 
split level 166: [/input, 1930] 
split level 167: [/input, 86] 
split level 168: [/input, 1640] 
split level 169: [/input, 2387] 
split level 170: [/input, 2692] 
split level 171: [/input, 2370] 
split level 172: [/input, 666] 
split level 173: [/input, 69] 
split level 174: [/input, 581] 
split level 175: [/input-8, 1982] 
split level 176: [/input, 627] 
split level 177: [/input, 2660] 
split level 178: [/input, 742] 
split level 179: [/input, 2372] 
split level 180: [/input, 200] 
split level 181: [/input, 102] 
split level 182: [/input-8, 405] 
split level 183: [/input, 2356] 
split level 184: [/input, 52] 
split level 185: [/input, 140] 
split level 186: [/input, 2734] 
split level 187: [/input, 2513] 
split level 188: [/input, 2481] 
split level 189: [/input, 170] 
split level 190: [/input, 2341] 
split level 191: [/input, 611] 
split level 192: [/input, 2429] 
split level 193: [/input, 2717] 
split level 194: [/input, 1077] 
split level 195: [/input, 869] 
split level 196: [/input, 2526] 
split level 197: [/input, 2644] 
split level 198: [/input, 2674] 
split level 199: [/input, 2629] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.5435402393341064
10 lb beta sum: 0.0, worst -1.5435349941253662
Time: prepare 0.0114    bound 0.1050    transfer 0.0015    finalize 0.0028    func 0.1234    
Accumulated time: func 0.1814    prepare 0.0217    bound 0.1626    transfer 0.0016    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(-0.55754733) min lb tensor(-1.54353154)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010432720184326172 
BICCOS Cumulative time: 0.010432720184326172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.52283 (1), -1.52210 (1), -1.52171 (1), -1.52119 (1), -1.51975 (1), -1.51957 (1), -1.51945 (1), -1.51877 (1), -1.51749 (1), -1.51735 (1), -1.51724 (1), -1.51529 (1), -1.51136 (1), -1.50902 (1), -1.50788 (1), -1.50762 (1), -1.50633 (1), -1.50616 (1), -1.50395 (1), -1.50335 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5451    set_bounds 0.0091    solve 0.1235    add 0.0874    
Accumulated time: pickout 0.0003    decision 0.5451    set_bounds 0.0091    solve 0.1235    add 0.0874    
Current (lb-rhs): -1.5228289365768433
50 domains visited
Cumulative time: 0.8388919830322266

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 37] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] 
split level 1: [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 6] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 80] [/input-12, 37] 
split level 2: [/input-12, 80] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 80] [/input-12, 6] [/input-12, 6] [/input-12, 80] [/input-12, 6] [/input-12, 6] 
split level 3: [/input-12, 6] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 81] [/input-12, 80] [/input-12, 80] [/input-12, 81] [/input-12, 81] [/input-12, 80] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.4384851455688477
10 lb beta sum: 0.0, worst -1.4377291202545166
Time: prepare 0.0148    bound 0.1063    transfer 0.0007    finalize 0.0025    func 0.1269    
Accumulated time: func 0.3083    prepare 0.0367    bound 0.2688    transfer 0.0023    finalize 0.0054    
all_split False
======================Cut inference begins======================
max lb tensor(0.11047220) min lb tensor(-1.43751478)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.012511253356933594 
BICCOS Cumulative time: 0.022943973541259766
Preprocessing time: 0.01193094253540039 Inference time: 0.0001971721649169922 Add cuts time: 0.00010943412780761719 Cut analysis time: 0.00027370452880859375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.91309 (2), -0.91099 (2), -0.90790 (2), -0.89754 (2), -0.89649 (2), -0.89586 (2), -0.89371 (2), -0.89162 (2), -0.88752 (2), -0.85351 (2), -0.83187 (2), -0.81660 (2), -0.81545 (2), -0.78467 (2), -0.78223 (2), -0.76479 (2), -0.75759 (2), -0.75048 (2), -0.74919 (2), -0.72520 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0208    set_bounds 0.0137    solve 0.1269    add 0.0808    
Accumulated time: pickout 0.0014    decision 0.5659    set_bounds 0.0228    solve 0.2504    add 0.1682    
Current (lb-rhs): -0.9130861759185791
100 domains visited
Cumulative time: 1.0949525833129883

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 44] [/input-12, 37] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 37] [/input-12, 44] [/input-12, 37] [/input-12, 44] [/input-12, 44] 
split level 1: [/input-12, 37] [/input-12, 6] [/input-12, 80] [/input-12, 37] [/input-12, 80] [/input-12, 6] [/input-12, 80] [/input-12, 80] [/input-12, 37] [/input-12, 6] 
split level 2: [/input-12, 80] [/input-12, 80] [/input-12, 6] [/input-12, 80] [/input-12, 6] [/input-12, 80] [/input-12, 6] [/input-12, 6] [/input-12, 80] [/input-12, 80] 
split level 3: [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8282546997070312
10 lb beta sum: 0.26004114747047424, worst -0.8069319725036621
Time: prepare 0.0056    bound 0.1256    transfer 0.0007    finalize 0.0023    func 0.1369    
Accumulated time: func 0.4452    prepare 0.0426    bound 0.3944    transfer 0.0030    finalize 0.0077    
all_split False
======================Cut inference begins======================
max lb tensor(0.51717871) min lb tensor(-0.80407381)
Number of Verified Splits: 88 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 5
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.01903986930847168 
BICCOS Cumulative time: 0.041983842849731445
Preprocessing time: 0.011809825897216797 Inference time: 0.004111289978027344 Add cuts time: 0.002583026885986328 Cut analysis time: 0.0005357265472412109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24976 (3), -0.24964 (3), -0.24806 (3), -0.24720 (3), -0.23670 (3), -0.23072 (3), -0.22570 (3), -0.22401 (3), -0.22207 (3), -0.21819 (3), -0.21130 (3), -0.20430 (3), -0.20373 (3), -0.20190 (3), -0.20187 (3), -0.19803 (3), -0.19766 (3), -0.19278 (3), -0.18529 (3), -0.18502 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0208    set_bounds 0.0152    solve 0.1370    add 0.2100    
Accumulated time: pickout 0.0024    decision 0.5867    set_bounds 0.0380    solve 0.3874    add 0.3782    
Current (lb-rhs): -0.24976104497909546
150 domains visited
Cumulative time: 1.498260736465454

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 37] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 6] [/input-12, 37] [/input-12, 6] [/input-12, 44] [/input-12, 44] [/input-12, 37] 
split level 1: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 6] [/input-12, 6] 
split level 2: [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] 
split level 3: [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3302481174468994
10 lb beta sum: 0.34752097725868225, worst -0.12754669785499573
Time: prepare 0.0059    bound 0.1269    transfer 0.0007    finalize 0.0018    func 0.1387    
Accumulated time: func 0.5839    prepare 0.0488    bound 0.5214    transfer 0.0038    finalize 0.0095    
all_split False
======================Cut inference begins======================
max lb tensor(0.60685647) min lb tensor(-0.11919631)
Number of Verified Splits: 339 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 8
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.03799009323120117 
BICCOS Cumulative time: 0.07997393608093262
Preprocessing time: 0.011883258819580078 Inference time: 0.01901412010192871 Add cuts time: 0.006517648696899414 Cut analysis time: 0.0005750656127929688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11920 (4), -0.11916 (4), -0.10755 (4), -0.10705 (4), -0.09799 (4), -0.09799 (4), -0.09603 (4), -0.09528 (4), -0.09477 (4), -0.09313 (4), -0.07837 (4), -0.07683 (4), -0.05429 (4), -0.05427 (4), -0.03026 (4), -0.02343 (4), -0.00127 (4), -0.00112 (4), 
Length of domains: 18
Time: pickout 0.0010    decision 0.0205    set_bounds 0.0155    solve 0.1388    add 0.2844    
Accumulated time: pickout 0.0034    decision 0.6072    set_bounds 0.0535    solve 0.5262    add 0.6626    
Current (lb-rhs): -0.11919631063938141
168 domains visited
Cumulative time: 1.9967501163482666

Shallow-BaB round 5
batch: 18
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] 
split level 1: [/input-12, 6] [/input-12, 6] [/input-12, 37] [/input-12, 80] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] 
split level 2: [/input-12, 58] [/input-12, 58] [/input-12, 53] [/input-12, 53] [/input-12, 6] [/input-12, 6] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
split level 3: [/input-12, 53] [/input-12, 53] [/input-12, 81] [/input-12, 81] [/input-12, 58] [/input-12, 58] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
split level 4: [/input-12, 81] [/input-12, 81] [/input-12, 9] [/input-12, 9] [/input-12, 53] [/input-12, 53] [/input-12, 9] [/input-12, 9] [/input-12, 81] [/input-12, 81] 
split level 5: [/input-12, 9] [/input-12, 9] [/input-12, 90] [/input-12, 90] [/input-12, 9] [/input-12, 9] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] 
split level 6: [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] 
split level 7: [/input-12, 75] [/input-12, 75] [/input-12, 32] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] 
split level 8: [/input-12, 32] [/input-12, 32] [/input-12, 75] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] 
split level 9: [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] 
split level 10: [/input-8, 1366] [/input-8, 1366] [/input-8, 1941] [/input-8, 1513] [/input-8, 1366] [/input-8, 1366] [/input-8, 1941] [/input-8, 1941] [/input-8, 1941] [/input-8, 1941] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4177998900413513, worst -0.1337262988090515
10 lb beta sum: 0.6113412976264954, worst -0.43942272663116455
Time: prepare 0.0161    bound 0.1262    transfer 0.0026    finalize 0.0022    func 0.1497    
Accumulated time: func 0.7336    prepare 0.0655    bound 0.6476    transfer 0.0064    finalize 0.0117    
all_split False
======================Cut inference begins======================
max lb tensor(0.64495850) min lb tensor(-0.05166245)
Number of Verified Splits: 370 of 396
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 8
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.0409693717956543 
BICCOS Cumulative time: 0.12094330787658691
Preprocessing time: 0.01147007942199707 Inference time: 0.021519899368286133 Add cuts time: 0.0074727535247802734 Cut analysis time: 0.0005066394805908203
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0008    decision 0.0449    set_bounds 0.0150    solve 0.1498    add 0.0279    
Accumulated time: pickout 0.0042    decision 0.6522    set_bounds 0.0685    solve 0.6760    add 0.6905    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
168 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 44] 
split level 1: [/input-12, 37] 
split level 2: [/input-12, 6] 
split level 3: [/input-12, 80] 
split level 4: [/input-12, 53] 
split level 5: [/input-12, 81] 
split level 6: [/input-12, 9] 
split level 7: [/input-12, 78] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5702224969863892
10 lb beta sum: 0.7863736152648926, worst -0.5452616214752197
Time: prepare 0.0036    bound 0.1211    transfer 0.0011    finalize 0.0014    func 0.1296    
Accumulated time: func 0.8632    prepare 0.0695    bound 0.7687    transfer 0.0075    finalize 0.0131    
all_split False
======================Cut inference begins======================
max lb tensor(0.33647117) min lb tensor(-0.54438519)
Number of Verified Splits: 106 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.990807294845581
10 lb beta sum: 0.9551457762718201, worst -0.8764060139656067
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 8
#cuts 4-6: 7
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 0.19764399528503418 
BICCOS Cumulative time: 0.3185873031616211
Preprocessing time: 0.006476640701293945 Inference time: 0.18768858909606934 Add cuts time: 0.001852273941040039 Cut analysis time: 0.0016264915466308594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.54439 (8), -0.52761 (8), -0.52438 (8), -0.50930 (8), -0.50532 (8), -0.48811 (8), -0.48088 (8), -0.47835 (8), -0.46601 (8), -0.46240 (8), -0.44647 (8), -0.44637 (8), -0.44472 (8), -0.44082 (8), -0.43493 (8), -0.42685 (8), -0.41486 (8), -0.41356 (8), -0.40899 (8), -0.40848 (8), 
Length of domains: 150
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0166    solve 0.1297    add 0.0020    
Accumulated time: pickout 0.0046    decision 0.6752    set_bounds 0.0851    solve 0.8057    add 0.6926    
Current (lb-rhs): -0.5443851947784424
318 domains visited
Cumulative time: 2.649719476699829

BaB round 2
batch: 150
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 75] [/input-12, 32] [/input-12, 75] [/input-12, 75] [/input-12, 32] [/input-12, 32] [/input-12, 75] [/input-12, 32] [/input-12, 75] [/input-12, 75] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5239119529724121
10 lb beta sum: 0.7838940024375916, worst -0.5004390478134155
Time: prepare 0.0045    bound 0.1305    transfer 0.0015    finalize 0.0015    func 0.1401    
Accumulated time: func 1.0033    prepare 0.0743    bound 0.8992    transfer 0.0090    finalize 0.0146    
all_split False
======================Cut inference begins======================
max lb tensor(0.06140536) min lb tensor(-0.50023007)
Number of Verified Splits: 34 of 300
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7074556350708008
10 lb beta sum: 0.8762969970703125, worst -0.5192562341690063
Total number of valid cuts: 27.
#cuts 1-3: 8
#cuts 4-6: 7
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 0.15301251411437988 
BICCOS Cumulative time: 0.471599817276001
Preprocessing time: 0.008944034576416016 Inference time: 0.14324164390563965 Add cuts time: 0.0008008480072021484 Cut analysis time: 2.5987625122070312e-05
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50023 (9), -0.48822 (9), -0.48270 (9), -0.47927 (9), -0.47233 (9), -0.46435 (9), -0.45926 (9), -0.44152 (9), -0.43852 (9), -0.43440 (9), -0.43411 (9), -0.43066 (9), -0.42339 (9), -0.42325 (9), -0.42272 (9), -0.42000 (9), -0.41527 (9), -0.41274 (9), -0.40990 (9), -0.40088 (9), 
Length of domains: 266
Time: pickout 0.0025    decision 0.0242    set_bounds 0.0130    solve 0.1402    add 0.0070    
Accumulated time: pickout 0.0071    decision 0.6993    set_bounds 0.0981    solve 0.9458    add 0.6996    
Current (lb-rhs): -0.500230073928833
584 domains visited
Cumulative time: 2.990293264389038

BaB round 3
batch: 266
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8908182382583618, worst -0.4802262783050537
10 lb beta sum: 0.8908182382583618, worst -0.4799213409423828
Time: prepare 0.0212    bound 0.1338    transfer 0.0028    finalize 0.0024    func 0.1637    
Accumulated time: func 1.1669    prepare 0.0957    bound 1.0330    transfer 0.0119    finalize 0.0170    
all_split False
======================Cut inference begins======================
max lb tensor(0.42307389) min lb tensor(-0.47977567)
Number of Verified Splits: 269 of 532
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.8923529386520386, worst -1.0834076404571533
10 lb beta sum: 0.8639786839485168, worst -0.5878757238388062
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 49.
#cuts 1-3: 8
#cuts 4-6: 15
#cuts 7-9: 26
#cuts >= 20: 0
BICCOS time: 0.3163414001464844 
BICCOS Cumulative time: 0.7879412174224854
Preprocessing time: 0.015447378158569336 Inference time: 0.28580236434936523 Add cuts time: 0.012714624404907227 Cut analysis time: 0.002377033233642578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.47978 (10), -0.46772 (10), -0.46219 (10), -0.45826 (10), -0.45150 (10), -0.44336 (10), -0.43847 (10), -0.42022 (10), -0.41843 (10), -0.41319 (10), -0.41208 (10), -0.40825 (10), -0.40246 (10), -0.40190 (10), -0.40145 (10), -0.40020 (10), -0.39902 (10), -0.39858 (10), -0.39360 (10), -0.39052 (10), 
Length of domains: 263
Time: pickout 0.0032    decision 0.0267    set_bounds 0.0229    solve 0.1638    add 0.0462    
Accumulated time: pickout 0.0102    decision 0.7261    set_bounds 0.1210    solve 1.1096    add 0.7458    
Current (lb-rhs): -0.47977566719055176
847 domains visited
Cumulative time: 3.572291851043701

BaB round 4
batch: 263
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.48435044288635254
10 lb beta sum: 0.2895846366882324, worst -0.4796175956726074
Time: prepare 0.0079    bound 0.1356    transfer 0.0009    finalize 0.0028    func 0.1513    
Accumulated time: func 1.3182    prepare 0.1038    bound 1.1685    transfer 0.0128    finalize 0.0198    
all_split False
======================Cut inference begins======================
max lb tensor(0.61975539) min lb tensor(-0.47951269)
Number of Verified Splits: 266 of 526
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 10
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.04775810241699219 
BICCOS Cumulative time: 0.8356993198394775
Preprocessing time: 0.015243768692016602 Inference time: 0.02712106704711914 Add cuts time: 0.004860401153564453 Cut analysis time: 0.0005328655242919922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.47951 (11), -0.46744 (11), -0.46181 (11), -0.45795 (11), -0.45111 (11), -0.44286 (11), -0.43788 (11), -0.41925 (11), -0.41708 (11), -0.41251 (11), -0.41184 (11), -0.40798 (11), -0.40175 (11), -0.40103 (11), -0.40090 (11), -0.40002 (11), -0.39783 (11), -0.39780 (11), -0.39173 (11), -0.39017 (11), 
Length of domains: 260
Time: pickout 0.0036    decision 0.0236    set_bounds 0.0226    solve 0.1515    add 0.0035    
Accumulated time: pickout 0.0138    decision 0.7497    set_bounds 0.1436    solve 1.2611    add 0.7494    
Current (lb-rhs): -0.47951269149780273
1107 domains visited
Cumulative time: 3.827133893966675

BaB round 5
batch: 260
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4618595838546753
10 lb beta sum: 0.5707746148109436, worst -0.45710062980651855
Time: prepare 0.0076    bound 0.1261    transfer 0.0011    finalize 0.0023    func 0.1405    
Accumulated time: func 1.4587    prepare 0.1116    bound 1.2946    transfer 0.0139    finalize 0.0221    
all_split False
======================Cut inference begins======================
max lb tensor(0.89600587) min lb tensor(-0.45700991)
Number of Verified Splits: 479 of 520
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 13
#cuts >= 20: 0
BICCOS time: 0.0700221061706543 
BICCOS Cumulative time: 0.9057214260101318
Preprocessing time: 0.014922380447387695 Inference time: 0.04967641830444336 Add cuts time: 0.005034685134887695 Cut analysis time: 0.0003886222839355469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.45701 (12), -0.44543 (12), -0.43843 (12), -0.43483 (12), -0.42808 (12), -0.41926 (12), -0.37826 (12), -0.37665 (12), -0.37330 (12), -0.36819 (12), -0.33516 (12), -0.33462 (12), -0.30999 (12), -0.30229 (12), -0.22420 (12), -0.20592 (12), -0.20486 (12), -0.19906 (12), -0.18822 (12), -0.18658 (12), 
Length of domains: 41
Time: pickout 0.0041    decision 0.0236    set_bounds 0.0218    solve 0.1412    add 0.0014    
Accumulated time: pickout 0.0179    decision 0.7733    set_bounds 0.1654    solve 1.4024    add 0.7508    
Current (lb-rhs): -0.4570099115371704
1148 domains visited
Cumulative time: 4.092567205429077

BaB round 6
batch: 41
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 75] [/input-12, 25] [/input-12, 90] [/input-12, 90] [/input-12, 75] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 32] [/input-12, 75] 
split level 1: [/input-12, 25] [/input-12, 75] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] 
split level 2: [/input-8, 1366] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1366] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3675413131713867
10 lb beta sum: 0.8994834423065186, worst -0.3623027801513672
Time: prepare 0.0066    bound 0.1244    transfer 0.0007    finalize 0.0026    func 0.1363    
Accumulated time: func 1.5950    prepare 0.1184    bound 1.4190    transfer 0.0146    finalize 0.0246    
all_split False
======================Cut inference begins======================
max lb tensor(1.02163303) min lb tensor(-0.36208153)
Number of Verified Splits: 296 of 328
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.0441436767578125 
BICCOS Cumulative time: 0.9498651027679443
Preprocessing time: 0.00968480110168457 Inference time: 0.03183126449584961 Add cuts time: 0.00206756591796875 Cut analysis time: 0.0005600452423095703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36208 (15), -0.35297 (15), -0.33937 (15), -0.33705 (15), -0.24089 (15), -0.23230 (15), -0.22491 (15), -0.21922 (15), -0.12686 (15), -0.11917 (15), -0.11049 (15), -0.10896 (15), -0.10161 (15), -0.10051 (15), -0.09201 (15), -0.08762 (15), -0.08726 (15), -0.08428 (15), -0.08252 (15), -0.08058 (15), 
Length of domains: 32
Time: pickout 0.0014    decision 0.0213    set_bounds 0.0219    solve 0.1364    add 0.0628    
Accumulated time: pickout 0.0193    decision 0.7946    set_bounds 0.1873    solve 1.5388    add 0.8136    
Current (lb-rhs): -0.36208152770996094
1180 domains visited
Cumulative time: 4.389408349990845

BaB round 7
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 93] [/input-12, 93] [/input-8, 1507] [/input-12, 93] [/input-8, 1507] [/input-12, 93] [/input-12, 93] [/input-8, 1507] [/input-12, 93] [/input-12, 93] 
split level 1: [/input-8, 1707] [/input-8, 1707] [/input-8, 1707] [/input-8, 1507] [/input-8, 1707] [/input-8, 1707] [/input-8, 1507] [/input-8, 1707] [/input-8, 1707] [/input-8, 1707] 
split level 2: [/input-8, 1443] [/input-8, 1443] [/input-8, 1443] [/input-8, 1707] [/input-8, 1701] [/input-8, 1701] [/input-8, 1707] [/input-8, 1443] [/input-8, 1701] [/input-8, 1701] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3225579261779785
10 lb beta sum: 0.7045236825942993, worst -0.31748199462890625
Time: prepare 0.0054    bound 0.1230    transfer 0.0006    finalize 0.0014    func 0.1325    
Accumulated time: func 1.7275    prepare 0.1240    bound 1.5420    transfer 0.0151    finalize 0.0260    
all_split False
======================Cut inference begins======================
max lb tensor(0.47805539) min lb tensor(-0.31734419)
Number of Verified Splits: 151 of 256
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 16
#cuts >= 20: 0
BICCOS time: 0.1995227336883545 
BICCOS Cumulative time: 1.1493878364562988
Preprocessing time: 0.007658481597900391 Inference time: 0.018379688262939453 Add cuts time: 0.001445770263671875 Cut analysis time: 0.17203879356384277
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31734 (18), -0.31650 (18), -0.31489 (18), -0.31360 (18), -0.30894 (18), -0.30550 (18), -0.30544 (18), -0.30188 (18), -0.25776 (18), -0.25645 (18), -0.25504 (18), -0.25430 (18), -0.25366 (18), -0.25130 (18), -0.24975 (18), -0.24961 (18), -0.20006 (18), -0.19781 (18), -0.19666 (18), -0.19437 (18), 
Length of domains: 105
Time: pickout 0.0068    decision 0.0138    set_bounds 0.0193    solve 0.1326    add 0.0762    
Accumulated time: pickout 0.0262    decision 0.8084    set_bounds 0.2067    solve 1.6713    add 0.8898    
Current (lb-rhs): -0.31734418869018555
1285 domains visited
Cumulative time: 4.847264528274536

BaB round 8
batch: 105
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1507] [/input-12, 93] [/input-8, 1506] [/input-8, 1709] [/input-8, 1709] [/input-8, 1709] [/input-8, 1507] [/input-8, 1507] [/input-8, 1507] [/input-8, 1709] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3119697570800781
10 lb beta sum: 0.737089216709137, worst -0.3253084719181061
Time: prepare 0.0044    bound 0.1523    transfer 0.0012    finalize 0.0012    func 0.1606    
Accumulated time: func 1.8881    prepare 0.1286    bound 1.6943    transfer 0.0163    finalize 0.0272    
all_split False
======================Cut inference begins======================
max lb tensor(0.48283380) min lb tensor(-0.30717802)
Number of Verified Splits: 62 of 210
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 17
#cuts >= 20: 0
BICCOS time: 0.01649022102355957 
BICCOS Cumulative time: 1.1658780574798584
Preprocessing time: 0.006568431854248047 Inference time: 0.008088827133178711 Add cuts time: 0.0014107227325439453 Cut analysis time: 0.0004222393035888672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30718 (19), -0.30616 (19), -0.30447 (19), -0.30308 (19), -0.29855 (19), -0.29492 (19), -0.28910 (19), -0.28713 (19), -0.28703 (19), -0.28471 (19), -0.27873 (19), -0.27595 (19), -0.27069 (19), -0.26693 (19), -0.25148 (19), -0.24979 (19), -0.24975 (19), -0.24959 (19), -0.24883 (19), -0.24724 (19), 
Length of domains: 148
Time: pickout 0.0136    decision 0.0241    set_bounds 0.0093    solve 0.1607    add 0.0766    
Accumulated time: pickout 0.0398    decision 0.8325    set_bounds 0.2160    solve 1.8320    add 0.9664    
Current (lb-rhs): -0.3071780204772949
1433 domains visited
Cumulative time: 5.155636310577393

BaB round 9
batch: 148
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1506] [/input-8, 1709] [/input-8, 1460] [/input-8, 1460] [/input-8, 1506] [/input-8, 1506] [/input-8, 1506] [/input-8, 1506] [/input-8, 1506] [/input-8, 1709] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3013582229614258
10 lb beta sum: 0.9372565150260925, worst -0.2966489791870117
Time: prepare 0.0059    bound 0.1496    transfer 0.0018    finalize 0.0021    func 0.1615    
Accumulated time: func 2.0496    prepare 0.1348    bound 1.8439    transfer 0.0181    finalize 0.0293    
all_split False
======================Cut inference begins======================
max lb tensor(0.28762668) min lb tensor(-0.29661536)
Number of Verified Splits: 142 of 296
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 17
#cuts >= 20: 0
BICCOS time: 0.030280590057373047 
BICCOS Cumulative time: 1.1961586475372314
Preprocessing time: 0.008826255798339844 Inference time: 0.019362688064575195 Add cuts time: 0.0016722679138183594 Cut analysis time: 0.00041937828063964844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29662 (20), -0.29565 (20), -0.29341 (20), -0.29203 (20), -0.28954 (20), -0.28900 (20), -0.28820 (20), -0.28710 (20), -0.23846 (20), -0.23823 (20), -0.23703 (20), -0.23513 (20), -0.23477 (20), -0.23121 (20), -0.23076 (20), -0.23054 (20), -0.22977 (20), -0.22961 (20), -0.22830 (20), -0.22810 (20), 
Length of domains: 154
Time: pickout 0.0195    decision 0.0231    set_bounds 0.0129    solve 0.1615    add 0.0777    
Accumulated time: pickout 0.0593    decision 0.8557    set_bounds 0.2289    solve 1.9935    add 1.0441    
Current (lb-rhs): -0.2966153621673584
1587 domains visited
Cumulative time: 5.488421201705933

BaB round 10
batch: 154
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1701] [/input-8, 1709] [/input-8, 1709] [/input-8, 1701] [/input-8, 1709] [/input-8, 1709] [/input-8, 1709] [/input-8, 1709] [/input-8, 1701] [/input-8, 1709] 
cut re-enabled after branching node selection
0 lb beta sum: 0.993975043296814, worst -0.2900092601776123
10 lb beta sum: 1.0090932846069336, worst -0.2899601459503174
Time: prepare 0.0140    bound 0.1426    transfer 0.0018    finalize 0.0017    func 0.1621    
Accumulated time: func 2.2117    prepare 0.1489    bound 1.9865    transfer 0.0199    finalize 0.0311    
all_split False
======================Cut inference begins======================
max lb tensor(0.32274020) min lb tensor(-0.28993917)
Number of Verified Splits: 76 of 308
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 17
#cuts >= 20: 0
BICCOS time: 0.02126169204711914 
BICCOS Cumulative time: 1.2174203395843506
Preprocessing time: 0.009200096130371094 Inference time: 0.010116338729858398 Add cuts time: 0.0015225410461425781 Cut analysis time: 0.0004227161407470703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28994 (21), -0.28887 (21), -0.28597 (21), -0.28455 (21), -0.28268 (21), -0.28126 (21), -0.28125 (21), -0.27938 (21), -0.24330 (21), -0.24253 (21), -0.24075 (21), -0.23995 (21), -0.23846 (21), -0.23840 (21), -0.23823 (21), -0.23759 (21), -0.23703 (21), -0.23513 (21), -0.23477 (21), -0.23371 (21), 
Length of domains: 232
Time: pickout 0.0156    decision 0.0178    set_bounds 0.0130    solve 0.1622    add 0.0550    
Accumulated time: pickout 0.0750    decision 0.8735    set_bounds 0.2419    solve 2.1558    add 1.0991    
Current (lb-rhs): -0.28993916511535645
1819 domains visited
Cumulative time: 5.7742438316345215

BaB round 11
batch: 232
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1709] [/input-8, 1709] [/input-8, 1709] [/input-8, 1709] [/input-8, 1709] [/input-8, 1709] [/input-8, 1709] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9607792496681213, worst -0.28235650062561035
10 lb beta sum: 0.9607792496681213, worst -0.28232240676879883
Time: prepare 0.0215    bound 0.1539    transfer 0.0013    finalize 0.0033    func 0.1837    
Accumulated time: func 2.3954    prepare 0.1707    bound 2.1404    transfer 0.0212    finalize 0.0344    
all_split False
======================Cut inference begins======================
max lb tensor(0.21590722) min lb tensor(-0.28231716)
Number of Verified Splits: 34 of 464
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 17
#cuts >= 20: 0
BICCOS time: 0.02037358283996582 
BICCOS Cumulative time: 1.2377939224243164
Preprocessing time: 0.013581275939941406 Inference time: 0.004948616027832031 Add cuts time: 0.0006339550018310547 Cut analysis time: 0.0012097358703613281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28232 (22), -0.28128 (22), -0.27828 (22), -0.27687 (22), -0.27508 (22), -0.27366 (22), -0.27349 (22), -0.27163 (22), -0.23846 (22), -0.23823 (22), -0.23823 (22), -0.23703 (22), -0.23703 (22), -0.23513 (22), -0.23477 (22), -0.23362 (22), -0.23279 (22), -0.23121 (22), -0.23076 (22), -0.23054 (22), 
Length of domains: 430
Time: pickout 0.0041    decision 0.0290    set_bounds 0.0196    solve 0.1839    add 0.0053    
Accumulated time: pickout 0.0791    decision 0.9025    set_bounds 0.2615    solve 2.3397    add 1.1043    
Current (lb-rhs): -0.2823171615600586
2249 domains visited
Cumulative time: 6.0371997356414795

BaB round 12
batch: 430
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1507] [/input-8, 1506] [/input-8, 1507] [/input-8, 1506] [/input-8, 1506] [/input-8, 1443] [/input-8, 1507] [/input-8, 1506] [/input-8, 1506] [/input-8, 1507] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9498912692070007, worst -0.2781190872192383
10 lb beta sum: 0.9498912692070007, worst -0.2781219482421875
Time: prepare 0.0397    bound 0.1470    transfer 0.0040    finalize 0.0060    func 0.2022    
Accumulated time: func 2.5976    prepare 0.2106    bound 2.2875    transfer 0.0252    finalize 0.0404    
all_split False
======================Cut inference begins======================
max lb tensor(0.23502588) min lb tensor(-0.27811360)
Number of Verified Splits: 97 of 860
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 17
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.046182870864868164 
BICCOS Cumulative time: 1.2839767932891846
Preprocessing time: 0.024708986282348633 Inference time: 0.016962289810180664 Add cuts time: 0.003817319869995117 Cut analysis time: 0.00069427490234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27811 (23), -0.27708 (23), -0.27399 (23), -0.27258 (23), -0.27084 (23), -0.26943 (23), -0.26907 (23), -0.26719 (23), -0.23846 (23), -0.23823 (23), -0.23823 (23), -0.23703 (23), -0.23703 (23), -0.23513 (23), -0.23477 (23), -0.23121 (23), -0.23076 (23), -0.23054 (23), -0.23054 (23), -0.22977 (23), 
Length of domains: 763
Time: pickout 0.0082    decision 0.0333    set_bounds 0.0380    solve 0.2025    add 0.0164    
Accumulated time: pickout 0.0872    decision 0.9357    set_bounds 0.2995    solve 2.5421    add 1.1208    
Current (lb-rhs): -0.27811360359191895
3012 domains visited
Cumulative time: 6.383090019226074

BaB round 13
batch: 763
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1506] [/input-8, 1443] [/input-8, 1506] [/input-8, 1443] [/input-12, 88] [/input-8, 2012] [/input-8, 1506] [/input-8, 1443] [/input-12, 88] [/input-8, 1506] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2693912982940674
10 lb beta sum: 0.5861872434616089, worst -0.2646191120147705
Time: prepare 0.0324    bound 0.1715    transfer 0.0070    finalize 0.0095    func 0.2311    
Accumulated time: func 2.8287    prepare 0.2432    bound 2.4590    transfer 0.0321    finalize 0.0499    
all_split False
======================Cut inference begins======================
max lb tensor(0.59052956) min lb tensor(-0.26459455)
Number of Verified Splits: 936 of 1526
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.21269893646240234 
BICCOS Cumulative time: 1.496675729751587
Preprocessing time: 0.04810976982116699 Inference time: 0.1531519889831543 Add cuts time: 0.01086568832397461 Cut analysis time: 0.0005714893341064453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26459 (24), -0.26370 (24), -0.26360 (24), -0.26260 (24), -0.26029 (24), -0.25999 (24), -0.25994 (24), -0.25893 (24), -0.25839 (24), -0.25728 (24), -0.25646 (24), -0.25587 (24), -0.25556 (24), -0.25511 (24), -0.25496 (24), -0.23316 (24), -0.21659 (24), -0.21567 (24), -0.21278 (24), -0.21276 (24), 
Length of domains: 590
Time: pickout 0.0120    decision 0.0607    set_bounds 0.0636    solve 0.2315    add 0.0101    
Accumulated time: pickout 0.0992    decision 0.9964    set_bounds 0.3631    solve 2.7736    add 1.1309    
Current (lb-rhs): -0.26459455490112305
3602 domains visited
Cumulative time: 6.98080039024353

BaB round 14
batch: 590
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1451] [/input-8, 2026] [/input-8, 1451] [/input-8, 2026] [/input-8, 1451] [/input-8, 2026] [/input-8, 1451] [/input-8, 1443] [/input-8, 1451] [/input-8, 2026] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2623612880706787
10 lb beta sum: 0.5723208785057068, worst -0.25769829750061035
Time: prepare 0.0262    bound 0.1598    transfer 0.0065    finalize 0.0084    func 0.2092    
Accumulated time: func 3.0379    prepare 0.2696    bound 2.6188    transfer 0.0386    finalize 0.0583    
all_split False
======================Cut inference begins======================
max lb tensor(0.66905236) min lb tensor(-0.25767779)
Number of Verified Splits: 281 of 1180
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.08803915977478027 
BICCOS Cumulative time: 1.5847148895263672
Preprocessing time: 0.036411285400390625 Inference time: 0.046454668045043945 Add cuts time: 0.004654407501220703 Cut analysis time: 0.000518798828125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25768 (25), -0.25679 (25), -0.25668 (25), -0.25571 (25), -0.25318 (25), -0.25285 (25), -0.25182 (25), -0.25129 (25), -0.25043 (25), -0.24956 (25), -0.24903 (25), -0.24842 (25), -0.24823 (25), -0.24785 (25), -0.24667 (25), -0.24604 (25), -0.22608 (25), -0.22606 (25), -0.22562 (25), -0.22502 (25), 
Length of domains: 899
Time: pickout 0.0138    decision 0.0488    set_bounds 0.0510    solve 0.2095    add 0.0085    
Accumulated time: pickout 0.1130    decision 1.0452    set_bounds 0.4141    solve 2.9831    add 1.1394    
Current (lb-rhs): -0.2576777935028076
4501 domains visited
Cumulative time: 7.403881788253784

BaB round 15
batch: 899
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1451] [/input-8, 1451] [/input-8, 1451] [/input-8, 1451] [/input-8, 1451] [/input-8, 1451] [/input-8, 1451] [/input-8, 1451] [/input-8, 2012] [/input-12, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6596261262893677, worst -0.25171804428100586
10 lb beta sum: 0.6626623868942261, worst -0.25160717964172363
Time: prepare 0.0870    bound 0.1809    transfer 0.0103    finalize 0.0100    func 0.3009    
Accumulated time: func 3.3388    prepare 0.3570    bound 2.7997    transfer 0.0489    finalize 0.0683    
all_split False
======================Cut inference begins======================
max lb tensor(0.22755706) min lb tensor(-0.25160313)
Number of Verified Splits: 329 of 1798
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.1172335147857666 
BICCOS Cumulative time: 1.7019484043121338
Preprocessing time: 0.05619168281555176 Inference time: 0.05602216720581055 Add cuts time: 0.0044596195220947266 Cut analysis time: 0.0005600452423095703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25160 (26), -0.25083 (26), -0.25063 (26), -0.24989 (26), -0.24632 (26), -0.24621 (26), -0.24502 (26), -0.24475 (26), -0.24437 (26), -0.24370 (26), -0.24309 (26), -0.24239 (26), -0.24158 (26), -0.24134 (26), -0.23995 (26), -0.23953 (26), -0.22851 (26), -0.22613 (26), -0.22502 (26), -0.22289 (26), 
Length of domains: 1469
Time: pickout 0.0191    decision 0.2559    set_bounds 0.0753    solve 0.3013    add 0.0582    
Accumulated time: pickout 0.1321    decision 1.3012    set_bounds 0.4893    solve 3.2844    add 1.1975    
Current (lb-rhs): -0.2516031265258789
5970 domains visited
Cumulative time: 8.235275983810425

BaB round 16
batch: 1469
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2012] [/input-8, 2012] [/input-8, 2012] [/input-8, 2012] [/input-8, 2012] [/input-8, 2012] [/input-8, 2012] [/input-8, 2012] [/input-8, 1444] [/input-12, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6431170105934143, worst -0.23861408233642578
10 lb beta sum: 0.6431170105934143, worst -0.23844242095947266
Time: prepare 0.1433    bound 0.2398    transfer 0.0255    finalize 0.0228    func 0.4514    
Accumulated time: func 3.7902    prepare 0.5005    bound 3.0395    transfer 0.0745    finalize 0.0911    
all_split False
======================Cut inference begins======================
max lb tensor(0.25625318) min lb tensor(-0.23834920)
Number of Verified Splits: 308 of 2938
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.15170550346374512 
BICCOS Cumulative time: 1.853653907775879
Preprocessing time: 0.09183216094970703 Inference time: 0.05480813980102539 Add cuts time: 0.004358053207397461 Cut analysis time: 0.0007071495056152344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23835 (27), -0.23829 (27), -0.23776 (27), -0.23771 (27), -0.23716 (27), -0.23714 (27), -0.23668 (27), -0.23659 (27), -0.23324 (27), -0.23312 (27), -0.23299 (27), -0.23236 (27), -0.23206 (27), -0.23152 (27), -0.23150 (27), -0.23141 (27), -0.23111 (27), -0.23101 (27), -0.23063 (27), -0.23014 (27), 
Length of domains: 2630
Time: pickout 0.0269    decision 0.0985    set_bounds 0.1208    solve 0.4520    add 0.0290    
Accumulated time: pickout 0.1591    decision 1.3996    set_bounds 0.6102    solve 3.7364    add 1.2266    
Current (lb-rhs): -0.23834919929504395
8600 domains visited
Cumulative time: 9.120975732803345

BaB round 17
batch: 2630
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input, 677] [/input, 677] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2328028678894043
10 lb beta sum: 0.4548887312412262, worst -0.22811341285705566
Time: prepare 0.1382    bound 0.4830    transfer 0.0195    finalize 0.0310    func 0.7062    
Accumulated time: func 4.4964    prepare 0.6390    bound 3.5225    transfer 0.0940    finalize 0.1222    
all_split False
======================Cut inference begins======================
max lb tensor(0.79103160) min lb tensor(-0.22810769)
Number of Verified Splits: 1832 of 5260
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 18
#cuts 4-6: 4
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.7434477806091309 
BICCOS Cumulative time: 2.5971016883850098
Preprocessing time: 0.16815447807312012 Inference time: 0.5503246784210205 Add cuts time: 0.023939132690429688 Cut analysis time: 0.0010294914245605469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22811 (28), -0.22807 (28), -0.22807 (28), -0.22799 (28), -0.22761 (28), -0.22748 (28), -0.22746 (28), -0.22718 (28), -0.22694 (28), -0.22691 (28), -0.22687 (28), -0.22652 (28), -0.22650 (28), -0.22638 (28), -0.22608 (28), -0.22593 (28), -0.22324 (28), -0.22309 (28), -0.22308 (28), -0.22302 (28), 
Length of domains: 3428
Time: pickout 0.0472    decision 0.3406    set_bounds 0.2161    solve 0.7079    add 0.0524    
Accumulated time: pickout 0.2062    decision 1.7403    set_bounds 0.8263    solve 4.4443    add 1.2790    
Current (lb-rhs): -0.22810769081115723
12028 domains visited
Cumulative time: 11.251368761062622

BaB round 18
batch: 3428
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 693] [/input, 693] [/input, 693] [/input, 693] [/input, 693] [/input, 693] [/input, 693] [/input, 693] [/input, 693] [/input-8, 1514] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22810745239257812
10 lb beta sum: 0.3940330743789673, worst -0.2281045913696289
Time: prepare 0.1735    bound 0.6041    transfer 0.0335    finalize 0.0485    func 0.9050    
Accumulated time: func 5.4014    prepare 0.8128    bound 4.1266    transfer 0.1274    finalize 0.1706    
all_split False
======================Cut inference begins======================
max lb tensor(0.69454491) min lb tensor(-0.22809815)
Number of Verified Splits: 1348 of 6856
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 18
#cuts 4-6: 10
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.71376633644104 
BICCOS Cumulative time: 3.31086802482605
Preprocessing time: 0.42978930473327637 Inference time: 0.2544596195220947 Add cuts time: 0.028202533721923828 Cut analysis time: 0.0013148784637451172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22810 (29), -0.22807 (29), -0.22806 (29), -0.22798 (29), -0.22761 (29), -0.22747 (29), -0.22744 (29), -0.22718 (29), -0.22694 (29), -0.22690 (29), -0.22687 (29), -0.22651 (29), -0.22649 (29), -0.22637 (29), -0.22607 (29), -0.22593 (29), -0.22320 (29), -0.22304 (29), -0.22304 (29), -0.22301 (29), 
Length of domains: 5508
Time: pickout 0.0849    decision 0.2088    set_bounds 0.2922    solve 0.9073    add 0.0911    
Accumulated time: pickout 0.2911    decision 1.9491    set_bounds 1.1185    solve 5.3516    add 1.3700    
Current (lb-rhs): -0.22809815406799316
17536 domains visited
Cumulative time: 13.58263897895813

BaB round 19
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 677] [/input, 677] [/input, 709] [/input, 709] [/input, 677] [/input, 677] [/input, 709] [/input, 709] [/input, 677] [/input, 677] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2212848663330078
10 lb beta sum: 0.36965182423591614, worst -0.22127628326416016
Time: prepare 0.2376    bound 0.7082    transfer 0.0372    finalize 0.3508    func 1.3897    
Accumulated time: func 6.7911    prepare 1.0508    bound 4.8348    transfer 0.1647    finalize 0.5215    
all_split False
======================Cut inference begins======================
max lb tensor(0.72709775) min lb tensor(-0.22127032)
Number of Verified Splits: 1850 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 18
#cuts 4-6: 20
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.719386100769043 
BICCOS Cumulative time: 4.030254125595093
Preprocessing time: 0.2994551658630371 Inference time: 0.3826944828033447 Add cuts time: 0.035417795181274414 Cut analysis time: 0.0018186569213867188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22810 (29), -0.22807 (29), -0.22761 (29), -0.22747 (29), -0.22694 (29), -0.22690 (29), -0.22651 (29), -0.22637 (29), -0.22301 (29), -0.22271 (29), -0.22250 (29), -0.22205 (29), -0.22159 (29), -0.22128 (29), -0.22127 (30), -0.22119 (30), -0.22112 (29), -0.22109 (29), -0.22091 (29), -0.22083 (29), 
Length of domains: 7754
Time: pickout 0.1023    decision 0.2480    set_bounds 0.3916    solve 1.3931    add 0.0546    
Accumulated time: pickout 0.3934    decision 2.1971    set_bounds 1.5101    solve 6.7447    add 1.4246    
Current (lb-rhs): -0.22809815406799316
23878 domains visited
current_vram/total_varm: 13.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 16.542555809020996

BaB round 20
batch: 7754
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1950] [/input-8, 1514] [/input, 901] [/input-12, 54] [/input-8, 1514] [/input-8, 1514] [/input, 901] [/input-8, 1514] [/input-8, 1950] [/input, 901] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22132515907287598
10 lb beta sum: 0.3444259464740753, worst -0.22132539749145508
Time: prepare 0.4410    bound 1.2762    transfer 0.0714    finalize 0.3465    func 2.2367    
Accumulated time: func 9.0278    prepare 1.4921    bound 6.1111    transfer 0.2360    finalize 0.8680    
all_split False
======================Cut inference begins======================
max lb tensor(0.73615849) min lb tensor(-0.22131371)
Number of Verified Splits: 3015 of 15508
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 18
#cuts 4-6: 20
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 1.2028529644012451 
BICCOS Cumulative time: 5.233107089996338
Preprocessing time: 0.5151286125183105 Inference time: 0.6298871040344238 Add cuts time: 0.05606651306152344 Cut analysis time: 0.0017707347869873047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22131 (30), -0.22128 (30), -0.22082 (30), -0.22069 (30), -0.22015 (30), -0.22012 (30), -0.21972 (30), -0.21958 (30), -0.21862 (30), -0.21860 (30), -0.21814 (30), -0.21795 (30), -0.21747 (30), -0.21741 (30), -0.21714 (31), -0.21706 (31), -0.21704 (30), -0.21686 (30), -0.21647 (31), -0.21625 (31), 
Length of domains: 12493
Time: pickout 0.2216    decision 0.6694    set_bounds 0.7025    solve 2.2404    add 0.0610    
Accumulated time: pickout 0.6151    decision 2.8665    set_bounds 2.2126    solve 8.9851    add 1.4856    
Current (lb-rhs): -0.2213137149810791
36371 domains visited
Cumulative time: 21.687347650527954

BaB round 21
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 901] [/input, 693] [/input-8, 1950] [/input-12, 54] [/input-8, 1950] [/input-8, 1950] [/input, 901] [/input-8, 1950] [/input, 693] [/input-12, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.40342605113983154, worst -0.26575273275375366
10 lb beta sum: 0.4294140636920929, worst -0.21719074249267578
Time: prepare 0.8840    bound 1.3390    transfer 0.0605    finalize 0.4070    func 2.7990    
Accumulated time: func 11.8268    prepare 2.3765    bound 7.4501    transfer 0.2966    finalize 1.2750    
all_split False
======================Cut inference begins======================
max lb tensor(0.32228512) min lb tensor(-0.21718574)
Number of Verified Splits: 1654 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 20
#cuts 4-6: 8
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 1.2972869873046875 
BICCOS Cumulative time: 6.530394077301025
Preprocessing time: 0.5445377826690674 Inference time: 0.682182788848877 Add cuts time: 0.06945443153381348 Cut analysis time: 0.0011119842529296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21719 (31), -0.21714 (31), -0.21663 (31), -0.21645 (31), -0.21599 (31), -0.21593 (31), -0.21557 (31), -0.21538 (31), -0.21441 (31), -0.21440 (31), -0.21388 (31), -0.21363 (31), -0.21326 (31), -0.21314 (31), -0.21282 (31), -0.21258 (31), -0.21205 (31), -0.21166 (31), -0.21096 (31), -0.21055 (31), 
Length of domains: 19031
Time: pickout 0.1643    decision 0.7251    set_bounds 0.7538    solve 2.8029    add 0.0638    
Accumulated time: pickout 0.7794    decision 3.5917    set_bounds 2.9663    solve 11.7880    add 1.5494    
Current (lb-rhs): -0.21718573570251465
51101 domains visited
current_vram/total_varm: 24.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 27.53395676612854

BaB round 22
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 4052] [/input-8, 1950] [/input, 677] [/input, 4052] [/input-8, 1513] [/input-8, 1514] [/input-8, 1414] [/input, 631] [/input-8, 1414] [/input, 682] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2098860740661621
10 lb beta sum: 0.4034292697906494, worst -0.20986056327819824
Time: prepare 0.9289    bound 2.5495    transfer 0.1596    finalize 0.6079    func 4.4659    
Accumulated time: func 16.2928    prepare 3.3058    bound 9.9995    transfer 0.4561    finalize 1.8829    
all_split False
======================Cut inference begins======================
max lb tensor(0.98453295) min lb tensor(-0.20985246)
Number of Verified Splits: 6388 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 20
#cuts 4-6: 8
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 3.08614182472229 
BICCOS Cumulative time: 9.616535902023315
Preprocessing time: 1.5205533504486084 Inference time: 1.4355392456054688 Add cuts time: 0.1289045810699463 Cut analysis time: 0.0011446475982666016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20985 (32), -0.20979 (32), -0.20927 (32), -0.20891 (32), -0.20861 (32), -0.20832 (32), -0.20787 (32), -0.20779 (32), -0.20779 (32), -0.20774 (32), -0.20769 (32), -0.20729 (32), -0.20714 (32), -0.20703 (32), -0.20695 (32), -0.20690 (32), -0.20678 (33), -0.20668 (32), -0.20661 (32), -0.20649 (32), 
Length of domains: 29027
Time: pickout 0.3315    decision 1.6918    set_bounds 1.8386    solve 4.4726    add 0.1107    
Accumulated time: pickout 1.1109    decision 5.2834    set_bounds 4.8049    solve 16.2605    add 1.6601    
Current (lb-rhs): -0.2098524570465088
77481 domains visited
current_vram/total_varm: 42.3GB/99.9GB, batch_size increase to 32768
Cumulative time: 39.16194128990173

BaB round 23
batch: 29027
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 4052] [/input, 4052] [/input, 4052] [/input, 677] [/input, 677] [/input, 710] [/input, 4052] [/input, 677] [/input, 677] [/input, 710] 
cut re-enabled after branching node selection
0 lb beta sum: 0.39115676283836365, worst -0.20708894729614258
10 lb beta sum: 0.45425453782081604, worst -0.2070770263671875
Time: prepare 3.0421    bound 4.4801    transfer 0.2858    finalize 0.9508    func 9.1430    
Accumulated time: func 25.4358    prepare 6.3484    bound 14.4796    transfer 0.7419    finalize 2.8337    
all_split False
======================Cut inference begins======================
max lb tensor(0.96216452) min lb tensor(-0.20706844)
Number of Verified Splits: 4751 of 58054
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 20
#cuts 4-6: 13
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 3.254626512527466 
BICCOS Cumulative time: 12.871162414550781
Preprocessing time: 1.9803030490875244 Inference time: 1.180237054824829 Add cuts time: 0.0924844741821289 Cut analysis time: 0.0016019344329833984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20707 (33), -0.20641 (33), -0.20561 (33), -0.20556 (33), -0.20504 (33), -0.20476 (33), -0.20424 (33), -0.20420 (33), -0.20409 (33), -0.20392 (33), -0.20369 (33), -0.20361 (33), -0.20356 (33), -0.20300 (33), -0.20272 (33), -0.20269 (33), -0.20253 (33), -0.20237 (33), -0.20224 (33), -0.20148 (33), 
Length of domains: 53303
Time: pickout 0.7005    decision 3.0609    set_bounds 3.2454    solve 9.6761    add 0.2122    
Accumulated time: pickout 1.8114    decision 8.3443    set_bounds 8.0503    solve 25.9366    add 1.8723    
Current (lb-rhs): -0.20706844329833984
130784 domains visited
Cumulative time: 59.410733699798584

BaB round 24
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 677] [/input, 710] [/input, 710] [/input, 693] [/input, 693] [/input, 901] [/input, 710] [/input, 693] [/input, 693] [/input, 901] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19859552383422852
10 lb beta sum: 0.3758479058742523, worst -0.1985011100769043
Time: prepare 1.9058    bound 10.2312    transfer 0.3161    finalize 0.5594    func 13.4537    
Accumulated time: func 38.8895    prepare 8.2548    bound 24.7108    transfer 1.0580    finalize 3.3931    
all_split False
======================Cut inference begins======================
max lb tensor(0.74656820) min lb tensor(-0.19849062)
Number of Verified Splits: 7076 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 20
#cuts 4-6: 16
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 6.323122024536133 
BICCOS Cumulative time: 19.194284439086914
Preprocessing time: 4.171663522720337 Inference time: 1.9771277904510498 Add cuts time: 0.1723933219909668 Cut analysis time: 0.0019373893737792969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20118 (33), -0.20112 (33), -0.20023 (33), -0.19964 (33), -0.19910 (33), -0.19904 (33), -0.19849 (34), -0.19849 (34), -0.19840 (33), -0.19839 (34), -0.19808 (34), -0.19805 (34), -0.19798 (33), -0.19773 (34), -0.19763 (34), -0.19749 (34), -0.19744 (34), -0.19739 (34), -0.19736 (34), -0.19700 (34), 
Length of domains: 78995
Time: pickout 0.7126    decision 4.0069    set_bounds 4.6311    solve 13.4698    add 0.3709    
Accumulated time: pickout 2.5240    decision 12.3512    set_bounds 12.6814    solve 39.4064    add 2.2432    
Current (lb-rhs): -0.20118188858032227
189244 domains visited
Cumulative time: 89.21155285835266

BaB round 25
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1513] [/input-8, 1038] [/input-8, 1038] [/input-8, 1437] [/input-8, 1437] [/input, 650] [/input, 682] [/input, 4052] [/input, 710] [/input, 4052] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19893860816955566
10 lb beta sum: 0.37339237332344055, worst -0.19885754585266113
Time: prepare 2.2460    bound 10.3043    transfer 0.3157    finalize 0.7706    func 14.0863    
Accumulated time: func 52.9757    prepare 10.5014    bound 35.0151    transfer 1.3737    finalize 4.1637    
all_split False
======================Cut inference begins======================
max lb tensor(0.74731064) min lb tensor(-0.19884968)
Number of Verified Splits: 6400 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 20
#cuts 4-6: 15
#cuts 7-9: 7
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 5.6029558181762695 
BICCOS Cumulative time: 24.797240257263184
Preprocessing time: 3.65626859664917 Inference time: 1.786391019821167 Add cuts time: 0.15787267684936523 Cut analysis time: 0.002423524856567383
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19885 (34), -0.19885 (34), -0.19839 (34), -0.19799 (34), -0.19773 (34), -0.19736 (34), -0.19694 (34), -0.19689 (34), -0.19682 (34), -0.19669 (34), -0.19647 (34), -0.19636 (34), -0.19633 (34), -0.19616 (34), -0.19604 (34), -0.19602 (34), -0.19597 (34), -0.19597 (34), -0.19580 (34), -0.19567 (34), 
Length of domains: 105363
Time: pickout 0.7963    decision 4.3070    set_bounds 5.5752    solve 14.1175    add 0.2916    
Accumulated time: pickout 3.3203    decision 16.6582    set_bounds 18.2566    solve 53.5238    add 2.5347    
Current (lb-rhs): -0.19884967803955078
248380 domains visited
Cumulative time: 120.11327862739563

BaB round 26
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1038] [/input-8, 1513] [/input-8, 948] [/input-8, 1513] [/input-8, 1513] [/input-8, 1038] [/input-8, 1038] [/input-8, 948] [/input-8, 948] [/input-8, 1437] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19292545318603516
10 lb beta sum: 0.36287981271743774, worst -0.19292354583740234
Time: prepare 2.0745    bound 10.2708    transfer 0.3075    finalize 1.8967    func 14.9896    
Accumulated time: func 67.9654    prepare 12.5765    bound 45.2859    transfer 1.6812    finalize 6.0604    
all_split False
======================Cut inference begins======================
max lb tensor(0.73896116) min lb tensor(-0.19288850)
Number of Verified Splits: 5302 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 20
#cuts 4-6: 15
#cuts 7-9: 7
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 4.062642812728882 
BICCOS Cumulative time: 28.859883069992065
Preprocessing time: 2.411289691925049 Inference time: 1.5091111660003662 Add cuts time: 0.13955330848693848 Cut analysis time: 0.0026886463165283203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19885 (34), -0.19885 (34), -0.19799 (34), -0.19736 (34), -0.19682 (34), -0.19669 (34), -0.19636 (34), -0.19616 (34), -0.19567 (34), -0.19556 (34), -0.19535 (34), -0.19523 (34), -0.19519 (35), -0.19511 (35), -0.19500 (34), -0.19436 (35), -0.19424 (34), -0.19417 (35), -0.19402 (34), -0.19368 (35), 
Length of domains: 132829
Time: pickout 0.7651    decision 4.7385    set_bounds 3.6123    solve 15.0057    add 0.2566    
Accumulated time: pickout 4.0854    decision 21.3967    set_bounds 21.8689    solve 68.5295    add 2.7913    
Current (lb-rhs): -0.19884967803955078
308614 domains visited
Cumulative time: 148.79717469215393

BaB round 27
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] [/input, 4068] [/input, 4068] [/input-8, 1444] [/input, 4068] [/input-8, 1444] [/input, 4068] [/input-8, 1444] [/input, 4068] [/input, 4068] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19333338737487793
10 lb beta sum: 0.3673830032348633, worst -0.19331049919128418
Time: prepare 2.1128    bound 10.2827    transfer 0.3092    finalize 2.1071    func 15.2420    
Accumulated time: func 83.2074    prepare 14.6899    bound 55.5686    transfer 1.9904    finalize 8.1675    
all_split False
======================Cut inference begins======================
max lb tensor(0.73646170) min lb tensor(-0.19329476)
Number of Verified Splits: 5612 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 20
#cuts 4-6: 15
#cuts 7-9: 8
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 4.3024139404296875 
BICCOS Cumulative time: 33.16229701042175
Preprocessing time: 2.4335012435913086 Inference time: 1.5413503646850586 Add cuts time: 0.32491183280944824 Cut analysis time: 0.0026504993438720703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19329 (35), -0.19321 (35), -0.19307 (35), -0.19293 (35), -0.19289 (35), -0.19286 (35), -0.19273 (35), -0.19239 (35), -0.19239 (35), -0.19238 (35), -0.19216 (35), -0.19203 (35), -0.19198 (35), -0.19183 (35), -0.19182 (35), -0.19180 (35), -0.19176 (35), -0.19139 (35), -0.19133 (35), -0.19133 (35), 
Length of domains: 159985
Time: pickout 0.7852    decision 4.7866    set_bounds 3.6133    solve 15.2562    add 0.2758    
Accumulated time: pickout 4.8706    decision 26.1833    set_bounds 25.4821    solve 83.7858    add 3.0671    
Current (lb-rhs): -0.19329476356506348
368538 domains visited
Cumulative time: 178.01010704040527

BaB round 28
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 4052] [/input, 631] [/input-8, 1414] [/input, 682] [/input, 693] [/input, 709] [/input, 693] [/input, 693] [/input-8, 1513] [/input, 710] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18884062767028809
10 lb beta sum: 0.37056028842926025, worst -0.18873286247253418
Time: prepare 2.0057    bound 10.2845    transfer 0.3205    finalize 2.3854    func 15.4552    
Accumulated time: func 98.6626    prepare 16.6961    bound 65.8531    transfer 2.3109    finalize 10.5529    
all_split False
======================Cut inference begins======================
max lb tensor(0.74513704) min lb tensor(-0.18870997)
Number of Verified Splits: 6695 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 50.
#cuts 1-3: 20
#cuts 4-6: 16
#cuts 7-9: 12
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 5.432225942611694 
BICCOS Cumulative time: 38.59452295303345
Preprocessing time: 2.598151206970215 Inference time: 2.6094729900360107 Add cuts time: 0.2193131446838379 Cut analysis time: 0.005288600921630859
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19329 (35), -0.19321 (35), -0.19307 (35), -0.19293 (35), -0.19289 (35), -0.19286 (35), -0.19273 (35), -0.19239 (35), -0.19238 (35), -0.19216 (35), -0.19203 (35), -0.19198 (35), -0.19182 (35), -0.19180 (35), -0.19176 (35), -0.19139 (35), -0.19133 (35), -0.19133 (35), -0.19122 (35), -0.19115 (35), 
Length of domains: 186058
Time: pickout 0.7361    decision 5.0404    set_bounds 3.6365    solve 15.4693    add 0.3141    
Accumulated time: pickout 5.6068    decision 31.2236    set_bounds 29.1186    solve 99.2551    add 3.3812    
Current (lb-rhs): -0.19329476356506348
427379 domains visited
Time out!!!!!!!!
Result: unknown in 216.4399 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 163, vnnlib ID: 163 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-38.52923203, -37.64469528, -37.30644989, -36.70117950, -38.21686172,
         -36.18220520, -38.59497452, -37.40024948, -39.43606949, -37.13234329]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [906]; unstable size 906; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 358, 1, 906] with unstable size 357 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 55, 1, 906] with unstable size 54 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 906] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [357]; unstable size 357; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 55, 1, 357] with unstable size 54 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 357] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [54]; unstable size 54; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 54] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.95569658, -5.19322443, -5.16915655, -4.42273331, -2.98577118,
         -5.14474869, -3.01160383, -2.92919326, -4.79339790]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-38.52923203, -37.64469528, -37.30644989, -36.70117950, -38.21686172,
         -36.18220520, -38.59497452, -37.40024948, -39.43606949, -37.13234329]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-38.52923584, -37.64469528, -37.30645370, -36.70118332, -38.21686554,
          -36.18220520, -38.59497833, -37.40024948, -39.43606567, -37.13234329],
         [-38.52923584, -37.64469528, -37.30645370, -36.70118332, -38.21686554,
          -36.18220520, -38.59497833, -37.40024948, -39.43606567, -37.13234329]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.12898636,  0.24444580, -0.09379578, -0.69906616,  0.81661606,
          -1.21804428,  1.19472885,  2.03581619, -0.26790619]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         ...,


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0979 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 164, vnnlib ID: 164 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.87711716, -31.36005974, -24.57387924, -25.36795044, -26.65308762,
         -23.54269981, -27.73553658, -26.02115822, -30.02602577, -30.42842674]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [940]; unstable size 940; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 338, 1, 940] with unstable size 337 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 46, 1, 940] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 940] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [337]; unstable size 337; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 46, 1, 337] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 337] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [45]; unstable size 45; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 45] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.12011397,  3.21297312, -1.66939104,  0.50956702,  0.10080028,
          0.69786406, -0.48382694,  2.81978512,  2.53211951]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.87711716, -31.36005974, -24.57387924, -25.36795044, -26.65308762,
         -23.54269981, -27.73553658, -26.02115822, -30.02602577, -30.42842674]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.92903519, -30.50548935, -23.34783745, -24.95048332, -25.89705658,
          -23.34900093, -26.88303757, -25.25068665, -29.24393654, -29.66842651],
         [-26.92903519, -30.50548935, -23.34783745, -24.95048332, -25.89705658,
          -23.34900093, -26.88303757, -25.25068665, -29.24393654, -29.66842651]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.16348267e-03,  1.90168571e+00]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0102 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0387 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 165, vnnlib ID: 165 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-45.38079071, -46.62900925, -44.54059219, -44.21625519, -46.15332031,
         -44.71241760, -48.23451233, -44.91481018, -45.65177536, -46.28860855]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [818]; unstable size 818; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 369, 1, 818] with unstable size 368 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 42, 1, 818] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 818] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [368]; unstable size 368; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 42, 1, 368] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 368] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [41]; unstable size 41; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.48221540, -2.45601964, -3.73825645, -3.49333191, -1.48394775,
         -2.77850580,  0.00878453, -3.42705560, -2.77129483]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-45.38079071, -46.62900925, -44.54059219, -44.21625519, -46.15332031,
         -44.71241760, -48.23451233, -44.91481018, -45.65177536, -46.28860855]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-45.38079453, -46.62901306, -44.54059219, -44.21625519, -46.15332031,
          -44.71242142, -48.23451614, -44.91481018, -45.65176773, -46.28860855],
         [-45.38079453, -46.62901306, -44.54059219, -44.21625519, -46.15332031,
          -44.71242142, -48.23451614, -44.91481018, -45.65176773, -46.28860855]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.46598434,  1.71420288, -0.37421799, -0.69855499,  1.23851013,
          -0.20238876,  0.73695755,  1.37379837]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         ...,


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0875 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 166, vnnlib ID: 166 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.23012924, -36.41601181, -31.94171143, -31.13515663, -31.02224350,
         -32.46573639, -27.16991425, -34.70101547, -36.14490891, -35.84846497]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [650]; unstable size 650; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 401, 1, 650] with unstable size 400 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 56, 1, 650] with unstable size 55 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 650] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [400]; unstable size 400; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 56, 1, 400] with unstable size 55 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 400] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [55]; unstable size 55; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 55] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.83025908,  2.83294892,  0.06200886, -0.17354298, -0.48973608,
          0.44358230,  1.25224495,  2.75552130,  1.93836808]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-36.23012924, -36.41601181, -31.94171143, -31.13515663, -31.02224350,
         -32.46573639, -27.16991425, -34.70101547, -36.14490891, -35.84846497]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.15it/s]100%|██████████| 1/1 [00:00<00:00,  8.14it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.97253799, -34.59704971, -29.87367249, -28.90955544, -28.34554100,
          -30.13225937, -26.03644943, -32.16523743, -34.06351471, -34.00271606],
         [-33.97253799, -34.59704971, -29.87367249, -28.90955544, -28.34554100,
          -30.13225937, -26.03644943, -32.16523743, -34.06351471, -34.00271606]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.87310600, 2.30909157]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1258 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 14.883974075317383
alpha/beta optimization time: 1.3285815715789795
initial alpha-crown bounds: tensor([[ 3.23647594,  3.32099295,  0.39196110,  0.13466406, -0.20216036,
          0.77282953,  1.65194607,  3.22755575,  2.34970927]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.20216035842895508
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.49469685554504
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.49465370178223
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.49462246894836
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.4945993423462
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.49457907676697
Verifying property 4 with 1 instances.
##### Instance 166 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.20216036]], device='cuda:0') need to verify.
Model prediction is: tensor([-36.23012924, -36.41601181, -31.94171143, -31.13515663, -31.02224350,
        -32.46573639, -27.16991425, -34.70101547, -36.14490891, -35.84846497],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.20216036]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 650
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 392
Node /15 input 0: size torch.Size([100]) unstable 54
-----------------
# of unstable neurons: 1096
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00014519691467285156
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20215368270874023
10 lb beta sum: 0.0, worst -0.20217084884643555
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0575    transfer 0.0001    finalize 0.0002    func 0.0580    
Accumulated time: func 0.0580    prepare 0.0002    bound 0.0575    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 95] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 88] 
split level 3: [/input-12, 40] 
split level 4: [/input-12, 58] 
split level 5: [/input-12, 8] 
split level 6: [/input-12, 62] 
split level 7: [/input-12, 49] 
split level 8: [/input-12, 22] 
split level 9: [/input-12, 78] 
split level 10: [/input-12, 31] 
split level 11: [/input-12, 73] 
split level 12: [/input-12, 50] 
split level 13: [/input-12, 82] 
split level 14: [/input-12, 60] 
split level 15: [/input-12, 19] 
split level 16: [/input-12, 29] 
split level 17: [/input-12, 94] 
split level 18: [/input-12, 16] 
split level 19: [/input-12, 1] 
split level 20: [/input-8, 1483] 
split level 21: [/input-12, 67] 
split level 22: [/input-12, 48] 
split level 23: [/input-8, 995] 
split level 24: [/input-8, 1299] 
split level 25: [/input-8, 1482] 
split level 26: [/input-12, 46] 
split level 27: [/input-12, 30] 
split level 28: [/input-8, 1475] 
split level 29: [/input-8, 1507] 
split level 30: [/input-12, 15] 
split level 31: [/input-8, 1123] 
split level 32: [/input-8, 417] 
split level 33: [/input-8, 1009] 
split level 34: [/input-8, 1306] 
split level 35: [/input-8, 1490] 
split level 36: [/input-8, 1498] 
split level 37: [/input-8, 1014] 
split level 38: [/input-8, 1522] 
split level 39: [/input-8, 428] 
split level 40: [/input-8, 467] 
split level 41: [/input-8, 427] 
split level 42: [/input-8, 2011] 
split level 43: [/input-8, 1010] 
split level 44: [/input-8, 1530] 
split level 45: [/input-8, 986] 
split level 46: [/input-12, 35] 
split level 47: [/input-8, 1493] 
split level 48: [/input-8, 1013] 
split level 49: [/input-8, 1501] 
split level 50: [/input-8, 426] 
split level 51: [/input-8, 1529] 
split level 52: [/input-8, 1934] 
split level 53: [/input-8, 1508] 
split level 54: [/input-12, 14] 
split level 55: [/input-12, 36] 
split level 56: [/input-8, 418] 
split level 57: [/input-8, 1489] 
split level 58: [/input-8, 276] 
split level 59: [/input-8, 1499] 
split level 60: [/input-8, 1513] 
split level 61: [/input-8, 1514] 
split level 62: [/input-8, 1515] 
split level 63: [/input-8, 468] 
split level 64: [/input, 3992] 
split level 65: [/input-8, 1521] 
split level 66: [/input-8, 1484] 
split level 67: [/input-8, 1141] 
split level 68: [/input-8, 1060] 
split level 69: [/input-8, 275] 
split level 70: [/input-8, 1778] 
split level 71: [/input-8, 618] 
split level 72: [/input-8, 1946] 
split level 73: [/input-8, 1116] 
split level 74: [/input-8, 932] 
split level 75: [/input-8, 1787] 
split level 76: [/input-8, 1391] 
split level 77: [/input-8, 1533] 
split level 78: [/input-8, 924] 
split level 79: [/input-8, 1015] 
split level 80: [/input-12, 54] 
split level 81: [/input-12, 85] 
split level 82: [/input-8, 469] 
split level 83: [/input-8, 1069] 
split level 84: [/input-8, 1250] 
split level 85: [/input-8, 930] 
split level 86: [/input-8, 409] 
split level 87: [/input-8, 2002] 
split level 88: [/input-8, 1504] 
split level 89: [/input-8, 286] 
split level 90: [/input, 567] 
split level 91: [/input-8, 1485] 
split level 92: [/input-8, 1899] 
split level 93: [/input-8, 1771] 
split level 94: [/input-8, 445] 
split level 95: [/input-8, 1502] 
split level 96: [/input-8, 1932] 
split level 97: [/input-8, 1458] 
split level 98: [/input, 2631] 
split level 99: [/input-8, 436] 
split level 100: [/input-8, 480] 
split level 101: [/input-8, 1257] 
split level 102: [/input, 3995] 
split level 103: [/input-8, 1756] 
split level 104: [/input-8, 533] 
split level 105: [/input-8, 421] 
split level 106: [/input-8, 477] 
split level 107: [/input-8, 1300] 
split level 108: [/input-8, 1061] 
split level 109: [/input-8, 1650] 
split level 110: [/input-8, 1523] 
split level 111: [/input-8, 405] 
split level 112: [/input-8, 1757] 
split level 113: [/input-8, 652] 
split level 114: [/input-8, 1068] 
split level 115: [/input, 3996] 
split level 116: [/input, 3976] 
split level 117: [/input-8, 1994] 
split level 118: [/input-8, 1561] 
split level 119: [/input-8, 365] 
split level 120: [/input-8, 114] 
split level 121: [/input-8, 1653] 
split level 122: [/input-8, 1142] 
split level 123: [/input-8, 403] 
split level 124: [/input-8, 361] 
split level 125: [/input, 2969] 
split level 126: [/input-8, 1772] 
split level 127: [/input, 1873] 
split level 128: [/input, 650] 
split level 129: [/input-8, 1863] 
split level 130: [/input, 4010] 
split level 131: [/input, 2803] 
split level 132: [/input-8, 1220] 
split level 133: [/input-8, 2029] 
split level 134: [/input-8, 1373] 
split level 135: [/input-8, 293] 
split level 136: [/input-8, 298] 
split level 137: [/input-8, 1361] 
split level 138: [/input, 680] 
split level 139: [/input, 854] 
split level 140: [/input, 824] 
split level 141: [/input, 2970] 
split level 142: [/input, 648] 
split level 143: [/input, 3298] 
split level 144: [/input-8, 746] 
split level 145: [/input-8, 1416] 
split level 146: [/input-8, 1562] 
split level 147: [/input, 872] 
split level 148: [/input, 2281] 
split level 149: [/input-8, 756] 
split level 150: [/input-8, 491] 
split level 151: [/input-8, 1512] 
split level 152: [/input-8, 397] 
split level 153: [/input, 581] 
split level 154: [/input, 844] 
split level 155: [/input, 3880] 
split level 156: [/input, 826] 
split level 157: [/input, 4060] 
split level 158: [/input, 616] 
split level 159: [/input-8, 848] 
split level 160: [/input-8, 1646] 
split level 161: [/input, 1182] 
split level 162: [/input, 636] 
split level 163: [/input-8, 2038] 
split level 164: [/input, 939] 
split level 165: [/input, 614] 
split level 166: [/input, 904] 
split level 167: [/input, 2292] 
split level 168: [/input-8, 916] 
split level 169: [/input, 1961] 
split level 170: [/input, 2580] 
split level 171: [/input, 681] 
split level 172: [/input-8, 1477] 
split level 173: [/input, 3891] 
split level 174: [/input, 561] 
split level 175: [/input, 3998] 
split level 176: [/input-8, 1729] 
split level 177: [/input-8, 789] 
split level 178: [/input-8, 159] 
split level 179: [/input-8, 1221] 
split level 180: [/input-8, 1900] 
split level 181: [/input-8, 1907] 
split level 182: [/input, 596] 
split level 183: [/input, 3873] 
split level 184: [/input, 595] 
split level 185: [/input-8, 1876] 
split level 186: [/input-8, 734] 
split level 187: [/input-8, 1768] 
split level 188: [/input, 1930] 
split level 189: [/input, 1946] 
split level 190: [/input, 739] 
split level 191: [/input-8, 306] 
split level 192: [/input, 2938] 
split level 193: [/input, 627] 
split level 194: [/input, 891] 
split level 195: [/input, 2579] 
split level 196: [/input-8, 637] 
split level 197: [/input-8, 1226] 
split level 198: [/input, 2809] 
split level 199: [/input, 2289] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20185375213623047
10 lb beta sum: 0.0, worst -0.20184946060180664
Time: prepare 0.0114    bound 0.1122    transfer 0.0062    finalize 0.0041    func 0.1368    
Accumulated time: func 0.1948    prepare 0.0231    bound 0.1697    transfer 0.0063    finalize 0.0042    
all_split False
======================Cut inference begins======================
max lb tensor(0.57671165) min lb tensor(-0.20184040)
Number of Verified Splits: 19 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.012575626373291016 
BICCOS Cumulative time: 0.012575626373291016
Preprocessing time: 0.011221647262573242 Inference time: 0.0008351802825927734 Add cuts time: 0.00026917457580566406 Cut analysis time: 0.00024962425231933594
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.5587    set_bounds 0.0110    solve 0.1369    add 0.0109    
Accumulated time: pickout 0.0004    decision 0.5587    set_bounds 0.0110    solve 0.1369    add 0.0109    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 95] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 88] 
split level 3: [/input-12, 8] 
split level 4: [/input-12, 62] 
split level 5: [/input-12, 49] 
split level 6: [/input-12, 22] 
split level 7: [/input-12, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.8585600852966309

all verified at 0th iter
Time: prepare 0.0036    bound 0.0043    transfer 0.0040    finalize 0.0016    func 0.0153    
Accumulated time: func 0.2101    prepare 0.0272    bound 0.1740    transfer 0.0103    finalize 0.0059    
all_split False
======================Cut inference begins======================
max lb tensor(2.35060883) min lb tensor(0.85856009)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006374359130859375 
BICCOS Cumulative time: 0.01894998550415039
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0229    set_bounds 0.0167    solve 0.0153    add 0.0002    
Accumulated time: pickout 0.0010    decision 0.5816    set_bounds 0.0277    solve 0.1523    add 0.0111    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.8776919841766357


Properties batch 5, size 1
Remaining timeout: 197.348069190979
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.34799909591675
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.34797501564026
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.34795427322388
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.6521 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 167, vnnlib ID: 167 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.16245461, -30.45020103, -26.98074150, -26.84484673, -28.18525696,
         -27.81576157, -28.15686417, -28.78010941, -27.20750809, -29.08954620]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [769]; unstable size 769; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 347, 1, 769] with unstable size 346 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 45, 1, 769] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 769] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [346]; unstable size 346; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 45, 1, 346] with unstable size 44 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 346] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [44]; unstable size 44; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 44] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.38262439, -2.66570401, -2.21575689, -1.41811490, -1.71809649,
         -0.78672242, -1.02814925, -2.75379348, -1.20165896]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.16245461, -30.45020103, -26.98074150, -26.84484673, -28.18525696,
         -27.81576157, -28.15686417, -28.78010941, -27.20750809, -29.08954620]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.28568268, -30.05389404, -26.65254784, -26.20911598, -27.79642105,
          -27.11515045, -27.72266006, -28.09248543, -27.00338173, -28.69064140],
         [-26.28568268, -30.05389404, -26.65254784, -26.20911598, -27.79642105,
          -27.11515045, -27.72266006, -28.09248543, -27.00338173, -28.69064140]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.36686516, -0.07656670,  1.51073837,  0.82946777,  1.43697739,
           1.80680275,  0.71769905,  2.40495872]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0071 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0749 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 168, vnnlib ID: 168 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-37.59623337, -44.03513718, -34.99274063, -39.10758209, -38.99035263,
         -38.83731461, -41.31068420, -41.91472244, -44.84010696, -44.82291031]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [992]; unstable size 992; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 188, 1, 992] with unstable size 187 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 992] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 992] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [187]; unstable size 187; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 187] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 187] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.45213413, 7.41506672, 2.71325469, 2.54362750, 2.10718083, 4.78180170,
         5.22256088, 8.31979847, 8.16961861]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0805 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 169, vnnlib ID: 169 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-34.54303360, -38.88154221, -30.83317757, -34.28742981, -27.60002899,
         -34.24564362, -35.24066544, -33.09457779, -35.90353775, -39.16663361]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [695]; unstable size 695; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 695] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 42, 1, 695] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 695] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 42, 1, 260] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [41]; unstable size 41; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.54588342, 6.73892403, 0.88919711, 3.84474158, 3.55193210, 4.54788017,
         2.83015013, 4.40190887, 7.20605564]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0651 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 170, vnnlib ID: 170 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-41.74778366, -49.17612839, -38.19394302, -42.06126785, -38.51965332,
         -40.61542130, -43.62789154, -42.37123871, -46.89214706, -49.32076263]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [740]; unstable size 740; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 187, 1, 740] with unstable size 186 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 740] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 740] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [186]; unstable size 186; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 186] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 186] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.33009613,  8.08721924, -2.08942246,  1.91781044, -0.00831011,
          2.67961121,  1.80790937,  6.12998199,  8.12820339]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-41.74778366, -49.17612839, -38.19394302, -42.06126785, -38.51965332,
         -40.61542130, -43.62789154, -42.37123871, -46.89214706, -49.32076263]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-41.74778366, -49.17613220, -38.19394302, -42.06127167, -38.51964951,
          -40.61542130, -43.62788773, -42.37123871, -46.89214706, -49.32075882],
         [-41.74778366, -49.17613220, -38.19394302, -42.06127167, -38.51964951,
          -40.61542130, -43.62788773, -42.37123871, -46.89214706, -49.32075882]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.32570648,  2.09577179]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.84603173, -0.94126981, -0.86190474,  ..., -0.33809513,
            -0.48095238, -0.51269841],
           [-0.25873005, -0.30634910, -0.27460307,  ..., -0.29047608,
            -0.33809513, -0.43333322],
           [ 0.42380959,  0.36031753,  0.39206356,  ..., -0.08412688,
            -0.14761895, -0.32222211],
           ...,
           [ 0.47142863,  0.48730165,  0.55079371,  ...,  0.05873025,
             0.01111121,  0.12222230],
           [ 0.12222230,  0.10634929,  0.23333341,  ..., -0.02063482,
            -0.02063482,  0.16984135],
           [-0.19523799, -0.41746020, -0.29047608,  ...,  0.16984135,
             0.31269848,  0.58253974]],

          [[-0.67632848, -0.78904986, -0.72463763,  ..., -0.03220600,
            -0.17713353, -0.20933965],
           [ 0.04830930, -0.01610294,  0.01610318,  ...,  0.03220624,
            -0.01610294, -0.11272129],
           [ 0.88566834,  0.82125610,  0.85346222,  ...,  0.24154601,
             0.19323683, -0.01610294],
           ...,
           [ 0.95008057,  0.98228669,  1.03059590,  ...,  0.62801939,
             0.56360716,  0.61191636],
           [ 0.70853472,  0.72463775,  0.85346222,  ...,  0.66022551,
             0.62801939,  0.77294695],
           [ 0.46698883,  0.22544295,  0.40257660,  ...,  0.77294695,
             0.85346222,  1.14331758]],

          [[-0.01349309, -0.07346311,  0.03148442,  ...,  0.76611710,
             0.66116959,  0.64617711],
           [-0.02848560, -0.04347810,  0.00149941,  ...,  0.78110963,
             0.78110963,  0.78110963],
           [-0.14842562, -0.19340314, -0.14842562,  ...,  0.81109464,
             0.81109464,  0.76611710],
           ...,
           [-0.53823084, -0.56821585, -0.50824583,  ..., -0.68815589,
            -0.65817088, -0.49325335],
           [-0.58320838, -0.73313338, -0.61319339,  ..., -0.83808094,
            -0.83808094, -0.65817088],
           [-0.80809593, -1.04797614, -0.85307342,  ..., -0.74812591,
            -0.67316341, -0.43328333]]],


         [[[-0.84603173, -0.94126981, -0.86190474,  ..., -0.33809513,
            -0.48095238, -0.51269841],
           [-0.25873005, -0.30634910, -0.27460307,  ..., -0.29047608,
            -0.33809513, -0.43333322],
           [ 0.42380959,  0.36031753,  0.39206356,  ..., -0.08412688,
            -0.14761895, -0.32222211],
           ...,
           [ 0.47142863,  0.48730165,  0.55079371,  ...,  0.05873025,
             0.01111121,  0.12222230],
           [ 0.12222230,  0.10634929,  0.23333341,  ..., -0.02063482,
            -0.02063482,  0.16984135],
           [-0.19523799, -0.41746020, -0.29047608,  ...,  0.16984135,
             0.31269848,  0.58253974]],

          [[-0.67632848, -0.78904986, -0.72463763,  ..., -0.03220600,
            -0.17713353, -0.20933965],
           [ 0.04830930, -0.01610294,  0.01610318,  ...,  0.03220624,
            -0.01610294, -0.11272129],
           [ 0.88566834,  0.82125610,  0.85346222,  ...,  0.24154601,
             0.19323683, -0.01610294],
           ...,
           [ 0.95008057,  0.98228669,  1.03059590,  ...,  0.62801939,
             0.56360716,  0.61191636],
           [ 0.70853472,  0.72463775,  0.85346222,  ...,  0.66022551,
             0.62801939,  0.77294695],
           [ 0.46698883,  0.22544295,  0.40257660,  ...,  0.77294695,
             0.85346222,  1.14331758]],

          [[-0.01349309, -0.07346311,  0.03148442,  ...,  0.76611710,
             0.66116959,  0.64617711],
           [-0.02848560, -0.04347810,  0.00149941,  ...,  0.78110963,
             0.78110963,  0.78110963],
           [-0.14842562, -0.19340314, -0.14842562,  ...,  0.81109464,
             0.81109464,  0.76611710],
           ...,
           [-0.53823084, -0.56821585, -0.50824583,  ..., -0.68815589,
            -0.65817088, -0.49325335],
           [-0.58320838, -0.73313338, -0.61319339,  ..., -0.83808094,
            -0.83808094, -0.65817088],
           [-0.80809593, -1.04797614, -0.85307342,  ..., -0.74812591,
            -0.67316341, -0.43328333]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0421 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 171, vnnlib ID: 171 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-39.80250168, -39.73068237, -37.49077606, -37.24730682, -37.62011719,
         -37.53437042, -32.47105026, -40.06294250, -42.22788239, -37.58474350]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [735]; unstable size 735; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 306, 1, 735] with unstable size 305 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 38, 1, 735] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 735] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [305]; unstable size 305; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 38, 1, 305] with unstable size 37 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 305] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [37]; unstable size 37; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 37] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.01119685, 3.25233722, 1.48510361, 1.89830697, 1.78768969, 2.03773570,
         3.20425892, 5.51380920, 1.53945708]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0567 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 172, vnnlib ID: 172 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-43.98890305, -50.12226486, -45.63433075, -50.57845688, -46.00701141,
         -51.40572357, -50.43606949, -49.37946320, -46.36793900, -50.63626480]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1167]; unstable size 1167; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 349, 1, 1167] with unstable size 348 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 40, 1, 1167] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1167] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [348]; unstable size 348; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 40, 1, 348] with unstable size 39 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 348] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [39]; unstable size 39; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 39] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.97509146, -1.55655742,  2.64282393, -1.55116510,  2.80572319,
          2.47249198,  0.79558182, -1.14298451,  2.77137685]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-43.98890305, -50.12226486, -45.63433075, -50.57845688, -46.00701141,
         -51.40572357, -50.43606949, -49.37946320, -46.36793900, -50.63626480]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.28it/s]100%|██████████| 1/1 [00:00<00:00,  8.27it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-44.84090424, -50.85250473, -45.55117798, -50.68978119, -46.04207230,
          -51.24361801, -50.54381943, -49.34718323, -47.11087418, -51.36852264],
         [-44.84090424, -50.85250473, -45.55117798, -50.68978119, -46.04207230,
          -51.24361801, -50.54381943, -49.34718323, -47.11087418, -51.36852264]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.71027374, 1.20116806, 2.26996994]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1239 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 11.209434509277344
alpha/beta optimization time: 1.3136193752288818
initial alpha-crown bounds: tensor([[ 2.15770006, -1.31470764,  2.84361196, -1.30792463,  3.06769753,
          2.65952778,  1.06118226, -0.92533493,  2.96768188]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 3 ; Worst class: (+ rhs) -1.314707636833191
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50669074058533
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.50664710998535
Verifying property 1 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.31470764]], device='cuda:0') need to verify.
Model prediction is: tensor([-43.98890305, -50.12226486, -45.63433075, -50.57845688, -46.00701141,
        -51.40572357, -50.43606949, -49.37946320, -46.36793900, -50.63626480],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.31470764]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1167
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 334
Node /15 input 0: size torch.Size([100]) unstable 39
-----------------
# of unstable neurons: 1540
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011205673217773438
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 15] 
split level 1: [/input-12, 57] 
split level 2: [/input-12, 92] 
split level 3: [/input-12, 68] 
split level 4: [/input-12, 56] 
split level 5: [/input-12, 71] 
split level 6: [/input-12, 46] 
split level 7: [/input-12, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27775871753692627
10 lb beta sum: 0.0, worst -0.27592289447784424
Time: prepare 0.0018    bound 0.1009    transfer 0.0011    finalize 0.0017    func 0.1075    
Accumulated time: func 0.1075    prepare 0.0022    bound 0.1009    transfer 0.0011    finalize 0.0017    
all_split False
======================Cut inference begins======================
max lb tensor(0.34830093) min lb tensor(-0.27528763)
Number of Verified Splits: 213 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3147025108337402
10 lb beta sum: 0.0, worst -1.3147000074386597
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 4-6: 6
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.20720529556274414 
BICCOS Cumulative time: 0.20720529556274414
Preprocessing time: 0.007045269012451172 Inference time: 0.19787192344665527 Add cuts time: 0.0015799999237060547 Cut analysis time: 0.0007081031799316406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27529 (8), -0.26824 (8), -0.25902 (8), -0.24500 (8), -0.24285 (8), -0.24105 (8), -0.23998 (8), -0.23767 (8), -0.22951 (8), -0.22094 (8), -0.21256 (8), -0.20582 (8), -0.20219 (8), -0.19037 (8), -0.18854 (8), -0.18843 (8), -0.18481 (8), -0.18309 (8), -0.17448 (8), -0.17310 (8), 
Length of domains: 43
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0162    solve 0.1076    add 0.0111    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0162    solve 0.1076    add 0.0111    
Current (lb-rhs): -0.2752876281738281
43 domains visited
Cumulative time: 0.38058900833129883

BaB round 2
batch: 43
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 1: [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] 
split level 2: [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19304561614990234
10 lb beta sum: 0.0, worst -0.1923060417175293
Time: prepare 0.0049    bound 0.1226    transfer 0.0020    finalize 0.0029    func 0.1346    
Accumulated time: func 0.2421    prepare 0.0073    bound 0.2235    transfer 0.0032    finalize 0.0046    
all_split False
======================Cut inference begins======================
max lb tensor(0.73811388) min lb tensor(-0.19200468)
Number of Verified Splits: 280 of 344
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2056450843811035
10 lb beta sum: 0.004372773226350546, worst -1.2033448219299316
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 4-6: 14
#cuts 7-9: 26
#cuts >= 20: 0
BICCOS time: 0.2999441623687744 
BICCOS Cumulative time: 0.5071494579315186
Preprocessing time: 0.010060787200927734 Inference time: 0.2777407169342041 Add cuts time: 0.009852170944213867 Cut analysis time: 0.002290487289428711
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19200 (11), -0.18921 (11), -0.17816 (11), -0.17809 (11), -0.17700 (11), -0.17125 (11), -0.16018 (11), -0.15858 (11), -0.15852 (11), -0.15659 (11), -0.15548 (11), -0.15449 (11), -0.15067 (11), -0.14960 (11), -0.14888 (11), -0.14863 (11), -0.14162 (11), -0.13502 (11), -0.13417 (11), -0.12958 (11), 
Length of domains: 64
Time: pickout 0.0014    decision 0.0236    set_bounds 0.0140    solve 0.1352    add 0.0052    
Accumulated time: pickout 0.0018    decision 0.0470    set_bounds 0.0302    solve 0.2428    add 0.0163    
Current (lb-rhs): -0.19200468063354492
107 domains visited
Cumulative time: 0.8619346618652344

BaB round 3
batch: 64
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 62] [/input-12, 76] [/input-12, 62] [/input-12, 76] [/input-12, 62] [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 62] [/input-12, 76] 
split level 1: [/input-12, 76] [/input-12, 10] [/input-12, 76] [/input-12, 10] [/input-12, 76] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 76] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16421031951904297
10 lb beta sum: 0.0, worst -0.16380620002746582
Time: prepare 0.0037    bound 0.1244    transfer 0.0006    finalize 0.0013    func 0.1317    
Accumulated time: func 0.3739    prepare 0.0112    bound 0.3480    transfer 0.0037    finalize 0.0059    
all_split False
======================Cut inference begins======================
max lb tensor(0.52918005) min lb tensor(-0.16359055)
Number of Verified Splits: 195 of 256
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 6
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.031035661697387695 
BICCOS Cumulative time: 0.5381851196289062
Preprocessing time: 0.007775783538818359 Inference time: 0.02025628089904785 Add cuts time: 0.002414226531982422 Cut analysis time: 0.0005893707275390625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16359 (13), -0.16092 (13), -0.14613 (13), -0.14478 (13), -0.14469 (13), -0.14301 (13), -0.12663 (13), -0.12656 (13), -0.12552 (13), -0.12489 (13), -0.12343 (13), -0.12273 (13), -0.12193 (13), -0.11798 (13), -0.11714 (13), -0.11670 (13), -0.11016 (13), -0.10321 (13), -0.10185 (13), -0.09817 (13), 
Length of domains: 61
Time: pickout 0.0017    decision 0.0152    set_bounds 0.0085    solve 0.1318    add 0.0014    
Accumulated time: pickout 0.0035    decision 0.0622    set_bounds 0.0387    solve 0.3745    add 0.0177    
Current (lb-rhs): -0.16359055042266846
168 domains visited
Cumulative time: 1.0526208877563477

BaB round 4
batch: 61
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 62] [/input-12, 10] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 10] 
split level 1: [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-8, 1900] [/input-8, 1900] [/input-12, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14162170886993408
10 lb beta sum: 0.17484548687934875, worst -0.14131605625152588
Time: prepare 0.0047    bound 0.1304    transfer 0.0014    finalize 0.0018    func 0.1399    
Accumulated time: func 0.5138    prepare 0.0161    bound 0.4783    transfer 0.0051    finalize 0.0077    
all_split False
======================Cut inference begins======================
max lb tensor(0.87736011) min lb tensor(-0.14116561)
Number of Verified Splits: 224 of 244
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.0325772762298584 
BICCOS Cumulative time: 0.5707623958587646
Preprocessing time: 0.007272958755493164 Inference time: 0.023816823959350586 Add cuts time: 0.001302957534790039 Cut analysis time: 0.00018453598022460938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14117 (15), -0.12617 (15), -0.11182 (15), -0.10842 (15), -0.09534 (15), -0.09410 (15), -0.09346 (15), -0.09032 (15), -0.08905 (15), -0.07492 (15), -0.07303 (15), -0.07156 (15), -0.06429 (15), -0.06139 (15), -0.06017 (15), -0.05921 (15), -0.04769 (15), -0.04569 (15), -0.02519 (15), -0.02316 (15), 
Length of domains: 20
Time: pickout 0.0019    decision 0.0144    set_bounds 0.0076    solve 0.1400    add 0.0010    
Accumulated time: pickout 0.0054    decision 0.0765    set_bounds 0.0463    solve 0.5145    add 0.0187    
Current (lb-rhs): -0.1411656141281128
188 domains visited
Cumulative time: 1.2512962818145752

BaB round 5
batch: 20
splitting decisions: 
split level 0: [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 62] [/input-12, 62] [/input-12, 88] 
split level 1: [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-8, 1524] [/input-8, 1574] [/input-8, 1574] [/input-12, 73] [/input-12, 73] [/input-8, 1524] 
split level 2: [/input-8, 1900] [/input-8, 1574] [/input-8, 1900] [/input-8, 1574] [/input-8, 1900] [/input-8, 1885] [/input-8, 1885] [/input-8, 1900] [/input-8, 1574] [/input-8, 1900] 
split level 3: [/input-8, 1574] [/input-8, 1581] [/input-8, 1574] [/input-8, 1581] [/input-8, 1884] [/input-8, 1884] [/input-8, 1884] [/input-8, 1574] [/input-8, 1581] [/input-8, 1884] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09661352634429932

all verified at 2th iter
Time: prepare 0.0070    bound 0.0164    transfer 0.0024    finalize 0.0025    func 0.0303    
Accumulated time: func 0.5441    prepare 0.0233    bound 0.4947    transfer 0.0076    finalize 0.0102    
all_split False
======================Cut inference begins======================
max lb tensor(0.45392084) min lb tensor(0.00255384)
Number of Verified Splits: 320 of 320
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.009345054626464844 
BICCOS Cumulative time: 0.5801074504852295
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0014    decision 0.0166    set_bounds 0.0195    solve 0.0303    add 0.0004    
Accumulated time: pickout 0.0068    decision 0.0932    set_bounds 0.0658    solve 0.5448    add 0.0191    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
188 domains visited
Cumulative time: 1.329930305480957


Properties batch 2, size 1
Remaining timeout: 196.92890906333923
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 196.9288158416748
Verifying property 3 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.30792463]], device='cuda:0') need to verify.
Model prediction is: tensor([-43.98890305, -50.12226486, -45.63433075, -50.57845688, -46.00701141,
        -51.40572357, -50.43606949, -49.37946320, -46.36793900, -50.63626480],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.30792463]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1167
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 334
Node /15 input 0: size torch.Size([100]) unstable 39
-----------------
# of unstable neurons: 1540
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010085105895996094
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 88] 
split level 1: [/input-12, 71] 
split level 2: [/input-12, 58] 
split level 3: [/input-12, 95] 
split level 4: [/input-12, 68] 
split level 5: [/input-12, 15] 
split level 6: [/input-12, 56] 
split level 7: [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.45584219694137573
10 lb beta sum: 0.0, worst -0.4548567533493042
Time: prepare 0.0020    bound 0.1019    transfer 0.0019    finalize 0.0020    func 0.1097    
Accumulated time: func 0.1097    prepare 0.0024    bound 0.1019    transfer 0.0019    finalize 0.0020    
all_split False
======================Cut inference begins======================
max lb tensor(1.10894442) min lb tensor(-0.45444804)
Number of Verified Splits: 229 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3079171180725098
10 lb beta sum: 0.0, worst -1.3079261779785156
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 4-6: 20
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.20403623580932617 
BICCOS Cumulative time: 0.20403623580932617
Preprocessing time: 0.007086038589477539 Inference time: 0.19190239906311035 Add cuts time: 0.00368499755859375 Cut analysis time: 0.0013628005981445312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.45445 (8), -0.44551 (8), -0.42187 (8), -0.41131 (8), -0.36531 (8), -0.35877 (8), -0.35546 (8), -0.34872 (8), -0.19660 (8), -0.18717 (8), -0.15689 (8), -0.15461 (8), -0.09872 (8), -0.09700 (8), -0.09335 (8), -0.08597 (8), -0.08323 (8), -0.07115 (8), -0.06774 (8), -0.06572 (8), 
Length of domains: 27
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0170    solve 0.1097    add 0.0704    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0170    solve 0.1097    add 0.0704    
Current (lb-rhs): -0.45444804430007935
27 domains visited
Cumulative time: 0.44860410690307617

BaB round 2
batch: 27
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 1: [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] 
split level 2: [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-8, 1524] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.36641058325767517
10 lb beta sum: 0.0, worst -0.36588937044143677
Time: prepare 0.0034    bound 0.1259    transfer 0.0013    finalize 0.0019    func 0.1340    
Accumulated time: func 0.2436    prepare 0.0060    bound 0.2278    transfer 0.0032    finalize 0.0039    
all_split False
======================Cut inference begins======================
max lb tensor(0.83290958) min lb tensor(-0.36559984)
Number of Verified Splits: 192 of 216
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2422606945037842
10 lb beta sum: 0.146467924118042, worst -1.2383053302764893
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 76.
#cuts 4-6: 33
#cuts 7-9: 43
#cuts >= 20: 0
BICCOS time: 0.25430941581726074 
BICCOS Cumulative time: 0.4583456516265869
Preprocessing time: 0.006476402282714844 Inference time: 0.22783565521240234 Add cuts time: 0.013617753982543945 Cut analysis time: 0.006379604339599609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36560 (11), -0.35638 (11), -0.35629 (11), -0.34540 (11), -0.33108 (11), -0.32541 (11), -0.32111 (11), -0.31318 (11), -0.27327 (11), -0.27169 (11), -0.26650 (11), -0.26605 (11), -0.26390 (11), -0.26318 (11), -0.25711 (11), -0.25628 (11), -0.11800 (11), -0.10803 (11), -0.07008 (11), -0.05992 (11), 
Length of domains: 24
Time: pickout 0.0041    decision 0.0134    set_bounds 0.0086    solve 0.1340    add 0.0012    
Accumulated time: pickout 0.0045    decision 0.0373    set_bounds 0.0257    solve 0.2438    add 0.0717    
Current (lb-rhs): -0.3655998408794403
51 domains visited
Cumulative time: 0.8657641410827637

BaB round 3
batch: 24
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 1: [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] 
split level 2: [/input-8, 1524] [/input-12, 29] [/input-12, 35] [/input-8, 1524] [/input-8, 1524] [/input-12, 29] [/input-8, 1524] [/input-12, 29] [/input-12, 35] [/input-8, 1524] 
split level 3: [/input-12, 29] [/input-8, 1524] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 94] [/input-12, 29] [/input-12, 94] [/input-12, 29] [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.297992080450058
10 lb beta sum: 0.0, worst -0.29757556319236755
Time: prepare 0.0075    bound 0.1244    transfer 0.0032    finalize 0.0034    func 0.1410    
Accumulated time: func 0.3847    prepare 0.0137    bound 0.3522    transfer 0.0065    finalize 0.0074    
all_split False
======================Cut inference begins======================
max lb tensor(0.97559112) min lb tensor(-0.29741088)
Number of Verified Splits: 316 of 384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 6
#cuts 4-6: 7
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.05459427833557129 
BICCOS Cumulative time: 0.5129399299621582
Preprocessing time: 0.0112457275390625 Inference time: 0.03629446029663086 Add cuts time: 0.0059053897857666016 Cut analysis time: 0.0011487007141113281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29741 (15), -0.28924 (15), -0.28812 (15), -0.27886 (15), -0.26423 (15), -0.25874 (15), -0.25658 (15), -0.25493 (15), -0.24923 (15), -0.24719 (15), -0.24682 (15), -0.23790 (15), -0.22653 (15), -0.22325 (15), -0.21680 (15), -0.21126 (15), -0.20958 (15), -0.20802 (15), -0.19225 (15), -0.19144 (15), 
Length of domains: 68
Time: pickout 0.0015    decision 0.0163    set_bounds 0.0184    solve 0.1416    add 0.0017    
Accumulated time: pickout 0.0060    decision 0.0535    set_bounds 0.0441    solve 0.3854    add 0.0734    
Current (lb-rhs): -0.29741087555885315
119 domains visited
Cumulative time: 1.1014044284820557

BaB round 4
batch: 68
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 89] [/input-8, 354] [/input-12, 89] [/input-8, 354] [/input-12, 89] [/input-8, 354] [/input-12, 89] [/input-8, 354] [/input-12, 89] [/input-8, 354] 
split level 1: [/input-8, 1508] [/input-12, 94] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-12, 94] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27693355083465576
10 lb beta sum: 0.33545050024986267, worst -0.2680822014808655
Time: prepare 0.0054    bound 0.1245    transfer 0.0017    finalize 0.0018    func 0.1352    
Accumulated time: func 0.5198    prepare 0.0194    bound 0.4768    transfer 0.0082    finalize 0.0091    
all_split False
======================Cut inference begins======================
max lb tensor(0.93255639) min lb tensor(-0.26777875)
Number of Verified Splits: 249 of 272
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.04124116897583008 
BICCOS Cumulative time: 0.5541810989379883
Preprocessing time: 0.008086681365966797 Inference time: 0.03001117706298828 Add cuts time: 0.0028204917907714844 Cut analysis time: 0.0003228187561035156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26778 (17), -0.23820 (17), -0.22760 (17), -0.19837 (17), -0.17149 (17), -0.15051 (17), -0.14458 (17), -0.14111 (17), -0.13380 (17), -0.12291 (17), -0.11772 (17), -0.11085 (17), -0.10337 (17), -0.10237 (17), -0.08412 (17), -0.08003 (17), -0.07661 (17), -0.05294 (17), -0.05173 (17), -0.04006 (17), 
Length of domains: 23
Time: pickout 0.0021    decision 0.0153    set_bounds 0.0100    solve 0.1353    add 0.0193    
Accumulated time: pickout 0.0081    decision 0.0688    set_bounds 0.0541    solve 0.5207    add 0.0926    
Current (lb-rhs): -0.26777875423431396
142 domains visited
Cumulative time: 1.3283867835998535

BaB round 5
batch: 23
splitting decisions: 
split level 0: [/input-12, 76] [/input-12, 89] [/input-12, 76] [/input-12, 89] [/input-12, 76] [/input-12, 89] [/input-12, 76] [/input-12, 89] [/input-12, 89] [/input-12, 89] 
split level 1: [/input-8, 354] [/input-8, 1508] [/input-8, 354] [/input-8, 1514] [/input-8, 354] [/input-8, 1508] [/input-8, 354] [/input-8, 1514] [/input-8, 1514] [/input-8, 1508] 
split level 2: [/input-12, 94] [/input-8, 1900] [/input-12, 94] [/input-8, 1508] [/input-8, 1514] [/input-8, 1900] [/input-8, 1514] [/input-8, 1508] [/input-8, 1508] [/input-8, 1900] 
split level 3: [/input-8, 1900] [/input-8, 1362] [/input-8, 1900] [/input-8, 1900] [/input-12, 94] [/input-8, 1362] [/input-12, 94] [/input-8, 1900] [/input-8, 1900] [/input-8, 1362] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21151471138000488
10 lb beta sum: 0.14784379303455353, worst -0.008315831422805786

all verified at 14th iter
Time: prepare 0.0075    bound 0.0868    transfer 0.0020    finalize 0.0044    func 0.1037    
Accumulated time: func 0.6235    prepare 0.0272    bound 0.5636    transfer 0.0102    finalize 0.0135    
all_split False
======================Cut inference begins======================
max lb tensor(0.54600883) min lb tensor(0.00035483)
Number of Verified Splits: 368 of 368
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.013024091720581055 
BICCOS Cumulative time: 0.5672051906585693
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0023    decision 0.0173    set_bounds 0.0231    solve 0.1038    add 0.0007    
Accumulated time: pickout 0.0104    decision 0.0861    set_bounds 0.0773    solve 0.6245    add 0.0934    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
142 domains visited
Cumulative time: 1.490828514099121


Properties batch 4, size 1
Remaining timeout: 195.04980158805847
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 195.04971885681152
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 195.0488727092743
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 195.04882955551147
Verifying property 7 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.92533493]], device='cuda:0') need to verify.
Model prediction is: tensor([-43.98890305, -50.12226486, -45.63433075, -50.57845688, -46.00701141,
        -51.40572357, -50.43606949, -49.37946320, -46.36793900, -50.63626480],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.92533493]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1167
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 334
Node /15 input 0: size torch.Size([100]) unstable 39
-----------------
# of unstable neurons: 1540
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011324882507324219
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 84] 
split level 1: [/input-12, 74] 
split level 2: [/input-12, 31] 
split level 3: [/input-12, 0] 
split level 4: [/input-12, 75] 
split level 5: [/input-12, 35] 
split level 6: [/input-12, 46] 
split level 7: [/input-12, 6] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09142923355102539
10 lb beta sum: 0.0, worst -0.08909296989440918
Time: prepare 0.0018    bound 0.1012    transfer 0.0006    finalize 0.0018    func 0.1073    
Accumulated time: func 0.1073    prepare 0.0023    bound 0.1012    transfer 0.0006    finalize 0.0018    
all_split False
======================Cut inference begins======================
max lb tensor(2.72515297) min lb tensor(-0.08814859)
Number of Verified Splits: 252 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.925326943397522
10 lb beta sum: 0.0, worst -0.9253337383270264
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 14
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.22242283821105957 
BICCOS Cumulative time: 0.22242283821105957
Preprocessing time: 0.007312297821044922 Inference time: 0.2093968391418457 Add cuts time: 0.0047495365142822266 Cut analysis time: 0.0009641647338867188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08815 (8), -0.07426 (8), -0.06763 (8), -0.05345 (8), 
Length of domains: 4
Time: pickout 0.0004    decision 0.0258    set_bounds 0.0169    solve 0.1074    add 0.0292    
Accumulated time: pickout 0.0004    decision 0.0258    set_bounds 0.0169    solve 0.1074    add 0.0292    
Current (lb-rhs): -0.08814859390258789
4 domains visited
Cumulative time: 0.41245317459106445

BaB round 2
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 1: [/input-12, 76] [/input-12, 76] [/input-12, 76] [/input-12, 76] 
split level 2: [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] 
split level 3: [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] 
split level 4: [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] 
split level 5: [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.17460393905639648

all verified at 0th iter
Time: prepare 0.0038    bound 0.0062    transfer 0.0009    finalize 0.0013    func 0.0138    
Accumulated time: func 0.1211    prepare 0.0064    bound 0.1074    transfer 0.0015    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(1.01113605) min lb tensor(0.17460394)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 22.
#cuts 1-3: 6
#cuts 4-6: 14
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.0074803829193115234 
BICCOS Cumulative time: 0.2299032211303711
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0183    set_bounds 0.0148    solve 0.0139    add 0.0001    
Accumulated time: pickout 0.0012    decision 0.0441    set_bounds 0.0317    solve 0.1213    add 0.0292    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.46921467781066895


Properties batch 8, size 1
Remaining timeout: 194.31436204910278
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 5.6857 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 173, vnnlib ID: 173 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.78411484, -36.34281540, -34.87250519, -31.82620049, -34.66961670,
         -33.60900116, -32.16569138, -36.47967148, -38.10112762, -35.61487961]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [780]; unstable size 780; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 394, 1, 780] with unstable size 393 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 50, 1, 780] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 780] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [393]; unstable size 393; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 50, 1, 393] with unstable size 49 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 393] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [49]; unstable size 49; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 49] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.25608814, -0.41586256, -1.04909277, -0.91523743, -0.05380052,
         -3.07325411,  0.76806462,  1.25724363, -0.47221386]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.78411484, -36.34281540, -34.87250519, -31.82620049, -34.66961670,
         -33.60900116, -32.16569138, -36.47967148, -38.10112762, -35.61487961]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-36.40723801, -37.02566910, -35.10868073, -32.55363464, -34.98883057,
          -34.36959839, -31.70880508, -37.09785080, -38.79841614, -36.31719589],
         [-36.40723801, -37.02566910, -35.10868073, -32.55363464, -34.98883057,
          -34.36959839, -31.70880508, -37.09785080, -38.79841614, -36.31719589]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 3.85360336,  4.47203445,  2.55504608,  2.43519592,  1.81596375,
          -0.84482956,  3.76356125]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0078 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0530 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 174, vnnlib ID: 174 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.49399567, -40.47394562, -32.72596741, -34.14984894, -31.15039635,
         -34.62684631, -34.39684677, -33.89601898, -36.95606613, -39.19851303]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [914]; unstable size 914; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 396, 1, 914] with unstable size 395 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 57, 1, 914] with unstable size 56 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 914] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [395]; unstable size 395; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 57, 1, 395] with unstable size 56 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 395] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [56]; unstable size 56; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 56] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.12591398,  3.41558886, -2.11309695, -1.03666711, -1.18056703,
         -1.06250751, -1.47993100,  0.64869273,  1.83870602]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.49399567, -40.47394562, -32.72596741, -34.14984894, -31.15039635,
         -34.62684631, -34.39684677, -33.89601898, -36.95606613, -39.19851303]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.94it/s]100%|██████████| 1/1 [00:00<00:00,  7.93it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.04377747, -40.21558380, -32.18741226, -34.05782318, -31.72086525,
          -34.58235931, -34.22533417, -34.45622635, -36.56072235, -39.05823135],
         [-35.04377747, -40.21558380, -32.18741226, -34.05782318, -31.72086525,
          -34.58235931, -34.22533417, -34.45622635, -36.56072235, -39.05823135]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[3.32291222, 0.46654701, 2.33695793, 2.86149406, 2.50446892,
          2.73536110]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1293 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 1.1429535150527954
alpha/beta optimization time: 1.3237361907958984
initial alpha-crown bounds: tensor([[-0.60956717,  3.84988451, -1.77513957, -0.75303030, -0.90126061,
         -0.71952760, -1.20421827,  1.04713380,  2.20867872]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 6 ; Worst class: (+ rhs) -1.775139570236206
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.4576768875122
Verifying property 0 with 1 instances.
##### Instance 174 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.60956717]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.49399567, -40.47394562, -32.72596741, -34.14984894, -31.15039635,
        -34.62684631, -34.39684677, -33.89601898, -36.95606613, -39.19851303],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.60956717]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 914
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 388
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1355
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001087188720703125
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 30] 
split level 1: [/input-12, 1] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 28] 
split level 4: [/input-12, 51] 
split level 5: [/input-12, 43] 
split level 6: [/input-12, 65] 
split level 7: [/input-12, 49] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.8387824296951294

all verified at 0th iter
Time: prepare 0.0020    bound 0.0043    transfer 0.0009    finalize 0.0022    func 0.0114    
Accumulated time: func 0.0114    prepare 0.0024    bound 0.0043    transfer 0.0009    finalize 0.0022    
all_split False
======================Cut inference begins======================
max lb tensor(2.41685343) min lb tensor(0.83878243)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.0071086883544921875 
BICCOS Cumulative time: 0.0071086883544921875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0164    solve 0.0114    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0233    set_bounds 0.0164    solve 0.0114    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06360745429992676


Properties batch 1, size 1
Remaining timeout: 198.17471504211426
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.17446947097778
Verifying property 2 with 1 instances.
##### Instance 174 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.77513957]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.49399567, -40.47394562, -32.72596741, -34.14984894, -31.15039635,
        -34.62684631, -34.39684677, -33.89601898, -36.95606613, -39.19851303],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.77513957]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 914
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 388
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1355
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010228157043457031
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 57] 
split level 1: [/input-12, 30] 
split level 2: [/input-12, 92] 
split level 3: [/input-12, 83] 
split level 4: [/input-12, 28] 
split level 5: [/input-12, 51] 
split level 6: [/input-12, 65] 
split level 7: [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6979200839996338
10 lb beta sum: 0.0, worst -0.693434476852417
Time: prepare 0.0018    bound 0.1007    transfer 0.0005    finalize 0.0015    func 0.1063    
Accumulated time: func 0.1063    prepare 0.0022    bound 0.1007    transfer 0.0005    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(0.72134113) min lb tensor(-0.69199467)
Number of Verified Splits: 137 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.7751319408416748
10 lb beta sum: 0.0, worst -1.7751641273498535
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 4-6: 6
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.18129229545593262 
BICCOS Cumulative time: 0.18129229545593262
Preprocessing time: 0.006871938705444336 Inference time: 0.17257261276245117 Add cuts time: 0.0009686946868896484 Cut analysis time: 0.0008790493011474609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.69199 (8), -0.67969 (8), -0.65526 (8), -0.64919 (8), -0.64651 (8), -0.64323 (8), -0.64020 (8), -0.63263 (8), -0.61837 (8), -0.61705 (8), -0.61398 (8), -0.61082 (8), -0.60991 (8), -0.60893 (8), -0.60448 (8), -0.60328 (8), -0.59850 (8), -0.59354 (8), -0.59134 (8), -0.58348 (8), 
Length of domains: 119
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0162    solve 0.1064    add 0.0765    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0162    solve 0.1064    add 0.0765    
Current (lb-rhs): -0.6919946670532227
119 domains visited
Cumulative time: 0.4153594970703125

BaB round 2
batch: 119
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6588482856750488
10 lb beta sum: 0.0, worst -0.6572127342224121
Time: prepare 0.0036    bound 0.1387    transfer 0.0006    finalize 0.0013    func 0.1458    
Accumulated time: func 0.2521    prepare 0.0061    bound 0.2393    transfer 0.0011    finalize 0.0027    
all_split False
======================Cut inference begins======================
max lb tensor(0.22746348) min lb tensor(-0.65635109)
Number of Verified Splits: 64 of 238
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.27775239944458
10 lb beta sum: 0.22140011191368103, worst -1.1115318536758423
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 4-6: 6
#cuts 7-9: 9
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.17696142196655273 
BICCOS Cumulative time: 0.35825371742248535
Preprocessing time: 0.00732421875 Inference time: 0.16781234741210938 Add cuts time: 0.0006947517395019531 Cut analysis time: 0.0011301040649414062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.65635 (9), -0.64449 (9), -0.62121 (9), -0.61152 (9), -0.61075 (9), -0.60813 (9), -0.60228 (9), -0.59675 (9), -0.58235 (9), -0.58163 (9), -0.57711 (9), -0.57348 (9), -0.57264 (9), -0.57180 (9), -0.56950 (9), -0.56316 (9), -0.56310 (9), -0.55507 (9), -0.55305 (9), -0.54771 (9), 
Length of domains: 174
Time: pickout 0.0065    decision 0.0228    set_bounds 0.0070    solve 0.1459    add 0.0762    
Accumulated time: pickout 0.0069    decision 0.0460    set_bounds 0.0232    solve 0.2522    add 0.1526    
Current (lb-rhs): -0.6563510894775391
293 domains visited
Cumulative time: 0.8583824634552002

BaB round 3
batch: 174
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6235888004302979
10 lb beta sum: 0.0, worst -0.6225550174713135
Time: prepare 0.0051    bound 0.1317    transfer 0.0007    finalize 0.0017    func 0.1415    
Accumulated time: func 0.3936    prepare 0.0114    bound 0.3711    transfer 0.0019    finalize 0.0044    
all_split False
======================Cut inference begins======================
max lb tensor(0.23387671) min lb tensor(-0.62201977)
Number of Verified Splits: 107 of 348
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.4187239408493042
10 lb beta sum: 0.131150484085083, worst -1.2654523849487305
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 4-6: 6
#cuts 7-9: 13
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 0.20510196685791016 
BICCOS Cumulative time: 0.5633556842803955
Preprocessing time: 0.010453462600708008 Inference time: 0.19139575958251953 Add cuts time: 0.0017671585083007812 Cut analysis time: 0.001485586166381836
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.62202 (10), -0.61019 (10), -0.58695 (10), -0.57706 (10), -0.57589 (10), -0.57458 (10), -0.56753 (10), -0.56197 (10), -0.54861 (10), -0.54787 (10), -0.54061 (10), -0.53862 (10), -0.53851 (10), -0.53617 (10), -0.53598 (10), -0.52862 (10), -0.52687 (10), -0.52155 (10), -0.51616 (10), -0.51454 (10), 
Length of domains: 241
Time: pickout 0.0156    decision 0.0240    set_bounds 0.0102    solve 0.1416    add 0.0377    
Accumulated time: pickout 0.0225    decision 0.0700    set_bounds 0.0334    solve 0.3938    add 0.1903    
Current (lb-rhs): -0.6220197677612305
534 domains visited
Cumulative time: 1.2941014766693115

BaB round 4
batch: 241
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.564260721206665
10 lb beta sum: 0.0, worst -0.5630333423614502
Time: prepare 0.0072    bound 0.1358    transfer 0.0026    finalize 0.0023    func 0.1509    
Accumulated time: func 0.5445    prepare 0.0187    bound 0.5069    transfer 0.0045    finalize 0.0067    
all_split False
======================Cut inference begins======================
max lb tensor(0.07641768) min lb tensor(-0.56259179)
Number of Verified Splits: 117 of 482
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 2
#cuts 4-6: 9
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.029704570770263672 
BICCOS Cumulative time: 0.5930602550506592
Preprocessing time: 0.014076948165893555 Inference time: 0.012511491775512695 Add cuts time: 0.0023415088653564453 Cut analysis time: 0.0007746219635009766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.56259 (11), -0.55020 (11), -0.53518 (11), -0.52823 (11), -0.52081 (11), -0.51701 (11), -0.51638 (11), -0.51523 (11), -0.50809 (11), -0.50220 (11), -0.49930 (11), -0.48933 (11), -0.48931 (11), -0.48806 (11), -0.48710 (11), -0.48313 (11), -0.48019 (11), -0.47667 (11), -0.47602 (11), -0.47557 (11), 
Length of domains: 365
Time: pickout 0.0040    decision 0.0278    set_bounds 0.0138    solve 0.1515    add 0.0461    
Accumulated time: pickout 0.0265    decision 0.0979    set_bounds 0.0472    solve 0.5453    add 0.2364    
Current (lb-rhs): -0.5625917911529541
899 domains visited
Cumulative time: 1.568270206451416

BaB round 5
batch: 365
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-12, 1] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5298810005187988
10 lb beta sum: 0.022046657279133797, worst -0.5290355682373047
Time: prepare 0.0116    bound 0.1349    transfer 0.0013    finalize 0.0034    func 0.1561    
Accumulated time: func 0.7006    prepare 0.0306    bound 0.6418    transfer 0.0058    finalize 0.0101    
all_split False
======================Cut inference begins======================
max lb tensor(0.28803179) min lb tensor(-0.52865076)
Number of Verified Splits: 188 of 730
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 3
#cuts 4-6: 6
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.04601645469665527 
BICCOS Cumulative time: 0.6390767097473145
Preprocessing time: 0.02137017250061035 Inference time: 0.021847963333129883 Add cuts time: 0.002143383026123047 Cut analysis time: 0.0006549358367919922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52865 (12), -0.51665 (12), -0.50226 (12), -0.49447 (12), -0.48757 (12), -0.48353 (12), -0.48133 (12), -0.48082 (12), -0.47317 (12), -0.46978 (12), -0.46620 (12), -0.45722 (12), -0.45364 (12), -0.45285 (12), -0.45091 (12), -0.45056 (12), -0.44408 (12), -0.44272 (12), -0.44181 (12), -0.44162 (12), 
Length of domains: 542
Time: pickout 0.0042    decision 0.0360    set_bounds 0.0225    solve 0.1562    add 0.0056    
Accumulated time: pickout 0.0306    decision 0.1338    set_bounds 0.0697    solve 0.7016    add 0.2420    
Current (lb-rhs): -0.5286507606506348
1441 domains visited
Cumulative time: 1.8406989574432373

BaB round 6
batch: 542
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.48721837997436523
10 lb beta sum: 0.13310374319553375, worst -0.48637866973876953
Time: prepare 0.0156    bound 0.1389    transfer 0.0064    finalize 0.0053    func 0.1741    
Accumulated time: func 0.8747    prepare 0.0464    bound 0.7807    transfer 0.0122    finalize 0.0153    
all_split False
======================Cut inference begins======================
max lb tensor(0.35215348) min lb tensor(-0.48602533)
Number of Verified Splits: 283 of 1084
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 4
#cuts 4-6: 4
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.0692753791809082 
BICCOS Cumulative time: 0.7083520889282227
Preprocessing time: 0.033705711364746094 Inference time: 0.032286643981933594 Add cuts time: 0.002554655075073242 Cut analysis time: 0.0007283687591552734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.48603 (13), -0.47330 (13), -0.46123 (13), -0.45724 (13), -0.45438 (13), -0.45137 (13), -0.44355 (13), -0.44254 (13), -0.44192 (13), -0.43877 (13), -0.43822 (13), -0.43245 (13), -0.42994 (13), -0.42823 (13), -0.42740 (13), -0.42135 (13), -0.41531 (13), -0.41440 (13), -0.41382 (13), -0.41261 (13), 
Length of domains: 801
Time: pickout 0.0090    decision 0.0450    set_bounds 0.0317    solve 0.1743    add 0.0058    
Accumulated time: pickout 0.0396    decision 0.1788    set_bounds 0.1014    solve 0.8759    add 0.2479    
Current (lb-rhs): -0.486025333404541
2242 domains visited
Cumulative time: 2.1783480644226074

BaB round 7
batch: 801
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.47016215324401855
10 lb beta sum: 0.1051187515258789, worst -0.46970033645629883
Time: prepare 0.0230    bound 0.1505    transfer 0.0086    finalize 0.0079    func 0.2018    
Accumulated time: func 1.0765    prepare 0.0697    bound 0.9312    transfer 0.0208    finalize 0.0233    
all_split False
======================Cut inference begins======================
max lb tensor(0.48265475) min lb tensor(-0.46963549)
Number of Verified Splits: 844 of 1602
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 5
#cuts 4-6: 6
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.1642611026763916 
BICCOS Cumulative time: 0.8726131916046143
Preprocessing time: 0.05652594566345215 Inference time: 0.09961843490600586 Add cuts time: 0.007323026657104492 Cut analysis time: 0.0007936954498291016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.46964 (14), -0.45739 (14), -0.44483 (14), -0.44104 (14), -0.43798 (14), -0.43499 (14), -0.42671 (14), -0.42633 (14), -0.42569 (14), -0.42248 (14), -0.42110 (14), -0.41610 (14), -0.41288 (14), -0.41222 (14), -0.41084 (14), -0.40484 (14), -0.39839 (14), -0.39742 (14), -0.39643 (14), -0.39567 (14), 
Length of domains: 758
Time: pickout 0.0121    decision 0.0603    set_bounds 0.2188    solve 0.2021    add 0.0280    
Accumulated time: pickout 0.0517    decision 0.2391    set_bounds 0.3202    solve 1.0780    add 0.2759    
Current (lb-rhs): -0.4696354866027832
3000 domains visited
Cumulative time: 2.8715481758117676

BaB round 8
batch: 758
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.449993371963501
10 lb beta sum: 0.11979155242443085, worst -0.449782133102417
Time: prepare 0.0221    bound 0.1481    transfer 0.0152    finalize 0.0068    func 0.2026    
Accumulated time: func 1.2790    prepare 0.0920    bound 1.0794    transfer 0.0360    finalize 0.0300    
all_split False
======================Cut inference begins======================
max lb tensor(0.30580896) min lb tensor(-0.44974136)
Number of Verified Splits: 728 of 1516
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 6
#cuts 4-6: 7
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.14509868621826172 
BICCOS Cumulative time: 1.017711877822876
Preprocessing time: 0.04649925231933594 Inference time: 0.09020113945007324 Add cuts time: 0.007573127746582031 Cut analysis time: 0.0008251667022705078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.44974 (15), -0.43789 (15), -0.42438 (15), -0.42192 (15), -0.41762 (15), -0.41499 (15), -0.40728 (15), -0.40695 (15), -0.40694 (15), -0.40297 (15), -0.40164 (15), -0.39617 (15), -0.39352 (15), -0.39350 (15), -0.38994 (15), -0.38569 (15), -0.37891 (15), -0.37778 (15), -0.37640 (15), -0.37603 (15), 
Length of domains: 788
Time: pickout 0.0103    decision 0.0573    set_bounds 0.0433    solve 0.2029    add 0.0050    
Accumulated time: pickout 0.0620    decision 0.2964    set_bounds 0.3635    solve 1.2809    add 0.2808    
Current (lb-rhs): -0.4497413635253906
3788 domains visited
Cumulative time: 3.3409392833709717

BaB round 9
batch: 788
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 97] [/input-12, 97] [/input-12, 9] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.406832218170166
10 lb beta sum: 0.11478623002767563, worst -0.48582857847213745
Time: prepare 0.0225    bound 0.1436    transfer 0.0159    finalize 0.0084    func 0.3292    
Accumulated time: func 1.6082    prepare 0.1147    bound 1.2230    transfer 0.0519    finalize 0.0385    
all_split False
======================Cut inference begins======================
max lb tensor(0.26831007) min lb tensor(-0.40631914)
Number of Verified Splits: 346 of 1576
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 7
#cuts 4-6: 6
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.10335683822631836 
BICCOS Cumulative time: 1.1210687160491943
Preprocessing time: 0.05097055435180664 Inference time: 0.04722952842712402 Add cuts time: 0.004197597503662109 Cut analysis time: 0.0009591579437255859
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40632 (16), -0.40331 (16), -0.39478 (16), -0.39138 (16), -0.38142 (16), -0.37828 (16), -0.37642 (16), -0.37565 (16), -0.37488 (16), -0.37142 (16), -0.37043 (16), -0.36965 (16), -0.36442 (16), -0.36418 (16), -0.36338 (16), -0.36147 (16), -0.35937 (16), -0.35924 (16), -0.35922 (16), -0.35692 (16), 
Length of domains: 1230
Time: pickout 0.0123    decision 0.0597    set_bounds 0.0468    solve 0.3296    add 0.0082    
Accumulated time: pickout 0.0744    decision 0.3561    set_bounds 0.4103    solve 1.6105    add 0.2890    
Current (lb-rhs): -0.40631914138793945
5018 domains visited
Cumulative time: 3.9063799381256104

BaB round 10
batch: 1230
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 9] [/input-12, 85] [/input-12, 97] [/input-12, 9] [/input-12, 9] [/input-12, 85] [/input-12, 9] [/input-12, 85] [/input-12, 9] [/input-12, 9] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.381389856338501
10 lb beta sum: 0.11827293038368225, worst -0.3811976909637451
Time: prepare 0.0363    bound 0.1749    transfer 0.0109    finalize 0.0112    func 0.2503    
Accumulated time: func 1.8585    prepare 0.1512    bound 1.3978    transfer 0.0629    finalize 0.0497    
all_split False
======================Cut inference begins======================
max lb tensor(0.32506990) min lb tensor(-0.38114810)
Number of Verified Splits: 734 of 2460
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 7
#cuts 4-6: 9
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.18816423416137695 
BICCOS Cumulative time: 1.3092329502105713
Preprocessing time: 0.07639169692993164 Inference time: 0.10124492645263672 Add cuts time: 0.009473323822021484 Cut analysis time: 0.0010542869567871094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38115 (17), -0.37883 (17), -0.37010 (17), -0.36708 (17), -0.35484 (17), -0.35236 (17), -0.35003 (17), -0.34997 (17), -0.34856 (17), -0.34632 (17), -0.34463 (17), -0.34431 (17), -0.33874 (17), -0.33776 (17), -0.33713 (17), -0.33555 (17), -0.33411 (17), -0.33399 (17), -0.33264 (17), -0.33183 (17), 
Length of domains: 1726
Time: pickout 0.0159    decision 0.0866    set_bounds 0.0722    solve 0.2507    add 0.0150    
Accumulated time: pickout 0.0903    decision 0.4427    set_bounds 0.4825    solve 1.8612    add 0.3040    
Current (lb-rhs): -0.381148099899292
6744 domains visited
Cumulative time: 4.544496536254883

BaB round 11
batch: 1726
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 9] [/input-12, 48] [/input-12, 85] [/input-12, 9] [/input-12, 48] [/input-12, 9] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.35309159755706787
10 lb beta sum: 0.22458600997924805, worst -0.42724665999412537
Time: prepare 0.0559    bound 0.2205    transfer 0.0164    finalize 0.0169    func 0.3329    
Accumulated time: func 2.1914    prepare 0.2074    bound 1.6184    transfer 0.0793    finalize 0.0666    
all_split False
======================Cut inference begins======================
max lb tensor(0.54793727) min lb tensor(-0.35285282)
Number of Verified Splits: 2101 of 3452
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 12
#cuts 4-6: 2
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.5648622512817383 
BICCOS Cumulative time: 1.8740952014923096
Preprocessing time: 0.10504579544067383 Inference time: 0.43696093559265137 Add cuts time: 0.022190332412719727 Cut analysis time: 0.0006651878356933594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35285 (18), -0.35054 (18), -0.34147 (18), -0.33854 (18), -0.32706 (18), -0.32406 (18), -0.32240 (18), -0.32145 (18), -0.32037 (18), -0.31838 (18), -0.31788 (18), -0.31646 (18), -0.31621 (18), -0.31356 (18), -0.31257 (18), -0.31130 (18), -0.30937 (18), -0.30936 (18), -0.30848 (18), -0.30712 (18), 
Length of domains: 1351
Time: pickout 0.0256    decision 0.1115    set_bounds 0.2751    solve 0.3337    add 0.0149    
Accumulated time: pickout 0.1158    decision 0.5541    set_bounds 0.7576    solve 2.1949    add 0.3189    
Current (lb-rhs): -0.35285282135009766
8095 domains visited
Cumulative time: 5.895350217819214

BaB round 12
batch: 1351
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 87] [/input-12, 48] [/input-12, 48] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3297412395477295
10 lb beta sum: 0.4768737554550171, worst -0.3192673921585083
Time: prepare 0.0400    bound 0.1858    transfer 0.0143    finalize 0.0159    func 0.2738    
Accumulated time: func 2.4652    prepare 0.2477    bound 1.8042    transfer 0.0936    finalize 0.0825    
all_split False
======================Cut inference begins======================
max lb tensor(1.21425319) min lb tensor(-0.31923389)
Number of Verified Splits: 2447 of 2702
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 19
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.4495127201080322 
BICCOS Cumulative time: 2.323607921600342
Preprocessing time: 0.08385705947875977 Inference time: 0.3446226119995117 Add cuts time: 0.02025747299194336 Cut analysis time: 0.0007755756378173828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31923 (19), -0.31716 (19), -0.30783 (19), -0.30517 (19), -0.29286 (19), -0.28924 (19), -0.28825 (19), -0.28696 (19), -0.28600 (19), -0.28224 (19), -0.27783 (19), -0.27443 (19), -0.27439 (19), -0.27391 (19), -0.27223 (19), -0.27197 (19), -0.27001 (19), -0.26616 (19), -0.26449 (19), -0.26368 (19), 
Length of domains: 255
Time: pickout 0.0249    decision 0.0904    set_bounds 0.0802    solve 0.2749    add 0.0026    
Accumulated time: pickout 0.1407    decision 0.6445    set_bounds 0.8378    solve 2.4698    add 0.3215    
Current (lb-rhs): -0.31923389434814453
8350 domains visited
Cumulative time: 6.840685844421387

BaB round 13
batch: 255
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.319233775138855
10 lb beta sum: 0.7915253639221191, worst -0.31923341751098633
Time: prepare 0.0081    bound 0.1402    transfer 0.0066    finalize 0.0029    func 0.1611    
Accumulated time: func 2.6263    prepare 0.2561    bound 1.9444    transfer 0.1002    finalize 0.0854    
all_split False
======================Cut inference begins======================
max lb tensor(1.74204087) min lb tensor(-0.31921387)
Number of Verified Splits: 490 of 510
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 20
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.0871741771697998 
BICCOS Cumulative time: 2.4107820987701416
Preprocessing time: 0.01528310775756836 Inference time: 0.06811285018920898 Add cuts time: 0.0031642913818359375 Cut analysis time: 0.0006139278411865234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31921 (20), -0.26728 (20), -0.25282 (20), -0.20866 (20), -0.18516 (20), -0.13438 (20), -0.12946 (20), -0.09133 (20), -0.07245 (20), -0.06769 (20), -0.06499 (20), -0.05921 (20), -0.05852 (20), -0.02580 (20), -0.01820 (20), -0.01335 (20), -0.00897 (20), -0.00815 (20), -0.00811 (20), -0.00488 (20), 
Length of domains: 20
Time: pickout 0.0076    decision 0.0327    set_bounds 0.0153    solve 0.1613    add 0.0013    
Accumulated time: pickout 0.1483    decision 0.6772    set_bounds 0.8531    solve 2.6311    add 0.3228    
Current (lb-rhs): -0.3192138671875
8370 domains visited
Cumulative time: 7.148914098739624

BaB round 14
batch: 20
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 48] [/input-8, 1875] [/input-8, 1875] [/input-8, 1875] [/input-8, 1875] [/input-8, 548] [/input-8, 1875] [/input-8, 1875] [/input-12, 48] [/input-8, 1875] 
split level 1: [/input-8, 1875] [/input-8, 1556] [/input-8, 1556] [/input-8, 1556] [/input-8, 1556] [/input-8, 550] [/input-8, 1556] [/input-8, 1556] [/input-8, 1875] [/input-8, 1556] 
split level 2: [/input-8, 550] [/input-8, 548] [/input-8, 548] [/input-8, 550] [/input-8, 548] [/input-8, 1578] [/input-8, 550] [/input-8, 548] [/input-8, 550] [/input-8, 548] 
split level 3: [/input-8, 548] [/input-8, 550] [/input-8, 550] [/input-8, 548] [/input-8, 550] [/input-8, 525] [/input-8, 548] [/input-8, 550] [/input-8, 548] [/input-8, 550] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2421034574508667
10 lb beta sum: 0.5432471632957458, worst -0.24110889434814453
Time: prepare 0.0065    bound 0.1435    transfer 0.0030    finalize 0.0020    func 0.1572    
Accumulated time: func 2.7836    prepare 0.2628    bound 2.0879    transfer 0.1032    finalize 0.0874    
all_split False
======================Cut inference begins======================
max lb tensor(0.33607262) min lb tensor(-0.24092567)
Number of Verified Splits: 252 of 320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 21
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.050394296646118164 
BICCOS Cumulative time: 2.4611763954162598
Preprocessing time: 0.01007080078125 Inference time: 0.03806447982788086 Add cuts time: 0.0016477108001708984 Cut analysis time: 0.0006113052368164062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24093 (24), -0.23973 (24), -0.23912 (24), -0.23821 (24), -0.23214 (24), -0.23054 (24), -0.22999 (24), -0.22881 (24), -0.20186 (24), -0.18899 (24), -0.18841 (24), -0.18772 (24), -0.18699 (24), -0.18669 (24), -0.18651 (24), -0.18613 (24), -0.17628 (24), -0.17612 (24), -0.16955 (24), -0.16925 (24), 
Length of domains: 68
Time: pickout 0.0021    decision 0.0156    set_bounds 0.1637    solve 0.1574    add 0.0013    
Accumulated time: pickout 0.1503    decision 0.6928    set_bounds 1.0168    solve 2.7884    add 0.3241    
Current (lb-rhs): -0.24092566967010498
8438 domains visited
Cumulative time: 7.540614604949951

BaB round 15
batch: 68
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1590] [/input-8, 1590] [/input-8, 1565] [/input-8, 1590] [/input-8, 1590] [/input-8, 1590] [/input-8, 1556] [/input-8, 1884] [/input-8, 1590] [/input-8, 1590] 
split level 1: [/input-8, 1565] [/input-8, 1565] [/input-8, 549] [/input-8, 1565] [/input-8, 1565] [/input-8, 1565] [/input-8, 1582] [/input-8, 1891] [/input-8, 1582] [/input-8, 1565] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2110128402709961
10 lb beta sum: 0.420474112033844, worst -0.21064376831054688
Time: prepare 0.0054    bound 0.1402    transfer 0.0025    finalize 0.0014    func 0.1512    
Accumulated time: func 2.9348    prepare 0.2684    bound 2.2281    transfer 0.1056    finalize 0.0888    
all_split False
======================Cut inference begins======================
max lb tensor(0.08159524) min lb tensor(-0.21054840)
Number of Verified Splits: 92 of 272
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 23
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.02473282814025879 
BICCOS Cumulative time: 2.4859092235565186
Preprocessing time: 0.008143186569213867 Inference time: 0.01416778564453125 Add cuts time: 0.0018775463104248047 Cut analysis time: 0.0005443096160888672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21055 (26), -0.20975 (26), -0.20910 (26), -0.20885 (26), -0.20462 (26), -0.20258 (26), -0.20237 (26), -0.20066 (26), -0.20059 (26), -0.20001 (26), -0.19836 (26), -0.19833 (26), -0.19472 (26), -0.19276 (26), -0.19162 (26), -0.18997 (26), -0.16922 (26), -0.16902 (26), -0.16352 (26), -0.16259 (26), 
Length of domains: 180
Time: pickout 0.0021    decision 0.0156    set_bounds 0.0085    solve 0.1516    add 0.0032    
Accumulated time: pickout 0.1524    decision 0.7084    set_bounds 1.0253    solve 2.9400    add 0.3273    
Current (lb-rhs): -0.21054840087890625
8618 domains visited
Cumulative time: 7.746831178665161

BaB round 16
batch: 180
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1884] [/input-8, 1582] [/input-8, 1582] [/input-12, 6] [/input-8, 549] [/input-8, 1884] [/input-8, 1582] [/input-8, 1582] [/input-8, 1884] [/input-8, 549] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19991707801818848
10 lb beta sum: 0.6537909507751465, worst -0.19947481155395508
Time: prepare 0.0073    bound 0.1425    transfer 0.0031    finalize 0.0021    func 0.1573    
Accumulated time: func 3.0920    prepare 0.2759    bound 2.3706    transfer 0.1088    finalize 0.0909    
all_split False
======================Cut inference begins======================
max lb tensor(0.29659569) min lb tensor(-0.19925582)
Number of Verified Splits: 204 of 360
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 27
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.048006534576416016 
BICCOS Cumulative time: 2.5339157581329346
Preprocessing time: 0.010869264602661133 Inference time: 0.03436565399169922 Add cuts time: 0.002175569534301758 Cut analysis time: 0.0005960464477539062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19926 (27), -0.19877 (27), -0.19737 (27), -0.19731 (27), -0.18023 (27), -0.17938 (27), -0.17859 (27), -0.17811 (27), -0.15717 (27), -0.14703 (27), -0.14699 (27), -0.14553 (27), -0.14382 (27), -0.14225 (27), -0.14110 (27), -0.14074 (27), -0.14058 (27), -0.13933 (27), -0.13919 (27), -0.13899 (27), 
Length of domains: 156
Time: pickout 0.0045    decision 0.0188    set_bounds 0.0093    solve 0.1574    add 0.0020    
Accumulated time: pickout 0.1569    decision 0.7272    set_bounds 1.0346    solve 3.0974    add 0.3293    
Current (lb-rhs): -0.1992558240890503
8774 domains visited
Cumulative time: 7.9880125522613525

BaB round 17
batch: 156
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-8, 549] [/input-8, 1565] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18785250186920166
10 lb beta sum: 1.0494872331619263, worst -0.17486779391765594
Time: prepare 0.0063    bound 0.1408    transfer 0.0008    finalize 0.0020    func 0.1521    
Accumulated time: func 3.2441    prepare 0.2824    bound 2.5113    transfer 0.1095    finalize 0.0929    
all_split False
======================Cut inference begins======================
max lb tensor(0.35433221) min lb tensor(-0.17474085)
Number of Verified Splits: 205 of 312
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 27
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.047174930572509766 
BICCOS Cumulative time: 2.5810906887054443
Preprocessing time: 0.009415388107299805 Inference time: 0.03501248359680176 Add cuts time: 0.0020847320556640625 Cut analysis time: 0.0006623268127441406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17474 (28), -0.17433 (28), -0.17285 (28), -0.17269 (28), -0.13372 (28), -0.12242 (28), -0.12123 (28), -0.12071 (28), -0.11947 (28), -0.11761 (28), -0.11708 (28), -0.11677 (28), -0.11648 (28), -0.11541 (28), -0.11530 (28), -0.11516 (28), -0.11179 (28), -0.11155 (28), -0.11042 (28), -0.11000 (28), 
Length of domains: 107
Time: pickout 0.0034    decision 0.0179    set_bounds 0.0081    solve 0.1522    add 0.0024    
Accumulated time: pickout 0.1603    decision 0.7451    set_bounds 1.0427    solve 3.2496    add 0.3317    
Current (lb-rhs): -0.17474085092544556
8881 domains visited
Cumulative time: 8.22022294998169

BaB round 18
batch: 107
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1891] [/input-8, 1884] [/input-8, 1582] [/input-8, 530] [/input-8, 1582] [/input-12, 6] [/input-8, 1884] [/input-8, 1891] [/input-12, 6] [/input-8, 1582] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0789039134979248, worst -0.16035251319408417
10 lb beta sum: 1.0789039134979248, worst -0.16006462275981903
Time: prepare 0.0098    bound 0.1410    transfer 0.0008    finalize 0.0013    func 0.1543    
Accumulated time: func 3.3984    prepare 0.2924    bound 2.6523    transfer 0.1103    finalize 0.0941    
all_split False
======================Cut inference begins======================
max lb tensor(0.23543322) min lb tensor(-0.15997903)
Number of Verified Splits: 26 of 214
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 27
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.012679100036621094 
BICCOS Cumulative time: 2.5937697887420654
Preprocessing time: 0.006410837173461914 Inference time: 0.004476785659790039 Add cuts time: 0.0008187294006347656 Cut analysis time: 0.000972747802734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15998 (29), -0.15840 (29), -0.15793 (29), -0.15652 (29), -0.15609 (29), -0.15552 (29), -0.15419 (29), -0.15180 (29), -0.13372 (29), -0.13372 (29), -0.12242 (29), -0.12242 (29), -0.12123 (29), -0.12123 (29), -0.12071 (29), -0.12071 (29), -0.11947 (29), -0.11947 (29), -0.11761 (29), -0.11761 (29), 
Length of domains: 188
Time: pickout 0.0030    decision 0.0154    set_bounds 0.0060    solve 0.1543    add 0.0022    
Accumulated time: pickout 0.1633    decision 0.7604    set_bounds 1.0486    solve 3.4039    add 0.3339    
Current (lb-rhs): -0.15997903048992157
9069 domains visited
Cumulative time: 8.414122819900513

BaB round 19
batch: 188
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1582] [/input-8, 530] [/input-8, 530] [/input-8, 530] [/input-8, 1582] [/input-8, 1884] [/input-8, 530] [/input-8, 530] [/input-8, 530] [/input-8, 530] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0790601968765259, worst -0.15997903048992157
10 lb beta sum: 1.0790601968765259, worst -0.15993861854076385
Time: prepare 0.0169    bound 0.1404    transfer 0.0008    finalize 0.0020    func 0.1630    
Accumulated time: func 3.5615    prepare 0.3095    bound 2.7927    transfer 0.1112    finalize 0.0962    
all_split False
======================Cut inference begins======================
max lb tensor(0.24427414) min lb tensor(-0.15989856)
Number of Verified Splits: 112 of 376
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 28
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.033983707427978516 
BICCOS Cumulative time: 2.627753496170044
Preprocessing time: 0.010981321334838867 Inference time: 0.019768714904785156 Add cuts time: 0.002546548843383789 Cut analysis time: 0.0006871223449707031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15990 (30), -0.15835 (30), -0.15787 (30), -0.15645 (30), -0.15594 (30), -0.15536 (30), -0.15405 (30), -0.15159 (30), -0.13372 (30), -0.13372 (30), -0.12242 (30), -0.12242 (30), -0.12123 (30), -0.12123 (30), -0.12071 (30), -0.12071 (30), -0.11947 (30), -0.11947 (30), -0.11761 (30), -0.11761 (30), 
Length of domains: 264
Time: pickout 0.0043    decision 0.0219    set_bounds 0.0099    solve 0.1631    add 0.0032    
Accumulated time: pickout 0.1676    decision 0.7823    set_bounds 1.0585    solve 3.5671    add 0.3371    
Current (lb-rhs): -0.1598985642194748
9333 domains visited
Cumulative time: 8.651374101638794

BaB round 20
batch: 264
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 530] [/input-8, 549] [/input-8, 1884] [/input-8, 549] [/input-8, 1884] [/input-8, 549] [/input-8, 549] [/input-8, 1884] [/input-8, 1540] [/input-8, 562] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15998339653015137
10 lb beta sum: 0.7489950060844421, worst -0.15354400873184204
Time: prepare 0.0105    bound 0.1535    transfer 0.0020    finalize 0.0031    func 0.1725    
Accumulated time: func 3.7339    prepare 0.3202    bound 2.9462    transfer 0.1131    finalize 0.0992    
all_split False
======================Cut inference begins======================
max lb tensor(0.32930380) min lb tensor(-0.15352090)
Number of Verified Splits: 254 of 528
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 30
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.06815648078918457 
BICCOS Cumulative time: 2.6959099769592285
Preprocessing time: 0.015522003173828125 Inference time: 0.04856252670288086 Add cuts time: 0.0034208297729492188 Cut analysis time: 0.0006511211395263672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15352 (31), -0.15200 (31), -0.15150 (31), -0.14949 (31), -0.14893 (31), -0.13659 (31), -0.13410 (31), -0.10157 (31), -0.10131 (31), -0.10004 (31), -0.09707 (31), -0.09639 (31), -0.09601 (31), -0.09596 (31), -0.09562 (31), -0.09536 (31), -0.09534 (31), -0.09468 (31), -0.09407 (31), -0.09401 (31), 
Length of domains: 274
Time: pickout 0.0057    decision 0.0286    set_bounds 0.0140    solve 0.1726    add 0.0032    
Accumulated time: pickout 0.1732    decision 0.8109    set_bounds 1.0724    solve 3.7397    add 0.3403    
Current (lb-rhs): -0.15352089703083038
9607 domains visited
Cumulative time: 8.945122480392456

BaB round 21
batch: 274
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1565] [/input-8, 1565] [/input-8, 1565] [/input-8, 1565] [/input-8, 1540] [/input-8, 1540] [/input-8, 1540] [/input-8, 1884] [/input-8, 1540] [/input-8, 1540] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15275490283966064
10 lb beta sum: 0.9340476393699646, worst -0.14632432162761688
Time: prepare 0.0109    bound 0.1494    transfer 0.0028    finalize 0.0029    func 0.1695    
Accumulated time: func 3.9034    prepare 0.3313    bound 3.0956    transfer 0.1159    finalize 0.1021    
all_split False
======================Cut inference begins======================
max lb tensor(0.64386904) min lb tensor(-0.14629453)
Number of Verified Splits: 286 of 548
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 30
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.07732224464416504 
BICCOS Cumulative time: 2.7732322216033936
Preprocessing time: 0.015993595123291016 Inference time: 0.05694699287414551 Add cuts time: 0.003705739974975586 Cut analysis time: 0.0006759166717529297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14629 (32), -0.14491 (32), -0.14434 (32), -0.14242 (32), -0.14181 (32), -0.12935 (32), -0.12688 (32), -0.09707 (32), -0.09430 (32), -0.09413 (32), -0.09292 (32), -0.08986 (32), -0.08929 (32), -0.08885 (32), -0.08850 (32), -0.08832 (32), -0.08806 (32), -0.08755 (32), -0.08695 (32), -0.08685 (32), 
Length of domains: 262
Time: pickout 0.0068    decision 0.0303    set_bounds 0.0145    solve 0.1702    add 0.0018    
Accumulated time: pickout 0.1800    decision 0.8412    set_bounds 1.0870    solve 3.9099    add 0.3421    
Current (lb-rhs): -0.14629453420639038
9869 domains visited
Cumulative time: 9.247716426849365

BaB round 22
batch: 262
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 621] [/input-8, 621] [/input-8, 1579] [/input-8, 1579] [/input-8, 621] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0093916654586792, worst -0.1330292820930481
10 lb beta sum: 1.0174164772033691, worst -0.13293296098709106
Time: prepare 0.0239    bound 0.1494    transfer 0.0009    finalize 0.0028    func 0.1803    
Accumulated time: func 4.0838    prepare 0.3554    bound 3.2450    transfer 0.1168    finalize 0.1049    
all_split False
======================Cut inference begins======================
max lb tensor(0.02599484) min lb tensor(-0.13288051)
Number of Verified Splits: 44 of 524
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 30
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.02761244773864746 
BICCOS Cumulative time: 2.800844669342041
Preprocessing time: 0.015838146209716797 Inference time: 0.008763551712036133 Add cuts time: 0.002340078353881836 Cut analysis time: 0.0006706714630126953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13288 (33), -0.13011 (33), -0.13004 (33), -0.12769 (33), -0.12766 (33), -0.12757 (33), -0.12683 (33), -0.12614 (33), -0.12602 (33), -0.12542 (33), -0.12349 (33), -0.11732 (33), -0.10990 (33), -0.09707 (33), -0.09707 (33), -0.09650 (33), -0.09430 (33), -0.09430 (33), -0.09413 (33), -0.09413 (33), 
Length of domains: 480
Time: pickout 0.0055    decision 0.0290    set_bounds 0.0148    solve 0.1804    add 0.0045    
Accumulated time: pickout 0.1855    decision 0.8702    set_bounds 1.1018    solve 4.0903    add 0.3466    
Current (lb-rhs): -0.13288050889968872
10349 domains visited
Cumulative time: 9.510292291641235

BaB round 23
batch: 480
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1579] [/input-8, 1579] [/input-8, 621] [/input-8, 621] [/input-8, 1579] [/input-8, 1884] [/input-8, 1583] [/input-8, 1884] [/input-8, 1583] [/input-8, 621] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9970619082450867, worst -0.1301063746213913
10 lb beta sum: 1.0046664476394653, worst -0.13010792434215546
Time: prepare 0.0444    bound 0.1493    transfer 0.0066    finalize 0.0049    func 0.2119    
Accumulated time: func 4.2957    prepare 0.4000    bound 3.3942    transfer 0.1235    finalize 0.1099    
all_split False
======================Cut inference begins======================
max lb tensor(0.25305128) min lb tensor(-0.13008516)
Number of Verified Splits: 333 of 960
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 30
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.10164928436279297 
BICCOS Cumulative time: 2.902493953704834
Preprocessing time: 0.02965831756591797 Inference time: 0.06656932830810547 Add cuts time: 0.0047016143798828125 Cut analysis time: 0.0007200241088867188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13009 (34), -0.12765 (34), -0.12756 (34), -0.12610 (34), -0.12598 (34), -0.12344 (34), -0.12051 (34), -0.11978 (34), -0.11813 (34), -0.11786 (34), -0.11731 (34), -0.11662 (34), -0.11149 (34), -0.11035 (34), -0.10955 (34), -0.10880 (34), -0.10790 (34), -0.10738 (34), -0.09707 (34), -0.09707 (34), 
Length of domains: 627
Time: pickout 0.0105    decision 0.0396    set_bounds 0.0252    solve 0.2121    add 0.0029    
Accumulated time: pickout 0.1960    decision 0.9098    set_bounds 1.1269    solve 4.3024    add 0.3494    
Current (lb-rhs): -0.13008515536785126
10976 domains visited
Cumulative time: 9.90457010269165

BaB round 24
batch: 627
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 540] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 1882] [/input-8, 1882] [/input-8, 491] [/input-8, 540] [/input-8, 540] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9464496970176697, worst -0.12075275182723999
10 lb beta sum: 0.9563623070716858, worst -0.12066596746444702
Time: prepare 0.0571    bound 0.1596    transfer 0.0046    finalize 0.1523    func 0.3818    
Accumulated time: func 4.6775    prepare 0.4573    bound 3.5539    transfer 0.1280    finalize 0.2622    
all_split False
======================Cut inference begins======================
max lb tensor(0.25068384) min lb tensor(-0.12059647)
Number of Verified Splits: 233 of 1254
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 30
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.09319043159484863 
BICCOS Cumulative time: 2.9956843852996826
Preprocessing time: 0.0399932861328125 Inference time: 0.04849076271057129 Add cuts time: 0.003928422927856445 Cut analysis time: 0.0007779598236083984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12060 (35), -0.12051 (35), -0.12038 (35), -0.11971 (35), -0.11906 (35), -0.11811 (35), -0.11789 (35), -0.11785 (35), -0.11730 (35), -0.11659 (35), -0.11640 (35), -0.11378 (35), -0.11151 (35), -0.11114 (35), -0.11019 (35), -0.10936 (35), -0.10857 (35), -0.10817 (35), -0.10795 (35), -0.10766 (35), 
Length of domains: 1021
Time: pickout 0.0120    decision 0.0493    set_bounds 0.0352    solve 0.3821    add 0.0409    
Accumulated time: pickout 0.2081    decision 0.9591    set_bounds 1.1622    solve 4.6846    add 0.3904    
Current (lb-rhs): -0.12059646844863892
11997 domains visited
Cumulative time: 10.52004361152649

BaB round 25
batch: 1021
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 540] [/input-8, 540] [/input-8, 540] [/input-8, 540] [/input-8, 1583] [/input-8, 1583] [/input-8, 540] [/input-8, 540] [/input-12, 45] [/input-8, 1882] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8928201198577881, worst -0.11029058694839478
10 lb beta sum: 0.900936484336853, worst -0.11025446653366089
Time: prepare 0.0932    bound 0.1855    transfer 0.0133    finalize 0.0110    func 0.3171    
Accumulated time: func 4.9946    prepare 0.5507    bound 3.7394    transfer 0.1414    finalize 0.2732    
all_split False
======================Cut inference begins======================
max lb tensor(0.26308399) min lb tensor(-0.11021990)
Number of Verified Splits: 487 of 2042
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 30
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.17461442947387695 
BICCOS Cumulative time: 3.1702988147735596
Preprocessing time: 0.06301188468933105 Inference time: 0.10352182388305664 Add cuts time: 0.007293701171875 Cut analysis time: 0.0007870197296142578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11022 (36), -0.11005 (36), -0.10997 (36), -0.10939 (36), -0.10870 (36), -0.10722 (36), -0.10699 (36), -0.10691 (36), -0.10637 (36), -0.10595 (36), -0.10568 (36), -0.10556 (36), -0.10551 (36), -0.10534 (36), -0.10449 (36), -0.10403 (36), -0.10376 (36), -0.10375 (36), -0.10324 (36), -0.10290 (36), 
Length of domains: 1555
Time: pickout 0.0242    decision 0.0717    set_bounds 0.0540    solve 0.3174    add 0.0082    
Accumulated time: pickout 0.2323    decision 1.0308    set_bounds 1.2161    solve 5.0020    add 0.3986    
Current (lb-rhs): -0.11021989583969116
13552 domains visited
Cumulative time: 11.175477266311646

BaB round 26
batch: 1555
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8345220685005188, worst -0.10546618700027466
10 lb beta sum: 0.8425793647766113, worst -0.10543221235275269
Time: prepare 0.1436    bound 0.2449    transfer 0.0162    finalize 0.0245    func 0.4496    
Accumulated time: func 5.4442    prepare 0.6946    bound 3.9843    transfer 0.1576    finalize 0.2978    
all_split False
======================Cut inference begins======================
max lb tensor(0.27361459) min lb tensor(-0.10541981)
Number of Verified Splits: 877 of 3110
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 30
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.30309033393859863 
BICCOS Cumulative time: 3.473389148712158
Preprocessing time: 0.09602022171020508 Inference time: 0.19319367408752441 Add cuts time: 0.01307225227355957 Cut analysis time: 0.0008041858673095703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10542 (37), -0.10527 (37), -0.10517 (37), -0.10269 (37), -0.10239 (37), -0.10221 (37), -0.10211 (37), -0.10190 (37), -0.10119 (37), -0.10079 (37), -0.10069 (37), -0.09967 (37), -0.09907 (37), -0.09886 (37), -0.09882 (37), -0.09860 (37), -0.09831 (37), -0.09813 (37), -0.09798 (37), -0.09797 (37), 
Length of domains: 2233
Time: pickout 0.0323    decision 0.0996    set_bounds 0.2304    solve 0.4506    add 0.0079    
Accumulated time: pickout 0.2645    decision 1.1304    set_bounds 1.4466    solve 5.4526    add 0.4065    
Current (lb-rhs): -0.1054198145866394
15785 domains visited
Cumulative time: 12.30988359451294

BaB round 27
batch: 2233
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 562] [/input-8, 543] [/input-8, 613] [/input-8, 562] [/input-8, 613] [/input-8, 1583] [/input-8, 543] [/input-8, 1583] [/input-8, 1540] [/input-8, 1891] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7802355289459229, worst -0.09875909984111786
10 lb beta sum: 0.7898668050765991, worst -0.09876066446304321
Time: prepare 0.2075    bound 0.3182    transfer 0.0240    finalize 0.1670    func 0.7468    
Accumulated time: func 6.1910    prepare 0.9023    bound 4.3025    transfer 0.1816    finalize 0.4647    
all_split False
======================Cut inference begins======================
max lb tensor(0.27020091) min lb tensor(-0.09873146)
Number of Verified Splits: 1277 of 4466
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 31
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.454150915145874 
BICCOS Cumulative time: 3.9275400638580322
Preprocessing time: 0.14078402519226074 Inference time: 0.2901499271392822 Add cuts time: 0.02226710319519043 Cut analysis time: 0.000949859619140625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09873 (38), -0.09865 (38), -0.09852 (38), -0.09790 (38), -0.09712 (38), -0.09636 (38), -0.09570 (38), -0.09554 (38), -0.09544 (38), -0.09488 (38), -0.09468 (38), -0.09430 (38), -0.09430 (38), -0.09413 (38), -0.09413 (38), -0.09409 (38), -0.09409 (38), -0.09401 (38), -0.09382 (38), -0.09377 (38), 
Length of domains: 3189
Time: pickout 0.0452    decision 0.1392    set_bounds 0.1233    solve 0.7481    add 0.0230    
Accumulated time: pickout 0.3098    decision 1.2696    set_bounds 1.5699    solve 6.2007    add 0.4296    
Current (lb-rhs): -0.09873145818710327
18974 domains visited
Cumulative time: 13.858598709106445

BaB round 28
batch: 3189
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 621] [/input-8, 1583] [/input-8, 1583] [/input-8, 621] [/input-8, 1583] [/input-8, 543] [/input-8, 1583] [/input-8, 543] [/input-8, 543] [/input-8, 543] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09399175643920898
10 lb beta sum: 0.2922249138355255, worst -0.09399664402008057
Time: prepare 0.1308    bound 0.4232    transfer 0.0126    finalize 0.0320    func 0.6410    
Accumulated time: func 6.8320    prepare 1.0334    bound 4.7257    transfer 0.1943    finalize 0.4967    
all_split False
======================Cut inference begins======================
max lb tensor(0.16899081) min lb tensor(-0.09397626)
Number of Verified Splits: 4632 of 6378
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 35
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 1.567704200744629 
BICCOS Cumulative time: 5.495244264602661
Preprocessing time: 0.20311641693115234 Inference time: 1.3081846237182617 Add cuts time: 0.05539870262145996 Cut analysis time: 0.0010044574737548828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09398 (39), -0.09391 (39), -0.09260 (39), -0.09096 (39), -0.09082 (39), -0.09021 (39), -0.08996 (39), -0.08956 (39), -0.08936 (39), -0.08930 (39), -0.08899 (39), -0.08802 (39), -0.08767 (39), -0.08759 (39), -0.08709 (39), -0.08703 (39), -0.08689 (39), -0.08671 (39), -0.08657 (39), -0.08629 (39), 
Length of domains: 1746
Time: pickout 0.0751    decision 0.1915    set_bounds 0.3252    solve 0.6431    add 0.0672    
Accumulated time: pickout 0.3848    decision 1.4611    set_bounds 1.8951    solve 6.8438    add 0.4968    
Current (lb-rhs): -0.09397625923156738
20720 domains visited
Cumulative time: 16.77687931060791

BaB round 29
batch: 1746
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1569] [/input-8, 1569] [/input-8, 1583] [/input-8, 1583] [/input-8, 621] [/input-8, 1569] [/input-8, 1569] [/input-8, 543] [/input-8, 621] [/input-8, 1569] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09095728397369385
10 lb beta sum: 0.49609965085983276, worst -0.09084618091583252
Time: prepare 0.0712    bound 0.2675    transfer 0.0200    finalize 0.0176    func 0.3991    
Accumulated time: func 7.2312    prepare 1.1049    bound 4.9932    transfer 0.2143    finalize 0.5143    
all_split False
======================Cut inference begins======================
max lb tensor(0.96518773) min lb tensor(-0.09081912)
Number of Verified Splits: 3238 of 3492
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 41
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.8996853828430176 
BICCOS Cumulative time: 6.394929647445679
Preprocessing time: 0.11169052124023438 Inference time: 0.756009578704834 Add cuts time: 0.03097224235534668 Cut analysis time: 0.001013040542602539
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09082 (40), -0.09076 (40), -0.08830 (40), -0.08817 (40), -0.08178 (40), -0.08172 (40), -0.08128 (40), -0.08051 (40), -0.07934 (40), -0.07922 (40), -0.07873 (40), -0.07830 (40), -0.07802 (40), -0.07770 (40), -0.07740 (40), -0.07738 (40), -0.07577 (40), -0.07492 (40), -0.07460 (40), -0.07421 (40), 
Length of domains: 254
Time: pickout 0.0363    decision 0.1119    set_bounds 0.0989    solve 0.4002    add 0.0087    
Accumulated time: pickout 0.4211    decision 1.5730    set_bounds 1.9939    solve 7.2440    add 0.5055    
Current (lb-rhs): -0.09081912040710449
20974 domains visited
Cumulative time: 18.361766576766968

BaB round 30
batch: 254
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 621] [/input-8, 621] [/input-8, 621] [/input-8, 621] [/input-8, 621] [/input-8, 621] [/input-8, 621] [/input-8, 621] [/input-8, 621] [/input-8, 621] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08844590187072754
10 lb beta sum: 0.9359716176986694, worst -0.08060729503631592
Time: prepare 0.0113    bound 0.1598    transfer 0.0019    finalize 0.0028    func 0.1792    
Accumulated time: func 7.4104    prepare 1.1164    bound 5.1530    transfer 0.2163    finalize 0.5171    
all_split False
======================Cut inference begins======================
max lb tensor(0.41803378) min lb tensor(-0.08056641)
Number of Verified Splits: 453 of 508
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 41
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.1287708282470703 
BICCOS Cumulative time: 6.523700475692749
Preprocessing time: 0.015583276748657227 Inference time: 0.10907506942749023 Add cuts time: 0.00322723388671875 Cut analysis time: 0.0008852481842041016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08057 (41), -0.08055 (41), -0.07160 (41), -0.07141 (41), -0.06680 (41), -0.06671 (41), -0.05774 (41), -0.05770 (41), -0.02474 (41), -0.02388 (41), -0.02382 (41), -0.02345 (41), -0.02343 (41), -0.02282 (41), -0.02279 (41), -0.02199 (41), -0.02158 (41), -0.02062 (41), -0.01854 (41), -0.01786 (41), 
Length of domains: 55
Time: pickout 0.0089    decision 0.0297    set_bounds 0.1366    solve 0.1793    add 0.0033    
Accumulated time: pickout 0.4300    decision 1.6027    set_bounds 2.1306    solve 7.4233    add 0.5088    
Current (lb-rhs): -0.08056640625
21029 domains visited
Cumulative time: 18.85211706161499

BaB round 31
batch: 55
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 31] [/input-12, 31] [/input-8, 1569] [/input-8, 1569] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] 
split level 1: [/input-8, 1583] [/input-8, 543] [/input-8, 1598] [/input-8, 1598] [/input-8, 1583] [/input-8, 1583] [/input-8, 543] [/input-8, 1583] [/input-8, 1583] [/input-8, 1583] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9882237911224365, worst -0.06681060791015625
10 lb beta sum: 0.9882237911224365, worst -0.06650185585021973
Time: prepare 0.0101    bound 0.1455    transfer 0.0013    finalize 0.0015    func 0.1599    
Accumulated time: func 7.5702    prepare 1.1267    bound 5.2984    transfer 0.2176    finalize 0.5186    
all_split False
======================Cut inference begins======================
max lb tensor(0.13141525) min lb tensor(-0.06635809)
Number of Verified Splits: 129 of 220
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 44.
#cuts 1-3: 42
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.04029083251953125 
BICCOS Cumulative time: 6.56399130821228
Preprocessing time: 0.006766319274902344 Inference time: 0.030988693237304688 Add cuts time: 0.001766204833984375 Cut analysis time: 0.0007696151733398438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06636 (43), -0.06627 (43), -0.06159 (43), -0.06138 (43), -0.05725 (43), -0.05696 (43), -0.05259 (43), -0.05253 (43), -0.05237 (43), -0.05195 (43), -0.04783 (43), -0.04777 (43), -0.04358 (43), -0.04342 (43), -0.03861 (43), -0.03841 (43), -0.02474 (43), -0.02474 (43), -0.02388 (43), -0.02388 (43), 
Length of domains: 91
Time: pickout 0.0025    decision 0.0145    set_bounds 0.0093    solve 0.1599    add 0.0020    
Accumulated time: pickout 0.4324    decision 1.6172    set_bounds 2.1399    solve 7.5832    add 0.5108    
Current (lb-rhs): -0.06635808944702148
21120 domains visited
Cumulative time: 19.081421613693237

BaB round 32
batch: 91
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 331] [/input-8, 331] [/input-12, 15] [/input-12, 15] [/input-8, 331] [/input-8, 331] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-8, 331] 
split level 1: [/input-8, 1598] [/input-8, 1598] [/input-8, 1598] [/input-8, 1598] [/input-8, 1598] [/input-8, 1598] [/input-8, 1598] [/input-8, 1598] [/input-8, 1598] [/input-8, 1598] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06237161159515381
10 lb beta sum: 0.6140851378440857, worst -0.05688968300819397
Time: prepare 0.0073    bound 0.1531    transfer 0.0039    finalize 0.0021    func 0.1688    
Accumulated time: func 7.7390    prepare 1.1342    bound 5.4515    transfer 0.2215    finalize 0.5207    
all_split False
======================Cut inference begins======================
max lb tensor(0.59574497) min lb tensor(-0.05422664)
Number of Verified Splits: 303 of 364
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 43
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.09271645545959473 
BICCOS Cumulative time: 6.656707763671875
Preprocessing time: 0.01077413558959961 Inference time: 0.07837629318237305 Add cuts time: 0.0027379989624023438 Cut analysis time: 0.0008280277252197266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05423 (45), -0.05234 (45), -0.05173 (45), -0.04987 (45), -0.04768 (45), -0.04739 (45), -0.04531 (45), -0.04506 (45), -0.04333 (45), -0.04296 (45), -0.04087 (45), -0.04054 (45), -0.04041 (45), -0.03874 (45), -0.03838 (45), -0.03794 (45), -0.03788 (45), -0.03624 (45), -0.03605 (45), -0.03570 (45), 
Length of domains: 61
Time: pickout 0.0032    decision 0.0218    set_bounds 0.0143    solve 0.1689    add 0.0022    
Accumulated time: pickout 0.4356    decision 1.6390    set_bounds 2.1542    solve 7.7521    add 0.5130    
Current (lb-rhs): -0.05422663688659668
21181 domains visited
Cumulative time: 19.386159420013428

BaB round 33
batch: 61
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
split level 1: [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 331] [/input-8, 1978] [/input-8, 491] [/input-8, 491] [/input-8, 491] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04864013195037842
10 lb beta sum: 0.32345515489578247, worst -0.04831051826477051
Time: prepare 0.0052    bound 0.1442    transfer 0.0017    finalize 0.0021    func 0.1547    
Accumulated time: func 7.8938    prepare 1.1396    bound 5.5957    transfer 0.2232    finalize 0.5228    
all_split False
======================Cut inference begins======================
max lb tensor(0.47177878) min lb tensor(-0.04822421)
Number of Verified Splits: 211 of 244
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 43
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.06493926048278809 
BICCOS Cumulative time: 6.721647024154663
Preprocessing time: 0.0073397159576416016 Inference time: 0.05464315414428711 Add cuts time: 0.00208282470703125 Cut analysis time: 0.000873565673828125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04822 (47), -0.04810 (47), -0.04578 (47), -0.04568 (47), -0.04344 (47), -0.04321 (47), -0.04114 (47), -0.04092 (47), -0.03904 (47), -0.03875 (47), -0.03663 (47), -0.03635 (47), -0.03449 (47), -0.03447 (47), -0.03418 (47), -0.03377 (47), -0.03203 (47), -0.03202 (47), -0.03187 (47), -0.03149 (47), 
Length of domains: 33
Time: pickout 0.0026    decision 0.0146    set_bounds 0.0105    solve 0.1548    add 0.0013    
Accumulated time: pickout 0.4382    decision 1.6536    set_bounds 2.1647    solve 7.9069    add 0.5144    
Current (lb-rhs): -0.04822421073913574
21214 domains visited
Cumulative time: 19.63618302345276

BaB round 34
batch: 33
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 613] [/input-8, 613] [/input-8, 613] [/input-8, 613] [/input-8, 613] [/input-8, 613] [/input-8, 613] [/input-8, 613] [/input-8, 613] [/input-8, 491] 
split level 1: [/input, 1927] [/input, 3228] [/input, 1927] [/input, 1927] [/input, 1927] [/input, 1927] [/input, 3228] [/input, 1927] [/input, 1927] [/input, 1927] 
split level 2: [/input-8, 1978] [/input-8, 1978] [/input-8, 1978] [/input-8, 1978] [/input-8, 1978] [/input-8, 1978] [/input-8, 1978] [/input-8, 1978] [/input-8, 1978] [/input-8, 1978] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4947877526283264, worst -0.034200072288513184
10 lb beta sum: 0.4947877526283264, worst -0.03396487236022949
Time: prepare 0.0134    bound 0.1444    transfer 0.0028    finalize 0.0017    func 0.1639    
Accumulated time: func 8.0577    prepare 1.1532    bound 5.7401    transfer 0.2259    finalize 0.5245    
all_split False
======================Cut inference begins======================
max lb tensor(0.24918440) min lb tensor(-0.03381097)
Number of Verified Splits: 140 of 264
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 44
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.047182321548461914 
BICCOS Cumulative time: 6.768829345703125
Preprocessing time: 0.007972955703735352 Inference time: 0.036525726318359375 Add cuts time: 0.0018455982208251953 Cut analysis time: 0.0008380413055419922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03381 (50), -0.03276 (50), -0.03140 (50), -0.03035 (50), -0.03034 (50), -0.02930 (50), -0.02900 (50), -0.02796 (50), -0.02793 (50), -0.02688 (50), -0.02674 (50), -0.02584 (50), -0.02571 (50), -0.02554 (50), -0.02482 (50), -0.02458 (50), -0.02450 (50), -0.02395 (50), -0.02356 (50), -0.02346 (50), 
Length of domains: 124
Time: pickout 0.0021    decision 0.0141    set_bounds 0.0111    solve 0.1640    add 0.0023    
Accumulated time: pickout 0.4403    decision 1.6677    set_bounds 2.1758    solve 8.0709    add 0.5167    
Current (lb-rhs): -0.033810973167419434
21338 domains visited
Cumulative time: 19.8797504901886

BaB round 35
batch: 124
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1426] [/input-8, 1426] [/input-8, 1426] [/input-8, 1426] [/input-8, 1980] [/input-8, 1426] [/input-8, 1426] [/input-8, 1426] [/input-8, 1426] [/input-8, 540] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.027721047401428223
10 lb beta sum: 0.16389264166355133, worst -0.02765798568725586
Time: prepare 0.0062    bound 0.1447    transfer 0.0006    finalize 0.0012    func 0.1548    
Accumulated time: func 8.2125    prepare 1.1597    bound 5.8848    transfer 0.2265    finalize 0.5257    
all_split False
======================Cut inference begins======================
max lb tensor(0.24080177) min lb tensor(-0.02760124)
Number of Verified Splits: 148 of 248
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 48.
#cuts 1-3: 46
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.04990339279174805 
BICCOS Cumulative time: 6.818732738494873
Preprocessing time: 0.007670402526855469 Inference time: 0.039528608322143555 Add cuts time: 0.0018706321716308594 Cut analysis time: 0.0008337497711181641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02760 (51), -0.02649 (51), -0.02519 (51), -0.02412 (51), -0.02408 (51), -0.02301 (51), -0.02210 (51), -0.02171 (51), -0.02169 (51), -0.02103 (51), -0.02059 (51), -0.02020 (51), -0.01971 (51), -0.01945 (51), -0.01913 (51), -0.01910 (51), -0.01864 (51), -0.01784 (51), -0.01723 (51), -0.01684 (51), 
Length of domains: 100
Time: pickout 0.0041    decision 0.0221    set_bounds 0.0060    solve 0.1549    add 0.0801    
Accumulated time: pickout 0.4444    decision 1.6898    set_bounds 2.1819    solve 8.2258    add 0.5968    
Current (lb-rhs): -0.027601242065429688
21438 domains visited
Cumulative time: 20.1980938911438

BaB round 36
batch: 100
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 540] [/input-8, 1426] [/input-8, 1426] [/input-8, 540] [/input-8, 1426] [/input-8, 1426] [/input-8, 540] [/input-8, 1426] [/input-8, 1426] [/input-8, 540] 
split level 1: [/input-8, 155] [/input-8, 496] [/input-8, 496] [/input-8, 155] [/input-8, 496] [/input-8, 496] [/input-8, 155] [/input-8, 496] [/input-8, 496] [/input-8, 155] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02112269401550293
10 lb beta sum: 0.09076152741909027, worst -0.01542055606842041
Time: prepare 0.0097    bound 0.1638    transfer 0.0015    finalize 0.0023    func 0.1799    
Accumulated time: func 8.3924    prepare 1.1696    bound 6.0486    transfer 0.2280    finalize 0.5280    
all_split False
======================Cut inference begins======================
max lb tensor(0.24809751) min lb tensor(-0.01536512)
Number of Verified Splits: 343 of 400
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 50.
#cuts 1-3: 48
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.10907554626464844 
BICCOS Cumulative time: 6.9278082847595215
Preprocessing time: 0.011844635009765625 Inference time: 0.09382772445678711 Add cuts time: 0.0024902820587158203 Cut analysis time: 0.0009129047393798828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01537 (53), -0.01413 (53), -0.01302 (53), -0.01171 (53), -0.01060 (53), -0.01047 (53), -0.00999 (53), -0.00951 (53), -0.00949 (53), -0.00929 (53), -0.00926 (53), -0.00869 (53), -0.00847 (53), -0.00821 (53), -0.00820 (53), -0.00820 (53), -0.00818 (53), -0.00759 (53), -0.00727 (53), -0.00709 (53), 
Length of domains: 57
Time: pickout 0.0041    decision 0.0185    set_bounds 0.0114    solve 0.1800    add 0.0014    
Accumulated time: pickout 0.4486    decision 1.7084    set_bounds 2.1932    solve 8.4058    add 0.5982    
Current (lb-rhs): -0.015365123748779297
21495 domains visited
Cumulative time: 20.52390766143799

BaB round 37
batch: 57
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 540] [/input-8, 496] [/input-8, 496] [/input-8, 496] [/input-8, 1971] [/input-8, 540] [/input-8, 496] [/input-8, 496] [/input-8, 496] [/input-8, 1971] 
split level 1: [/input, 3228] [/input-8, 1034] [/input-8, 1034] [/input-8, 1034] [/input-8, 1034] [/input, 3228] [/input-8, 1034] [/input-8, 1034] [/input-8, 1034] [/input-8, 1034] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.011941075325012207
10 lb beta sum: 0.025961533188819885, worst -0.004031136631965637
Time: prepare 0.0058    bound 0.1640    transfer 0.0015    finalize 0.0018    func 0.1747    
Accumulated time: func 8.5671    prepare 1.1756    bound 6.2126    transfer 0.2296    finalize 0.5298    
all_split False
======================Cut inference begins======================
max lb tensor(0.24859908) min lb tensor(-0.00400099)
Number of Verified Splits: 220 of 228
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 50.
#cuts 1-3: 48
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.07268929481506348 
BICCOS Cumulative time: 7.000497579574585
Preprocessing time: 0.007119178771972656 Inference time: 0.06311440467834473 Add cuts time: 0.001596212387084961 Cut analysis time: 0.0008594989776611328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00400 (55), -0.00265 (55), -0.00159 (55), -0.00127 (55), -0.00064 (55), -0.00031 (55), -0.00025 (55), -0.00002 (55), 
Length of domains: 8
Time: pickout 0.0025    decision 0.0193    set_bounds 0.0072    solve 0.1747    add 0.0008    
Accumulated time: pickout 0.4511    decision 1.7277    set_bounds 2.2005    solve 8.5805    add 0.5990    
Current (lb-rhs): -0.004000991582870483
21503 domains visited
Cumulative time: 20.8022620677948

BaB round 38
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1971] [/input-8, 1971] [/input-8, 1971] [/input-8, 1971] [/input-8, 1971] [/input-12, 75] [/input-12, 75] [/input-12, 75] 
split level 1: [/input, 3228] [/input, 3228] [/input, 3228] [/input, 3228] [/input, 3228] [/input-8, 1971] [/input-8, 1971] [/input-8, 1971] 
split level 2: [/input-8, 498] [/input-8, 498] [/input-8, 498] [/input-8, 498] [/input-8, 498] [/input-8, 498] [/input-8, 498] [/input-8, 498] 
split level 3: [/input-8, 1873] [/input-8, 1873] [/input-8, 1034] [/input-8, 1034] [/input-8, 1034] [/input-8, 1873] [/input-8, 1873] [/input-8, 1873] 
split level 4: [/input-8, 1034] [/input-8, 1034] [/input-8, 1873] [/input-8, 1873] [/input-8, 1873] [/input, 1927] [/input, 1927] [/input, 1927] 
cut re-enabled after branching node selection
0 lb beta sum: 0.2362956404685974, worst 0.02214708924293518

all verified at 0th iter
Time: prepare 0.0139    bound 0.0078    transfer 0.0005    finalize 0.0020    func 0.0259    
Accumulated time: func 8.5930    prepare 1.1899    bound 6.2203    transfer 0.2301    finalize 0.5318    
all_split False
======================Cut inference begins======================
max lb tensor(0.07899177) min lb tensor(0.02214709)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 50.
#cuts 1-3: 48
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.007684946060180664 
BICCOS Cumulative time: 7.008182525634766
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0171    set_bounds 0.0182    solve 0.0260    add 0.0003    
Accumulated time: pickout 0.4523    decision 1.7448    set_bounds 2.2187    solve 8.6065    add 0.5993    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
21503 domains visited
Cumulative time: 20.873636722564697


Properties batch 3, size 1
Remaining timeout: 177.16064763069153
Verifying property 3 with 1 instances.
##### Instance 174 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.75303030]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.49399567, -40.47394562, -32.72596741, -34.14984894, -31.15039635,
        -34.62684631, -34.39684677, -33.89601898, -36.95606613, -39.19851303],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.75303030]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 914
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 388
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1355
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.894371032714844e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 89] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 65] 
split level 3: [/input-12, 33] 
split level 4: [/input-12, 9] 
split level 5: [/input-12, 85] 
split level 6: [/input-12, 51] 
split level 7: [/input-12, 0] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.4183046817779541

all verified at 0th iter
Time: prepare 0.0018    bound 0.0053    transfer 0.0005    finalize 0.0015    func 0.0110    
Accumulated time: func 0.0110    prepare 0.0022    bound 0.0053    transfer 0.0005    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(1.64276052) min lb tensor(0.41830468)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.0068988800048828125 
BICCOS Cumulative time: 0.0068988800048828125
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0234    set_bounds 0.0160    solve 0.0110    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0234    set_bounds 0.0160    solve 0.0110    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06266331672668457


Properties batch 4, size 1
Remaining timeout: 176.87184357643127
Verifying property 4 with 1 instances.
##### Instance 174 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.90126061]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.49399567, -40.47394562, -32.72596741, -34.14984894, -31.15039635,
        -34.62684631, -34.39684677, -33.89601898, -36.95606613, -39.19851303],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.90126061]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 914
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 388
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1355
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010347366333007812
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 89] 
split level 2: [/input-12, 35] 
split level 3: [/input-12, 82] 
split level 4: [/input-12, 85] 
split level 5: [/input-12, 51] 
split level 6: [/input-12, 65] 
split level 7: [/input-12, 33] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.49356162548065186

all verified at 0th iter
Time: prepare 0.0018    bound 0.0044    transfer 0.0005    finalize 0.0019    func 0.0105    
Accumulated time: func 0.0105    prepare 0.0022    bound 0.0044    transfer 0.0005    finalize 0.0019    
all_split False
======================Cut inference begins======================
max lb tensor(2.32766962) min lb tensor(0.49356163)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.007189035415649414 
BICCOS Cumulative time: 0.007189035415649414
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0166    solve 0.0106    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0166    solve 0.0106    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06427001953125


Properties batch 5, size 1
Remaining timeout: 176.6352128982544
Verifying property 5 with 1 instances.
##### Instance 174 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.71952760]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.49399567, -40.47394562, -32.72596741, -34.14984894, -31.15039635,
        -34.62684631, -34.39684677, -33.89601898, -36.95606613, -39.19851303],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.71952760]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 914
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 388
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1355
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.965896606445312e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 44] 
split level 1: [/input-12, 87] 
split level 2: [/input-12, 37] 
split level 3: [/input-12, 51] 
split level 4: [/input-12, 6] 
split level 5: [/input-12, 56] 
split level 6: [/input-12, 9] 
split level 7: [/input-12, 65] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.5854036211967468

all verified at 0th iter
Time: prepare 0.0018    bound 0.0043    transfer 0.0005    finalize 0.0017    func 0.0102    
Accumulated time: func 0.0102    prepare 0.0022    bound 0.0043    transfer 0.0005    finalize 0.0017    
all_split False
======================Cut inference begins======================
max lb tensor(1.71656299) min lb tensor(0.58540362)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.0069580078125 
BICCOS Cumulative time: 0.0069580078125
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0165    solve 0.0103    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0233    set_bounds 0.0165    solve 0.0103    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06225109100341797


Properties batch 6, size 1
Remaining timeout: 176.42492055892944
Verifying property 6 with 1 instances.
##### Instance 174 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.20421827]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.49399567, -40.47394562, -32.72596741, -34.14984894, -31.15039635,
        -34.62684631, -34.39684677, -33.89601898, -36.95606613, -39.19851303],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.20421827]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 914
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 388
Node /15 input 0: size torch.Size([100]) unstable 53
-----------------
# of unstable neurons: 1355
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.965896606445312e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 10] 
split level 1: [/input-12, 67] 
split level 2: [/input-12, 73] 
split level 3: [/input-12, 14] 
split level 4: [/input-12, 94] 
split level 5: [/input-12, 42] 
split level 6: [/input-12, 54] 
split level 7: [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.39052844047546387

all verified at 0th iter
Time: prepare 0.0018    bound 0.0042    transfer 0.0005    finalize 0.0016    func 0.0100    
Accumulated time: func 0.0100    prepare 0.0022    bound 0.0042    transfer 0.0005    finalize 0.0016    
all_split False
======================Cut inference begins======================
max lb tensor(2.59361982) min lb tensor(0.39052844)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006945371627807617 
BICCOS Cumulative time: 0.006945371627807617
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0162    solve 0.0100    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0162    solve 0.0100    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.061807870864868164


Properties batch 7, size 1
Remaining timeout: 176.20116472244263
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 176.20090866088867
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 23.7992 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 175, vnnlib ID: 175 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-38.44531631, -39.19659805, -42.01140594, -42.19381332, -41.40304565,
         -42.42850494, -42.43614960, -41.48522186, -41.08913803, -38.65056229]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [947]; unstable size 947; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 381, 1, 947] with unstable size 380 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 57, 1, 947] with unstable size 56 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 947] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [380]; unstable size 380; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 57, 1, 380] with unstable size 56 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 380] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [56]; unstable size 56; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 56] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-3.62588310, -1.18017054, -1.05272663, -2.46527910, -1.53334045,
         -1.69754040, -2.58921266, -1.61491680, -3.98603153]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-38.44531631, -39.19659805, -42.01140594, -42.19381332, -41.40304565,
         -42.42850494, -42.43614960, -41.48522186, -41.08913803, -38.65056229]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.09194183, -38.36674118, -42.72952652, -42.59050369, -41.97948456,
          -42.96706009, -42.56744385, -42.00484848, -41.17723846, -38.44775772],
         [-39.09194183, -38.36674118, -42.72952652, -42.59050369, -41.97948456,
          -42.96706009, -42.56744385, -42.00484848, -41.17723846, -38.44775772]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.72520065,  3.63758469,  3.49856186,  2.88754272,  3.87511826,
           3.47550201,  2.91290665,  2.08529663, -0.64418411]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0077 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0809 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 176, vnnlib ID: 176 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-38.58148575, -41.98636246, -36.52239990, -36.07313538, -36.18204498,
         -36.43109131, -37.43404388, -37.81598663, -38.49458694, -39.97121048]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [862]; unstable size 862; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 308, 1, 862] with unstable size 307 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 36, 1, 862] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 862] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [307]; unstable size 307; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 36, 1, 307] with unstable size 35 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 307] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [35]; unstable size 35; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 35] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.30861723,  2.80648947, -2.45094180, -2.29395556, -0.78159732,
         -0.50528526, -0.89391023, -0.79192662,  1.23103821]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-38.58148575, -41.98636246, -36.52239990, -36.07313538, -36.18204498,
         -36.43109131, -37.43404388, -37.81598663, -38.49458694, -39.97121048]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.38837051, -42.89425278, -36.81201935, -37.33707809, -37.11974335,
          -37.64279175, -38.41561890, -38.87468338, -39.47446060, -41.19654465],
         [-39.38837051, -42.89425278, -36.81201935, -37.33707809, -37.11974335,
          -37.64279175, -38.41561890, -38.87468338, -39.47446060, -41.19654465]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.05129242, -0.52505875, -0.21733475,  0.30571365,  1.07854080,
           1.53760529,  2.13738251]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0714 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 177, vnnlib ID: 177 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-63.47592163, -68.66213989, -57.45466232, -62.74374390, -64.98945618,
         -63.17774963, -63.12510300, -64.45204926, -66.82964325, -67.60845947]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [969]; unstable size 969; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 178, 1, 969] with unstable size 177 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 969] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 969] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [177]; unstable size 177; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 177] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 177] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.38983059, 8.29203320, 3.72380114, 6.10056210, 4.09618282, 3.94716191,
         5.29148436, 7.26038885, 7.86534405]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0379 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 178, vnnlib ID: 178 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-38.16101837, -49.44218826, -40.03366852, -42.50727844, -41.85113525,
         -43.59937286, -45.99431992, -44.86839294, -48.22365189, -49.98056412]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1071]; unstable size 1071; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 292, 1, 1071] with unstable size 291 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 1071] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1071] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [291]; unstable size 291; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 291] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 291] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 7.75810003, -0.49084282,  1.33849812,  0.54521942,  2.11884713,
          4.73596430,  2.41529226,  7.40302181,  8.75574303]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-38.16101837, -49.44218826, -40.03366852, -42.50727844, -41.85113525,
         -43.59937286, -45.99431992, -44.86839294, -48.22365189, -49.98056412]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.45it/s]100%|██████████| 1/1 [00:00<00:00,  8.45it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-38.38934708, -49.38438797, -39.32447815, -42.00205231, -41.15227509,
          -42.98741531, -45.17833710, -44.15721893, -48.00263214, -49.78590775]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.93513107]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1211 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 36.316490173339844
alpha/beta optimization time: 1.2900824546813965
initial alpha-crown bounds: tensor([[ 7.97048235, -0.33886194,  1.52141666,  0.75958872,  2.31274700,
          4.95797920,  2.64460373,  7.55654335,  8.93199062]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.33886194229125977
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.52071261405945
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.52067160606384
Verifying property 1 with 1 instances.
##### Instance 178 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.33886194]], device='cuda:0') need to verify.
Model prediction is: tensor([-38.16101837, -49.44218826, -40.03366852, -42.50727844, -41.85113525,
        -43.59937286, -45.99431992, -44.86839294, -48.22365189, -49.98056412],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.33886194]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1071
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 283
Node /15 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 1381
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010585784912109375
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.33886051177978516
10 lb beta sum: 0.0, worst -0.3388810157775879
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0558    transfer 0.0001    finalize 0.0001    func 0.0563    
Accumulated time: func 0.0563    prepare 0.0002    bound 0.0558    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 70] 
split level 1: [/input-12, 83] 
split level 2: [/input-12, 8] 
split level 3: [/input-12, 77] 
split level 4: [/input-12, 62] 
split level 5: [/input-12, 68] 
split level 6: [/input-12, 9] 
split level 7: [/input-12, 95] 
split level 8: [/input-12, 33] 
split level 9: [/input-12, 78] 
split level 10: [/input-12, 50] 
split level 11: [/input-12, 73] 
split level 12: [/input-12, 35] 
split level 13: [/input-8, 333] 
split level 14: [/input-8, 990] 
split level 15: [/input-8, 1610] 
split level 16: [/input-8, 1626] 
split level 17: [/input-8, 2037] 
split level 18: [/input-8, 1836] 
split level 19: [/input, 3897] 
split level 20: [/input-8, 2004] 
split level 21: [/input-8, 1787] 
split level 22: [/input-8, 118] 
split level 23: [/input-8, 1915] 
split level 24: [/input-8, 82] 
split level 25: [/input-8, 873] 
split level 26: [/input, 2101] 
split level 27: [/input-8, 1634] 
split level 28: [/input-8, 1891] 
split level 29: [/input-8, 2021] 
split level 30: [/input-8, 45] 
split level 31: [/input-8, 741] 
split level 32: [/input-8, 585] 
split level 33: [/input, 2533] 
split level 34: [/input-8, 1883] 
split level 35: [/input-8, 85] 
split level 36: [/input, 2515] 
split level 37: [/input, 169] 
split level 38: [/input-8, 115] 
split level 39: [/input-8, 1081] 
split level 40: [/input-8, 870] 
split level 41: [/input-8, 459] 
split level 42: [/input, 3240] 
split level 43: [/input-8, 1496] 
split level 44: [/input, 2531] 
split level 45: [/input-8, 4] 
split level 46: [/input-8, 983] 
split level 47: [/input-8, 783] 
split level 48: [/input, 2197] 
split level 49: [/input, 730] 
split level 50: [/input-8, 2038] 
split level 51: [/input, 3928] 
split level 52: [/input-8, 1434] 
split level 53: [/input-8, 53] 
split level 54: [/input, 1401] 
split level 55: [/input-8, 2] 
split level 56: [/input, 2514] 
split level 57: [/input, 226] 
split level 58: [/input, 3286] 
split level 59: [/input, 2516] 
split level 60: [/input-8, 977] 
split level 61: [/input-8, 916] 
split level 62: [/input-8, 700] 
split level 63: [/input-8, 12] 
split level 64: [/input-8, 1430] 
split level 65: [/input, 2969] 
split level 66: [/input-8, 737] 
split level 67: [/input-8, 6] 
split level 68: [/input-8, 52] 
split level 69: [/input, 2757] 
split level 70: [/input, 202] 
split level 71: [/input, 2523] 
split level 72: [/input, 1237] 
split level 73: [/input, 2521] 
split level 74: [/input-8, 1485] 
split level 75: [/input-8, 54] 
split level 76: [/input-8, 520] 
split level 77: [/input, 1207] 
split level 78: [/input-8, 92] 
split level 79: [/input, 997] 
split level 80: [/input, 1446] 
split level 81: [/input, 2522] 
split level 82: [/input, 2790] 
split level 83: [/input, 209] 
split level 84: [/input, 4042] 
split level 85: [/input, 228] 
split level 86: [/input-8, 800] 
split level 87: [/input, 203] 
split level 88: [/input, 4027] 
split level 89: [/input-8, 1087] 
split level 90: [/input, 2524] 
split level 91: [/input, 218] 
split level 92: [/input, 2595] 
split level 93: [/input, 201] 
split level 94: [/input, 2085] 
split level 95: [/input-8, 1739] 
split level 96: [/input, 3851] 
split level 97: [/input, 3285] 
split level 98: [/input-8, 539] 
split level 99: [/input-8, 1342] 
split level 100: [/input, 227] 
split level 101: [/input-8, 1497] 
split level 102: [/input-8, 2035] 
split level 103: [/input, 2532] 
split level 104: [/input-8, 1749] 
split level 105: [/input, 740] 
split level 106: [/input, 2675] 
split level 107: [/input, 651] 
split level 108: [/input, 714] 
split level 109: [/input, 745] 
split level 110: [/input-8, 908] 
split level 111: [/input, 1911] 
split level 112: [/input, 2985] 
split level 113: [/input-8, 869] 
split level 114: [/input, 210] 
split level 115: [/input, 1204] 
split level 116: [/input, 139] 
split level 117: [/input, 1943] 
split level 118: [/input, 1174] 
split level 119: [/input, 225] 
split level 120: [/input, 219] 
split level 121: [/input-8, 38] 
split level 122: [/input, 2538] 
split level 123: [/input, 2530] 
split level 124: [/input, 741] 
split level 125: [/input, 171] 
split level 126: [/input, 652] 
split level 127: [/input, 2513] 
split level 128: [/input, 1236] 
split level 129: [/input-8, 15] 
split level 130: [/input, 1000] 
split level 131: [/input-8, 1006] 
split level 132: [/input, 2805] 
split level 133: [/input-8, 763] 
split level 134: [/input, 187] 
split level 135: [/input, 3933] 
split level 136: [/input, 4057] 
split level 137: [/input, 2313] 
split level 138: [/input, 217] 
split level 139: [/input, 2540] 
split level 140: [/input, 2067] 
split level 141: [/input, 2771] 
split level 142: [/input, 4041] 
split level 143: [/input, 2775] 
split level 144: [/input-8, 948] 
split level 145: [/input-8, 727] 
split level 146: [/input, 2506] 
split level 147: [/input, 1577] 
split level 148: [/input, 2966] 
split level 149: [/input-8, 1596] 
split level 150: [/input, 2691] 
split level 151: [/input, 4058] 
split level 152: [/input, 1220] 
split level 153: [/input, 2539] 
split level 154: [/input, 1818] 
split level 155: [/input, 1221] 
split level 156: [/input, 236] 
split level 157: [/input, 235] 
split level 158: [/input, 746] 
split level 159: [/input, 211] 
split level 160: [/input, 739] 
split level 161: [/input, 2803] 
split level 162: [/input, 985] 
split level 163: [/input, 2794] 
split level 164: [/input, 2529] 
split level 165: [/input, 2547] 
split level 166: [/input, 2549] 
split level 167: [/input, 2482] 
split level 168: [/input, 220] 
split level 169: [/input, 204] 
split level 170: [/input, 1912] 
split level 171: [/input, 332] 
split level 172: [/input, 4028] 
split level 173: [/input, 2777] 
split level 174: [/input, 2938] 
split level 175: [/input, 715] 
split level 176: [/input, 2548] 
split level 177: [/input, 1226] 
split level 178: [/input, 870] 
split level 179: [/input, 2499] 
split level 180: [/input, 188] 
split level 181: [/input, 1222] 
split level 182: [/input, 245] 
split level 183: [/input, 233] 
split level 184: [/input, 4011] 
split level 185: [/input, 1227] 
split level 186: [/input-8, 911] 
split level 187: [/input, 2507] 
split level 188: [/input, 145] 
split level 189: [/input, 699] 
split level 190: [/input, 2772] 
split level 191: [/input, 3300] 
split level 192: [/input, 724] 
split level 193: [/input, 4043] 
split level 194: [/input, 757] 
split level 195: [/input, 2526] 
split level 196: [/input, 2498] 
split level 197: [/input, 2525] 
split level 198: [/input, 4012] 
split level 199: [/input, 177] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.338559627532959
10 lb beta sum: 0.0, worst -0.33855104446411133
Time: prepare 0.0115    bound 0.1031    transfer 0.0026    finalize 0.0040    func 0.1238    
Accumulated time: func 0.1801    prepare 0.0217    bound 0.1589    transfer 0.0027    finalize 0.0041    
all_split False
======================Cut inference begins======================
max lb tensor(0.34835148) min lb tensor(-0.33853722)
Number of Verified Splits: 7 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.010976791381835938 
BICCOS Cumulative time: 0.010976791381835938
Preprocessing time: 0.010284900665283203 Inference time: 0.0003077983856201172 Add cuts time: 0.00011157989501953125 Cut analysis time: 0.00027251243591308594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32974 (1), -0.32953 (1), -0.32950 (1), -0.32919 (1), -0.32892 (1), -0.32849 (1), -0.32778 (1), -0.32764 (1), -0.32764 (1), -0.32751 (1), -0.32692 (1), -0.32679 (1), -0.32602 (1), -0.32552 (1), -0.32526 (1), -0.32462 (1), -0.32428 (1), -0.32398 (1), -0.32260 (1), -0.32134 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5435    set_bounds 0.0085    solve 0.1239    add 0.1050    
Accumulated time: pickout 0.0003    decision 0.5435    set_bounds 0.0085    solve 0.1239    add 0.1050    
Current (lb-rhs): -0.32973814010620117
50 domains visited
Cumulative time: 0.853938102722168

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 83] [/input-12, 70] [/input-12, 70] [/input-12, 70] 
split level 1: [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 77] [/input-12, 83] [/input-12, 83] [/input-12, 83] 
split level 2: [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 77] [/input-12, 77] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 77] [/input-12, 62] 
split level 3: [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 62] [/input-12, 68] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.30974912643432617
10 lb beta sum: 1.0730459690093994, worst -0.03735089302062988
Time: prepare 0.0073    bound 0.1261    transfer 0.0008    finalize 0.0024    func 0.1392    
Accumulated time: func 0.3193    prepare 0.0292    bound 0.2851    transfer 0.0035    finalize 0.0065    
all_split False
======================Cut inference begins======================
max lb tensor(0.61751986) min lb tensor(-0.03656459)
Number of Verified Splits: 295 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.02958822250366211 
BICCOS Cumulative time: 0.04056501388549805
Preprocessing time: 0.011893033981323242 Inference time: 0.011034727096557617 Add cuts time: 0.0064656734466552734 Cut analysis time: 0.00019478797912597656
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0204    set_bounds 0.0125    solve 0.1392    add 0.0153    
Accumulated time: pickout 0.0015    decision 0.5639    set_bounds 0.0210    solve 0.2631    add 0.1204    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 70] 
split level 1: [/input-12, 83] 
split level 2: [/input-12, 77] 
split level 3: [/input-12, 62] 
split level 4: [/input-12, 68] 
split level 5: [/input-12, 95] 
split level 6: [/input-12, 33] 
split level 7: [/input-12, 78] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.21364402770996094

all verified at 0th iter
Time: prepare 0.0037    bound 0.0045    transfer 0.0012    finalize 0.0015    func 0.0125    
Accumulated time: func 0.3317    prepare 0.0333    bound 0.2895    transfer 0.0047    finalize 0.0080    
all_split False
======================Cut inference begins======================
max lb tensor(2.06354284) min lb tensor(0.21364403)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.0063517093658447266 
BICCOS Cumulative time: 0.04691672325134277
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0169    solve 0.0125    add 0.0002    
Accumulated time: pickout 0.0019    decision 0.5867    set_bounds 0.0379    solve 0.2756    add 0.1206    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.134739637374878


Properties batch 2, size 1
Remaining timeout: 197.22432255744934
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 197.22424411773682
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.22421956062317
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.2241985797882
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.22417831420898
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.22415709495544
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.22413635253906
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.7759 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 179, vnnlib ID: 179 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.80883408, -41.57478714, -37.66098022, -41.68850327, -38.02273560,
         -42.77908325, -42.28770828, -42.74868393, -39.67869949, -42.68332291]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [758]; unstable size 758; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 269, 1, 758] with unstable size 268 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 33, 1, 758] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 758] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [268]; unstable size 268; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 33, 1, 268] with unstable size 32 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 268] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [32]; unstable size 32; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 32] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.88746262, 1.21528649, 5.14734411, 1.63405240, 5.81154728, 5.65102148,
         5.37962341, 3.23941970, 5.95633793]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0635 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 180, vnnlib ID: 180 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-40.89014053, -44.38752365, -38.37167358, -37.36851501, -34.17048645,
         -35.76465988, -39.29673386, -31.42552948, -43.01402283, -40.45228195]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [906]; unstable size 906; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 382, 1, 906] with unstable size 381 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 54, 1, 906] with unstable size 53 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 906] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [381]; unstable size 381; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 54, 1, 381] with unstable size 53 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 381] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [53]; unstable size 53; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 53] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.47990990,  7.22561932,  1.91504335,  1.63015318, -0.13678646,
         -0.02254200,  2.37462425,  6.24498034,  3.56586003]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-40.89014053, -44.38752365, -38.37167358, -37.36851501, -34.17048645,
         -35.76465988, -39.29673386, -31.42552948, -43.01402283, -40.45228195]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.41it/s]100%|██████████| 1/1 [00:00<00:00,  8.40it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-39.00784302, -42.48379898, -36.16341400, -35.44812012, -32.15811157,
          -33.85570145, -37.10570145, -30.56023979, -41.01691437, -38.96557617],
         [-39.00784302, -42.48379898, -36.16341400, -35.44812012, -32.15811157,
          -33.85570145, -37.10570145, -30.56023979, -41.01691437, -38.96557617]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.59787178, 3.29546165]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1220 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 6th iter
best_l after optimization: 29.513832092285156
alpha/beta optimization time: 0.09163665771484375
initial alpha-crown bounds: tensor([[4.73317099, 7.46574211, 2.16727400, 1.88340116, 0.01057005, 0.25121975,
         2.67884731, 6.50733519, 3.81627107]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.010570049285888672
verified with init bound!
Result: safe-incomplete in 0.2812 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 181, vnnlib ID: 181 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.45388031, -28.57538986, -24.71142197, -25.58709145, -24.26648521,
         -25.65231895, -23.92275238, -27.23548889, -26.15226936, -29.15579987]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [786]; unstable size 786; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 310, 1, 786] with unstable size 309 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 42, 1, 786] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 786] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [309]; unstable size 309; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 42, 1, 309] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 309] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [41]; unstable size 41; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.11080000,  0.28720522, -1.95381761, -0.29601002, -2.00105667,
         -0.62032753,  0.40908170, -1.60728765,  0.25162172]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.45388031, -28.57538986, -24.71142197, -25.58709145, -24.26648521,
         -25.65231895, -23.92275238, -27.23548889, -26.15226936, -29.15579987]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.75461769, -28.16910362, -23.87347603, -25.25710678, -23.94559479,
          -25.34491539, -23.92893410, -26.74306870, -25.68023872, -28.83852005],
         [-26.75461769, -28.16910362, -23.87347603, -25.25710678, -23.94559479,
          -25.34491539, -23.92893410, -26.74306870, -25.68023872, -28.83852005]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.05545807,  1.32817268,  0.01666069,  1.41598129,  1.75130463]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0517 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 182, vnnlib ID: 182 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-44.12775040, -49.31150436, -46.26469421, -49.67376328, -52.05673218,
         -51.04300690, -50.21411133, -51.25565720, -51.08109665, -48.83628464]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [933]; unstable size 933; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 234, 1, 933] with unstable size 233 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 933] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 933] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [233]; unstable size 233; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 233] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 233] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.45213127, 0.24780703, 3.05785370, 5.30071497, 4.29145908, 3.55853820,
         4.32929134, 4.26397657, 2.49747419]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0793 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 183, vnnlib ID: 183 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.01076889, -36.43500137, -28.65116692, -30.53394318, -27.88598061,
         -31.25176048, -29.00863647, -32.02362442, -35.09077835, -37.43388367]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1014]; unstable size 1014; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using full alpha [2, 32, 1, 1014] with unstable size 29 total_size 32 output_shape 32
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 61, 1, 1014] with unstable size 60 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1014] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [547]; unstable size 547; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 61, 1, 547] with unstable size 60 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 547] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [60]; unstable size 60; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 60] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.08594334,  1.65714931, -3.90532756, -1.84035897, -2.11988425,
         -3.82628727, -1.06986475,  0.22036982,  1.15606880]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.01076889, -36.43500137, -28.65116692, -30.53394318, -27.88598061,
         -31.25176048, -29.00863647, -32.02362442, -35.09077835, -37.43388367]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.08916855, -38.02297211, -29.44256973, -31.86270714, -29.69173813,
          -32.50545883, -30.41591454, -33.47731018, -36.25439835, -38.79359436],
         [-34.08916855, -38.02297211, -29.44256973, -31.86270714, -29.69173813,
          -32.50545883, -30.41591454, -33.47731018, -36.25439835, -38.79359436]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 4.39743042, -0.24916840,  2.17096901,  2.81372070,  0.72417641,
           3.78557205]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0065 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0752 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 184, vnnlib ID: 184 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.87211227, -32.74485397, -35.96586609, -34.84571075, -34.75518036,
         -36.61226654, -37.02480698, -34.42336273, -30.54558372, -29.81731606]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [835]; unstable size 835; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 265, 1, 835] with unstable size 264 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 43, 1, 835] with unstable size 42 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 835] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [264]; unstable size 264; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 43, 1, 264] with unstable size 42 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 264] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [42]; unstable size 42; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 42] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.17532825, -0.57809210,  2.22104216,  2.05428457,  1.66268826,
          3.59661531,  3.22601795,  1.32768106, -3.11450100]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-31.87211227, -32.74485397, -35.96586609, -34.84571075, -34.75518036,
         -36.61226654, -37.02480698, -34.42336273, -30.54558372, -29.81731606]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.29548073, -32.34725952, -35.36205292, -34.38705063, -34.09539413,
          -36.23427200, -36.44293976, -34.12118530, -29.32302094, -30.05616188],
         [-31.29548073, -32.34725952, -35.36205292, -34.38705063, -34.09539413,
          -36.23427200, -36.44293976, -34.12118530, -29.32302094, -30.05616188]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.23931885,  2.29109764, -0.73314095]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1096 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 185, vnnlib ID: 185 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.94723511, -29.58923340, -33.14463806, -32.39447403, -31.87436867,
         -32.92152405, -32.29874802, -33.57628250, -34.76884079, -27.75239372]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [713]; unstable size 713; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 349, 1, 713] with unstable size 348 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 49, 1, 713] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 713] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [348]; unstable size 348; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 49, 1, 348] with unstable size 48 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 348] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [48]; unstable size 48; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 48] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.93253994, -1.29180980,  0.18791866,  0.46719694, -0.41592884,
          0.91567326, -0.30550385,  0.99053669,  2.29938793]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.94723511, -29.58923340, -33.14463806, -32.39447403, -31.87436867,
         -32.92152405, -32.29874802, -33.57628250, -34.76884079, -27.75239372]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.35it/s]100%|██████████| 1/1 [00:00<00:00,  8.35it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.32102203, -29.28714561, -33.31015396, -32.66419220, -32.23988342,
          -33.22661591, -32.50867462, -34.08345413, -34.60460281, -28.49698067],
         [-34.32102203, -29.28714561, -33.31015396, -32.66419220, -32.23988342,
          -33.22661591, -32.50867462, -34.08345413, -34.60460281, -28.49698067]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.79016495, 3.74290276, 4.01169395]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1227 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 6.843441963195801
alpha/beta optimization time: 1.2963151931762695
initial alpha-crown bounds: tensor([[ 2.17803621, -1.13013220,  0.45885277,  0.67294312, -0.19069672,
          1.12622452, -0.07676888,  1.25201845,  2.55296469]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 3 ; Worst class: (+ rhs) -1.1301321983337402
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.51393127441406
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.5138909816742
Verifying property 1 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.13013220]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.94723511, -29.58923340, -33.14463806, -32.39447403, -31.87436867,
        -32.92152405, -32.29874802, -33.57628250, -34.76884079, -27.75239372],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.13013220]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 713
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 343
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1103
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011944770812988281
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 25] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 16] 
split level 3: [/input-12, 48] 
split level 4: [/input-12, 22] 
split level 5: [/input-12, 72] 
split level 6: [/input-12, 37] 
split level 7: [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04335594177246094
10 lb beta sum: 0.0, worst -0.03995251655578613
Time: prepare 0.0020    bound 0.1071    transfer 0.0015    finalize 0.0022    func 0.1148    
Accumulated time: func 0.1148    prepare 0.0024    bound 0.1071    transfer 0.0015    finalize 0.0022    
all_split False
======================Cut inference begins======================
max lb tensor(0.87289470) min lb tensor(-0.03808141)
Number of Verified Splits: 251 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.1301276683807373
10 lb beta sum: 0.0, worst -1.1301385164260864
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 1
#cuts 4-6: 3
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.23992013931274414 
BICCOS Cumulative time: 0.23992013931274414
Preprocessing time: 0.008219003677368164 Inference time: 0.22901368141174316 Add cuts time: 0.0019960403442382812 Cut analysis time: 0.0006914138793945312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03808 (8), -0.02456 (8), -0.01287 (8), -0.00826 (8), -0.00635 (8), 
Length of domains: 5
Time: pickout 0.0005    decision 0.0241    set_bounds 0.0170    solve 0.1149    add 0.0369    
Accumulated time: pickout 0.0005    decision 0.0241    set_bounds 0.0170    solve 0.1149    add 0.0369    
Current (lb-rhs): -0.03808140754699707
5 domains visited
Cumulative time: 0.44774842262268066

BaB round 2
batch: 5
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 40] [/input-12, 8] [/input-12, 40] [/input-12, 8] 
split level 1: [/input-12, 40] [/input-12, 8] [/input-12, 9] [/input-12, 8] [/input-12, 9] 
split level 2: [/input-12, 9] [/input-12, 9] [/input-12, 0] [/input-12, 9] [/input-12, 0] 
split level 3: [/input-12, 0] [/input-12, 0] [/input-8, 542] [/input-12, 0] [/input-8, 542] 
split level 4: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] 
split level 5: [/input-8, 1844] [/input-8, 1844] [/input-8, 1844] [/input-8, 1844] [/input-8, 1844] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.11092305183410645

all verified at 0th iter
Time: prepare 0.0063    bound 0.0054    transfer 0.0030    finalize 0.0025    func 0.0199    
Accumulated time: func 0.1347    prepare 0.0091    bound 0.1125    transfer 0.0045    finalize 0.0047    
all_split False
======================Cut inference begins======================
max lb tensor(0.37586546) min lb tensor(0.11092305)
Number of Verified Splits: 320 of 320
No cut inferred: All or none verified.
Total number of valid cuts: 10.
#cuts 1-3: 1
#cuts 4-6: 3
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.009738445281982422 
BICCOS Cumulative time: 0.24965858459472656
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0014    decision 0.0225    set_bounds 0.0203    solve 0.0200    add 0.0005    
Accumulated time: pickout 0.0019    decision 0.0466    set_bounds 0.0373    solve 0.1349    add 0.0374    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
5 domains visited
Cumulative time: 0.5232570171356201


Properties batch 2, size 1
Remaining timeout: 197.7715675830841
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 197.771493434906
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.77139115333557
Verifying property 4 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.19069672]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.94723511, -29.58923340, -33.14463806, -32.39447403, -31.87436867,
        -32.92152405, -32.29874802, -33.57628250, -34.76884079, -27.75239372],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.19069672]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 713
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 343
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1103
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010395050048828125
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 88] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 95] 
split level 3: [/input-12, 72] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 56] 
split level 6: [/input-12, 62] 
split level 7: [/input-12, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 1.061223030090332

all verified at 0th iter
Time: prepare 0.0018    bound 0.0044    transfer 0.0005    finalize 0.0015    func 0.0101    
Accumulated time: func 0.0101    prepare 0.0023    bound 0.0044    transfer 0.0005    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(2.65937233) min lb tensor(1.06122303)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.007180213928222656 
BICCOS Cumulative time: 0.007180213928222656
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0163    solve 0.0102    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0163    solve 0.0102    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06245541572570801


Properties batch 5, size 1
Remaining timeout: 197.4186074733734
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.4185380935669
Verifying property 6 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07676888]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.94723511, -29.58923340, -33.14463806, -32.39447403, -31.87436867,
        -32.92152405, -32.29874802, -33.57628250, -34.76884079, -27.75239372],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07676888]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 713
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 343
Node /15 input 0: size torch.Size([100]) unstable 47
-----------------
# of unstable neurons: 1103
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010800361633300781
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 56] 
split level 1: [/input-12, 72] 
split level 2: [/input-12, 44] 
split level 3: [/input-12, 76] 
split level 4: [/input-12, 9] 
split level 5: [/input-12, 70] 
split level 6: [/input-12, 8] 
split level 7: [/input-12, 37] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 1.2762293815612793

all verified at 0th iter
Time: prepare 0.0019    bound 0.0045    transfer 0.0005    finalize 0.0020    func 0.0107    
Accumulated time: func 0.0107    prepare 0.0023    bound 0.0045    transfer 0.0005    finalize 0.0020    
all_split False
======================Cut inference begins======================
max lb tensor(2.77317953) min lb tensor(1.27622938)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.007183551788330078 
BICCOS Cumulative time: 0.007183551788330078
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0239    set_bounds 0.0168    solve 0.0108    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0239    set_bounds 0.0168    solve 0.0108    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06443262100219727


Properties batch 7, size 1
Remaining timeout: 197.12251591682434
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.12244486808777
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.8779 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 186, vnnlib ID: 186 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.11699867, -34.41848755, -32.95035934, -35.32603073, -34.39403534,
         -37.23482132, -36.16854095, -36.84840012, -25.73526192, -33.77630615]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [964]; unstable size 964; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 313, 1, 964] with unstable size 312 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 37, 1, 964] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 964] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [312]; unstable size 312; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 37, 1, 312] with unstable size 36 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 312] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [36]; unstable size 36; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 36] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.39898372, 4.84392262, 3.85653400, 6.47980404, 5.48405886, 7.86079788,
         7.02711248, 6.91455460, 5.10384321]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0692 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 187, vnnlib ID: 187 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.61950111, -32.12991714, -32.11750412, -30.22799873, -30.37730980,
         -31.07536125, -32.10892105, -32.61753464, -28.30606270, -30.47768784]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1092]; unstable size 1092; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 435, 1, 1092] with unstable size 434 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 59, 1, 1092] with unstable size 58 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1092] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [434]; unstable size 434; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 59, 1, 434] with unstable size 58 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 434] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [58]; unstable size 58; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 58] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.86309338, -0.01983929, -2.89258814, -3.08019257, -4.03018856,
         -3.11555481, -2.16541338, -2.41138268, -1.96842957]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.61950111, -32.12991714, -32.11750412, -30.22799873, -30.37730980,
         -31.07536125, -32.10892105, -32.61753464, -28.30606270, -30.47768784]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.12it/s]100%|██████████| 1/1 [00:00<00:00,  7.11it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.68228149, -31.47068596, -30.75047874, -29.05437851, -28.63768005,
          -29.88603401, -30.59108162, -31.39931679, -28.28654289, -29.93605995],
         [-29.68228149, -31.47068596, -30.75047874, -29.05437851, -28.63768005,
          -29.88603401, -30.59108162, -31.39931679, -28.28654289, -29.93605995]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.39573860, 3.18414307, 2.46393585, 0.76783562, 0.35113716,
          1.59949112, 2.30453873, 3.11277390, 1.64951706]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1442 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: -19.682418823242188
alpha/beta optimization time: 1.3118746280670166
initial alpha-crown bounds: tensor([[-2.57761073,  0.23152614, -2.54889774, -2.77627587, -3.68473434,
         -2.75624084, -1.85415220, -1.99774766, -1.71828699]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 8 ; Worst class: (+ rhs) -3.684734344482422
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.47211861610413
Verifying property 0 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.57761073]], device='cuda:0') need to verify.
Model prediction is: tensor([-30.61950111, -32.12991714, -32.11750412, -30.22799873, -30.37730980,
        -31.07536125, -32.10892105, -32.61753464, -28.30606270, -30.47768784],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.57761073]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1092
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 421
Node /15 input 0: size torch.Size([100]) unstable 56
-----------------
# of unstable neurons: 1569
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011992454528808594
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 28] 
split level 1: [/input-12, 60] 
split level 2: [/input-12, 43] 
split level 3: [/input-12, 49] 
split level 4: [/input-12, 40] 
split level 5: [/input-12, 48] 
split level 6: [/input-12, 36] 
split level 7: [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3386389017105103
10 lb beta sum: 0.0, worst -1.3362475633621216
Time: prepare 0.0020    bound 0.1001    transfer 0.0011    finalize 0.0023    func 0.1075    
Accumulated time: func 0.1075    prepare 0.0024    bound 0.1001    transfer 0.0011    finalize 0.0023    
all_split False
======================Cut inference begins======================
max lb tensor(0.68435335) min lb tensor(-1.33503819)
Number of Verified Splits: 58 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.6903748512268066
10 lb beta sum: 0.0, worst -1.6299493312835693
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 4-6: 6
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.14310336112976074 
BICCOS Cumulative time: 0.14310336112976074
Preprocessing time: 0.007207632064819336 Inference time: 0.13290762901306152 Add cuts time: 0.0019636154174804688 Cut analysis time: 0.001024484634399414
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.33504 (8), -1.30410 (8), -1.29858 (8), -1.28467 (8), -1.25483 (8), -1.22303 (8), -1.21361 (8), -1.20326 (8), -1.13969 (8), -1.12422 (8), -1.08465 (8), -1.08200 (8), -1.08063 (8), -1.06721 (8), -1.05438 (8), -1.05376 (8), -1.05216 (8), -1.04391 (8), -1.02843 (8), -1.02546 (8), 
Length of domains: 198
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0168    solve 0.1076    add 0.0763    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0168    solve 0.1076    add 0.0763    
Current (lb-rhs): -1.335038185119629
198 domains visited
Cumulative time: 0.378828763961792

BaB round 2
batch: 198
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2568608522415161
10 lb beta sum: 0.0, worst -1.2559361457824707
Time: prepare 0.0059    bound 0.1283    transfer 0.0009    finalize 0.0028    func 0.1406    
Accumulated time: func 0.2480    prepare 0.0085    bound 0.2285    transfer 0.0020    finalize 0.0051    
all_split False
======================Cut inference begins======================
max lb tensor(0.51715636) min lb tensor(-1.25551879)
Number of Verified Splits: 191 of 396
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.7394773960113525
10 lb beta sum: 0.07502756267786026, worst -1.3014774322509766
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 57.
#cuts 4-6: 14
#cuts 7-9: 42
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.2506539821624756 
BICCOS Cumulative time: 0.39375734329223633
Preprocessing time: 0.01228642463684082 Inference time: 0.2259213924407959 Add cuts time: 0.008994817733764648 Cut analysis time: 0.0034513473510742188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.25552 (9), -1.22571 (9), -1.21896 (9), -1.20609 (9), -1.17279 (9), -1.14240 (9), -1.13238 (9), -1.12221 (9), -1.04837 (9), -1.03616 (9), -0.99719 (9), -0.99377 (9), -0.99246 (9), -0.98223 (9), -0.96693 (9), -0.96385 (9), -0.96272 (9), -0.95854 (9), -0.94654 (9), -0.94227 (9), 
Length of domains: 205
Time: pickout 0.0161    decision 0.0277    set_bounds 0.0118    solve 0.1407    add 0.0872    
Accumulated time: pickout 0.0165    decision 0.0513    set_bounds 0.0286    solve 0.2482    add 0.1635    
Current (lb-rhs): -1.2555187940597534
403 domains visited
Cumulative time: 0.9248847961425781

BaB round 3
batch: 205
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.151319146156311
10 lb beta sum: 0.0, worst -1.1504931449890137
Time: prepare 0.0065    bound 0.1466    transfer 0.0051    finalize 0.0036    func 0.1646    
Accumulated time: func 0.4126    prepare 0.0153    bound 0.3751    transfer 0.0071    finalize 0.0086    
all_split False
======================Cut inference begins======================
max lb tensor(0.28343427) min lb tensor(-1.15030968)
Number of Verified Splits: 113 of 410
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.741004467010498
10 lb beta sum: 0.1671375185251236, worst -1.2866840362548828
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 70.
#cuts 4-6: 14
#cuts 7-9: 54
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.22529840469360352 
BICCOS Cumulative time: 0.6190557479858398
Preprocessing time: 0.013411521911621094 Inference time: 0.2013862133026123 Add cuts time: 0.006539106369018555 Cut analysis time: 0.0039615631103515625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.15031 (10), -1.11702 (10), -1.11120 (10), -1.09357 (10), -1.07238 (10), -1.03594 (10), -1.02881 (10), -1.01375 (10), -0.94167 (10), -0.92679 (10), -0.88828 (10), -0.88108 (10), -0.87953 (10), -0.87879 (10), -0.87697 (10), -0.87335 (10), -0.86992 (10), -0.86332 (10), -0.86061 (10), -0.85876 (10), 
Length of domains: 297
Time: pickout 0.0207    decision 0.0301    set_bounds 0.0139    solve 0.1647    add 0.0094    
Accumulated time: pickout 0.0372    decision 0.0813    set_bounds 0.0425    solve 0.4129    add 0.1729    
Current (lb-rhs): -1.150309681892395
700 domains visited
Cumulative time: 1.392606258392334

BaB round 4
batch: 297
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0779801607131958
10 lb beta sum: 0.0, worst -1.0774695873260498
Time: prepare 0.0089    bound 0.1389    transfer 0.0030    finalize 0.0043    func 0.1590    
Accumulated time: func 0.5716    prepare 0.0244    bound 0.5140    transfer 0.0102    finalize 0.0129    
all_split False
======================Cut inference begins======================
max lb tensor(0.23894763) min lb tensor(-1.07732701)
Number of Verified Splits: 184 of 594
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 8
#cuts 4-6: 17
#cuts 7-9: 5
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.04634833335876465 
BICCOS Cumulative time: 0.6654040813446045
Preprocessing time: 0.01806354522705078 Inference time: 0.021558284759521484 Add cuts time: 0.005376100540161133 Cut analysis time: 0.00135040283203125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.07733 (11), -1.04366 (11), -1.03821 (11), -1.01935 (11), -0.99660 (11), -0.95967 (11), -0.95321 (11), -0.93726 (11), -0.86561 (11), -0.84854 (11), -0.81261 (11), -0.80559 (11), -0.79914 (11), -0.79675 (11), -0.79271 (11), -0.79027 (11), -0.78827 (11), -0.78663 (11), -0.78054 (11), -0.77796 (11), 
Length of domains: 410
Time: pickout 0.0046    decision 0.0250    set_bounds 0.0175    solve 0.1591    add 0.0038    
Accumulated time: pickout 0.0417    decision 0.1063    set_bounds 0.0600    solve 0.5721    add 0.1767    
Current (lb-rhs): -1.077327013015747
1110 domains visited
Cumulative time: 1.650968313217163

BaB round 5
batch: 410
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 38] [/input-12, 38] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9902548789978027
10 lb beta sum: 0.005600099451839924, worst -0.9892294406890869
Time: prepare 0.0119    bound 0.1406    transfer 0.0059    finalize 0.0046    func 0.1691    
Accumulated time: func 0.7407    prepare 0.0368    bound 0.6546    transfer 0.0161    finalize 0.0175    
all_split False
======================Cut inference begins======================
max lb tensor(0.27639851) min lb tensor(-0.98888969)
Number of Verified Splits: 266 of 820
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 42.
#cuts 1-3: 13
#cuts 4-6: 23
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.06844687461853027 
BICCOS Cumulative time: 0.7338509559631348
Preprocessing time: 0.025585651397705078 Inference time: 0.036350250244140625 Add cuts time: 0.004705190658569336 Cut analysis time: 0.0018057823181152344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.98889 (12), -0.95675 (12), -0.95169 (12), -0.93328 (12), -0.90744 (12), -0.87431 (12), -0.86569 (12), -0.84979 (12), -0.81510 (12), -0.76534 (12), -0.76235 (12), -0.76061 (12), -0.74636 (12), -0.73602 (12), -0.73532 (12), -0.70983 (12), -0.70379 (12), -0.70091 (12), -0.69849 (12), -0.69810 (12), 
Length of domains: 554
Time: pickout 0.0145    decision 0.0406    set_bounds 0.0240    solve 0.1693    add 0.0926    
Accumulated time: pickout 0.0562    decision 0.1470    set_bounds 0.0840    solve 0.7413    add 0.2693    
Current (lb-rhs): -0.9888896942138672
1664 domains visited
Cumulative time: 2.07011342048645

BaB round 6
batch: 554
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 72] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9046814441680908
10 lb beta sum: 0.0032813227735459805, worst -0.9040567874908447
Time: prepare 0.0163    bound 0.1397    transfer 0.0053    finalize 0.0055    func 0.1740    
Accumulated time: func 0.9147    prepare 0.0533    bound 0.7942    transfer 0.0213    finalize 0.0231    
all_split False
======================Cut inference begins======================
max lb tensor(0.25294140) min lb tensor(-0.90389395)
Number of Verified Splits: 413 of 1108
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 87.
#cuts 1-3: 6
#cuts 4-6: 76
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.3195536136627197 
BICCOS Cumulative time: 1.0534045696258545
Preprocessing time: 0.03519153594970703 Inference time: 0.26941728591918945 Add cuts time: 0.011410236358642578 Cut analysis time: 0.003534555435180664
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.90389 (13), -0.87138 (13), -0.86877 (13), -0.84965 (13), -0.82171 (13), -0.78855 (13), -0.78169 (13), -0.76581 (13), -0.73702 (13), -0.72789 (13), -0.71554 (13), -0.67649 (13), -0.67647 (13), -0.67557 (13), -0.67370 (13), -0.66356 (13), -0.66122 (13), -0.65943 (13), -0.64816 (13), -0.64513 (13), 
Length of domains: 695
Time: pickout 0.0250    decision 0.0473    set_bounds 0.0355    solve 0.1752    add 0.0773    
Accumulated time: pickout 0.0812    decision 0.1942    set_bounds 0.1195    solve 0.9165    add 0.3466    
Current (lb-rhs): -0.9038939476013184
2359 domains visited
Cumulative time: 2.757291793823242

BaB round 7
batch: 695
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.8130638599395752
10 lb beta sum: 0.0025258888490498066, worst -0.8126096725463867
Time: prepare 0.0205    bound 0.1479    transfer 0.0082    finalize 0.0071    func 0.1935    
Accumulated time: func 1.1082    prepare 0.0741    bound 0.9421    transfer 0.0295    finalize 0.0301    
all_split False
======================Cut inference begins======================
max lb tensor(0.27093208) min lb tensor(-0.81244040)
Number of Verified Splits: 450 of 1390
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 104.
#cuts 1-3: 8
#cuts 4-6: 93
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.12000203132629395 
BICCOS Cumulative time: 1.1734066009521484
Preprocessing time: 0.04479813575744629 Inference time: 0.05603456497192383 Add cuts time: 0.015212535858154297 Cut analysis time: 0.003956794738769531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.81244 (14), -0.79698 (14), -0.78068 (14), -0.77702 (14), -0.76001 (14), -0.75881 (14), -0.75687 (14), -0.73630 (14), -0.73005 (14), -0.71497 (14), -0.69791 (14), -0.69019 (14), -0.67701 (14), -0.67417 (14), -0.67067 (14), -0.65194 (14), -0.63923 (14), -0.63620 (14), -0.63091 (14), -0.61506 (14), 
Length of domains: 940
Time: pickout 0.0136    decision 0.0561    set_bounds 0.0421    solve 0.1938    add 0.0107    
Accumulated time: pickout 0.0949    decision 0.2503    set_bounds 0.1616    solve 1.1104    add 0.3573    
Current (lb-rhs): -0.8124403953552246
3299 domains visited
Cumulative time: 3.198054313659668

BaB round 8
batch: 940
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7211544513702393
10 lb beta sum: 0.0061279842630028725, worst -0.7202670574188232
Time: prepare 0.0272    bound 0.1611    transfer 0.0091    finalize 0.0102    func 0.2197    
Accumulated time: func 1.3279    prepare 0.1015    bound 1.1032    transfer 0.0386    finalize 0.0403    
all_split False
======================Cut inference begins======================
max lb tensor(0.30628359) min lb tensor(-0.72009897)
Number of Verified Splits: 674 of 1880
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 102.
#cuts 1-3: 11
#cuts 4-6: 89
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.16748666763305664 
BICCOS Cumulative time: 1.340893268585205
Preprocessing time: 0.05884194374084473 Inference time: 0.08580231666564941 Add cuts time: 0.018996000289916992 Cut analysis time: 0.003846406936645508
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.72010 (15), -0.70927 (15), -0.70484 (15), -0.69275 (15), -0.68539 (15), -0.68042 (15), -0.67962 (15), -0.67715 (15), -0.66392 (15), -0.66355 (15), -0.66188 (15), -0.66048 (15), -0.65778 (15), -0.65762 (15), -0.63862 (15), -0.63791 (15), -0.63785 (15), -0.62803 (15), -0.62191 (15), -0.61338 (15), 
Length of domains: 1206
Time: pickout 0.0181    decision 0.0715    set_bounds 0.0576    solve 0.2211    add 0.0838    
Accumulated time: pickout 0.1129    decision 0.3218    set_bounds 0.2192    solve 1.3314    add 0.4412    
Current (lb-rhs): -0.7200989723205566
4505 domains visited
Cumulative time: 3.828507900238037

BaB round 9
batch: 1206
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6375625133514404
10 lb beta sum: 0.013962731696665287, worst -0.637009859085083
Time: prepare 0.0392    bound 0.1768    transfer 0.0104    finalize 0.0120    func 0.2549    
Accumulated time: func 1.5828    prepare 0.1411    bound 1.2800    transfer 0.0490    finalize 0.0523    
all_split False
======================Cut inference begins======================
max lb tensor(0.31610742) min lb tensor(-0.63693380)
Number of Verified Splits: 955 of 2412
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 98.
#cuts 1-3: 15
#cuts 4-6: 78
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.23343443870544434 
BICCOS Cumulative time: 1.5743277072906494
Preprocessing time: 0.0743563175201416 Inference time: 0.13167810440063477 Add cuts time: 0.023737668991088867 Cut analysis time: 0.0036623477935791016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.63693 (16), -0.62908 (16), -0.62665 (16), -0.62094 (16), -0.61782 (16), -0.61527 (16), -0.60845 (16), -0.60275 (16), -0.60173 (16), -0.59813 (16), -0.59743 (16), -0.59543 (16), -0.59525 (16), -0.58861 (16), -0.58742 (16), -0.58365 (16), -0.58136 (16), -0.58012 (16), -0.57796 (16), -0.57720 (16), 
Length of domains: 1457
Time: pickout 0.0315    decision 0.2301    set_bounds 0.0766    solve 0.2556    add 0.0153    
Accumulated time: pickout 0.1445    decision 0.5519    set_bounds 0.2958    solve 1.5871    add 0.4564    
Current (lb-rhs): -0.6369338035583496
5962 domains visited
Cumulative time: 4.683681964874268

BaB round 10
batch: 1457
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 7] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6141173839569092
10 lb beta sum: 0.021523533388972282, worst -0.613917350769043
Time: prepare 0.0502    bound 0.2026    transfer 0.0265    finalize 0.0150    func 0.3146    
Accumulated time: func 1.8975    prepare 0.1916    bound 1.4826    transfer 0.0755    finalize 0.0674    
all_split False
======================Cut inference begins======================
max lb tensor(0.70792902) min lb tensor(-0.61385894)
Number of Verified Splits: 1607 of 2914
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 59.
#cuts 1-3: 20
#cuts 4-6: 39
#cuts >= 20: 0
BICCOS time: 0.3432731628417969 
BICCOS Cumulative time: 1.9176008701324463
Preprocessing time: 0.09210968017578125 Inference time: 0.22001385688781738 Add cuts time: 0.028981685638427734 Cut analysis time: 0.002167940139770508
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.61386 (17), -0.60630 (17), -0.60311 (17), -0.59867 (17), -0.59414 (17), -0.59320 (17), -0.58576 (17), -0.58014 (17), -0.57860 (17), -0.57395 (17), -0.57226 (17), -0.56384 (17), -0.55806 (17), -0.55523 (17), -0.55088 (17), -0.54843 (17), -0.54746 (17), -0.54714 (17), -0.54481 (17), -0.54343 (17), 
Length of domains: 1307
Time: pickout 0.0241    decision 0.0991    set_bounds 0.2312    solve 0.3156    add 0.0125    
Accumulated time: pickout 0.1686    decision 0.6510    set_bounds 0.5270    solve 1.9027    add 0.4690    
Current (lb-rhs): -0.6138589382171631
7269 domains visited
Cumulative time: 5.728682518005371

BaB round 11
batch: 1307
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.557847261428833
10 lb beta sum: 0.16179750859737396, worst -0.5575125217437744
Time: prepare 0.0415    bound 0.1954    transfer 0.0101    finalize 0.0131    func 0.2783    
Accumulated time: func 2.1758    prepare 0.2334    bound 1.6780    transfer 0.0856    finalize 0.0805    
all_split False
======================Cut inference begins======================
max lb tensor(0.69603473) min lb tensor(-0.55744386)
Number of Verified Splits: 1919 of 2614
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.3782079219818115 
BICCOS Cumulative time: 2.295808792114258
Preprocessing time: 0.08158349990844727 Inference time: 0.2691233158111572 Add cuts time: 0.026677370071411133 Cut analysis time: 0.0008237361907958984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.55744 (18), -0.55002 (18), -0.54197 (18), -0.53619 (18), -0.52114 (18), -0.51868 (18), -0.51406 (18), -0.51271 (18), -0.50870 (18), -0.50309 (18), -0.50016 (18), -0.49828 (18), -0.49803 (18), -0.49682 (18), -0.49226 (18), -0.49022 (18), -0.48957 (18), -0.48828 (18), -0.48558 (18), -0.48530 (18), 
Length of domains: 695
Time: pickout 0.0194    decision 0.0889    set_bounds 0.2088    solve 0.2789    add 0.1300    
Accumulated time: pickout 0.1880    decision 0.7399    set_bounds 0.7359    solve 2.1816    add 0.5990    
Current (lb-rhs): -0.5574438571929932
7964 domains visited
Cumulative time: 6.8563971519470215

BaB round 12
batch: 695
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 7] [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5008640289306641
10 lb beta sum: 0.7422127723693848, worst -0.5005025863647461
Time: prepare 0.0212    bound 0.1392    transfer 0.0024    finalize 0.0077    func 0.1795    
Accumulated time: func 2.3553    prepare 0.2550    bound 1.8172    transfer 0.0880    finalize 0.0882    
all_split False
======================Cut inference begins======================
max lb tensor(1.41280806) min lb tensor(-0.50040245)
Number of Verified Splits: 1379 of 1390
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.24831008911132812 
BICCOS Cumulative time: 2.544118881225586
Preprocessing time: 0.04271245002746582 Inference time: 0.19147348403930664 Add cuts time: 0.013547897338867188 Cut analysis time: 0.0005762577056884766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50040 (19), -0.37245 (19), -0.17833 (19), -0.14090 (19), -0.13108 (19), -0.13093 (19), -0.09695 (19), -0.09397 (19), -0.03555 (19), -0.00334 (19), -0.00130 (19), 
Length of domains: 11
Time: pickout 0.0860    decision 0.0500    set_bounds 0.0411    solve 0.1804    add 0.0398    
Accumulated time: pickout 0.2740    decision 0.7900    set_bounds 0.7769    solve 2.3620    add 0.6388    
Current (lb-rhs): -0.5004024505615234
7975 domains visited
Cumulative time: 7.517624616622925

BaB round 13
batch: 11
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1900] [/input-8, 180] [/input-8, 1900] [/input-8, 1900] [/input-8, 180] [/input-8, 1900] [/input-8, 1900] [/input-8, 180] [/input-8, 180] [/input-8, 1900] 
split level 1: [/input-8, 180] [/input-8, 1900] [/input-8, 180] [/input-8, 180] [/input-8, 1900] [/input-8, 180] [/input-8, 180] [/input-8, 1900] [/input-8, 1900] [/input-8, 180] 
split level 2: [/input-12, 10] [/input-8, 172] [/input-12, 10] [/input-12, 10] [/input-8, 1291] [/input-12, 10] [/input-12, 10] [/input-8, 172] [/input-8, 172] [/input-12, 10] 
split level 3: [/input-8, 1332] [/input-12, 10] [/input-8, 1291] [/input-8, 1901] [/input-12, 10] [/input-8, 1901] [/input-8, 1901] [/input-8, 1291] [/input-12, 10] [/input-8, 1901] 
split level 4: [/input-8, 1901] [/input-8, 1892] [/input-8, 1901] [/input-8, 1892] [/input-8, 1892] [/input-8, 1892] [/input-8, 1892] [/input-8, 1892] [/input-8, 1892] [/input-8, 1892] 
cut re-enabled after branching node selection
0 lb beta sum: 0.601161777973175, worst -0.38600337505340576
10 lb beta sum: 0.601161777973175, worst -0.3852972984313965
Time: prepare 0.0166    bound 0.1285    transfer 0.0014    finalize 0.0026    func 0.1514    
Accumulated time: func 2.5067    prepare 0.2719    bound 1.9456    transfer 0.0894    finalize 0.0908    
all_split False
======================Cut inference begins======================
max lb tensor(0.01267195) min lb tensor(-0.38500845)
Number of Verified Splits: 6 of 352
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.013981819152832031 
BICCOS Cumulative time: 2.558100700378418
Preprocessing time: 0.011171817779541016 Inference time: 0.0013546943664550781 Add cuts time: 0.00033092498779296875 Cut analysis time: 0.0011243820190429688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38501 (24), -0.37808 (24), -0.37734 (24), -0.37213 (24), -0.36936 (24), -0.36444 (24), -0.36299 (24), -0.35916 (24), -0.35815 (24), -0.35402 (24), -0.35007 (24), -0.34909 (24), -0.34719 (24), -0.34654 (24), -0.34537 (24), -0.34216 (24), -0.34166 (24), -0.33975 (24), -0.33906 (24), -0.33816 (24), 
Length of domains: 346
Time: pickout 0.0016    decision 0.0182    set_bounds 0.1709    solve 0.1515    add 0.0240    
Accumulated time: pickout 0.2756    decision 0.8082    set_bounds 0.9478    solve 2.5135    add 0.6627    
Current (lb-rhs): -0.38500845432281494
8321 domains visited
Cumulative time: 7.898086309432983

BaB round 14
batch: 346
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1442] [/input-8, 172] [/input-8, 1700] [/input-8, 172] [/input-8, 1291] [/input-8, 1291] [/input-8, 1700] [/input-8, 1442] [/input-8, 172] [/input-8, 1700] 
cut re-enabled after branching node selection
0 lb beta sum: 0.603046178817749, worst -0.364764928817749
10 lb beta sum: 0.603046178817749, worst -0.36436939239501953
Time: prepare 0.0313    bound 0.1370    transfer 0.0011    finalize 0.0038    func 0.1782    
Accumulated time: func 2.6849    prepare 0.3035    bound 2.0826    transfer 0.0905    finalize 0.0945    
all_split False
======================Cut inference begins======================
max lb tensor(0.05441332) min lb tensor(-0.36422026)
Number of Verified Splits: 49 of 692
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.029636383056640625 
BICCOS Cumulative time: 2.5877370834350586
Preprocessing time: 0.020569801330566406 Inference time: 0.007880449295043945 Add cuts time: 0.0007736682891845703 Cut analysis time: 0.0004124641418457031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36422 (25), -0.35741 (25), -0.35600 (25), -0.35117 (25), -0.34884 (25), -0.34290 (25), -0.34232 (25), -0.33669 (25), -0.33619 (25), -0.33363 (25), -0.33131 (25), -0.32717 (25), -0.32687 (25), -0.32437 (25), -0.32400 (25), -0.32380 (25), -0.32371 (25), -0.32321 (25), -0.32006 (25), -0.31930 (25), 
Length of domains: 643
Time: pickout 0.0072    decision 0.0343    set_bounds 0.0183    solve 0.1784    add 0.0191    
Accumulated time: pickout 0.2828    decision 0.8424    set_bounds 0.9661    solve 2.6919    add 0.6818    
Current (lb-rhs): -0.3642202615737915
8964 domains visited
Cumulative time: 8.187543153762817

BaB round 15
batch: 643
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1893] [/input-8, 1700] [/input-8, 172] [/input-8, 1700] [/input-8, 1700] [/input-8, 1700] [/input-12, 10] [/input-8, 1893] [/input-8, 1700] [/input-8, 172] 
cut re-enabled after branching node selection
0 lb beta sum: 0.601997435092926, worst -0.34470033645629883
10 lb beta sum: 0.601997435092926, worst -0.3444761037826538
Time: prepare 0.0573    bound 0.1435    transfer 0.0063    finalize 0.0058    func 0.2219    
Accumulated time: func 2.9068    prepare 0.3610    bound 2.2261    transfer 0.0968    finalize 0.1004    
all_split False
======================Cut inference begins======================
max lb tensor(0.05683541) min lb tensor(-0.34436107)
Number of Verified Splits: 66 of 1286
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.053540945053100586 
BICCOS Cumulative time: 2.641278028488159
Preprocessing time: 0.040069580078125 Inference time: 0.010781526565551758 Add cuts time: 0.0014257431030273438 Cut analysis time: 0.0012640953063964844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34436 (26), -0.33747 (26), -0.33632 (26), -0.33171 (26), -0.33129 (26), -0.32877 (26), -0.32629 (26), -0.32324 (26), -0.32289 (26), -0.32248 (26), -0.31869 (26), -0.31760 (26), -0.31749 (26), -0.31601 (26), -0.31368 (26), -0.31141 (26), -0.30984 (26), -0.30914 (26), -0.30829 (26), -0.30819 (26), 
Length of domains: 1220
Time: pickout 0.0105    decision 0.0516    set_bounds 0.0339    solve 0.2221    add 0.0386    
Accumulated time: pickout 0.2933    decision 0.8940    set_bounds 1.0000    solve 2.9140    add 0.7205    
Current (lb-rhs): -0.3443610668182373
10184 domains visited
Cumulative time: 8.599687337875366

BaB round 16
batch: 1220
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1292] [/input-8, 1892] [/input-8, 1291] [/input-8, 1948] [/input-8, 1867] [/input-8, 1292] [/input-8, 1948] [/input-8, 1292] [/input-8, 1291] [/input-8, 1291] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5980565547943115, worst -0.32902586460113525
10 lb beta sum: 0.5980565547943115, worst -0.328130841255188
Time: prepare 0.1090    bound 0.1738    transfer 0.0094    finalize 0.0118    func 0.3207    
Accumulated time: func 3.2275    prepare 0.4703    bound 2.3999    transfer 0.1061    finalize 0.1121    
all_split False
======================Cut inference begins======================
max lb tensor(0.04142904) min lb tensor(-0.32770216)
Number of Verified Splits: 146 of 2440
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.10443997383117676 
BICCOS Cumulative time: 2.745718002319336
Preprocessing time: 0.07544231414794922 Inference time: 0.026536941528320312 Add cuts time: 0.0019407272338867188 Cut analysis time: 0.0005199909210205078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32770 (27), -0.32102 (27), -0.31967 (27), -0.31627 (27), -0.31582 (27), -0.31525 (27), -0.31229 (27), -0.31078 (27), -0.30821 (27), -0.30776 (27), -0.30731 (27), -0.30639 (27), -0.30411 (27), -0.30355 (27), -0.30334 (27), -0.30278 (27), -0.30215 (27), -0.29983 (27), -0.29852 (27), -0.29831 (27), 
Length of domains: 2294
Time: pickout 0.0245    decision 0.0836    set_bounds 0.0661    solve 0.3211    add 0.0177    
Accumulated time: pickout 0.3178    decision 0.9776    set_bounds 1.0660    solve 3.2351    add 0.7382    
Current (lb-rhs): -0.3277021646499634
12478 domains visited
Cumulative time: 9.220648050308228

BaB round 17
batch: 2294
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1867] [/input-8, 1948] [/input-12, 14] [/input-8, 1292] [/input-8, 1292] [/input-8, 172] [/input-8, 1292] [/input-8, 1948] [/input-12, 14] [/input-8, 1893] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5945055484771729, worst -0.31575262546539307
10 lb beta sum: 0.5945055484771729, worst -0.3152799606323242
Time: prepare 0.2104    bound 0.2772    transfer 0.0152    finalize 0.0254    func 0.5579    
Accumulated time: func 3.7854    prepare 0.6810    bound 2.6771    transfer 0.1213    finalize 0.1375    
all_split False
======================Cut inference begins======================
max lb tensor(0.15625000) min lb tensor(-0.31504285)
Number of Verified Splits: 499 of 4588
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 21
#cuts >= 20: 0
BICCOS time: 0.4115283489227295 
BICCOS Cumulative time: 3.1572463512420654
Preprocessing time: 0.1436927318572998 Inference time: 0.25864124298095703 Add cuts time: 0.008433818817138672 Cut analysis time: 0.0007605552673339844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31504 (28), -0.30701 (28), -0.30377 (28), -0.30329 (28), -0.30310 (28), -0.29840 (28), -0.29771 (28), -0.29572 (28), -0.29504 (28), -0.29459 (28), -0.29315 (28), -0.29269 (28), -0.29241 (28), -0.29173 (28), -0.29128 (28), -0.29026 (28), -0.28649 (28), -0.28498 (28), -0.28397 (28), -0.28302 (28), 
Length of domains: 4089
Time: pickout 0.0404    decision 0.2657    set_bounds 0.1276    solve 0.5588    add 0.1090    
Accumulated time: pickout 0.3582    decision 1.2433    set_bounds 1.1936    solve 3.7939    add 0.8472    
Current (lb-rhs): -0.3150428533554077
16567 domains visited
Cumulative time: 10.742759943008423

BaB round 18
batch: 4089
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 14] [/input-8, 1583] [/input-8, 1893] [/input-8, 1893] [/input-8, 1583] [/input-8, 1948] [/input-8, 1893] [/input-12, 14] [/input-8, 1893] [/input-12, 14] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3058769702911377
10 lb beta sum: 0.3874450922012329, worst -0.30568087100982666
Time: prepare 0.3256    bound 0.5194    transfer 0.0215    finalize 0.0438    func 0.9644    
Accumulated time: func 4.7498    prepare 1.0068    bound 3.1966    transfer 0.1428    finalize 0.1813    
all_split False
======================Cut inference begins======================
max lb tensor(0.44997424) min lb tensor(-0.30556667)
Number of Verified Splits: 6474 of 8178
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 1.7502772808074951 
BICCOS Cumulative time: 4.9075236320495605
Preprocessing time: 0.2618834972381592 Inference time: 1.4168243408203125 Add cuts time: 0.07121062278747559 Cut analysis time: 0.00035881996154785156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30557 (29), -0.29797 (29), -0.29441 (29), -0.29379 (29), -0.29353 (29), -0.28678 (29), -0.28590 (29), -0.28550 (29), -0.28548 (29), -0.28243 (29), -0.28179 (29), -0.28091 (29), -0.28013 (29), -0.27946 (29), -0.27634 (29), -0.27590 (29), -0.27411 (29), -0.27389 (29), -0.27380 (29), -0.27348 (29), 
Length of domains: 1704
Time: pickout 0.0879    decision 0.2415    set_bounds 0.2278    solve 0.9665    add 0.0183    
Accumulated time: pickout 0.4462    decision 1.4848    set_bounds 1.4214    solve 4.7604    add 0.8654    
Current (lb-rhs): -0.305566668510437
18271 domains visited
Cumulative time: 14.10037875175476

BaB round 19
batch: 1704
splitting decisions: 
split level 0: [/input-12, 14] [/input-8, 1292] [/input-12, 14] [/input-8, 1292] [/input-12, 14] [/input-8, 1292] [/input-12, 14] [/input-8, 1292] [/input-8, 1583] [/input-12, 14] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.29047155380249023

all verified at 8th iter
Time: prepare 0.0712    bound 0.0941    transfer 0.0213    finalize 0.0216    func 0.2301    
Accumulated time: func 4.9799    prepare 1.0783    bound 3.2906    transfer 0.1641    finalize 0.2029    
all_split False
======================Cut inference begins======================
max lb tensor(0.32231444) min lb tensor(0.06030710)
Number of Verified Splits: 3408 of 3408
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.10915708541870117 
BICCOS Cumulative time: 5.016680717468262
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0335    decision 0.1081    set_bounds 0.0928    solve 0.2313    add 0.0008    
Accumulated time: pickout 0.4796    decision 1.5929    set_bounds 1.5142    solve 4.9917    add 0.8662    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
18271 domains visited
Cumulative time: 14.698279619216919


Properties batch 1, size 1
Remaining timeout: 183.53917908668518
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 183.53906059265137
Verifying property 2 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.54889774]], device='cuda:0') need to verify.
Model prediction is: tensor([-30.61950111, -32.12991714, -32.11750412, -30.22799873, -30.37730980,
        -31.07536125, -32.10892105, -32.61753464, -28.30606270, -30.47768784],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.54889774]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1092
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 421
Node /15 input 0: size torch.Size([100]) unstable 56
-----------------
# of unstable neurons: 1569
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001125335693359375
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 38] 
split level 1: [/input-12, 62] 
split level 2: [/input-12, 83] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 92] 
split level 5: [/input-12, 28] 
split level 6: [/input-12, 66] 
split level 7: [/input-12, 57] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7907981872558594
10 lb beta sum: 0.0, worst -0.786034107208252
Time: prepare 0.0019    bound 0.1002    transfer 0.0011    finalize 0.0020    func 0.1069    
Accumulated time: func 0.1069    prepare 0.0023    bound 0.1002    transfer 0.0011    finalize 0.0020    
all_split False
======================Cut inference begins======================
max lb tensor(0.91665959) min lb tensor(-0.78324223)
Number of Verified Splits: 219 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -2.548886299133301
10 lb beta sum: 0.0, worst -2.5489044189453125
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 4-6: 3
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.2097785472869873 
BICCOS Cumulative time: 0.2097785472869873
Preprocessing time: 0.006901264190673828 Inference time: 0.20151090621948242 Add cuts time: 0.00028967857360839844 Cut analysis time: 0.0010766983032226562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.78324 (8), -0.77769 (8), -0.61904 (8), -0.60361 (8), -0.58431 (8), -0.57345 (8), -0.44988 (8), -0.44009 (8), -0.43269 (8), -0.42970 (8), -0.39320 (8), -0.38762 (8), -0.32143 (8), -0.28725 (8), -0.27184 (8), -0.25545 (8), -0.20664 (8), -0.19014 (8), -0.18849 (8), -0.17782 (8), 
Length of domains: 37
Time: pickout 0.0004    decision 0.0240    set_bounds 0.0162    solve 0.1070    add 0.0895    
Accumulated time: pickout 0.0004    decision 0.0240    set_bounds 0.0162    solve 0.1070    add 0.0895    
Current (lb-rhs): -0.7832422256469727
37 domains visited
Cumulative time: 0.45218920707702637

BaB round 2
batch: 37
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] [/input-12, 77] 
split level 1: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 2: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5490937232971191
10 lb beta sum: 0.0, worst -0.5466604232788086
Time: prepare 0.0043    bound 0.1240    transfer 0.0028    finalize 0.0021    func 0.1352    
Accumulated time: func 0.2420    prepare 0.0068    bound 0.2242    transfer 0.0039    finalize 0.0041    
all_split False
======================Cut inference begins======================
max lb tensor(1.25685716) min lb tensor(-0.54549885)
Number of Verified Splits: 264 of 296
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -2.1872124671936035
10 lb beta sum: 0.0034278281964361668, worst -2.1665353775024414
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 55.
#cuts 4-6: 16
#cuts 7-9: 38
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.2868833541870117 
BICCOS Cumulative time: 0.496661901473999
Preprocessing time: 0.008860111236572266 Inference time: 0.2631103992462158 Add cuts time: 0.011812686920166016 Cut analysis time: 0.003100156784057617
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.54550 (11), -0.53692 (11), -0.53259 (11), -0.52782 (11), -0.37058 (11), -0.36515 (11), -0.35089 (11), -0.34776 (11), -0.34735 (11), -0.34652 (11), -0.33727 (11), -0.33363 (11), -0.21078 (11), -0.20898 (11), -0.20321 (11), -0.19664 (11), -0.18522 (11), -0.18378 (11), -0.16822 (11), -0.16780 (11), 
Length of domains: 32
Time: pickout 0.0054    decision 0.0206    set_bounds 0.0116    solve 0.1352    add 0.0253    
Accumulated time: pickout 0.0057    decision 0.0447    set_bounds 0.0278    solve 0.2422    add 0.1148    
Current (lb-rhs): -0.5454988479614258
69 domains visited
Cumulative time: 0.9389045238494873

BaB round 3
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] [/input-12, 30] 
split level 1: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 2: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3426094055175781
10 lb beta sum: 0.0, worst -0.34106969833374023
Time: prepare 0.0037    bound 0.1208    transfer 0.0005    finalize 0.0013    func 0.1281    
Accumulated time: func 0.3701    prepare 0.0106    bound 0.3450    transfer 0.0044    finalize 0.0054    
all_split False
======================Cut inference begins======================
max lb tensor(0.71944380) min lb tensor(-0.34041452)
Number of Verified Splits: 225 of 256
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 5
#cuts 4-6: 8
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.038344383239746094 
BICCOS Cumulative time: 0.5350062847137451
Preprocessing time: 0.007660388946533203 Inference time: 0.02628636360168457 Add cuts time: 0.0033860206604003906 Cut analysis time: 0.0010116100311279297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34041 (14), -0.33107 (14), -0.32868 (14), -0.32284 (14), -0.23435 (14), -0.23413 (14), -0.23300 (14), -0.23226 (14), -0.16764 (14), -0.16138 (14), -0.14335 (14), -0.14236 (14), -0.13930 (14), -0.13924 (14), -0.13544 (14), -0.12688 (14), -0.12484 (14), -0.12323 (14), -0.09071 (14), -0.08365 (14), 
Length of domains: 31
Time: pickout 0.0016    decision 0.0137    set_bounds 0.0103    solve 0.1281    add 0.0010    
Accumulated time: pickout 0.0073    decision 0.0584    set_bounds 0.0381    solve 0.3703    add 0.1158    
Current (lb-rhs): -0.34041452407836914
100 domains visited
Cumulative time: 1.1335487365722656

BaB round 4
batch: 31
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
split level 1: [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] 
split level 2: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1498699188232422
10 lb beta sum: 0.0, worst -0.1487903594970703
Time: prepare 0.0036    bound 0.1219    transfer 0.0019    finalize 0.0016    func 0.1308    
Accumulated time: func 0.5009    prepare 0.0144    bound 0.4669    transfer 0.0063    finalize 0.0070    
all_split False
======================Cut inference begins======================
max lb tensor(0.53186607) min lb tensor(-0.14824009)
Number of Verified Splits: 232 of 248
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 7
#cuts 4-6: 8
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.03824186325073242 
BICCOS Cumulative time: 0.5732481479644775
Preprocessing time: 0.00736236572265625 Inference time: 0.028334379196166992 Add cuts time: 0.0014088153839111328 Cut analysis time: 0.0011363029479980469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14824 (17), -0.13988 (17), -0.13806 (17), -0.13237 (17), -0.13027 (17), -0.12960 (17), -0.12440 (17), -0.12400 (17), -0.03444 (17), -0.03300 (17), -0.03297 (17), -0.03232 (17), -0.03212 (17), -0.03088 (17), -0.02897 (17), -0.02778 (17), 
Length of domains: 16
Time: pickout 0.0009    decision 0.0129    set_bounds 0.0100    solve 0.1308    add 0.0009    
Accumulated time: pickout 0.0082    decision 0.0712    set_bounds 0.0481    solve 0.5012    add 0.1167    
Current (lb-rhs): -0.1482400894165039
116 domains visited
Cumulative time: 1.3289680480957031

BaB round 5
batch: 16
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] 
split level 1: [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] 
split level 2: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 3: [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.04728507995605469

all verified at 0th iter
Time: prepare 0.0037    bound 0.0047    transfer 0.0005    finalize 0.0013    func 0.0121    
Accumulated time: func 0.5130    prepare 0.0184    bound 0.4716    transfer 0.0068    finalize 0.0083    
all_split False
======================Cut inference begins======================
max lb tensor(0.33637476) min lb tensor(0.04728508)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 22.
#cuts 1-3: 7
#cuts 4-6: 8
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.007452249526977539 
BICCOS Cumulative time: 0.5807003974914551
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0146    set_bounds 0.0117    solve 0.0122    add 0.0003    
Accumulated time: pickout 0.0094    decision 0.0858    set_bounds 0.0598    solve 0.5133    add 0.1170    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
116 domains visited
Cumulative time: 1.376981496810913


Properties batch 3, size 1
Remaining timeout: 181.975501537323
Verifying property 3 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.77627587]], device='cuda:0') need to verify.
Model prediction is: tensor([-30.61950111, -32.12991714, -32.11750412, -30.22799873, -30.37730980,
        -31.07536125, -32.10892105, -32.61753464, -28.30606270, -30.47768784],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.77627587]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1092
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 421
Node /15 input 0: size torch.Size([100]) unstable 56
-----------------
# of unstable neurons: 1569
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010323524475097656
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 89] 
split level 1: [/input-12, 77] 
split level 2: [/input-12, 35] 
split level 3: [/input-12, 83] 
split level 4: [/input-12, 38] 
split level 5: [/input-12, 85] 
split level 6: [/input-12, 15] 
split level 7: [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.9636402130126953
10 lb beta sum: 0.0, worst -1.961768627166748
Time: prepare 0.0018    bound 0.1007    transfer 0.0015    finalize 0.0023    func 0.1081    
Accumulated time: func 0.1081    prepare 0.0022    bound 0.1007    transfer 0.0015    finalize 0.0023    
all_split False
======================Cut inference begins======================
max lb tensor(1.10194707) min lb tensor(-1.96109271)
Number of Verified Splits: 162 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -2.0464959144592285
10 lb beta sum: 0.0, worst -1.0263912677764893
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 4-6: 22
#cuts 7-9: 18
#cuts >= 20: 0
BICCOS time: 0.18970489501953125 
BICCOS Cumulative time: 0.18970489501953125
Preprocessing time: 0.006919145584106445 Inference time: 0.17275595664978027 Add cuts time: 0.00794839859008789 Cut analysis time: 0.0020813941955566406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.96109 (8), -1.95738 (8), -1.95090 (8), -1.94999 (8), -1.91303 (8), -1.91151 (8), -1.91059 (8), -1.91051 (8), -1.83970 (8), -1.83888 (8), -1.83372 (8), -1.82597 (8), -1.81582 (8), -1.81569 (8), -1.81394 (8), -1.80734 (8), -1.79142 (8), -1.76904 (8), -1.76286 (8), -1.75125 (8), 
Length of domains: 94
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0162    solve 0.1082    add 0.0579    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0162    solve 0.1082    add 0.0579    
Current (lb-rhs): -1.9610927104949951
94 domains visited
Cumulative time: 0.4014573097229004

BaB round 2
batch: 94
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
split level 1: [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.8135018348693848
10 lb beta sum: 0.0, worst -1.812760353088379
Time: prepare 0.0053    bound 0.1235    transfer 0.0030    finalize 0.0019    func 0.1361    
Accumulated time: func 0.2442    prepare 0.0077    bound 0.2243    transfer 0.0045    finalize 0.0041    
all_split False
======================Cut inference begins======================
max lb tensor(0.62928009) min lb tensor(-1.81254148)
Number of Verified Splits: 104 of 376
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -2.0648789405822754
10 lb beta sum: 0.05504581704735756, worst -0.9911175966262817
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 52.
#cuts 4-6: 24
#cuts 7-9: 28
#cuts >= 20: 0
BICCOS time: 0.20443344116210938 
BICCOS Cumulative time: 0.3941383361816406
Preprocessing time: 0.010864496231079102 Inference time: 0.18386125564575195 Add cuts time: 0.0069806575775146484 Cut analysis time: 0.002727031707763672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.81254 (10), -1.80780 (10), -1.80261 (10), -1.80056 (10), -1.75928 (10), -1.75801 (10), -1.75740 (10), -1.75695 (10), -1.68407 (10), -1.68345 (10), -1.67567 (10), -1.66962 (10), -1.65867 (10), -1.65770 (10), -1.65719 (10), -1.65042 (10), -1.62320 (10), -1.59899 (10), -1.59169 (10), -1.58645 (10), 
Length of domains: 272
Time: pickout 0.0019    decision 0.0178    set_bounds 0.0122    solve 0.1362    add 0.0390    
Accumulated time: pickout 0.0022    decision 0.0410    set_bounds 0.0284    solve 0.2444    add 0.0969    
Current (lb-rhs): -1.8125414848327637
366 domains visited
Cumulative time: 0.814155101776123

BaB round 3
batch: 272
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 43] [/input-12, 29] [/input-12, 43] [/input-12, 29] [/input-12, 43] [/input-12, 29] [/input-12, 43] [/input-12, 29] [/input-12, 43] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.742823600769043
10 lb beta sum: 0.0, worst -1.7424218654632568
Time: prepare 0.0080    bound 0.1248    transfer 0.0059    finalize 0.0030    func 0.1453    
Accumulated time: func 0.3895    prepare 0.0160    bound 0.3491    transfer 0.0104    finalize 0.0072    
all_split False
======================Cut inference begins======================
max lb tensor(0.09099960) min lb tensor(-1.74228239)
Number of Verified Splits: 59 of 544
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 54.
#cuts 4-6: 32
#cuts 7-9: 22
#cuts >= 20: 0
BICCOS time: 0.031223058700561523 
BICCOS Cumulative time: 0.42536139488220215
Preprocessing time: 0.016309022903442383 Inference time: 0.006607770919799805 Add cuts time: 0.005565166473388672 Cut analysis time: 0.002741098403930664
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.74228 (11), -1.73764 (11), -1.73228 (11), -1.73077 (11), -1.69222 (11), -1.68979 (11), -1.68975 (11), -1.68957 (11), -1.61062 (11), -1.60524 (11), -1.60016 (11), -1.59374 (11), -1.59338 (11), -1.59220 (11), -1.58686 (11), -1.58655 (11), -1.58608 (11), -1.58551 (11), -1.58161 (11), -1.57920 (11), 
Length of domains: 485
Time: pickout 0.0049    decision 0.0239    set_bounds 0.0158    solve 0.1455    add 0.0076    
Accumulated time: pickout 0.0072    decision 0.0649    set_bounds 0.0442    solve 0.3898    add 0.1045    
Current (lb-rhs): -1.7422823905944824
851 domains visited
Cumulative time: 1.0440802574157715

BaB round 4
batch: 485
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.682077407836914
10 lb beta sum: 0.0014192699454724789, worst -1.6817700862884521
Time: prepare 0.0138    bound 0.1292    transfer 0.0051    finalize 0.0048    func 0.1593    
Accumulated time: func 0.5488    prepare 0.0300    bound 0.4782    transfer 0.0155    finalize 0.0120    
all_split False
======================Cut inference begins======================
max lb tensor(0.31788063) min lb tensor(-1.68169832)
Number of Verified Splits: 223 of 970
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 1
#cuts 4-6: 22
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.06247305870056152 
BICCOS Cumulative time: 0.48783445358276367
Preprocessing time: 0.029854774475097656 Inference time: 0.025211572647094727 Add cuts time: 0.005766630172729492 Cut analysis time: 0.0016400814056396484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.68170 (12), -1.67925 (12), -1.67240 (12), -1.67236 (12), -1.63266 (12), -1.63158 (12), -1.63102 (12), -1.63056 (12), -1.55216 (12), -1.54427 (12), -1.54211 (12), -1.53790 (12), -1.53261 (12), -1.53061 (12), -1.53044 (12), -1.53029 (12), -1.53007 (12), -1.52862 (12), -1.52313 (12), -1.52167 (12), 
Length of domains: 747
Time: pickout 0.0051    decision 0.0390    set_bounds 0.0276    solve 0.1595    add 0.0057    
Accumulated time: pickout 0.0123    decision 0.1039    set_bounds 0.0718    solve 0.5493    add 0.1102    
Current (lb-rhs): -1.6816983222961426
1598 domains visited
Cumulative time: 1.3455119132995605

BaB round 5
batch: 747
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.6459693908691406
10 lb beta sum: 0.004058154299855232, worst -1.6457445621490479
Time: prepare 0.0213    bound 0.1477    transfer 0.0136    finalize 0.0076    func 0.2003    
Accumulated time: func 0.7491    prepare 0.0515    bound 0.6259    transfer 0.0291    finalize 0.0196    
all_split False
======================Cut inference begins======================
max lb tensor(0.64945102) min lb tensor(-1.64568424)
Number of Verified Splits: 730 of 1494
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 5
#cuts 4-6: 27
#cuts 7-9: 13
#cuts >= 20: 0
BICCOS time: 0.1457502841949463 
BICCOS Cumulative time: 0.63358473777771
Preprocessing time: 0.04655003547668457 Inference time: 0.08514404296875 Add cuts time: 0.011943578720092773 Cut analysis time: 0.0021126270294189453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.64568 (13), -1.64215 (13), -1.63563 (13), -1.63459 (13), -1.59535 (13), -1.59306 (13), -1.59288 (13), -1.59208 (13), -1.51659 (13), -1.50923 (13), -1.50420 (13), -1.50218 (13), -1.49467 (13), -1.49388 (13), -1.49352 (13), -1.49306 (13), -1.49218 (13), -1.49139 (13), -1.48587 (13), -1.48375 (13), 
Length of domains: 764
Time: pickout 0.0133    decision 0.0581    set_bounds 0.0447    solve 0.2012    add 0.0147    
Accumulated time: pickout 0.0256    decision 0.1621    set_bounds 0.1165    solve 0.7505    add 0.1249    
Current (lb-rhs): -1.6456842422485352
2362 domains visited
Cumulative time: 1.8292078971862793

BaB round 6
batch: 764
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 43] [/input-12, 29] [/input-12, 43] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 43] [/input-12, 29] [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.558138370513916
10 lb beta sum: 0.023961177095770836, worst -1.5576186180114746
Time: prepare 0.0217    bound 0.1465    transfer 0.0068    finalize 0.0070    func 0.1928    
Accumulated time: func 0.9419    prepare 0.0735    bound 0.7724    transfer 0.0359    finalize 0.0266    
all_split False
======================Cut inference begins======================
max lb tensor(0.25161761) min lb tensor(-1.55754709)
Number of Verified Splits: 291 of 1528
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 7
#cuts 4-6: 21
#cuts 7-9: 13
#cuts >= 20: 0
BICCOS time: 0.09319663047790527 
BICCOS Cumulative time: 0.7267813682556152
Preprocessing time: 0.047640323638916016 Inference time: 0.0364687442779541 Add cuts time: 0.007153987884521484 Cut analysis time: 0.0019335746765136719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.55755 (14), -1.55530 (14), -1.54742 (14), -1.54731 (14), -1.50395 (14), -1.50320 (14), -1.50235 (14), -1.50116 (14), -1.49367 (14), -1.48107 (14), -1.47972 (14), -1.47387 (14), -1.45555 (14), -1.45146 (14), -1.44883 (14), -1.44744 (14), -1.43434 (14), -1.43274 (14), -1.42677 (14), -1.41965 (14), 
Length of domains: 1237
Time: pickout 0.0164    decision 0.2118    set_bounds 0.0450    solve 0.1930    add 0.0123    
Accumulated time: pickout 0.0420    decision 0.3738    set_bounds 0.1615    solve 0.9436    add 0.1372    
Current (lb-rhs): -1.5575470924377441
3599 domains visited
Cumulative time: 2.4042673110961914

BaB round 7
batch: 1237
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.4755139350891113
10 lb beta sum: 0.004116805270314217, worst -1.4749555587768555
Time: prepare 0.0362    bound 0.1780    transfer 0.0093    finalize 0.0112    func 0.2515    
Accumulated time: func 1.1934    prepare 0.1099    bound 0.9504    transfer 0.0452    finalize 0.0378    
all_split False
======================Cut inference begins======================
max lb tensor(0.11472118) min lb tensor(-1.47474241)
Number of Verified Splits: 129 of 2474
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 44.
#cuts 1-3: 8
#cuts 4-6: 23
#cuts 7-9: 13
#cuts >= 20: 0
BICCOS time: 0.09934186935424805 
BICCOS Cumulative time: 0.8261232376098633
Preprocessing time: 0.07465052604675293 Inference time: 0.018277645111083984 Add cuts time: 0.004374504089355469 Cut analysis time: 0.002039194107055664
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.47474 (15), -1.47019 (15), -1.46355 (15), -1.46078 (15), -1.45704 (15), -1.45660 (15), -1.45215 (15), -1.44974 (15), -1.41598 (15), -1.41385 (15), -1.41340 (15), -1.41253 (15), -1.40887 (15), -1.40847 (15), -1.40791 (15), -1.40769 (15), -1.40606 (15), -1.39453 (15), -1.39415 (15), -1.39204 (15), 
Length of domains: 2345
Time: pickout 0.0154    decision 0.0878    set_bounds 0.0717    solve 0.2520    add 0.0694    
Accumulated time: pickout 0.0574    decision 0.4616    set_bounds 0.2332    solve 1.1955    add 0.2066    
Current (lb-rhs): -1.4747424125671387
5944 domains visited
Cumulative time: 3.0039632320404053

BaB round 8
batch: 2345
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.4554033279418945
10 lb beta sum: 0.0004965866100974381, worst -1.4551737308502197
Time: prepare 0.0710    bound 0.2764    transfer 0.0178    finalize 0.0231    func 0.4199    
Accumulated time: func 1.6132    prepare 0.1812    bound 1.2268    transfer 0.0630    finalize 0.0609    
all_split False
======================Cut inference begins======================
max lb tensor(0.49140096) min lb tensor(-1.45506668)
Number of Verified Splits: 1357 of 4690
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 89.
#cuts 1-3: 10
#cuts 4-6: 44
#cuts 7-9: 35
#cuts >= 20: 0
BICCOS time: 0.37335777282714844 
BICCOS Cumulative time: 1.1994810104370117
Preprocessing time: 0.1437547206878662 Inference time: 0.19384217262268066 Add cuts time: 0.031575679779052734 Cut analysis time: 0.004185199737548828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.45507 (16), -1.45058 (16), -1.44393 (16), -1.44047 (16), -1.43708 (16), -1.43696 (16), -1.43160 (16), -1.43013 (16), -1.39649 (16), -1.39374 (16), -1.39290 (16), -1.39289 (16), -1.38920 (16), -1.38785 (16), -1.38778 (16), -1.38758 (16), -1.38621 (16), -1.37383 (16), -1.37335 (16), -1.37153 (16), 
Length of domains: 3333
Time: pickout 0.0277    decision 0.2982    set_bounds 0.1423    solve 0.5685    add 0.0260    
Accumulated time: pickout 0.0852    decision 0.7598    set_bounds 0.3755    solve 1.7640    add 0.2326    
Current (lb-rhs): -1.4550666809082031
9277 domains visited
Cumulative time: 4.457605600357056

BaB round 9
batch: 3333
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 67] [/input-12, 67] [/input-12, 56] [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3933053016662598
10 lb beta sum: 0.03871630132198334, worst -1.3930244445800781
Time: prepare 0.1051    bound 0.3652    transfer 0.0300    finalize 0.0377    func 0.5838    
Accumulated time: func 2.1970    prepare 0.2865    bound 1.5920    transfer 0.0931    finalize 0.0986    
all_split False
======================Cut inference begins======================
max lb tensor(0.75793767) min lb tensor(-1.39291549)
Number of Verified Splits: 1915 of 6666
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 126.
#cuts 1-3: 13
#cuts 4-6: 77
#cuts 7-9: 35
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.749004602432251 
BICCOS Cumulative time: 1.9484856128692627
Preprocessing time: 0.2030634880065918 Inference time: 0.4829874038696289 Add cuts time: 0.057312726974487305 Cut analysis time: 0.005640983581542969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.39292 (17), -1.38923 (17), -1.38382 (17), -1.38047 (17), -1.37898 (17), -1.37637 (17), -1.37598 (17), -1.37177 (17), -1.37116 (17), -1.36999 (17), -1.36164 (17), -1.36090 (17), -1.35782 (17), -1.35619 (17), -1.34574 (17), -1.34574 (17), -1.33642 (17), -1.33566 (17), -1.33557 (17), -1.33426 (17), 
Length of domains: 4751
Time: pickout 0.0555    decision 0.1957    set_bounds 0.3437    solve 0.5866    add 0.0887    
Accumulated time: pickout 0.1406    decision 0.9555    set_bounds 0.7192    solve 2.3506    add 0.3212    
Current (lb-rhs): -1.3929154872894287
14028 domains visited
Cumulative time: 6.504940986633301

BaB round 10
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 56] [/input-12, 56] [/input-12, 67] [/input-12, 67] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3521032333374023
10 lb beta sum: 0.007126268465071917, worst -1.3519330024719238
Time: prepare 0.1342    bound 0.4352    transfer 0.0277    finalize 0.0452    func 0.6966    
Accumulated time: func 2.8936    prepare 0.4210    bound 2.0272    transfer 0.1208    finalize 0.1438    
all_split False
======================Cut inference begins======================
max lb tensor(0.64081395) min lb tensor(-1.35189104)
Number of Verified Splits: 961 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 155.
#cuts 1-3: 14
#cuts 4-6: 92
#cuts 7-9: 49
#cuts >= 20: 0
BICCOS time: 0.4737858772277832 
BICCOS Cumulative time: 2.422271490097046
Preprocessing time: 0.2515530586242676 Inference time: 0.16313886642456055 Add cuts time: 0.052013397216796875 Cut analysis time: 0.007080554962158203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.35189 (18), -1.34799 (18), -1.34321 (18), -1.33916 (18), -1.33772 (18), -1.33469 (18), -1.33448 (18), -1.33007 (18), -1.32942 (18), -1.32887 (18), -1.32165 (18), -1.31961 (18), -1.31682 (18), -1.31365 (18), -1.30514 (18), -1.30308 (18), -1.29294 (18), -1.29230 (18), -1.29160 (18), -1.29087 (18), 
Length of domains: 7886
Time: pickout 0.0530    decision 0.2358    set_bounds 0.4134    solve 0.6987    add 0.0422    
Accumulated time: pickout 0.1937    decision 1.1913    set_bounds 1.1326    solve 3.0493    add 0.3634    
Current (lb-rhs): -1.351891040802002
21259 domains visited
current_vram/total_varm: 10.8GB/99.9GB, batch_size increase to 8192
Cumulative time: 8.446837663650513

BaB round 11
batch: 7886
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3201289176940918
10 lb beta sum: 0.002623013686388731, worst -1.3199362754821777
Time: prepare 0.2588    bound 0.9964    transfer 0.0837    finalize 0.2959    func 1.7409    
Accumulated time: func 4.6345    prepare 0.6802    bound 3.0236    transfer 0.2045    finalize 0.4397    
all_split False
======================Cut inference begins======================
max lb tensor(0.51330328) min lb tensor(-1.31990910)
Number of Verified Splits: 1840 of 15772
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 238.
#cuts 1-3: 18
#cuts 4-6: 107
#cuts 7-9: 92
#cuts 10-12: 21
#cuts >= 20: 0
BICCOS time: 1.2355656623840332 
BICCOS Cumulative time: 3.657837152481079
Preprocessing time: 0.4929678440093994 Inference time: 0.5924544334411621 Add cuts time: 0.13817334175109863 Cut analysis time: 0.011970043182373047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.31991 (19), -1.31587 (19), -1.31167 (19), -1.30741 (19), -1.30563 (19), -1.30265 (19), -1.30194 (19), -1.29773 (19), -1.29734 (19), -1.29719 (19), -1.28964 (19), -1.28766 (19), -1.28461 (19), -1.28095 (19), -1.27347 (19), -1.27074 (19), -1.26188 (19), -1.26091 (19), -1.26014 (19), -1.26005 (19), 
Length of domains: 13932
Time: pickout 0.1357    decision 0.6440    set_bounds 0.6639    solve 1.7446    add 0.0691    
Accumulated time: pickout 0.3294    decision 1.8353    set_bounds 1.7965    solve 4.7939    add 0.4325    
Current (lb-rhs): -1.3199090957641602
35191 domains visited
Cumulative time: 12.978251695632935

BaB round 12
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2833771705627441
10 lb beta sum: 0.0021524769254028797, worst -1.283184289932251
Time: prepare 0.2939    bound 1.0877    transfer 0.0603    finalize 0.3552    func 1.9056    
Accumulated time: func 6.5401    prepare 0.9745    bound 4.1113    transfer 0.2647    finalize 0.7949    
all_split False
======================Cut inference begins======================
max lb tensor(0.32187602) min lb tensor(-1.28315854)
Number of Verified Splits: 1859 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 285.
#cuts 1-3: 9
#cuts 4-6: 113
#cuts 7-9: 130
#cuts 10-12: 33
#cuts >= 20: 0
BICCOS time: 1.0530025959014893 
BICCOS Cumulative time: 4.710839748382568
Preprocessing time: 0.5330147743225098 Inference time: 0.3481869697570801 Add cuts time: 0.15648198127746582 Cut analysis time: 0.015318870544433594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.28316 (20), -1.27875 (20), -1.27423 (20), -1.27045 (20), -1.26838 (20), -1.26545 (20), -1.26428 (20), -1.26170 (20), -1.26027 (20), -1.26026 (20), -1.25974 (20), -1.25773 (20), -1.25361 (20), -1.25261 (20), -1.25213 (20), -1.24991 (20), -1.24832 (20), -1.24713 (20), -1.24691 (20), -1.24602 (20), 
Length of domains: 20265
Time: pickout 0.1125    decision 0.4635    set_bounds 0.7316    solve 1.9099    add 0.0769    
Accumulated time: pickout 0.4419    decision 2.2988    set_bounds 2.5281    solve 6.7038    add 0.5094    
Current (lb-rhs): -1.283158540725708
49716 domains visited
current_vram/total_varm: 24.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 17.373247385025024

BaB round 13
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1291] [/input-8, 1291] [/input-12, 54] [/input-8, 1291] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-8, 1291] [/input-8, 1291] [/input-8, 1291] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.243774175643921
10 lb beta sum: 0.0022836714051663876, worst -1.244560718536377
Time: prepare 0.6996    bound 2.1772    transfer 0.1575    finalize 0.6560    func 3.9079    
Accumulated time: func 10.4480    prepare 1.6745    bound 6.2885    transfer 0.4222    finalize 1.4509    
all_split False
======================Cut inference begins======================
max lb tensor(0.29327905) min lb tensor(-1.24314451)
Number of Verified Splits: 2945 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 470.
#cuts 1-3: 9
#cuts 4-6: 143
#cuts 7-9: 230
#cuts 10-12: 87
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 2.51592755317688 
BICCOS Cumulative time: 7.226767301559448
Preprocessing time: 1.0926837921142578 Inference time: 1.0358426570892334 Add cuts time: 0.36013221740722656 Cut analysis time: 0.02726888656616211
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.28316 (20), -1.27875 (20), -1.27423 (20), -1.27045 (20), -1.26838 (20), -1.26545 (20), -1.26428 (20), -1.26027 (20), -1.26026 (20), -1.25974 (20), -1.25261 (20), -1.24991 (20), -1.24691 (20), -1.24391 (20), -1.24314 (21), -1.23935 (21), -1.23628 (20), -1.23425 (21), -1.23378 (21), -1.23264 (20), 
Length of domains: 33704
Time: pickout 0.2248    decision 1.9569    set_bounds 1.3754    solve 3.9136    add 0.1533    
Accumulated time: pickout 0.6667    decision 4.2557    set_bounds 3.9034    solve 10.6174    add 0.6627    
Current (lb-rhs): -1.283158540725708
79539 domains visited
current_vram/total_varm: 34.4GB/99.9GB, batch_size increase to 32768
Cumulative time: 27.588426113128662

BaB round 14
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 341] [/input-8, 341] [/input-8, 180] [/input-8, 180] [/input-8, 1948] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-8, 1291] [/input-8, 1291] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2628827095031738
10 lb beta sum: 0.0029831882566213608, worst -1.262575387954712
Time: prepare 1.5101    bound 9.8517    transfer 0.3157    finalize 0.5094    func 13.2215    
Accumulated time: func 23.6695    prepare 3.1851    bound 16.1402    transfer 0.7379    finalize 1.9603    
all_split False
======================Cut inference begins======================
max lb tensor(0.36262369) min lb tensor(-1.26241112)
Number of Verified Splits: 4936 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 764.
#cuts 1-3: 9
#cuts 4-6: 172
#cuts 7-9: 342
#cuts 10-12: 234
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 4.898012399673462 
BICCOS Cumulative time: 12.12477970123291
Preprocessing time: 2.2455949783325195 Inference time: 1.7243459224700928 Add cuts time: 0.8788013458251953 Cut analysis time: 0.0492701530456543
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.26241 (21), -1.26113 (21), -1.25215 (21), -1.24975 (21), -1.24846 (21), -1.24808 (21), -1.24659 (21), -1.24507 (21), -1.24269 (21), -1.24022 (21), -1.23969 (21), -1.23828 (21), -1.23482 (21), -1.23329 (21), -1.23304 (21), -1.23183 (21), -1.22895 (21), -1.22700 (21), -1.22683 (21), -1.22556 (22), 
Length of domains: 61536
Time: pickout 0.4957    decision 3.4183    set_bounds 2.7785    solve 13.2318    add 0.3405    
Accumulated time: pickout 1.1623    decision 7.6740    set_bounds 6.6820    solve 23.8492    add 1.0032    
Current (lb-rhs): -1.262411117553711
140139 domains visited
Cumulative time: 52.886250019073486

BaB round 15
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1291] [/input-8, 1291] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-8, 341] [/input-8, 1291] [/input-8, 1291] [/input-12, 28] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.244917869567871
10 lb beta sum: 0.008793001994490623, worst -1.244776725769043
Time: prepare 1.5605    bound 10.5380    transfer 0.3167    finalize 0.5735    func 15.0079    
Accumulated time: func 38.6774    prepare 4.7462    bound 26.6782    transfer 1.0546    finalize 2.5338    
all_split False
======================Cut inference begins======================
max lb tensor(0.46660003) min lb tensor(-1.24472332)
Number of Verified Splits: 4882 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 764.
#cuts 1-3: 9
#cuts 4-6: 172
#cuts 7-9: 342
#cuts 10-12: 234
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 0.03749561309814453 
BICCOS Cumulative time: 12.162275314331055
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.24659 (21), -1.24472 (22), -1.24003 (22), -1.23828 (21), -1.23482 (21), -1.23469 (22), -1.23220 (22), -1.23068 (22), -1.22969 (22), -1.22895 (21), -1.22726 (22), -1.22495 (22), -1.22491 (21), -1.22384 (22), -1.22280 (21), -1.22209 (22), -1.22123 (22), -1.21549 (22), -1.21400 (22), -1.21360 (22), 
Length of domains: 89422
Time: pickout 0.5202    decision 3.3648    set_bounds 3.4895    solve 15.0346    add 0.3750    
Accumulated time: pickout 1.6826    decision 11.0388    set_bounds 10.1714    solve 38.8838    add 1.3782    
Current (lb-rhs): -1.2465910911560059
200793 domains visited
Cumulative time: 75.98495483398438

BaB round 16
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 85] [/input-8, 1291] [/input-8, 1291] [/input-8, 84] [/input-8, 85] [/input-8, 1282] [/input-8, 1291] [/input-8, 84] [/input-8, 1283] [/input-8, 1291] 
cut re-enabled after branching node selection
0 lb beta sum: 0.00024322839453816414, worst -1.2297964096069336
10 lb beta sum: 0.006721929181367159, worst -1.2297155857086182
Time: prepare 1.8416    bound 10.5437    transfer 0.3198    finalize 1.5360    func 14.6891    
Accumulated time: func 53.3664    prepare 6.5889    bound 37.2219    transfer 1.3744    finalize 4.0698    
all_split False
======================Cut inference begins======================
max lb tensor(0.48480162) min lb tensor(-1.22967720)
Number of Verified Splits: 4842 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 764.
#cuts 1-3: 9
#cuts 4-6: 172
#cuts 7-9: 342
#cuts 10-12: 234
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 0.0394742488861084 
BICCOS Cumulative time: 12.201749563217163
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.22968 (23), -1.22864 (22), -1.22495 (22), -1.22469 (23), -1.22079 (22), -1.21731 (23), -1.21688 (22), -1.21566 (23), -1.21484 (23), -1.21400 (22), -1.21197 (23), -1.21160 (22), -1.21087 (22), -1.21031 (23), -1.20915 (22), -1.20716 (22), -1.20704 (22), -1.20518 (23), -1.20398 (23), -1.20382 (22), 
Length of domains: 117348
Time: pickout 0.6608    decision 3.4787    set_bounds 3.3504    solve 14.7012    add 0.3057    
Accumulated time: pickout 2.3434    decision 14.5175    set_bounds 13.5218    solve 53.5850    add 1.6840    
Current (lb-rhs): -1.2296772003173828
261487 domains visited
Cumulative time: 98.66633915901184

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 341] [/input-8, 341] [/input-8, 1292] [/input-8, 1300] [/input-8, 1292] [/input-8, 1291] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1900] 
cut re-enabled after branching node selection
0 lb beta sum: 0.005543030332773924, worst -1.2095541954040527
10 lb beta sum: 0.005553500726819038, worst -1.209256887435913
Time: prepare 3.3019    bound 10.5645    transfer 0.3212    finalize 0.5353    func 15.1670    
Accumulated time: func 68.5334    prepare 9.8913    bound 47.7864    transfer 1.6957    finalize 4.6050    
all_split False
======================Cut inference begins======================
max lb tensor(0.44846678) min lb tensor(-1.20918655)
Number of Verified Splits: 3962 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 764.
#cuts 1-3: 9
#cuts 4-6: 172
#cuts 7-9: 342
#cuts 10-12: 234
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 0.035259246826171875 
BICCOS Cumulative time: 12.237008810043335
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.22968 (23), -1.22864 (22), -1.22469 (23), -1.22079 (22), -1.21731 (23), -1.21688 (22), -1.21566 (23), -1.21484 (23), -1.21197 (23), -1.21087 (22), -1.20919 (23), -1.20704 (22), -1.20398 (23), -1.20382 (22), -1.20378 (23), -1.20205 (23), -1.20092 (23), -1.20084 (23), -1.19884 (23), -1.19638 (23), 
Length of domains: 146154
Time: pickout 0.5489    decision 3.9929    set_bounds 3.2602    solve 15.1840    add 0.2849    
Accumulated time: pickout 2.8923    decision 18.5104    set_bounds 16.7821    solve 68.7689    add 1.9689    
Current (lb-rhs): -1.2296772003173828
323061 domains visited
Cumulative time: 122.14150524139404

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1300] [/input-8, 85] [/input-8, 85] [/input-8, 1282] [/input-8, 1300] [/input-8, 1300] [/input-8, 1893] [/input-8, 85] [/input-8, 1300] [/input-8, 1291] 
cut re-enabled after branching node selection
0 lb beta sum: 0.005307897925376892, worst -1.2135412693023682
10 lb beta sum: 0.005302509758621454, worst -1.2134151458740234
Time: prepare 3.3112    bound 10.5564    transfer 0.3150    finalize 1.7679    func 16.3985    
Accumulated time: func 84.9319    prepare 13.2031    bound 58.3428    transfer 2.0107    finalize 6.3730    
all_split False
======================Cut inference begins======================
max lb tensor(0.37963557) min lb tensor(-1.21337724)
Number of Verified Splits: 4699 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 764.
#cuts 1-3: 9
#cuts 4-6: 172
#cuts 7-9: 342
#cuts 10-12: 234
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 0.016983747482299805 
BICCOS Cumulative time: 12.253992557525635
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.22968 (23), -1.22469 (23), -1.21731 (23), -1.21566 (23), -1.21484 (23), -1.21338 (23), -1.21197 (23), -1.20919 (23), -1.20398 (23), -1.20378 (23), -1.20205 (23), -1.20175 (23), -1.20092 (23), -1.20084 (23), -1.19884 (23), -1.19638 (23), -1.19574 (23), -1.19539 (23), -1.19419 (23), -1.19405 (23), 
Length of domains: 174223
Time: pickout 0.5567    decision 4.1367    set_bounds 2.1726    solve 16.4107    add 0.2470    
Accumulated time: pickout 3.4491    decision 22.6472    set_bounds 18.9547    solve 85.1796    add 2.2159    
Current (lb-rhs): -1.2296772003173828
383898 domains visited
Cumulative time: 145.8492329120636

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 84] [/input-8, 84] [/input-8, 1442] [/input-8, 1282] [/input-12, 81] [/input-8, 1893] [/input-8, 341] [/input-8, 84] [/input-8, 1298] [/input-8, 1865] 
cut re-enabled after branching node selection
0 lb beta sum: 0.004224170930683613, worst -1.2104270458221436
10 lb beta sum: 0.004230386111885309, worst -1.2099733352661133
Time: prepare 3.4738    bound 10.5601    transfer 0.3239    finalize 0.5798    func 15.3778    
Accumulated time: func 100.3097    prepare 16.6776    bound 68.9029    transfer 2.3346    finalize 6.9528    
all_split False
======================Cut inference begins======================
max lb tensor(0.40855992) min lb tensor(-1.20983505)
Number of Verified Splits: 4730 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 764.
#cuts 1-3: 9
#cuts 4-6: 172
#cuts 7-9: 342
#cuts 10-12: 234
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 0.0022308826446533203 
BICCOS Cumulative time: 12.256223440170288
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.21338 (23), -1.20984 (24), -1.20919 (23), -1.20205 (23), -1.20175 (23), -1.20084 (23), -1.19940 (24), -1.19884 (23), -1.19840 (24), -1.19793 (24), -1.19673 (24), -1.19638 (23), -1.19539 (23), -1.19353 (23), -1.19176 (23), -1.19139 (23), -1.19019 (23), -1.19001 (24), -1.18880 (24), -1.18839 (24), 
Length of domains: 202261
Time: pickout 0.5570    decision 3.4258    set_bounds 3.5104    solve 15.3964    add 0.2631    
Accumulated time: pickout 4.0060    decision 26.0730    set_bounds 22.4650    solve 100.5760    add 2.4790    
Current (lb-rhs): -1.2133772373199463
444704 domains visited
Cumulative time: 169.23244714736938

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1291] [/input-8, 1315] [/input-8, 1298] [/input-8, 1300] [/input-8, 341] [/input-8, 341] [/input-8, 1291] [/input-12, 81] [/input-12, 81] [/input-12, 81] 
cut re-enabled after branching node selection
0 lb beta sum: 0.004871902521699667, worst -1.185133934020996
10 lb beta sum: 0.004870257806032896, worst -1.1850452423095703
Time: prepare 3.2876    bound 10.5416    transfer 0.3249    finalize 0.5624    func 15.1739    
Accumulated time: func 115.4836    prepare 19.9665    bound 79.4445    transfer 2.6595    finalize 7.5152    
all_split False
======================Cut inference begins======================
max lb tensor(0.45327401) min lb tensor(-1.18502283)
Number of Verified Splits: 5293 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 764.
#cuts 1-3: 9
#cuts 4-6: 172
#cuts 7-9: 342
#cuts 10-12: 234
#cuts 13-15: 7
#cuts >= 20: 0
BICCOS time: 0.038213491439819336 
BICCOS Cumulative time: 12.294436931610107
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.21338 (23), -1.20984 (24), -1.20919 (23), -1.20175 (23), -1.19940 (24), -1.19884 (23), -1.19840 (24), -1.19793 (24), -1.19673 (24), -1.19638 (23), -1.19539 (23), -1.19176 (23), -1.19019 (23), -1.18880 (24), -1.18839 (24), -1.18833 (23), -1.18830 (24), -1.18810 (24), -1.18708 (23), -1.18673 (24), 
Length of domains: 229736
Time: pickout 0.5876    decision 4.9504    set_bounds 3.8721    solve 15.1913    add 0.3799    
Accumulated time: pickout 4.5936    decision 31.0233    set_bounds 26.3371    solve 115.7673    add 2.8589    
Current (lb-rhs): -1.2133772373199463
504947 domains visited
Time out!!!!!!!!
Result: unknown in 214.3531 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 188, vnnlib ID: 188 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.52160454, -35.44147110, -29.00762939, -31.49926949, -30.50539780,
         -31.95778084, -30.34750366, -33.13414383, -34.25574875, -33.32904434]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [609]; unstable size 609; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 296, 1, 609] with unstable size 295 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 42, 1, 609] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 609] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [295]; unstable size 295; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 42, 1, 295] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 295] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [41]; unstable size 41; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.31485081,  2.58374166, -0.18832970, -0.84618109, -0.06692696,
         -1.01971960,  1.50123334,  0.84424233,  0.11932516]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.52160454, -35.44147110, -29.00762939, -31.49926949, -30.50539780,
         -31.95778084, -30.34750366, -33.13414383, -34.25574875, -33.32904434]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.10it/s]100%|██████████| 1/1 [00:00<00:00,  8.09it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.33078194, -35.77200699, -30.27314758, -31.94957542, -31.33749580,
          -32.45192337, -30.60187531, -33.75382614, -34.78162766, -33.55352402],
         [-31.33078194, -35.77200699, -30.27314758, -31.94957542, -31.33749580,
          -32.45192337, -30.60187531, -33.75382614, -34.78162766, -33.55352402]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.05763435, 1.67642784, 1.06434822, 2.17877579, 0.32872772]]],
       device='cuda:0')
number of violation:  0
Attack finished in 0.1271 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 3.1381521224975586
alpha/beta optimization time: 1.3063135147094727
initial alpha-crown bounds: tensor([[-1.15339327,  2.78870535, -0.05541778, -0.70662147,  0.09085822,
         -0.86869276,  1.64470863,  1.07678187,  0.32122326]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 4 ; Worst class: (+ rhs) -1.153393268585205
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50135684013367
Verifying property 0 with 1 instances.
##### Instance 188 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.15339327]], device='cuda:0') need to verify.
Model prediction is: tensor([-30.52160454, -35.44147110, -29.00762939, -31.49926949, -30.50539780,
        -31.95778084, -30.34750366, -33.13414383, -34.25574875, -33.32904434],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.15339327]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 609
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 292
Node /15 input 0: size torch.Size([100]) unstable 39
-----------------
# of unstable neurons: 940
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011110305786132812
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 60] 
split level 1: [/input-12, 4] 
split level 2: [/input-12, 1] 
split level 3: [/input-12, 36] 
split level 4: [/input-12, 48] 
split level 5: [/input-12, 28] 
split level 6: [/input-12, 0] 
split level 7: [/input-12, 40] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23823189735412598
10 lb beta sum: 0.0, worst -0.23697352409362793
Time: prepare 0.0018    bound 0.1043    transfer 0.0006    finalize 0.0015    func 0.1101    
Accumulated time: func 0.1101    prepare 0.0022    bound 0.1043    transfer 0.0006    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(0.85356045) min lb tensor(-0.23625088)
Number of Verified Splits: 219 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.153389811515808
10 lb beta sum: 0.0, worst -1.153397798538208
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 4-6: 7
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.2126173973083496 
BICCOS Cumulative time: 0.2126173973083496
Preprocessing time: 0.007293224334716797 Inference time: 0.2036738395690918 Add cuts time: 0.0010118484497070312 Cut analysis time: 0.0006384849548339844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23625 (8), -0.23076 (8), -0.22920 (8), -0.22686 (8), -0.20761 (8), -0.20469 (8), -0.18859 (8), -0.18539 (8), -0.13244 (8), -0.12985 (8), -0.12834 (8), -0.12623 (8), -0.12450 (8), -0.12357 (8), -0.12329 (8), -0.12104 (8), -0.11045 (8), -0.10650 (8), -0.09804 (8), -0.09323 (8), 
Length of domains: 37
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0165    solve 0.1102    add 0.0098    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0165    solve 0.1102    add 0.0098    
Current (lb-rhs): -0.2362508773803711
37 domains visited
Cumulative time: 0.3791821002960205

BaB round 2
batch: 37
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] 
split level 1: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] 
split level 2: [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] [/input-12, 16] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16134428977966309
10 lb beta sum: 0.0, worst -0.16043519973754883
Time: prepare 0.0048    bound 0.1271    transfer 0.0015    finalize 0.0015    func 0.1370    
Accumulated time: func 0.2471    prepare 0.0072    bound 0.2314    transfer 0.0022    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.60618830) min lb tensor(-0.15995693)
Number of Verified Splits: 271 of 296
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0684269666671753
10 lb beta sum: 0.004146207123994827, worst -1.062082052230835
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 48.
#cuts 4-6: 17
#cuts 7-9: 28
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 0.3018302917480469 
BICCOS Cumulative time: 0.5144476890563965
Preprocessing time: 0.008669376373291016 Inference time: 0.2769906520843506 Add cuts time: 0.01324462890625 Cut analysis time: 0.0029256343841552734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15996 (11), -0.15357 (11), -0.15220 (11), -0.14848 (11), -0.12516 (11), -0.12247 (11), -0.10640 (11), -0.10387 (11), -0.05791 (11), -0.05350 (11), -0.05288 (11), -0.04844 (11), -0.04759 (11), -0.04606 (11), -0.04476 (11), -0.04457 (11), -0.02755 (11), -0.02374 (11), -0.01240 (11), -0.01061 (11), 
Length of domains: 25
Time: pickout 0.0014    decision 0.0147    set_bounds 0.0115    solve 0.1370    add 0.0012    
Accumulated time: pickout 0.0018    decision 0.0385    set_bounds 0.0280    solve 0.2472    add 0.0110    
Current (lb-rhs): -0.1599569320678711
62 domains visited
Cumulative time: 0.849088191986084

BaB round 3
batch: 25
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 1: [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-8, 1694] [/input-8, 1694] [/input-12, 93] [/input-12, 93] [/input-12, 93] 
split level 2: [/input-8, 1694] [/input-8, 1694] [/input-8, 1702] [/input-8, 1694] [/input-8, 1694] [/input-8, 1702] [/input-8, 1702] [/input-8, 1694] [/input-8, 1702] [/input-8, 1694] 
split level 3: [/input-8, 1475] [/input-8, 1703] [/input-8, 1703] [/input-8, 1702] [/input-8, 1702] [/input-8, 1703] [/input-8, 1703] [/input-8, 1703] [/input-8, 1703] [/input-8, 1702] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08973836898803711
10 lb beta sum: 0.0, worst -0.08919239044189453
Time: prepare 0.0079    bound 0.1252    transfer 0.0026    finalize 0.0022    func 0.1406    
Accumulated time: func 0.3876    prepare 0.0153    bound 0.3566    transfer 0.0047    finalize 0.0052    
all_split False
======================Cut inference begins======================
max lb tensor(0.33845639) min lb tensor(-0.08889198)
Number of Verified Splits: 344 of 400
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 6
#cuts 4-6: 6
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.053682804107666016 
BICCOS Cumulative time: 0.5681304931640625
Preprocessing time: 0.011723041534423828 Inference time: 0.03753376007080078 Add cuts time: 0.003738880157470703 Cut analysis time: 0.0006871223449707031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08889 (15), -0.08759 (15), -0.08287 (15), -0.08258 (15), -0.08110 (15), -0.08030 (15), -0.08002 (15), -0.07957 (15), -0.07787 (15), -0.07772 (15), -0.07712 (15), -0.07575 (15), -0.07536 (15), -0.07315 (15), -0.07288 (15), -0.07244 (15), -0.07208 (15), -0.07155 (15), -0.07141 (15), -0.07086 (15), 
Length of domains: 56
Time: pickout 0.0014    decision 0.0234    set_bounds 0.0199    solve 0.1406    add 0.0860    
Accumulated time: pickout 0.0032    decision 0.0619    set_bounds 0.0480    solve 0.3879    add 0.0970    
Current (lb-rhs): -0.08889198303222656
118 domains visited
Cumulative time: 1.1823692321777344

BaB round 4
batch: 56
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 93] [/input-12, 74] [/input-12, 74] [/input-12, 74] 
split level 1: [/input-8, 1475] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-8, 1475] [/input-12, 93] [/input-8, 1476] [/input-12, 93] [/input-12, 93] [/input-12, 93] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06366944313049316
10 lb beta sum: 0.05981097370386124, worst -0.06327557563781738
Time: prepare 0.0046    bound 0.1297    transfer 0.0015    finalize 0.0017    func 0.1391    
Accumulated time: func 0.5267    prepare 0.0202    bound 0.4863    transfer 0.0062    finalize 0.0070    
all_split False
======================Cut inference begins======================
max lb tensor(0.62443495) min lb tensor(-0.06301904)
Number of Verified Splits: 192 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 9
#cuts 4-6: 4
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.030025720596313477 
BICCOS Cumulative time: 0.598156213760376
Preprocessing time: 0.00696110725402832 Inference time: 0.02151632308959961 Add cuts time: 0.000993967056274414 Cut analysis time: 0.0005543231964111328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06302 (17), -0.06191 (17), -0.05823 (17), -0.05687 (17), -0.05525 (17), -0.05446 (17), -0.05393 (17), -0.05392 (17), -0.05306 (17), -0.05272 (17), -0.05223 (17), -0.05185 (17), -0.05139 (17), -0.04946 (17), -0.04718 (17), -0.04712 (17), -0.04712 (17), -0.04694 (17), -0.04675 (17), -0.04660 (17), 
Length of domains: 32
Time: pickout 0.0140    decision 0.0153    set_bounds 0.0080    solve 0.1391    add 0.0600    
Accumulated time: pickout 0.0172    decision 0.0772    set_bounds 0.0560    solve 0.5270    add 0.1570    
Current (lb-rhs): -0.0630190372467041
150 domains visited
Cumulative time: 1.4566245079040527

BaB round 5
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] 
split level 1: [/input-8, 1476] [/input-8, 173] [/input-8, 1476] [/input-8, 173] [/input-8, 173] [/input-8, 173] [/input-8, 1476] [/input-8, 173] [/input-8, 1476] [/input-8, 173] 
split level 2: [/input-8, 1703] [/input-12, 97] [/input-8, 1703] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-8, 1703] [/input-12, 97] [/input-8, 1703] [/input-12, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.029256820678710938
10 lb beta sum: 0.09402944147586823, worst -0.09884911775588989
Time: prepare 0.0117    bound 0.1408    transfer 0.0009    finalize 0.0015    func 0.1566    
Accumulated time: func 0.6833    prepare 0.0321    bound 0.6271    transfer 0.0071    finalize 0.0084    
all_split False
======================Cut inference begins======================
max lb tensor(0.17322966) min lb tensor(-0.01996756)
Number of Verified Splits: 237 of 256
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 12
#cuts 4-6: 4
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.03829669952392578 
BICCOS Cumulative time: 0.6364529132843018
Preprocessing time: 0.007624626159667969 Inference time: 0.0279390811920166 Add cuts time: 0.0006723403930664062 Cut analysis time: 0.0020606517791748047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01997 (20), -0.01724 (20), -0.01567 (20), -0.01530 (20), -0.01305 (20), -0.01245 (20), -0.01168 (20), -0.01128 (20), -0.01103 (20), -0.01077 (20), -0.01013 (20), -0.00835 (20), -0.00734 (20), -0.00715 (20), -0.00701 (20), -0.00516 (20), -0.00486 (20), -0.00311 (20), -0.00049 (20), 
Length of domains: 19
Time: pickout 0.0074    decision 0.0135    set_bounds 0.0113    solve 0.1567    add 0.0222    
Accumulated time: pickout 0.0246    decision 0.0908    set_bounds 0.0672    solve 0.6837    add 0.1792    
Current (lb-rhs): -0.01996755599975586
169 domains visited
Cumulative time: 1.7072291374206543

BaB round 6
batch: 19
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1482] [/input-8, 1379] [/input-8, 1482] [/input-8, 1379] [/input-8, 1379] [/input-8, 1482] [/input-8, 1379] [/input-8, 1482] [/input-8, 1482] [/input-8, 1482] 
split level 1: [/input-12, 97] [/input-8, 165] [/input-12, 97] [/input-8, 165] [/input-8, 165] [/input-12, 97] [/input-8, 165] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
split level 2: [/input-8, 165] [/input-8, 1476] [/input-8, 165] [/input-8, 1476] [/input-8, 1476] [/input-8, 165] [/input-8, 1476] [/input-8, 165] [/input-8, 165] [/input-8, 165] 
split level 3: [/input-8, 1057] [/input-8, 1475] [/input-8, 1057] [/input-8, 1475] [/input-8, 1475] [/input-8, 1057] [/input-8, 1475] [/input-8, 1057] [/input-8, 1057] [/input-8, 1057] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.014158487319946289

all verified at 0th iter
Time: prepare 0.0060    bound 0.0065    transfer 0.0010    finalize 0.0017    func 0.0172    
Accumulated time: func 0.7005    prepare 0.0383    bound 0.6336    transfer 0.0081    finalize 0.0101    
all_split False
======================Cut inference begins======================
max lb tensor(0.07161570) min lb tensor(0.01415849)
Number of Verified Splits: 304 of 304
No cut inferred: All or none verified.
Total number of valid cuts: 17.
#cuts 1-3: 12
#cuts 4-6: 4
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.00891423225402832 
BICCOS Cumulative time: 0.6453671455383301
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0013    decision 0.0150    set_bounds 0.0155    solve 0.0172    add 0.0004    
Accumulated time: pickout 0.0260    decision 0.1058    set_bounds 0.0827    solve 0.7009    add 0.1796    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
169 domains visited
Cumulative time: 1.7665090560913086


Properties batch 1, size 1
Remaining timeout: 196.49406051635742
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 196.49398112297058
Verifying property 2 with 1 instances.
##### Instance 188 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.05541778]], device='cuda:0') need to verify.
Model prediction is: tensor([-30.52160454, -35.44147110, -29.00762939, -31.49926949, -30.50539780,
        -31.95778084, -30.34750366, -33.13414383, -34.25574875, -33.32904434],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.05541778]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 609
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 292
Node /15 input 0: size torch.Size([100]) unstable 39
-----------------
# of unstable neurons: 940
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010228157043457031
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 35] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 85] 
split level 3: [/input-12, 0] 
split level 4: [/input-12, 82] 
split level 5: [/input-12, 78] 
split level 6: [/input-12, 75] 
split level 7: [/input-12, 19] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.6306495666503906

all verified at 0th iter
Time: prepare 0.0018    bound 0.0044    transfer 0.0009    finalize 0.0015    func 0.0105    
Accumulated time: func 0.0105    prepare 0.0023    bound 0.0044    transfer 0.0009    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(1.20065856) min lb tensor(0.63064957)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.007164955139160156 
BICCOS Cumulative time: 0.007164955139160156
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0167    solve 0.0105    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0167    solve 0.0105    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0687398910522461


Properties batch 3, size 1
Remaining timeout: 196.1824676990509
Verifying property 3 with 1 instances.
##### Instance 188 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.70662147]], device='cuda:0') need to verify.
Model prediction is: tensor([-30.52160454, -35.44147110, -29.00762939, -31.49926949, -30.50539780,
        -31.95778084, -30.34750366, -33.13414383, -34.25574875, -33.32904434],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.70662147]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 609
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 292
Node /15 input 0: size torch.Size([100]) unstable 39
-----------------
# of unstable neurons: 940
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010204315185546875
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 95] 
split level 1: [/input-12, 78] 
split level 2: [/input-12, 77] 
split level 3: [/input-12, 29] 
split level 4: [/input-12, 40] 
split level 5: [/input-12, 36] 
split level 6: [/input-12, 82] 
split level 7: [/input-12, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1541936993598938
10 lb beta sum: 0.0, worst -0.15225040912628174
Time: prepare 0.0019    bound 0.1000    transfer 0.0009    finalize 0.0016    func 0.1062    
Accumulated time: func 0.1062    prepare 0.0023    bound 0.1000    transfer 0.0009    finalize 0.0016    
all_split False
======================Cut inference begins======================
max lb tensor(0.37870955) min lb tensor(-0.15128458)
Number of Verified Splits: 211 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7066194415092468
10 lb beta sum: 0.0, worst -0.7066270709037781
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 3
#cuts 4-6: 3
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.2109673023223877 
BICCOS Cumulative time: 0.2109673023223877
Preprocessing time: 0.0069539546966552734 Inference time: 0.20134830474853516 Add cuts time: 0.0021295547485351562 Cut analysis time: 0.0005354881286621094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15128 (8), -0.14261 (8), -0.14177 (8), -0.14139 (8), -0.13809 (8), -0.13210 (8), -0.12747 (8), -0.12316 (8), -0.10191 (8), -0.09426 (8), -0.09295 (8), -0.08833 (8), -0.08831 (8), -0.08801 (8), -0.08710 (8), -0.08046 (8), -0.07469 (8), -0.07451 (8), -0.07099 (8), -0.06994 (8), 
Length of domains: 45
Time: pickout 0.0004    decision 0.0240    set_bounds 0.0163    solve 0.1063    add 0.0403    
Accumulated time: pickout 0.0004    decision 0.0240    set_bounds 0.0163    solve 0.1063    add 0.0403    
Current (lb-rhs): -0.1512845754623413
45 domains visited
Cumulative time: 0.40821123123168945

BaB round 2
batch: 45
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 1: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
split level 2: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11112689971923828
10 lb beta sum: 0.0, worst -0.11030727624893188
Time: prepare 0.0050    bound 0.1243    transfer 0.0022    finalize 0.0018    func 0.1357    
Accumulated time: func 0.2419    prepare 0.0075    bound 0.2243    transfer 0.0031    finalize 0.0034    
all_split False
======================Cut inference begins======================
max lb tensor(0.51276010) min lb tensor(-0.10997826)
Number of Verified Splits: 329 of 360
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6698554158210754
10 lb beta sum: 0.04388423264026642, worst -0.7138981819152832
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 69.
#cuts 1-3: 4
#cuts 4-6: 20
#cuts 7-9: 43
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.34500694274902344 
BICCOS Cumulative time: 0.5559742450714111
Preprocessing time: 0.010498285293579102 Inference time: 0.3103773593902588 Add cuts time: 0.020309925079345703 Cut analysis time: 0.0038213729858398438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10998 (11), -0.10173 (11), -0.10047 (11), -0.10022 (11), -0.09658 (11), -0.09103 (11), -0.08591 (11), -0.08191 (11), -0.06053 (11), -0.05258 (11), -0.04987 (11), -0.04685 (11), -0.04592 (11), -0.04591 (11), -0.04422 (11), -0.03907 (11), -0.03265 (11), -0.03210 (11), -0.02856 (11), -0.02698 (11), 
Length of domains: 31
Time: pickout 0.0011    decision 0.0164    set_bounds 0.0140    solve 0.1363    add 0.0011    
Accumulated time: pickout 0.0015    decision 0.0404    set_bounds 0.0303    solve 0.2426    add 0.0413    
Current (lb-rhs): -0.10997825860977173
76 domains visited
Cumulative time: 0.9266760349273682

BaB round 3
batch: 31
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 93] [/input-12, 8] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-8, 1476] [/input-12, 93] [/input-12, 8] [/input-12, 93] [/input-12, 93] 
split level 1: [/input-8, 1306] [/input-12, 93] [/input-8, 1306] [/input-8, 1306] [/input-8, 1521] [/input-8, 1475] [/input-8, 849] [/input-12, 93] [/input-8, 1306] [/input-8, 1306] 
split level 2: [/input-8, 849] [/input-8, 1306] [/input-8, 849] [/input-8, 1703] [/input-8, 1476] [/input-8, 1703] [/input-8, 1306] [/input-8, 1306] [/input-8, 849] [/input-8, 1703] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08004993200302124
10 lb beta sum: 0.0, worst -0.07977664470672607
Time: prepare 0.0050    bound 0.1253    transfer 0.0013    finalize 0.0016    func 0.1349    
Accumulated time: func 0.3768    prepare 0.0127    bound 0.3496    transfer 0.0044    finalize 0.0050    
all_split False
======================Cut inference begins======================
max lb tensor(0.61900687) min lb tensor(-0.07967085)
Number of Verified Splits: 192 of 248
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 8
#cuts 4-6: 7
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.032532453536987305 
BICCOS Cumulative time: 0.5885066986083984
Preprocessing time: 0.0076503753662109375 Inference time: 0.01972794532775879 Add cuts time: 0.0040895938873291016 Cut analysis time: 0.0010645389556884766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07967 (14), -0.07743 (14), -0.07224 (14), -0.07183 (14), -0.06709 (14), -0.06646 (14), -0.06452 (14), -0.06358 (14), -0.06196 (14), -0.06144 (14), -0.06009 (14), -0.06009 (14), -0.06008 (14), -0.05957 (14), -0.05760 (14), -0.05599 (14), -0.05594 (14), -0.05293 (14), -0.05184 (14), -0.05110 (14), 
Length of domains: 56
Time: pickout 0.0018    decision 0.0141    set_bounds 0.0106    solve 0.1349    add 0.0809    
Accumulated time: pickout 0.0033    decision 0.0544    set_bounds 0.0409    solve 0.3775    add 0.1222    
Current (lb-rhs): -0.07967084646224976
132 domains visited
Cumulative time: 1.2069361209869385

BaB round 4
batch: 56
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 1: [/input-8, 1521] [/input-8, 1521] [/input-8, 931] [/input-8, 1702] [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-12, 0] [/input-8, 931] [/input-8, 931] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06114572286605835
10 lb beta sum: 0.025725020095705986, worst -0.06098461151123047
Time: prepare 0.0046    bound 0.1230    transfer 0.0016    finalize 0.0016    func 0.1323    
Accumulated time: func 0.5091    prepare 0.0175    bound 0.4725    transfer 0.0060    finalize 0.0066    
all_split False
======================Cut inference begins======================
max lb tensor(0.46602219) min lb tensor(-0.06091547)
Number of Verified Splits: 162 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 8
#cuts 4-6: 4
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.028324604034423828 
BICCOS Cumulative time: 0.6168313026428223
Preprocessing time: 0.007272481918334961 Inference time: 0.01869988441467285 Add cuts time: 0.0016307830810546875 Cut analysis time: 0.0007214546203613281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06092 (16), -0.05963 (16), -0.05767 (16), -0.05722 (16), -0.05473 (16), -0.05298 (16), -0.05145 (16), -0.05119 (16), -0.05045 (16), -0.05027 (16), -0.04983 (16), -0.04872 (16), -0.04858 (16), -0.04844 (16), -0.04818 (16), -0.04804 (16), -0.04774 (16), -0.04654 (16), -0.04615 (16), -0.04553 (16), 
Length of domains: 62
Time: pickout 0.0169    decision 0.0152    set_bounds 0.0096    solve 0.1324    add 0.0756    
Accumulated time: pickout 0.0202    decision 0.0697    set_bounds 0.0505    solve 0.5099    add 0.1977    
Current (lb-rhs): -0.060915470123291016
194 domains visited
Cumulative time: 1.4927191734313965

BaB round 5
batch: 62
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1521] [/input-12, 0] [/input-8, 1521] [/input-12, 0] [/input-8, 931] [/input-8, 1475] [/input-8, 1521] [/input-8, 931] [/input-8, 1521] [/input-8, 931] 
split level 1: [/input-12, 0] [/input-8, 1476] [/input-12, 0] [/input-8, 1476] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-8, 1702] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.041600167751312256
10 lb beta sum: 0.162494957447052, worst -0.041317760944366455
Time: prepare 0.0052    bound 0.1272    transfer 0.0009    finalize 0.0017    func 0.1368    
Accumulated time: func 0.6459    prepare 0.0229    bound 0.5997    transfer 0.0069    finalize 0.0083    
all_split False
======================Cut inference begins======================
max lb tensor(0.28169054) min lb tensor(-0.04123414)
Number of Verified Splits: 194 of 248
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 12
#cuts 4-6: 4
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.034975290298461914 
BICCOS Cumulative time: 0.6518065929412842
Preprocessing time: 0.007505178451538086 Inference time: 0.024229049682617188 Add cuts time: 0.0024957656860351562 Cut analysis time: 0.0007452964782714844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04123 (18), -0.03987 (18), -0.03654 (18), -0.03605 (18), -0.03543 (18), -0.03501 (18), -0.03493 (18), -0.03492 (18), -0.03444 (18), -0.03394 (18), -0.03368 (18), -0.03308 (18), -0.02876 (18), -0.02869 (18), -0.02690 (18), -0.02674 (18), -0.02624 (18), -0.02563 (18), -0.02551 (18), -0.02547 (18), 
Length of domains: 54
Time: pickout 0.0147    decision 0.0160    set_bounds 0.0121    solve 0.1368    add 0.0703    
Accumulated time: pickout 0.0349    decision 0.0857    set_bounds 0.0626    solve 0.6467    add 0.2681    
Current (lb-rhs): -0.04123413562774658
248 domains visited
Cumulative time: 1.7853364944458008

BaB round 6
batch: 54
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 858] [/input-8, 931] [/input-8, 858] [/input-8, 931] [/input-8, 858] [/input-8, 931] [/input-12, 0] [/input-8, 931] [/input-8, 858] [/input-8, 931] 
split level 1: [/input-8, 1476] [/input-8, 1703] [/input-8, 1476] [/input-8, 1703] [/input-8, 1476] [/input-8, 1703] [/input-8, 1476] [/input-8, 1703] [/input-8, 1476] [/input-8, 858] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.027402877807617188
10 lb beta sum: 0.15028339624404907, worst -0.026990950107574463
Time: prepare 0.0046    bound 0.1462    transfer 0.0009    finalize 0.0014    func 0.1546    
Accumulated time: func 0.8004    prepare 0.0277    bound 0.7459    transfer 0.0078    finalize 0.0097    
all_split False
======================Cut inference begins======================
max lb tensor(0.48171967) min lb tensor(-0.02683622)
Number of Verified Splits: 188 of 216
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 14
#cuts 4-6: 4
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.03371310234069824 
BICCOS Cumulative time: 0.6855196952819824
Preprocessing time: 0.00652623176574707 Inference time: 0.024595975875854492 Add cuts time: 0.0018227100372314453 Cut analysis time: 0.0007681846618652344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02684 (20), -0.02558 (20), -0.02105 (20), -0.02037 (20), -0.01996 (20), -0.01995 (20), -0.01912 (20), -0.01901 (20), -0.01459 (20), -0.01350 (20), -0.01349 (20), -0.01298 (20), -0.01256 (20), -0.01251 (20), -0.01204 (20), -0.01185 (20), -0.00990 (20), -0.00972 (20), -0.00837 (20), -0.00810 (20), 
Length of domains: 28
Time: pickout 0.0075    decision 0.0140    set_bounds 0.0073    solve 0.1546    add 0.0015    
Accumulated time: pickout 0.0424    decision 0.0996    set_bounds 0.0699    solve 0.8013    add 0.2695    
Current (lb-rhs): -0.02683621644973755
276 domains visited
Cumulative time: 2.0047402381896973

BaB round 7
batch: 28
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1475] [/input-8, 1475] [/input-8, 1475] [/input-8, 1368] [/input-8, 1475] [/input-8, 1368] [/input-8, 1368] [/input-8, 1368] [/input-8, 1368] [/input-8, 1368] 
split level 1: [/input, 4070] [/input, 4070] [/input, 4070] [/input-8, 849] [/input, 4070] [/input-8, 849] [/input-8, 849] [/input-8, 849] [/input-8, 849] [/input-8, 849] 
split level 2: [/input-8, 1703] [/input-8, 1703] [/input-8, 1703] [/input-8, 1476] [/input-8, 1703] [/input-8, 1476] [/input-8, 858] [/input-8, 858] [/input-8, 1476] [/input-8, 1476] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.004341483116149902
10 lb beta sum: 0.0, worst -0.004074275493621826
Time: prepare 0.0052    bound 0.1427    transfer 0.0015    finalize 0.0016    func 0.1525    
Accumulated time: func 0.9529    prepare 0.0331    bound 0.8886    transfer 0.0093    finalize 0.0113    
all_split False
======================Cut inference begins======================
max lb tensor(0.03031600) min lb tensor(-0.00396436)
Number of Verified Splits: 220 of 224
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 14
#cuts 4-6: 4
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.038352251052856445 
BICCOS Cumulative time: 0.7238719463348389
Preprocessing time: 0.006821393966674805 Inference time: 0.029759645462036133 Add cuts time: 0.0009853839874267578 Cut analysis time: 0.00078582763671875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00396 (23), -0.00271 (23), -0.00173 (23), -0.00048 (23), 
Length of domains: 4
Time: pickout 0.0013    decision 0.0180    set_bounds 0.0090    solve 0.1526    add 0.0007    
Accumulated time: pickout 0.0437    decision 0.1176    set_bounds 0.0788    solve 0.9538    add 0.2702    
Current (lb-rhs): -0.003964364528656006
280 domains visited
Cumulative time: 2.2254014015197754

BaB round 8
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] 
split level 1: [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] 
split level 2: [/input-8, 1368] [/input-8, 1368] [/input-8, 1702] [/input-8, 1702] 
split level 3: [/input-8, 1702] [/input-8, 1702] [/input-8, 1368] [/input-8, 1368] 
split level 4: [/input-8, 165] [/input-8, 165] [/input-8, 165] [/input-8, 165] 
split level 5: [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.03475987911224365

all verified at 0th iter
Time: prepare 0.0130    bound 0.0059    transfer 0.0009    finalize 0.0015    func 0.0229    
Accumulated time: func 0.9758    prepare 0.0464    bound 0.8945    transfer 0.0101    finalize 0.0128    
all_split False
======================Cut inference begins======================
max lb tensor(0.07064617) min lb tensor(0.03475988)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 21.
#cuts 1-3: 14
#cuts 4-6: 4
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.0075511932373046875 
BICCOS Cumulative time: 0.7314231395721436
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0193    set_bounds 0.0177    solve 0.0230    add 0.0001    
Accumulated time: pickout 0.0446    decision 0.1369    set_bounds 0.0965    solve 0.9768    add 0.2702    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
280 domains visited
Cumulative time: 2.294928789138794


Properties batch 4, size 1
Remaining timeout: 193.71194553375244
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 193.71187043190002
Verifying property 5 with 1 instances.
##### Instance 188 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.86869276]], device='cuda:0') need to verify.
Model prediction is: tensor([-30.52160454, -35.44147110, -29.00762939, -31.49926949, -30.50539780,
        -31.95778084, -30.34750366, -33.13414383, -34.25574875, -33.32904434],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.86869276]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 609
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 292
Node /15 input 0: size torch.Size([100]) unstable 39
-----------------
# of unstable neurons: 940
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.942054748535156e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 44] 
split level 1: [/input-12, 80] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 0] 
split level 5: [/input-12, 32] 
split level 6: [/input-12, 75] 
split level 7: [/input-12, 36] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2673764228820801
10 lb beta sum: 0.0, worst -0.26613593101501465
Time: prepare 0.0018    bound 0.1076    transfer 0.0005    finalize 0.0014    func 0.1132    
Accumulated time: func 0.1132    prepare 0.0022    bound 0.1076    transfer 0.0005    finalize 0.0014    
all_split False
======================Cut inference begins======================
max lb tensor(0.35728049) min lb tensor(-0.26573110)
Number of Verified Splits: 221 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.868689775466919
10 lb beta sum: 0.0, worst -0.868699312210083
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 2
#cuts 4-6: 6
#cuts 7-9: 13
#cuts >= 20: 0
BICCOS time: 0.2167646884918213 
BICCOS Cumulative time: 0.2167646884918213
Preprocessing time: 0.006971836090087891 Inference time: 0.20504212379455566 Add cuts time: 0.003499269485473633 Cut analysis time: 0.0012514591217041016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26573 (8), -0.26035 (8), -0.20362 (8), -0.19702 (8), -0.19677 (8), -0.17503 (8), -0.16813 (8), -0.16481 (8), -0.16348 (8), -0.15873 (8), -0.15442 (8), -0.12491 (8), -0.12208 (8), -0.11434 (8), -0.10997 (8), -0.10886 (8), -0.10348 (8), -0.10232 (8), -0.10077 (8), -0.09991 (8), 
Length of domains: 35
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0162    solve 0.1133    add 0.0548    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0162    solve 0.1133    add 0.0548    
Current (lb-rhs): -0.2657310962677002
35 domains visited
Cumulative time: 0.43047189712524414

BaB round 2
batch: 35
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] 
split level 1: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] 
split level 2: [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21808743476867676
10 lb beta sum: 0.0, worst -0.21758055686950684
Time: prepare 0.0040    bound 0.1236    transfer 0.0019    finalize 0.0016    func 0.1329    
Accumulated time: func 0.2461    prepare 0.0064    bound 0.2311    transfer 0.0024    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.36766779) min lb tensor(-0.21738839)
Number of Verified Splits: 239 of 280
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6413998603820801
10 lb beta sum: 0.09400802105665207, worst -0.5674994587898254
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 59.
#cuts 1-3: 2
#cuts 4-6: 9
#cuts 7-9: 48
#cuts >= 20: 0
BICCOS time: 0.2842092514038086 
BICCOS Cumulative time: 0.5009739398956299
Preprocessing time: 0.008501291275024414 Inference time: 0.25832128524780273 Add cuts time: 0.013518095016479492 Cut analysis time: 0.003868579864501953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21739 (11), -0.21161 (11), -0.15624 (11), -0.14879 (11), -0.14569 (11), -0.12701 (11), -0.12645 (11), -0.12377 (11), -0.11851 (11), -0.11614 (11), -0.11353 (11), -0.10946 (11), -0.10699 (11), -0.07663 (11), -0.07424 (11), -0.06625 (11), -0.06027 (11), -0.05919 (11), -0.05821 (11), -0.05785 (11), 
Length of domains: 41
Time: pickout 0.0013    decision 0.0188    set_bounds 0.0109    solve 0.1330    add 0.0779    
Accumulated time: pickout 0.0017    decision 0.0420    set_bounds 0.0271    solve 0.2462    add 0.1327    
Current (lb-rhs): -0.21738839149475098
76 domains visited
Cumulative time: 0.9653489589691162

BaB round 3
batch: 41
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1714] [/input-8, 1698] [/input-8, 1714] [/input-8, 27] [/input-8, 1714] [/input-8, 1698] [/input-8, 1714] [/input-8, 1698] [/input-8, 1714] [/input-8, 27] 
split level 1: [/input-8, 1698] [/input-8, 1702] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1702] [/input-8, 1698] [/input-8, 19] [/input-8, 1698] [/input-8, 1698] 
split level 2: [/input-8, 173] [/input-8, 173] [/input-8, 173] [/input-8, 19] [/input-8, 1703] [/input-8, 173] [/input-8, 1703] [/input-8, 1702] [/input-8, 1476] [/input-8, 19] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18942832946777344
10 lb beta sum: 0.0, worst -0.18903660774230957
Time: prepare 0.0063    bound 0.1262    transfer 0.0007    finalize 0.0017    func 0.1376    
Accumulated time: func 0.3836    prepare 0.0129    bound 0.3574    transfer 0.0031    finalize 0.0047    
all_split False
======================Cut inference begins======================
max lb tensor(0.11057115) min lb tensor(-0.18890619)
Number of Verified Splits: 192 of 328
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 7
#cuts 4-6: 3
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.03432512283325195 
BICCOS Cumulative time: 0.5352990627288818
Preprocessing time: 0.009776830673217773 Inference time: 0.020035505294799805 Add cuts time: 0.00374603271484375 Cut analysis time: 0.000766754150390625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18891 (14), -0.18297 (14), -0.17579 (14), -0.16961 (14), -0.16827 (14), -0.16130 (14), -0.15505 (14), -0.14784 (14), -0.14196 (14), -0.13314 (14), -0.12885 (14), -0.12682 (14), -0.12204 (14), -0.11981 (14), -0.11942 (14), -0.11432 (14), -0.11217 (14), -0.10887 (14), -0.10868 (14), -0.10477 (14), 
Length of domains: 136
Time: pickout 0.0027    decision 0.0148    set_bounds 0.0098    solve 0.1376    add 0.0261    
Accumulated time: pickout 0.0045    decision 0.0568    set_bounds 0.0369    solve 0.3839    add 0.1588    
Current (lb-rhs): -0.18890619277954102
212 domains visited
Cumulative time: 1.197007179260254

BaB round 4
batch: 136
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1702] [/input-8, 27] [/input-12, 29] [/input-8, 1702] [/input-8, 1302] [/input-8, 27] [/input-8, 27] [/input-8, 1302] [/input-8, 1702] [/input-8, 165] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18255972862243652
10 lb beta sum: 0.19533737003803253, worst -0.18241024017333984
Time: prepare 0.0055    bound 0.1405    transfer 0.0014    finalize 0.0017    func 0.1509    
Accumulated time: func 0.5345    prepare 0.0186    bound 0.4978    transfer 0.0045    finalize 0.0065    
all_split False
======================Cut inference begins======================
max lb tensor(0.37769413) min lb tensor(-0.18233490)
Number of Verified Splits: 233 of 272
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 12
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.03641963005065918 
BICCOS Cumulative time: 0.571718692779541
Preprocessing time: 0.008198976516723633 Inference time: 0.0249481201171875 Add cuts time: 0.002712249755859375 Cut analysis time: 0.0005602836608886719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18233 (15), -0.17479 (15), -0.16915 (15), -0.16592 (15), -0.16252 (15), -0.15693 (15), -0.14875 (15), -0.14687 (15), -0.14368 (15), -0.14000 (15), -0.13636 (15), -0.13043 (15), -0.12091 (15), -0.11947 (15), -0.11725 (15), -0.11087 (15), -0.10748 (15), -0.10676 (15), -0.09639 (15), -0.09350 (15), 
Length of domains: 39
Time: pickout 0.0028    decision 0.0172    set_bounds 0.0071    solve 0.1510    add 0.0779    
Accumulated time: pickout 0.0072    decision 0.0740    set_bounds 0.0440    solve 0.5349    add 0.2367    
Current (lb-rhs): -0.18233489990234375
251 domains visited
Cumulative time: 1.4978070259094238

BaB round 5
batch: 39
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 165] [/input-8, 1476] [/input-8, 165] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-8, 165] [/input-8, 1476] [/input-8, 165] [/input-12, 29] 
split level 1: [/input-8, 1476] [/input-8, 1521] [/input-8, 1476] [/input-8, 173] [/input-8, 1476] [/input-8, 173] [/input-8, 1476] [/input-8, 1521] [/input-8, 1476] [/input-8, 173] 
split level 2: [/input-8, 1521] [/input-8, 1703] [/input-8, 1521] [/input-8, 165] [/input-8, 1521] [/input-8, 165] [/input-8, 1521] [/input-8, 1703] [/input-8, 1521] [/input-8, 165] 
cut re-enabled after branching node selection
0 lb beta sum: 0.06673511117696762, worst -0.15670084953308105
10 lb beta sum: 0.6028984785079956, worst -0.15183129906654358
Time: prepare 0.0141    bound 0.1397    transfer 0.0020    finalize 0.0018    func 0.1597    
Accumulated time: func 0.6942    prepare 0.0328    bound 0.6375    transfer 0.0065    finalize 0.0083    
all_split False
======================Cut inference begins======================
max lb tensor(0.62536788) min lb tensor(-0.15170483)
Number of Verified Splits: 269 of 312
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 15
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.0459136962890625 
BICCOS Cumulative time: 0.6176323890686035
Preprocessing time: 0.00930023193359375 Inference time: 0.03330230712890625 Add cuts time: 0.0027480125427246094 Cut analysis time: 0.0005631446838378906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15170 (18), -0.15075 (18), -0.14518 (18), -0.14432 (18), -0.14253 (18), -0.14164 (18), -0.13979 (18), -0.13882 (18), -0.13597 (18), -0.13514 (18), -0.13323 (18), -0.13239 (18), -0.12367 (18), -0.12290 (18), -0.11698 (18), -0.11623 (18), -0.10096 (18), -0.09453 (18), -0.09211 (18), -0.09008 (18), 
Length of domains: 43
Time: pickout 0.0049    decision 0.0192    set_bounds 0.0143    solve 0.1597    add 0.0268    
Accumulated time: pickout 0.0122    decision 0.0932    set_bounds 0.0583    solve 0.6946    add 0.2636    
Current (lb-rhs): -0.1517048329114914
294 domains visited
Cumulative time: 1.7699975967407227

BaB round 6
batch: 43
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 27] [/input-8, 27] [/input-8, 27] [/input-8, 27] [/input-8, 27] [/input-8, 27] [/input-8, 27] [/input-8, 27] [/input-8, 1714] [/input-8, 27] 
split level 1: [/input-8, 1302] [/input-8, 1302] [/input-8, 1302] [/input-8, 1302] [/input-8, 1302] [/input-8, 1302] [/input-8, 1302] [/input-8, 1302] [/input-8, 1521] [/input-8, 1302] 
split level 2: [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1703] [/input-8, 1453] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14087724685668945
10 lb beta sum: 0.6183071732521057, worst -0.12965717911720276
Time: prepare 0.0068    bound 0.1450    transfer 0.0007    finalize 0.0021    func 0.1572    
Accumulated time: func 0.8514    prepare 0.0398    bound 0.7825    transfer 0.0073    finalize 0.0104    
all_split False
======================Cut inference begins======================
max lb tensor(0.24224897) min lb tensor(-0.12954073)
Number of Verified Splits: 100 of 344
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 15
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.02768874168395996 
BICCOS Cumulative time: 0.6453211307525635
Preprocessing time: 0.010799169540405273 Inference time: 0.014016151428222656 Add cuts time: 0.0022268295288085938 Cut analysis time: 0.0006465911865234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12954 (21), -0.12850 (21), -0.12324 (21), -0.12228 (21), -0.12226 (21), -0.12123 (21), -0.11978 (21), -0.11874 (21), -0.11747 (21), -0.11643 (21), -0.11597 (21), -0.11503 (21), -0.11335 (21), -0.11246 (21), -0.11192 (21), -0.11153 (21), -0.11116 (21), -0.11084 (21), -0.11051 (21), -0.11019 (21), 
Length of domains: 244
Time: pickout 0.0016    decision 0.0149    set_bounds 0.0135    solve 0.1573    add 0.0042    
Accumulated time: pickout 0.0138    decision 0.1080    set_bounds 0.0718    solve 0.8519    add 0.2678    
Current (lb-rhs): -0.12954072654247284
538 domains visited
Cumulative time: 1.9898338317871094

BaB round 7
batch: 244
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1702] [/input-8, 1702] [/input-8, 1702] [/input-8, 1702] [/input-8, 1702] [/input-8, 1702] [/input-8, 1702] [/input-8, 1702] [/input-8, 1702] [/input-8, 1702] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8581164479255676, worst -0.12953953444957733
10 lb beta sum: 0.8581164479255676, worst -0.1294727772474289
Time: prepare 0.0220    bound 0.1451    transfer 0.0019    finalize 0.0025    func 0.1746    
Accumulated time: func 1.0260    prepare 0.0620    bound 0.9276    transfer 0.0092    finalize 0.0128    
all_split False
======================Cut inference begins======================
max lb tensor(0.25122428) min lb tensor(-0.12944464)
Number of Verified Splits: 251 of 488
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 18
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.0549774169921875 
BICCOS Cumulative time: 0.700298547744751
Preprocessing time: 0.014174222946166992 Inference time: 0.037259817123413086 Add cuts time: 0.0027184486389160156 Cut analysis time: 0.0008249282836914062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12944 (22), -0.12839 (22), -0.12318 (22), -0.12217 (22), -0.12195 (22), -0.12090 (22), -0.11959 (22), -0.11857 (22), -0.11729 (22), -0.11623 (22), -0.11567 (22), -0.11466 (22), -0.11319 (22), -0.11230 (22), -0.11160 (22), -0.11126 (22), -0.11104 (22), -0.11053 (22), -0.11027 (22), -0.11001 (22), 
Length of domains: 237
Time: pickout 0.0047    decision 0.0236    set_bounds 0.0130    solve 0.1748    add 0.0783    
Accumulated time: pickout 0.0186    decision 0.1317    set_bounds 0.0848    solve 1.0267    add 0.3461    
Current (lb-rhs): -0.1294446438550949
775 domains visited
Cumulative time: 2.347113847732544

BaB round 8
batch: 237
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 521] [/input-8, 520] [/input-8, 2011] [/input-8, 521] [/input-8, 521] [/input-8, 520] [/input-8, 521] [/input-8, 521] [/input-8, 520] [/input-8, 521] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12653136253356934
10 lb beta sum: 0.8787267208099365, worst -0.12071835994720459
Time: prepare 0.0092    bound 0.1547    transfer 0.0008    finalize 0.0022    func 0.1701    
Accumulated time: func 1.1962    prepare 0.0714    bound 1.0823    transfer 0.0101    finalize 0.0151    
all_split False
======================Cut inference begins======================
max lb tensor(0.02926958) min lb tensor(-0.12069765)
Number of Verified Splits: 51 of 474
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 20
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.02446722984313965 
BICCOS Cumulative time: 0.7247657775878906
Preprocessing time: 0.01392221450805664 Inference time: 0.007944583892822266 Add cuts time: 0.0019767284393310547 Cut analysis time: 0.0006237030029296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12070 (23), -0.11965 (23), -0.11445 (23), -0.11440 (23), -0.11343 (23), -0.11323 (23), -0.11304 (23), -0.11199 (23), -0.11075 (23), -0.10973 (23), -0.10901 (23), -0.10852 (23), -0.10777 (23), -0.10748 (23), -0.10677 (23), -0.10670 (23), -0.10576 (23), -0.10557 (23), -0.10491 (23), -0.10433 (23), 
Length of domains: 423
Time: pickout 0.0164    decision 0.0286    set_bounds 0.0123    solve 0.1708    add 0.0667    
Accumulated time: pickout 0.0349    decision 0.1602    set_bounds 0.0971    solve 1.1974    add 0.4128    
Current (lb-rhs): -0.12069764733314514
1198 domains visited
Cumulative time: 2.6688973903656006

BaB round 9
batch: 423
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2011] [/input-8, 2011] [/input-8, 2011] [/input-8, 2011] [/input-8, 2011] [/input-8, 2011] [/input-8, 2011] [/input-8, 2011] [/input-8, 2011] [/input-8, 2011] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11883950233459473
10 lb beta sum: 1.1616857051849365, worst -0.1114645004272461
Time: prepare 0.0166    bound 0.1563    transfer 0.0039    finalize 0.0050    func 0.1873    
Accumulated time: func 1.3835    prepare 0.0882    bound 1.2387    transfer 0.0140    finalize 0.0201    
all_split False
======================Cut inference begins======================
max lb tensor(0.29736096) min lb tensor(-0.11144513)
Number of Verified Splits: 435 of 846
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 23
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.10175657272338867 
BICCOS Cumulative time: 0.8265223503112793
Preprocessing time: 0.025290966033935547 Inference time: 0.07115459442138672 Add cuts time: 0.00456690788269043 Cut analysis time: 0.0007441043853759766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11145 (24), -0.10630 (24), -0.10518 (24), -0.10506 (24), -0.10370 (24), -0.10150 (24), -0.10004 (24), -0.09972 (24), -0.09927 (24), -0.09852 (24), -0.09829 (24), -0.09742 (24), -0.09732 (24), -0.09638 (24), -0.09568 (24), -0.09516 (24), -0.09410 (24), -0.09338 (24), -0.09312 (24), -0.09307 (24), 
Length of domains: 411
Time: pickout 0.0098    decision 0.0341    set_bounds 0.0233    solve 0.1875    add 0.0140    
Accumulated time: pickout 0.0447    decision 0.1943    set_bounds 0.1204    solve 1.3849    add 0.4268    
Current (lb-rhs): -0.11144512891769409
1609 domains visited
Cumulative time: 3.0418667793273926

BaB round 10
batch: 411
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 19] [/input-8, 19] [/input-8, 19] [/input-8, 19] [/input-8, 19] [/input-8, 19] [/input-8, 19] [/input-8, 19] [/input-8, 1703] [/input-8, 595] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11068177223205566
10 lb beta sum: 1.415435552597046, worst -0.10088086128234863
Time: prepare 0.0159    bound 0.1531    transfer 0.0049    finalize 0.0037    func 0.1830    
Accumulated time: func 1.5665    prepare 0.1043    bound 1.3917    transfer 0.0189    finalize 0.0238    
all_split False
======================Cut inference begins======================
max lb tensor(0.27846003) min lb tensor(-0.10085738)
Number of Verified Splits: 321 of 822
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 23
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.0850064754486084 
BICCOS Cumulative time: 0.9115288257598877
Preprocessing time: 0.02456521987915039 Inference time: 0.05596494674682617 Add cuts time: 0.003712892532348633 Cut analysis time: 0.0007634162902832031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10086 (25), -0.09835 (25), -0.09456 (25), -0.09449 (25), -0.09310 (25), -0.09209 (25), -0.09192 (25), -0.09090 (25), -0.09026 (25), -0.08915 (25), -0.08853 (25), -0.08846 (25), -0.08679 (25), -0.08678 (25), -0.08667 (25), -0.08658 (25), -0.08517 (25), -0.08450 (25), -0.08401 (25), -0.08386 (25), 
Length of domains: 501
Time: pickout 0.0076    decision 0.0382    set_bounds 0.0214    solve 0.1831    add 0.1593    
Accumulated time: pickout 0.0523    decision 0.2326    set_bounds 0.1418    solve 1.5680    add 0.5861    
Current (lb-rhs): -0.10085737705230713
2110 domains visited
Cumulative time: 3.5406618118286133

BaB round 11
batch: 501
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 595] [/input-8, 595] [/input-8, 595] [/input-8, 595] [/input-8, 595] [/input-8, 595] [/input-8, 595] [/input-8, 595] [/input-8, 595] [/input-8, 595] 
cut re-enabled after branching node selection
0 lb beta sum: 1.7150452136993408, worst -0.10085785388946533
10 lb beta sum: 1.7150452136993408, worst -0.10084068775177002
Time: prepare 0.0477    bound 0.1488    transfer 0.0064    finalize 0.0050    func 0.2145    
Accumulated time: func 1.7810    prepare 0.1523    bound 1.5406    transfer 0.0253    finalize 0.0289    
all_split False
======================Cut inference begins======================
max lb tensor(0.24149227) min lb tensor(-0.10081756)
Number of Verified Splits: 368 of 1002
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 24
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.09899783134460449 
BICCOS Cumulative time: 1.0105266571044922
Preprocessing time: 0.03140568733215332 Inference time: 0.06310081481933594 Add cuts time: 0.0035712718963623047 Cut analysis time: 0.0009200572967529297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10082 (26), -0.09831 (26), -0.09444 (26), -0.09308 (26), -0.09185 (26), -0.09023 (26), -0.09002 (26), -0.08910 (26), -0.08909 (26), -0.08850 (26), -0.08842 (26), -0.08742 (26), -0.08675 (26), -0.08663 (26), -0.08660 (26), -0.08652 (26), -0.08599 (26), -0.08514 (26), -0.08381 (26), -0.08329 (26), 
Length of domains: 634
Time: pickout 0.0112    decision 0.0419    set_bounds 0.0265    solve 0.2147    add 0.0931    
Accumulated time: pickout 0.0635    decision 0.2745    set_bounds 0.1684    solve 1.7828    add 0.6791    
Current (lb-rhs): -0.10081756114959717
2744 domains visited
Cumulative time: 4.0368547439575195

BaB round 12
batch: 634
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 595] [/input-8, 595] [/input-8, 19] [/input-8, 19] [/input-8, 595] [/input-8, 19] [/input-8, 19] [/input-8, 19] [/input-8, 19] [/input-8, 19] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10125470161437988
10 lb beta sum: 1.391890525817871, worst -0.08991938829421997
Time: prepare 0.0250    bound 0.1633    transfer 0.0056    finalize 0.0065    func 0.2093    
Accumulated time: func 1.9903    prepare 0.1775    bound 1.7038    transfer 0.0309    finalize 0.0354    
all_split False
======================Cut inference begins======================
max lb tensor(0.24607486) min lb tensor(-0.08989835)
Number of Verified Splits: 363 of 1268
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 24
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.10999655723571777 
BICCOS Cumulative time: 1.12052321434021
Preprocessing time: 0.04070234298706055 Inference time: 0.06458878517150879 Add cuts time: 0.00398564338684082 Cut analysis time: 0.0007197856903076172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08990 (27), -0.08729 (27), -0.08364 (27), -0.08353 (27), -0.08203 (27), -0.08106 (27), -0.08085 (27), -0.08044 (27), -0.07905 (27), -0.07847 (27), -0.07818 (27), -0.07798 (27), -0.07725 (27), -0.07580 (27), -0.07578 (27), -0.07574 (27), -0.07551 (27), -0.07525 (27), -0.07463 (27), -0.07407 (27), 
Length of domains: 905
Time: pickout 0.0216    decision 0.0515    set_bounds 0.0340    solve 0.2096    add 0.0065    
Accumulated time: pickout 0.0851    decision 0.3260    set_bounds 0.2023    solve 1.9923    add 0.6856    
Current (lb-rhs): -0.08989834785461426
3649 domains visited
Cumulative time: 4.473064661026001

BaB round 13
batch: 905
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 4069] [/input, 4069] [/input, 4069] [/input, 4069] [/input, 4069] [/input, 4069] [/input, 4069] [/input, 4069] [/input, 4069] [/input, 4069] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6467922925949097, worst -0.0870513916015625
10 lb beta sum: 1.6467922925949097, worst -0.0869448184967041
Time: prepare 0.0869    bound 0.1755    transfer 0.0113    finalize 0.0118    func 0.2972    
Accumulated time: func 2.2875    prepare 0.2647    bound 1.8793    transfer 0.0422    finalize 0.0471    
all_split False
======================Cut inference begins======================
max lb tensor(0.01112619) min lb tensor(-0.08685923)
Number of Verified Splits: 278 of 1810
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 24
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.11097455024719238 
BICCOS Cumulative time: 1.2314977645874023
Preprocessing time: 0.0572357177734375 Inference time: 0.049678802490234375 Add cuts time: 0.003284931182861328 Cut analysis time: 0.0007750988006591797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08686 (28), -0.08424 (28), -0.08109 (28), -0.08060 (28), -0.08050 (28), -0.07878 (28), -0.07846 (28), -0.07801 (28), -0.07781 (28), -0.07743 (28), -0.07536 (28), -0.07496 (28), -0.07481 (28), -0.07474 (28), -0.07419 (28), -0.07320 (28), -0.07317 (28), -0.07274 (28), -0.07270 (28), -0.07247 (28), 
Length of domains: 1532
Time: pickout 0.0213    decision 0.0671    set_bounds 0.0367    solve 0.2975    add 0.0109    
Accumulated time: pickout 0.1064    decision 0.3930    set_bounds 0.2391    solve 2.2898    add 0.6964    
Current (lb-rhs): -0.08685922622680664
5181 domains visited
Cumulative time: 5.020994186401367

BaB round 14
batch: 1532
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 4070] [/input, 4070] [/input, 4070] [/input, 4070] [/input, 4070] [/input, 4070] [/input, 4070] [/input, 4070] [/input, 4070] [/input, 4070] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6212390661239624, worst -0.07905411720275879
10 lb beta sum: 1.6212390661239624, worst -0.07894515991210938
Time: prepare 0.1555    bound 0.2448    transfer 0.0157    finalize 0.0201    func 0.4560    
Accumulated time: func 2.7435    prepare 0.4205    bound 2.1241    transfer 0.0579    finalize 0.0672    
all_split False
======================Cut inference begins======================
max lb tensor(0.02117443) min lb tensor(-0.07885933)
Number of Verified Splits: 537 of 3064
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 24
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.20168137550354004 
BICCOS Cumulative time: 1.4331791400909424
Preprocessing time: 0.09551262855529785 Inference time: 0.09787750244140625 Add cuts time: 0.007401466369628906 Cut analysis time: 0.0008897781372070312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07886 (29), -0.07622 (29), -0.07593 (29), -0.07331 (29), -0.07261 (29), -0.07254 (29), -0.07249 (29), -0.07148 (29), -0.07069 (29), -0.07001 (29), -0.06993 (29), -0.06990 (29), -0.06980 (29), -0.06966 (29), -0.06964 (29), -0.06963 (29), -0.06943 (29), -0.06884 (29), -0.06831 (29), -0.06729 (29), 
Length of domains: 2527
Time: pickout 0.0279    decision 0.2624    set_bounds 0.0584    solve 0.4570    add 0.0350    
Accumulated time: pickout 0.1343    decision 0.6554    set_bounds 0.2975    solve 2.7468    add 0.7314    
Current (lb-rhs): -0.07885932922363281
7708 domains visited
Cumulative time: 6.072638988494873

BaB round 15
batch: 2527
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 520] [/input-8, 520] [/input-8, 520] [/input-8, 520] [/input-8, 520] [/input-8, 520] [/input-8, 520] [/input-8, 520] [/input-8, 1691] [/input-8, 1691] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5903714895248413, worst -0.07885885238647461
10 lb beta sum: 1.5903714895248413, worst -0.07875633239746094
Time: prepare 0.2595    bound 0.3464    transfer 0.0214    finalize 0.0325    func 0.6929    
Accumulated time: func 3.4364    prepare 0.6802    bound 2.4705    transfer 0.0793    finalize 0.0997    
all_split False
======================Cut inference begins======================
max lb tensor(0.02662468) min lb tensor(-0.07868791)
Number of Verified Splits: 2285 of 5054
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 24
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.611536979675293 
BICCOS Cumulative time: 2.0447161197662354
Preprocessing time: 0.16095805168151855 Inference time: 0.42879223823547363 Add cuts time: 0.020715951919555664 Cut analysis time: 0.0010707378387451172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07869 (30), -0.07586 (30), -0.07272 (30), -0.07245 (30), -0.07240 (30), -0.07144 (30), -0.07053 (30), -0.06990 (30), -0.06983 (30), -0.06978 (30), -0.06958 (30), -0.06927 (30), -0.06860 (30), -0.06823 (30), -0.06698 (30), -0.06678 (30), -0.06658 (30), -0.06645 (30), -0.06642 (30), -0.06612 (30), 
Length of domains: 2769
Time: pickout 0.0467    decision 0.1549    set_bounds 0.2967    solve 0.6943    add 0.0247    
Accumulated time: pickout 0.1810    decision 0.8103    set_bounds 0.5942    solve 3.4411    add 0.7560    
Current (lb-rhs): -0.07868790626525879
10477 domains visited
Cumulative time: 7.920004606246948

BaB round 16
batch: 2769
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1691] [/input-8, 1691] [/input-8, 341] [/input-8, 341] [/input-8, 1691] [/input-8, 1691] [/input-8, 341] [/input-8, 1691] [/input-8, 520] [/input-8, 520] 
cut re-enabled after branching node selection
0 lb beta sum: 1.539433479309082, worst -0.07543325424194336
10 lb beta sum: 1.539433479309082, worst -0.07531476020812988
Time: prepare 0.2844    bound 0.3729    transfer 0.0076    finalize 0.0337    func 0.7346    
Accumulated time: func 4.1710    prepare 0.9649    bound 2.8434    transfer 0.0869    finalize 0.1334    
all_split False
======================Cut inference begins======================
max lb tensor(0.02180111) min lb tensor(-0.07524776)
Number of Verified Splits: 2309 of 5538
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 25
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.6473953723907471 
BICCOS Cumulative time: 2.6921114921569824
Preprocessing time: 0.17747974395751953 Inference time: 0.4411814212799072 Add cuts time: 0.027801990509033203 Cut analysis time: 0.0009322166442871094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07525 (31), -0.07258 (31), -0.07248 (31), -0.06982 (31), -0.06908 (31), -0.06902 (31), -0.06843 (31), -0.06811 (31), -0.06715 (31), -0.06643 (31), -0.06642 (31), -0.06636 (31), -0.06628 (31), -0.06581 (31), -0.06573 (31), -0.06573 (31), -0.06573 (31), -0.06545 (31), -0.06487 (31), -0.06365 (31), 
Length of domains: 3229
Time: pickout 0.0662    decision 0.1704    set_bounds 0.3082    solve 0.7362    add 0.0231    
Accumulated time: pickout 0.2472    decision 0.9807    set_bounds 0.9024    solve 4.1773    add 0.7792    
Current (lb-rhs): -0.07524776458740234
13706 domains visited
Cumulative time: 9.893296003341675

BaB round 17
batch: 3229
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 341] [/input-8, 341] [/input-8, 1691] [/input-8, 341] [/input-8, 341] [/input-8, 1691] [/input-8, 341] [/input-8, 341] [/input-8, 341] [/input-8, 341] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08025002479553223
10 lb beta sum: 1.099490761756897, worst -0.07011017203330994
Time: prepare 0.1688    bound 0.4203    transfer 0.0294    finalize 0.0422    func 0.7036    
Accumulated time: func 4.8746    prepare 1.1339    bound 3.2636    transfer 0.1163    finalize 0.1756    
all_split False
======================Cut inference begins======================
max lb tensor(0.01362085) min lb tensor(-0.07003939)
Number of Verified Splits: 2078 of 6458
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 27
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.6532409191131592 
BICCOS Cumulative time: 3.3453524112701416
Preprocessing time: 0.2090599536895752 Inference time: 0.41829490661621094 Add cuts time: 0.02491021156311035 Cut analysis time: 0.0009758472442626953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07004 (32), -0.06738 (32), -0.06734 (32), -0.06575 (32), -0.06468 (32), -0.06385 (32), -0.06320 (32), -0.06310 (32), -0.06305 (32), -0.06297 (32), -0.06234 (32), -0.06199 (32), -0.06122 (32), -0.06113 (32), -0.06059 (32), -0.06054 (32), -0.06040 (32), -0.06032 (32), -0.06027 (32), -0.06010 (32), 
Length of domains: 4380
Time: pickout 0.0795    decision 0.1938    set_bounds 0.3176    solve 0.7048    add 0.0305    
Accumulated time: pickout 0.3267    decision 1.1744    set_bounds 1.2200    solve 4.8821    add 0.8097    
Current (lb-rhs): -0.07003939151763916
18086 domains visited
Cumulative time: 11.897067070007324

BaB round 18
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1465] [/input-8, 1944] [/input-8, 1944] [/input-8, 1944] [/input-8, 1944] [/input-8, 1944] [/input-8, 1944] [/input-8, 1944] [/input-8, 1944] [/input-8, 1465] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07432866096496582
10 lb beta sum: 1.0765379667282104, worst -0.06423932313919067
Time: prepare 0.2186    bound 0.5073    transfer 0.0221    finalize 0.0461    func 0.8477    
Accumulated time: func 5.7223    prepare 1.3529    bound 3.7709    transfer 0.1383    finalize 0.2217    
all_split False
======================Cut inference begins======================
max lb tensor(0.02340150) min lb tensor(-0.06419930)
Number of Verified Splits: 2235 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 25
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.764453649520874 
BICCOS Cumulative time: 4.109806060791016
Preprocessing time: 0.2625877857208252 Inference time: 0.47667956352233887 Add cuts time: 0.02427387237548828 Cut analysis time: 0.0009124279022216797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06420 (33), -0.06154 (33), -0.06153 (33), -0.06109 (33), -0.05978 (33), -0.05888 (33), -0.05842 (33), -0.05841 (33), -0.05804 (33), -0.05795 (33), -0.05786 (33), -0.05722 (33), -0.05715 (33), -0.05711 (33), -0.05667 (33), -0.05617 (33), -0.05575 (33), -0.05538 (33), -0.05532 (33), -0.05528 (33), 
Length of domains: 6241
Time: pickout 0.0960    decision 0.4081    set_bounds 0.2109    solve 1.0243    add 0.0532    
Accumulated time: pickout 0.4227    decision 1.5825    set_bounds 1.4309    solve 5.9064    add 0.8629    
Current (lb-rhs): -0.064199298620224
24043 domains visited
current_vram/total_varm: 13.1GB/99.9GB, batch_size increase to 8192
Cumulative time: 14.484262466430664

BaB round 19
batch: 6241
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1944] [/input-8, 1465] [/input-8, 1465] [/input-8, 1465] [/input-8, 1465] [/input-8, 1465] [/input-8, 1465] [/input-8, 341] [/input-8, 341] [/input-8, 341] 
cut re-enabled after branching node selection
0 lb beta sum: 0.06007162854075432, worst -0.07091069221496582
10 lb beta sum: 1.053091049194336, worst -0.060847342014312744
Time: prepare 0.3393    bound 0.7435    transfer 0.0464    finalize 0.0766    func 1.2873    
Accumulated time: func 7.0095    prepare 1.6925    bound 4.5144    transfer 0.1847    finalize 0.2983    
all_split False
======================Cut inference begins======================
max lb tensor(0.01942807) min lb tensor(-0.06083688)
Number of Verified Splits: 5165 of 12482
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 26
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 1.7901599407196045 
BICCOS Cumulative time: 5.89996600151062
Preprocessing time: 0.5854785442352295 Inference time: 1.1500544548034668 Add cuts time: 0.053670644760131836 Cut analysis time: 0.0009562969207763672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06084 (34), -0.05819 (34), -0.05818 (34), -0.05771 (34), -0.05639 (34), -0.05554 (34), -0.05506 (34), -0.05505 (34), -0.05466 (34), -0.05460 (34), -0.05450 (34), -0.05390 (34), -0.05375 (34), -0.05374 (34), -0.05329 (34), -0.05276 (34), -0.05240 (34), -0.05201 (34), -0.05197 (34), -0.05193 (34), 
Length of domains: 7317
Time: pickout 0.1435    decision 0.3630    set_bounds 0.4952    solve 1.2900    add 0.0455    
Accumulated time: pickout 0.5662    decision 1.9455    set_bounds 1.9261    solve 7.1964    add 0.9084    
Current (lb-rhs): -0.06083688139915466
31360 domains visited
Cumulative time: 18.662691116333008

BaB round 20
batch: 7317
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1465] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1465] [/input-8, 1465] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06566834449768066
10 lb beta sum: 1.0149872303009033, worst -0.05557429790496826
Time: prepare 0.3897    bound 0.8524    transfer 0.0597    finalize 0.3180    func 1.7169    
Accumulated time: func 8.7265    prepare 2.0826    bound 5.3668    transfer 0.2444    finalize 0.6163    
all_split False
======================Cut inference begins======================
max lb tensor(0.01553309) min lb tensor(-0.05549371)
Number of Verified Splits: 5895 of 14634
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 26
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 2.136573314666748 
BICCOS Cumulative time: 8.036539316177368
Preprocessing time: 0.48298192024230957 Inference time: 1.5493409633636475 Add cuts time: 0.10317659378051758 Cut analysis time: 0.0010738372802734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05549 (35), -0.05284 (35), -0.05282 (35), -0.05236 (35), -0.05199 (35), -0.05104 (35), -0.05019 (35), -0.04972 (35), -0.04970 (35), -0.04933 (35), -0.04933 (35), -0.04929 (35), -0.04928 (35), -0.04910 (35), -0.04885 (35), -0.04856 (35), -0.04841 (35), -0.04839 (35), -0.04793 (35), -0.04752 (35), 
Length of domains: 8739
Time: pickout 0.1756    decision 0.6048    set_bounds 0.3928    solve 1.7203    add 0.0339    
Accumulated time: pickout 0.7418    decision 2.5503    set_bounds 2.3188    solve 8.9167    add 0.9422    
Current (lb-rhs): -0.055493712425231934
40099 domains visited
Cumulative time: 23.786410093307495

BaB round 21
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1514] [/input-8, 1944] [/input-8, 1944] [/input-8, 1944] [/input-8, 1944] [/input-8, 1944] [/input-8, 1944] [/input-8, 1514] [/input-8, 1944] [/input-8, 1944] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1726850271224976, worst -0.05804920196533203
10 lb beta sum: 1.3553247451782227, worst -0.05548286437988281
Time: prepare 0.8713    bound 0.9404    transfer 0.0829    finalize 0.1187    func 2.1215    
Accumulated time: func 10.8479    prepare 2.9542    bound 6.3072    transfer 0.3273    finalize 0.7350    
all_split False
======================Cut inference begins======================
max lb tensor(0.01156795) min lb tensor(-0.05547357)
Number of Verified Splits: 3712 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 27
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 1.712289571762085 
BICCOS Cumulative time: 9.748828887939453
Preprocessing time: 0.5442333221435547 Inference time: 1.1294009685516357 Add cuts time: 0.03769421577453613 Cut analysis time: 0.0009610652923583984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05547 (36), -0.05329 (36), -0.05282 (36), -0.05281 (36), -0.05234 (36), -0.05195 (36), -0.05098 (36), -0.05088 (36), -0.05061 (36), -0.05016 (36), -0.05015 (36), -0.04976 (36), -0.04969 (36), -0.04968 (36), -0.04929 (36), -0.04929 (36), -0.04926 (36), -0.04925 (36), -0.04908 (36), -0.04881 (36), 
Length of domains: 13219
Time: pickout 0.1727    decision 0.4656    set_bounds 0.6497    solve 2.1252    add 0.0592    
Accumulated time: pickout 0.9145    decision 3.0158    set_bounds 2.9686    solve 11.0419    add 1.0015    
Current (lb-rhs): -0.05547356605529785
52771 domains visited
current_vram/total_varm: 28.1GB/99.9GB, batch_size increase to 16384
Cumulative time: 29.0243501663208

BaB round 22
batch: 13219
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1846] [/input-8, 1846] [/input-8, 1846] [/input-8, 1846] [/input-8, 1846] [/input-8, 1846] [/input-8, 1846] [/input-8, 1846] [/input-8, 1846] [/input-8, 1846] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05676388740539551
10 lb beta sum: 0.8084255456924438, worst -0.0521499365568161
Time: prepare 0.7208    bound 1.4802    transfer 0.1350    finalize 0.4253    func 2.9380    
Accumulated time: func 13.7859    prepare 3.6754    bound 7.7874    transfer 0.4623    finalize 1.1603    
all_split False
======================Cut inference begins======================
max lb tensor(0.24898058) min lb tensor(-0.05213696)
Number of Verified Splits: 10071 of 26438
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 28
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 3.696204900741577 
BICCOS Cumulative time: 13.44503378868103
Preprocessing time: 1.1706321239471436 Inference time: 2.4121291637420654 Add cuts time: 0.11236882209777832 Cut analysis time: 0.0010747909545898438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05214 (37), -0.04993 (37), -0.04953 (37), -0.04947 (37), -0.04912 (37), -0.04861 (37), -0.04764 (37), -0.04752 (37), -0.04729 (37), -0.04692 (37), -0.04686 (37), -0.04645 (37), -0.04641 (37), -0.04639 (37), -0.04634 (37), -0.04611 (37), -0.04596 (37), -0.04596 (37), -0.04591 (37), -0.04560 (37), 
Length of domains: 16367
Time: pickout 0.3053    decision 0.7626    set_bounds 0.9573    solve 2.9433    add 0.0902    
Accumulated time: pickout 1.2198    decision 3.7784    set_bounds 3.9259    solve 13.9852    add 1.0916    
Current (lb-rhs): -0.05213695764541626
69138 domains visited
Cumulative time: 37.88862419128418

BaB round 23
batch: 16367
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1475] [/input-8, 1475] [/input-8, 1475] [/input-8, 1475] [/input-8, 1475] [/input-8, 1475] [/input-8, 1475] [/input-8, 140] [/input-8, 140] [/input-8, 1475] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.053050994873046875
10 lb beta sum: 0.8494826555252075, worst -0.04848282039165497
Time: prepare 0.8790    bound 1.8096    transfer 0.1714    finalize 0.2274    func 3.6482    
Accumulated time: func 17.4342    prepare 4.5548    bound 9.5970    transfer 0.6337    finalize 1.3878    
all_split False
======================Cut inference begins======================
max lb tensor(0.48175699) min lb tensor(-0.04847223)
Number of Verified Splits: 18433 of 32734
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 28
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 6.139984130859375 
BICCOS Cumulative time: 19.585017919540405
Preprocessing time: 1.1097979545593262 Inference time: 4.825774908065796 Add cuts time: 0.20329689979553223 Cut analysis time: 0.0011143684387207031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04847 (38), -0.04625 (38), -0.04581 (38), -0.04536 (38), -0.04496 (38), -0.04397 (38), -0.04384 (38), -0.04314 (38), -0.04273 (38), -0.04270 (38), -0.04259 (38), -0.04252 (38), -0.04243 (38), -0.04229 (38), -0.04185 (38), -0.04184 (38), -0.04174 (38), -0.04132 (38), -0.04087 (38), -0.04073 (38), 
Length of domains: 14301
Time: pickout 0.3921    decision 1.2238    set_bounds 1.2026    solve 3.6557    add 0.0688    
Accumulated time: pickout 1.6119    decision 5.0022    set_bounds 5.1285    solve 17.6409    add 1.1604    
Current (lb-rhs): -0.04847222566604614
83439 domains visited
Cumulative time: 50.75682258605957

BaB round 24
batch: 14301
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1303] [/input-8, 1303] [/input-8, 1303] [/input-8, 1303] [/input-8, 1303] [/input-8, 1303] [/input-8, 1303] [/input-8, 1303] [/input-8, 1303] [/input-8, 1303] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0740617513656616, worst -0.04520994424819946
10 lb beta sum: 1.0740617513656616, worst -0.045190632343292236
Time: prepare 1.5184    bound 1.5911    transfer 0.1439    finalize 0.4961    func 3.9371    
Accumulated time: func 21.3713    prepare 6.0737    bound 11.1881    transfer 0.7776    finalize 1.8839    
all_split False
======================Cut inference begins======================
max lb tensor(0.24875242) min lb tensor(-0.04517561)
Number of Verified Splits: 10575 of 28602
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 35
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 4.07102370262146 
BICCOS Cumulative time: 23.656041622161865
Preprocessing time: 1.3353335857391357 Inference time: 2.618467330932617 Add cuts time: 0.1160888671875 Cut analysis time: 0.0011339187622070312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04518 (39), -0.04295 (39), -0.04251 (39), -0.04250 (39), -0.04206 (39), -0.04200 (39), -0.04068 (39), -0.04054 (39), -0.04034 (39), -0.04024 (39), -0.03983 (39), -0.03983 (39), -0.03976 (39), -0.03939 (39), -0.03938 (39), -0.03934 (39), -0.03933 (39), -0.03912 (39), -0.03893 (39), -0.03889 (39), 
Length of domains: 18027
Time: pickout 0.3459    decision 1.1196    set_bounds 0.8099    solve 3.9431    add 0.0904    
Accumulated time: pickout 1.9578    decision 6.1218    set_bounds 5.9383    solve 21.5840    add 1.2508    
Current (lb-rhs): -0.04517561197280884
101466 domains visited
Cumulative time: 61.26474571228027

BaB round 25
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 140] [/input-8, 521] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04549551010131836
10 lb beta sum: 1.207371473312378, worst -0.04058128595352173
Time: prepare 0.8983    bound 2.5382    transfer 0.1582    finalize 0.2371    func 4.0472    
Accumulated time: func 25.4185    prepare 6.9726    bound 13.7263    transfer 0.9357    finalize 2.1210    
all_split False
======================Cut inference begins======================
max lb tensor(0.48308831) min lb tensor(-0.04055250)
Number of Verified Splits: 24291 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 36
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 7.983396291732788 
BICCOS Cumulative time: 31.639437913894653
Preprocessing time: 1.1807763576507568 Inference time: 6.484630823135376 Add cuts time: 0.3164057731628418 Cut analysis time: 0.0015833377838134766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04055 (40), -0.03895 (40), -0.03832 (40), -0.03786 (40), -0.03736 (40), -0.03605 (40), -0.03582 (40), -0.03559 (40), -0.03553 (40), -0.03511 (40), -0.03473 (40), -0.03467 (40), -0.03451 (40), -0.03430 (40), -0.03421 (40), -0.03379 (40), -0.03372 (39), -0.03360 (40), -0.03358 (40), -0.03340 (40), 
Length of domains: 10120
Time: pickout 0.3538    decision 1.7761    set_bounds 1.2910    solve 4.4314    add 0.0809    
Accumulated time: pickout 2.3117    decision 7.8979    set_bounds 7.2294    solve 26.0154    add 1.3317    
Current (lb-rhs): -0.040552496910095215
109943 domains visited
Cumulative time: 77.41614556312561

BaB round 26
batch: 10120
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1437] [/input-8, 1437] [/input-8, 521] [/input-8, 521] [/input-8, 521] [/input-8, 521] [/input-8, 1437] [/input-8, 521] [/input-8, 1437] [/input-8, 521] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04306149482727051
10 lb beta sum: 1.0520182847976685, worst -0.04054799675941467
Time: prepare 0.5456    bound 1.6159    transfer 0.1030    finalize 0.1400    func 2.5410    
Accumulated time: func 27.9595    prepare 7.5187    bound 15.3422    transfer 1.0388    finalize 2.2610    
all_split False
======================Cut inference begins======================
max lb tensor(0.25920403) min lb tensor(-0.04053001)
Number of Verified Splits: 9400 of 20240
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 36
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 3.53826904296875 
BICCOS Cumulative time: 35.1777069568634
Preprocessing time: 1.0651507377624512 Inference time: 2.362712860107422 Add cuts time: 0.10917091369628906 Cut analysis time: 0.0012345314025878906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04053 (41), -0.03892 (41), -0.03829 (41), -0.03784 (41), -0.03734 (41), -0.03669 (41), -0.03624 (41), -0.03602 (41), -0.03573 (41), -0.03557 (41), -0.03551 (41), -0.03510 (41), -0.03472 (41), -0.03467 (41), -0.03448 (41), -0.03441 (41), -0.03429 (41), -0.03397 (41), -0.03376 (41), -0.03357 (41), 
Length of domains: 10840
Time: pickout 0.2357    decision 0.5888    set_bounds 0.8667    solve 2.5471    add 0.1604    
Accumulated time: pickout 2.5474    decision 8.4867    set_bounds 8.0960    solve 28.5625    add 1.4921    
Current (lb-rhs): -0.0405300110578537
120783 domains visited
Cumulative time: 85.4526162147522

BaB round 27
batch: 10840
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 521] [/input-8, 1475] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 521] [/input-8, 521] [/input-8, 521] [/input-8, 1437] [/input-8, 1437] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4792083501815796, worst -0.03782300651073456
10 lb beta sum: 1.4792083501815796, worst -0.0378137081861496
Time: prepare 1.1602    bound 1.7225    transfer 0.1096    finalize 0.4441    func 3.5777    
Accumulated time: func 31.5372    prepare 8.6793    bound 17.0647    transfer 1.1484    finalize 2.7050    
all_split False
======================Cut inference begins======================
max lb tensor(0.08207607) min lb tensor(-0.03779678)
Number of Verified Splits: 12198 of 21680
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 42.
#cuts 1-3: 38
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 4.311021327972412 
BICCOS Cumulative time: 39.488728284835815
Preprocessing time: 0.7455615997314453 Inference time: 3.4663021564483643 Add cuts time: 0.09776878356933594 Cut analysis time: 0.0013887882232666016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03780 (42), -0.03620 (42), -0.03557 (42), -0.03512 (42), -0.03463 (42), -0.03398 (42), -0.03353 (42), -0.03332 (42), -0.03304 (42), -0.03287 (42), -0.03279 (42), -0.03240 (42), -0.03200 (42), -0.03194 (42), -0.03173 (42), -0.03173 (42), -0.03156 (42), -0.03128 (42), -0.03109 (42), -0.03084 (42), 
Length of domains: 9482
Time: pickout 0.2850    decision 0.8522    set_bounds 0.5816    solve 3.5839    add 0.0577    
Accumulated time: pickout 2.8324    decision 9.3389    set_bounds 8.6777    solve 32.1464    add 1.5498    
Current (lb-rhs): -0.037796780467033386
130265 domains visited
Cumulative time: 95.2454879283905

BaB round 28
batch: 9482
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1692] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-8, 1692] [/input-8, 1692] [/input-8, 1692] [/input-12, 25] [/input-12, 25] [/input-12, 25] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03813767433166504
10 lb beta sum: 0.9268175363540649, worst -0.0304509699344635
Time: prepare 0.5402    bound 1.5211    transfer 0.0955    finalize 0.1315    func 2.4144    
Accumulated time: func 33.9516    prepare 9.2199    bound 18.5859    transfer 1.2439    finalize 2.8365    
all_split False
======================Cut inference begins======================
max lb tensor(0.25548577) min lb tensor(-0.03044234)
Number of Verified Splits: 14748 of 18964
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 41
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 4.9705798625946045 
BICCOS Cumulative time: 44.45930814743042
Preprocessing time: 0.6696445941925049 Inference time: 3.8083205223083496 Add cuts time: 0.49123382568359375 Cut analysis time: 0.00138092041015625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03044 (43), -0.02885 (43), -0.02822 (43), -0.02788 (43), -0.02776 (43), -0.02728 (43), -0.02663 (43), -0.02617 (43), -0.02596 (43), -0.02594 (43), -0.02573 (43), -0.02570 (43), -0.02551 (43), -0.02544 (43), -0.02521 (43), -0.02472 (43), -0.02437 (43), -0.02437 (43), -0.02420 (43), -0.02413 (43), 
Length of domains: 4216
Time: pickout 0.2216    decision 0.5508    set_bounds 0.7532    solve 2.7163    add 0.0358    
Accumulated time: pickout 3.0540    decision 9.8897    set_bounds 9.4308    solve 34.8627    add 1.5856    
Current (lb-rhs): -0.030442342162132263
134481 domains visited
Cumulative time: 104.63079357147217

BaB round 29
batch: 4216
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.034607887268066406
10 lb beta sum: 1.5047985315322876, worst -0.02483922243118286
Time: prepare 0.2371    bound 0.7207    transfer 0.0473    finalize 0.0625    func 1.1238    
Accumulated time: func 35.0753    prepare 9.4572    bound 19.3066    transfer 1.2912    finalize 2.8990    
all_split False
======================Cut inference begins======================
max lb tensor(0.47743011) min lb tensor(-0.02481282)
Number of Verified Splits: 6943 of 8432
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 41
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 2.353732109069824 
BICCOS Cumulative time: 46.813040256500244
Preprocessing time: 0.29518675804138184 Inference time: 2.0024306774139404 Add cuts time: 0.05485939979553223 Cut analysis time: 0.0012552738189697266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02481 (44), -0.02323 (44), -0.02240 (44), -0.02215 (44), -0.02188 (44), -0.02082 (44), -0.02056 (44), -0.02034 (44), -0.02029 (44), -0.02014 (44), -0.01981 (44), -0.01972 (44), -0.01946 (44), -0.01921 (44), -0.01878 (44), -0.01874 (44), -0.01858 (44), -0.01855 (44), -0.01821 (44), -0.01813 (44), 
Length of domains: 1489
Time: pickout 0.1078    decision 0.2560    set_bounds 0.2326    solve 1.1260    add 0.0749    
Accumulated time: pickout 3.1618    decision 10.1458    set_bounds 9.6634    solve 35.9887    add 1.6605    
Current (lb-rhs): -0.024812817573547363
135970 domains visited
Cumulative time: 108.84576654434204

BaB round 30
batch: 1489
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 1513] [/input-8, 1513] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5913774967193604, worst -0.024813294410705566
10 lb beta sum: 1.5913774967193604, worst -0.02480018138885498
Time: prepare 0.1591    bound 0.3128    transfer 0.0071    finalize 0.0172    func 0.5166    
Accumulated time: func 35.5919    prepare 9.6166    bound 19.6195    transfer 1.2983    finalize 2.9162    
all_split False
======================Cut inference begins======================
max lb tensor(0.23777199) min lb tensor(-0.02478278)
Number of Verified Splits: 1538 of 2978
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 42
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.5037777423858643 
BICCOS Cumulative time: 47.31681799888611
Preprocessing time: 0.10104036331176758 Inference time: 0.38622164726257324 Add cuts time: 0.01538395881652832 Cut analysis time: 0.0011317729949951172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02478 (45), -0.02320 (45), -0.02238 (45), -0.02213 (45), -0.02186 (45), -0.02078 (45), -0.02054 (45), -0.02029 (45), -0.02027 (45), -0.02013 (45), -0.01978 (45), -0.01969 (45), -0.01945 (45), -0.01919 (45), -0.01875 (45), -0.01872 (45), -0.01856 (45), -0.01853 (45), -0.01819 (45), -0.01810 (45), 
Length of domains: 1440
Time: pickout 0.0472    decision 0.0997    set_bounds 0.0781    solve 0.5172    add 0.1002    
Accumulated time: pickout 3.2089    decision 10.2455    set_bounds 9.7415    solve 36.5059    add 1.7607    
Current (lb-rhs): -0.024782776832580566
137410 domains visited
Cumulative time: 110.21088480949402

BaB round 31
batch: 1440
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.029693603515625
10 lb beta sum: 0.8028641939163208, worst -0.022025734186172485
Time: prepare 0.0759    bound 0.3017    transfer 0.0077    finalize 0.0180    func 0.4218    
Accumulated time: func 36.0137    prepare 9.6927    bound 19.9211    transfer 1.3060    finalize 2.9342    
all_split False
======================Cut inference begins======================
max lb tensor(0.24991471) min lb tensor(-0.02201922)
Number of Verified Splits: 1841 of 2880
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 42
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.585460901260376 
BICCOS Cumulative time: 47.902278900146484
Preprocessing time: 0.09254860877990723 Inference time: 0.47529006004333496 Add cuts time: 0.016559362411499023 Cut analysis time: 0.0010628700256347656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02202 (46), -0.02044 (46), -0.01961 (46), -0.01936 (46), -0.01909 (46), -0.01802 (46), -0.01777 (46), -0.01753 (46), -0.01750 (46), -0.01737 (46), -0.01699 (46), -0.01692 (46), -0.01667 (46), -0.01641 (46), -0.01598 (46), -0.01594 (46), -0.01579 (46), -0.01577 (46), -0.01543 (46), -0.01534 (46), 
Length of domains: 1039
Time: pickout 0.0373    decision 0.0951    set_bounds 0.0740    solve 0.4228    add 0.0108    
Accumulated time: pickout 3.2462    decision 10.3406    set_bounds 9.8155    solve 36.9288    add 1.7714    
Current (lb-rhs): -0.022019222378730774
138449 domains visited
Cumulative time: 111.45457148551941

BaB round 32
batch: 1039
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] [/input-8, 1513] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2929240465164185, worst -0.022019222378730774
10 lb beta sum: 1.2929240465164185, worst -0.022023752331733704
Time: prepare 0.1077    bound 0.2421    transfer 0.0154    finalize 0.0141    func 0.3929    
Accumulated time: func 36.4066    prepare 9.8006    bound 20.1633    transfer 1.3214    finalize 2.9483    
all_split False
======================Cut inference begins======================
max lb tensor(0.25003588) min lb tensor(-0.02201469)
Number of Verified Splits: 981 of 2078
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 42
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.3344402313232422 
BICCOS Cumulative time: 48.23671913146973
Preprocessing time: 0.06706690788269043 Inference time: 0.2563467025756836 Add cuts time: 0.010004043579101562 Cut analysis time: 0.0010225772857666016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02201 (47), -0.02043 (47), -0.01960 (47), -0.01935 (47), -0.01908 (47), -0.01802 (47), -0.01776 (47), -0.01752 (47), -0.01749 (47), -0.01736 (47), -0.01699 (47), -0.01692 (47), -0.01666 (47), -0.01641 (47), -0.01641 (47), -0.01598 (47), -0.01593 (47), -0.01578 (47), -0.01576 (47), -0.01543 (47), 
Length of domains: 1097
Time: pickout 0.0292    decision 0.0727    set_bounds 0.1760    solve 0.3940    add 0.0113    
Accumulated time: pickout 3.2754    decision 10.4133    set_bounds 9.9916    solve 37.3228    add 1.7827    
Current (lb-rhs): -0.022014692425727844
139546 domains visited
Cumulative time: 112.48160290718079

BaB round 33
batch: 1097
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input-8, 1437] [/input, 2007] [/input, 726] [/input-8, 1437] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2848724126815796, worst -0.017127588391304016
10 lb beta sum: 1.2848724126815796, worst -0.017135217785835266
Time: prepare 0.1133    bound 0.2495    transfer 0.0040    finalize 0.0137    func 0.3949    
Accumulated time: func 36.8015    prepare 9.9141    bound 20.4128    transfer 1.3254    finalize 2.9620    
all_split False
======================Cut inference begins======================
max lb tensor(0.23805046) min lb tensor(-0.01712759)
Number of Verified Splits: 1291 of 2194
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 42
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.4348413944244385 
BICCOS Cumulative time: 48.671560525894165
Preprocessing time: 0.07081961631774902 Inference time: 0.35151219367980957 Add cuts time: 0.01146078109741211 Cut analysis time: 0.0010488033294677734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01713 (48), -0.01626 (48), -0.01554 (48), -0.01472 (48), -0.01468 (48), -0.01462 (48), -0.01419 (48), -0.01416 (48), -0.01383 (48), -0.01333 (48), -0.01313 (48), -0.01303 (48), -0.01263 (48), -0.01261 (48), -0.01258 (48), -0.01247 (48), -0.01225 (48), -0.01219 (48), -0.01210 (48), -0.01182 (48), 
Length of domains: 903
Time: pickout 0.0288    decision 0.0753    set_bounds 0.0527    solve 0.3959    add 0.0066    
Accumulated time: pickout 3.3041    decision 10.4886    set_bounds 10.0442    solve 37.7187    add 1.7893    
Current (lb-rhs): -0.017127588391304016
140449 domains visited
Cumulative time: 113.48915696144104

BaB round 34
batch: 903
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2007] [/input-8, 145] [/input, 140] [/input, 140] [/input-8, 145] [/input, 2007] [/input, 2007] [/input, 140] [/input-8, 1694] [/input-8, 2011] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1964101791381836, worst -0.01362641155719757
10 lb beta sum: 1.1964101791381836, worst -0.013611391186714172
Time: prepare 0.0925    bound 0.2238    transfer 0.0095    finalize 0.1405    func 0.4782    
Accumulated time: func 37.2797    prepare 10.0068    bound 20.6366    transfer 1.3349    finalize 3.1025    
all_split False
======================Cut inference begins======================
max lb tensor(0.24237704) min lb tensor(-0.01359637)
Number of Verified Splits: 1224 of 1806
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 47.
#cuts 1-3: 43
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.39957284927368164 
BICCOS Cumulative time: 49.07113337516785
Preprocessing time: 0.0590667724609375 Inference time: 0.3277003765106201 Add cuts time: 0.011614561080932617 Cut analysis time: 0.0011911392211914062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01360 (49), -0.01272 (49), -0.01201 (49), -0.01135 (49), -0.01118 (49), -0.01114 (49), -0.01109 (49), -0.01100 (49), -0.01064 (49), -0.01048 (49), -0.01030 (49), -0.01007 (49), -0.00975 (49), -0.00959 (49), -0.00951 (49), -0.00943 (49), -0.00941 (49), -0.00928 (49), -0.00906 (49), -0.00905 (49), 
Length of domains: 582
Time: pickout 0.0249    decision 0.0659    set_bounds 0.0448    solve 0.4786    add 0.0251    
Accumulated time: pickout 3.3291    decision 10.5545    set_bounds 10.0891    solve 38.1973    add 1.8144    
Current (lb-rhs): -0.013596370816230774
141031 domains visited
Cumulative time: 114.53824996948242

BaB round 35
batch: 582
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 145] [/input, 140] [/input-8, 145] [/input-8, 2011] [/input, 140] [/input-8, 2011] [/input, 2007] [/input-8, 145] [/input-8, 145] [/input-8, 145] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.012979269027709961
10 lb beta sum: 0.4798780083656311, worst -0.010433346033096313
Time: prepare 0.0299    bound 0.1759    transfer 0.0019    finalize 0.0069    func 0.2229    
Accumulated time: func 37.5026    prepare 10.0369    bound 20.8126    transfer 1.3368    finalize 3.1094    
all_split False
======================Cut inference begins======================
max lb tensor(0.24590832) min lb tensor(-0.01039986)
Number of Verified Splits: 996 of 1164
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 51.
#cuts 1-3: 47
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.31190943717956543 
BICCOS Cumulative time: 49.38304281234741
Preprocessing time: 0.03638339042663574 Inference time: 0.2659773826599121 Add cuts time: 0.008292436599731445 Cut analysis time: 0.0012562274932861328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01040 (50), -0.00950 (50), -0.00882 (50), -0.00863 (50), -0.00842 (50), -0.00797 (50), -0.00796 (50), -0.00791 (50), -0.00778 (50), -0.00708 (50), -0.00708 (50), -0.00705 (50), -0.00683 (50), -0.00639 (50), -0.00636 (50), -0.00623 (50), -0.00621 (50), -0.00619 (50), -0.00615 (50), -0.00598 (50), 
Length of domains: 168
Time: pickout 0.0172    decision 0.0480    set_bounds 0.0286    solve 0.2231    add 0.0021    
Accumulated time: pickout 3.3463    decision 10.6025    set_bounds 10.1177    solve 38.4204    add 1.8165    
Current (lb-rhs): -0.010399863123893738
141199 domains visited
Cumulative time: 115.17682647705078

BaB round 36
batch: 168
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 140] [/input, 140] [/input, 140] [/input, 140] [/input, 2007] [/input, 2007] [/input, 2007] [/input, 2007] [/input-8, 145] [/input-8, 145] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.01025247573852539
10 lb beta sum: 0.5637362599372864, worst -0.0053733885288238525
Time: prepare 0.0088    bound 0.1644    transfer 0.0007    finalize 0.0022    func 0.1783    
Accumulated time: func 37.6809    prepare 10.0460    bound 20.9769    transfer 1.3376    finalize 3.1116    
all_split False
======================Cut inference begins======================
max lb tensor(0.24816513) min lb tensor(-0.00535540)
Number of Verified Splits: 290 of 336
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.09508419036865234 
BICCOS Cumulative time: 49.478127002716064
Preprocessing time: 0.010772705078125 Inference time: 0.0822744369506836 Add cuts time: 0.001768350601196289 Cut analysis time: 0.00026869773864746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00536 (51), -0.00444 (51), -0.00408 (51), -0.00376 (51), -0.00369 (51), -0.00331 (51), -0.00293 (51), -0.00293 (51), -0.00285 (51), -0.00250 (51), -0.00249 (51), -0.00242 (51), -0.00210 (51), -0.00203 (51), -0.00203 (51), -0.00201 (51), -0.00173 (51), -0.00164 (51), -0.00162 (51), -0.00161 (51), 
Length of domains: 46
Time: pickout 0.0055    decision 0.0230    set_bounds 0.0088    solve 0.1784    add 0.0013    
Accumulated time: pickout 3.3518    decision 10.6255    set_bounds 10.1265    solve 38.5988    add 1.8179    
Current (lb-rhs): -0.005355402827262878
141245 domains visited
Cumulative time: 115.49151229858398

BaB round 37
batch: 46
splitting decisions: 
split level 0: [/input, 140] [/input, 140] [/input, 140] [/input, 140] [/input, 140] [/input, 140] [/input, 140] [/input, 140] [/input, 140] [/input-8, 2011] 
split level 1: [/input, 2385] [/input, 2385] [/input, 2385] [/input, 2385] [/input, 2385] [/input, 2385] [/input, 2385] [/input, 2385] [/input, 2385] [/input, 2385] 
split level 2: [/input, 2019] [/input, 2019] [/input, 2019] [/input, 2019] [/input, 2019] [/input, 2019] [/input, 2019] [/input, 2019] [/input, 2019] [/input, 2019] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.00010919570922851562

all verified at 0th iter
Time: prepare 0.0103    bound 0.0050    transfer 0.0038    finalize 0.0026    func 0.0242    
Accumulated time: func 37.7051    prepare 10.0565    bound 20.9820    transfer 1.3414    finalize 3.1142    
all_split False
======================Cut inference begins======================
max lb tensor(0.03420186) min lb tensor(0.00010920)
Number of Verified Splits: 368 of 368
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010889530181884766 
BICCOS Cumulative time: 49.48901653289795
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0022    decision 0.0230    set_bounds 0.0163    solve 0.0243    add 0.0001    
Accumulated time: pickout 3.3540    decision 10.6485    set_bounds 10.1428    solve 38.6230    add 1.8179    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
141245 domains visited
Cumulative time: 115.57066416740417


Properties batch 6, size 1
Remaining timeout: 77.91505336761475
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 77.91489291191101
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 77.9148621559143
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 122.0853 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 189, vnnlib ID: 189 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.61507988, -30.24853897, -23.50567436, -25.65552139, -22.13437843,
         -26.01538086, -24.96912766, -28.31740570, -29.89220047, -29.66842651]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [566]; unstable size 566; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 566] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 44, 1, 566] with unstable size 43 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 566] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 44, 1, 275] with unstable size 43 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [43]; unstable size 43; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.24731708,  3.83243752, -0.92027271,  1.00570893,  0.89671516,
         -0.28578144,  2.85452366,  4.16470432,  3.12802839]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.61507988, -30.24853897, -23.50567436, -25.65552139, -22.13437843,
         -26.01538086, -24.96912766, -28.31740570, -29.89220047, -29.66842651]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.18it/s]100%|██████████| 1/1 [00:00<00:00,  8.17it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.35709000, -30.17152596, -23.13409996, -25.96752930, -22.86093330,
          -26.41777420, -25.03559875, -28.83515739, -29.96171570, -29.87278748],
         [-27.35709000, -30.17152596, -23.13409996, -25.96752930, -22.86093330,
          -26.41777420, -25.03559875, -28.83515739, -29.96171570, -29.87278748]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.27316666, 2.17466545]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1257 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 18.43026351928711
alpha/beta optimization time: 1.2953426837921143
initial alpha-crown bounds: tensor([[ 2.41660404,  4.04277134, -0.76903784,  1.13998985,  1.02025962,
         -0.14029711,  3.00312185,  4.39380884,  3.32304144]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.7690378427505493
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.54465103149414
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.544606924057
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.54458165168762
Verifying property 2 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.76903784]], device='cuda:0') need to verify.
Model prediction is: tensor([-27.61507988, -30.24853897, -23.50567436, -25.65552139, -22.13437843,
        -26.01538086, -24.96912766, -28.31740570, -29.89220047, -29.66842651],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.76903784]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 566
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 269
Node /15 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 876
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010347366333007812
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7690352201461792
10 lb beta sum: 0.0, worst -0.7690492868423462
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0563    transfer 0.0001    finalize 0.0002    func 0.0568    
Accumulated time: func 0.0568    prepare 0.0002    bound 0.0563    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] 
split level 1: [/input-12, 57] 
split level 2: [/input-12, 7] 
split level 3: [/input-12, 51] 
split level 4: [/input-12, 28] 
split level 5: [/input-12, 48] 
split level 6: [/input-12, 65] 
split level 7: [/input-12, 10] 
split level 8: [/input-12, 50] 
split level 9: [/input-12, 84] 
split level 10: [/input-12, 14] 
split level 11: [/input-12, 85] 
split level 12: [/input-12, 46] 
split level 13: [/input-12, 97] 
split level 14: [/input-12, 45] 
split level 15: [/input-8, 549] 
split level 16: [/input-12, 87] 
split level 17: [/input-12, 74] 
split level 18: [/input-12, 16] 
split level 19: [/input-12, 25] 
split level 20: [/input-8, 539] 
split level 21: [/input-12, 47] 
split level 22: [/input-8, 1589] 
split level 23: [/input-8, 1609] 
split level 24: [/input-8, 1969] 
split level 25: [/input-8, 540] 
split level 26: [/input-12, 31] 
split level 27: [/input-8, 1566] 
split level 28: [/input-8, 1554] 
split level 29: [/input-8, 1308] 
split level 30: [/input-8, 1674] 
split level 31: [/input-8, 1675] 
split level 32: [/input-8, 1929] 
split level 33: [/input-8, 708] 
split level 34: [/input-8, 1676] 
split level 35: [/input-8, 1541] 
split level 36: [/input-12, 6] 
split level 37: [/input-8, 498] 
split level 38: [/input-8, 1859] 
split level 39: [/input, 3252] 
split level 40: [/input-8, 1883] 
split level 41: [/input-8, 502] 
split level 42: [/input-8, 566] 
split level 43: [/input-8, 1921] 
split level 44: [/input-8, 542] 
split level 45: [/input, 3253] 
split level 46: [/input-8, 1573] 
split level 47: [/input-8, 563] 
split level 48: [/input-8, 620] 
split level 49: [/input-8, 706] 
split level 50: [/input-8, 729] 
split level 51: [/input-8, 594] 
split level 52: [/input-8, 585] 
split level 53: [/input-8, 1060] 
split level 54: [/input-8, 562] 
split level 55: [/input-8, 712] 
split level 56: [/input-12, 37] 
split level 57: [/input-8, 328] 
split level 58: [/input-8, 1599] 
split level 59: [/input-8, 148] 
split level 60: [/input-8, 1574] 
split level 61: [/input-8, 612] 
split level 62: [/input-8, 1586] 
split level 63: [/input-8, 561] 
split level 64: [/input-8, 694] 
split level 65: [/input-8, 1429] 
split level 66: [/input-8, 503] 
split level 67: [/input-8, 617] 
split level 68: [/input-8, 601] 
split level 69: [/input-8, 1363] 
split level 70: [/input-8, 1978] 
split level 71: [/input-8, 675] 
split level 72: [/input, 1923] 
split level 73: [/input, 2180] 
split level 74: [/input-8, 292] 
split level 75: [/input, 2471] 
split level 76: [/input-8, 567] 
split level 77: [/input, 2485] 
split level 78: [/input-8, 944] 
split level 79: [/input-8, 1453] 
split level 80: [/input-8, 1814] 
split level 81: [/input-8, 551] 
split level 82: [/input, 3205] 
split level 83: [/input-8, 488] 
split level 84: [/input-8, 819] 
split level 85: [/input, 1687] 
split level 86: [/input-8, 1427] 
split level 87: [/input-8, 758] 
split level 88: [/input, 2210] 
split level 89: [/input-8, 1494] 
split level 90: [/input-8, 1907] 
split level 91: [/input, 4072] 
split level 92: [/input, 2755] 
split level 93: [/input, 1111] 
split level 94: [/input, 3929] 
split level 95: [/input-8, 1894] 
split level 96: [/input-8, 590] 
split level 97: [/input-12, 44] 
split level 98: [/input, 2458] 
split level 99: [/input-8, 1971] 
split level 100: [/input-8, 1537] 
split level 101: [/input-8, 512] 
split level 102: [/input, 2489] 
split level 103: [/input, 996] 
split level 104: [/input, 1977] 
split level 105: [/input-8, 1037] 
split level 106: [/input, 216] 
split level 107: [/input-8, 1991] 
split level 108: [/input-8, 1751] 
split level 109: [/input, 3953] 
split level 110: [/input, 201] 
split level 111: [/input, 2721] 
split level 112: [/input, 2482] 
split level 113: [/input, 1803] 
split level 114: [/input-8, 1051] 
split level 115: [/input, 2519] 
split level 116: [/input, 215] 
split level 117: [/input, 3969] 
split level 118: [/input-8, 1544] 
split level 119: [/input, 1049] 
split level 120: [/input, 173] 
split level 121: [/input, 2208] 
split level 122: [/input, 1670] 
split level 123: [/input, 3497] 
split level 124: [/input-8, 625] 
split level 125: [/input-8, 766] 
split level 126: [/input-8, 1532] 
split level 127: [/input, 1702] 
split level 128: [/input-8, 1593] 
split level 129: [/input, 2706] 
split level 130: [/input, 3284] 
split level 131: [/input-8, 1417] 
split level 132: [/input, 299] 
split level 133: [/input, 1672] 
split level 134: [/input-8, 392] 
split level 135: [/input-8, 2007] 
split level 136: [/input, 2718] 
split level 137: [/input-8, 938] 
split level 138: [/input, 588] 
split level 139: [/input, 183] 
split level 140: [/input-8, 1837] 
split level 141: [/input, 115] 
split level 142: [/input, 1671] 
split level 143: [/input-8, 1284] 
split level 144: [/input-8, 1604] 
split level 145: [/input-8, 1034] 
split level 146: [/input, 3914] 
split level 147: [/input-8, 1510] 
split level 148: [/input, 4043] 
split level 149: [/input, 2006] 
split level 150: [/input, 604] 
split level 151: [/input, 275] 
split level 152: [/input, 2238] 
split level 153: [/input, 1170] 
split level 154: [/input, 571] 
split level 155: [/input-8, 1269] 
split level 156: [/input-8, 1979] 
split level 157: [/input, 2479] 
split level 158: [/input, 1198] 
split level 159: [/input, 1686] 
split level 160: [/input, 289] 
split level 161: [/input, 2258] 
split level 162: [/input, 4094] 
split level 163: [/input-8, 1045] 
split level 164: [/input-8, 605] 
split level 165: [/input-8, 1989] 
split level 166: [/input, 2766] 
split level 167: [/input, 308] 
split level 168: [/input-8, 1928] 
split level 169: [/input, 1010] 
split level 170: [/input, 1193] 
split level 171: [/input, 3687] 
split level 172: [/input-8, 1489] 
split level 173: [/input, 2506] 
split level 174: [/input, 130] 
split level 175: [/input, 182] 
split level 176: [/input, 3970] 
split level 177: [/input-8, 1951] 
split level 178: [/input-8, 657] 
split level 179: [/input, 878] 
split level 180: [/input-8, 1896] 
split level 181: [/input-8, 1904] 
split level 182: [/input, 2531] 
split level 183: [/input, 1975] 
split level 184: [/input, 2072] 
split level 185: [/input, 2874] 
split level 186: [/input, 2523] 
split level 187: [/input-8, 1421] 
split level 188: [/input-8, 319] 
split level 189: [/input, 754] 
split level 190: [/input, 1373] 
split level 191: [/input-8, 1418] 
split level 192: [/input, 1978] 
split level 193: [/input-8, 471] 
split level 194: [/input, 168] 
split level 195: [/input, 181] 
split level 196: [/input, 1194] 
split level 197: [/input, 2869] 
split level 198: [/input, 2548] 
split level 199: [/input-8, 1887] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7689833641052246
10 lb beta sum: 0.0, worst -0.7689383029937744
Time: prepare 0.0113    bound 0.1101    transfer 0.0017    finalize 0.0030    func 0.1287    
Accumulated time: func 0.1855    prepare 0.0215    bound 0.1664    transfer 0.0018    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.23393488) min lb tensor(-0.76890910)
Number of Verified Splits: 5 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.0113372802734375 
BICCOS Cumulative time: 0.0113372802734375
Preprocessing time: 0.010320425033569336 Inference time: 0.00023436546325683594 Add cuts time: 9.179115295410156e-05 Cut analysis time: 0.0006906986236572266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.73754 (1), -0.73714 (1), -0.73710 (1), -0.73596 (1), -0.73584 (1), -0.73538 (1), -0.73522 (1), -0.73494 (1), -0.73436 (1), -0.73394 (1), -0.73273 (1), -0.73251 (1), -0.73213 (1), -0.73191 (1), -0.72994 (1), -0.72864 (1), -0.72847 (1), -0.72820 (1), -0.72805 (1), -0.72687 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5394    set_bounds 0.0087    solve 0.1288    add 0.0821    
Accumulated time: pickout 0.0004    decision 0.5394    set_bounds 0.0087    solve 0.1288    add 0.0821    
Current (lb-rhs): -0.7375409603118896
50 domains visited
Cumulative time: 0.8325388431549072

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] 
split level 1: [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 48] [/input-12, 28] [/input-12, 28] 
split level 2: [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 65] [/input-12, 65] [/input-12, 48] [/input-12, 65] [/input-12, 48] [/input-12, 48] 
split level 3: [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 10] [/input-12, 10] [/input-12, 65] [/input-12, 10] [/input-12, 65] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7282947301864624
10 lb beta sum: 0.9284806847572327, worst -0.6736488938331604
Time: prepare 0.0070    bound 0.1263    transfer 0.0008    finalize 0.0028    func 0.1395    
Accumulated time: func 0.3250    prepare 0.0288    bound 0.2926    transfer 0.0026    finalize 0.0059    
all_split False
======================Cut inference begins======================
max lb tensor(0.78817272) min lb tensor(-0.67359161)
Number of Verified Splits: 73 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 11
#cuts >= 20: 0
BICCOS time: 0.016775131225585938 
BICCOS Cumulative time: 0.028112411499023438
Preprocessing time: 0.011872529983520508 Inference time: 0.002853870391845703 Add cuts time: 0.0016758441925048828 Cut analysis time: 0.00037288665771484375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.32882 (2), -0.32713 (2), -0.32634 (2), -0.32544 (2), -0.31918 (2), -0.31710 (2), -0.31543 (2), -0.31152 (2), -0.31110 (2), -0.30972 (2), -0.30583 (2), -0.30551 (2), -0.30383 (2), -0.30282 (2), -0.30116 (2), -0.30040 (2), -0.29894 (2), -0.29766 (2), -0.28152 (2), -0.27652 (2), 
Length of domains: 50
Time: pickout 0.0013    decision 0.0205    set_bounds 0.0133    solve 0.1396    add 0.0854    
Accumulated time: pickout 0.0017    decision 0.5598    set_bounds 0.0221    solve 0.2684    add 0.1675    
Current (lb-rhs): -0.3288182020187378
100 domains visited
Cumulative time: 1.1097073554992676

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] 
split level 1: [/input-12, 48] [/input-12, 48] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 28] [/input-12, 51] [/input-12, 51] [/input-12, 48] [/input-12, 28] 
split level 2: [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 48] [/input-12, 48] [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 48] 
split level 3: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 65] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.38535642623901367
10 lb beta sum: 1.559240698814392, worst -0.31609034538269043
Time: prepare 0.0063    bound 0.1235    transfer 0.0007    finalize 0.0021    func 0.1352    
Accumulated time: func 0.4602    prepare 0.0353    bound 0.4161    transfer 0.0033    finalize 0.0080    
all_split False
======================Cut inference begins======================
max lb tensor(0.68657649) min lb tensor(-0.31222427)
Number of Verified Splits: 141 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 13
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.022367238998413086 
BICCOS Cumulative time: 0.05047965049743652
Preprocessing time: 0.011744499206542969 Inference time: 0.007221698760986328 Add cuts time: 0.002713441848754883 Cut analysis time: 0.0006875991821289062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06324 (3), -0.06189 (3), -0.06179 (3), -0.06168 (3), -0.05986 (3), -0.05931 (3), -0.05817 (3), -0.05769 (3), -0.05722 (3), -0.05702 (3), -0.05678 (3), -0.05671 (3), -0.05638 (3), -0.05631 (3), -0.05558 (3), -0.05461 (3), -0.05309 (3), -0.05300 (3), -0.04861 (3), -0.04708 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0203    set_bounds 0.0158    solve 0.1352    add 0.0947    
Accumulated time: pickout 0.0027    decision 0.5801    set_bounds 0.0379    solve 0.4036    add 0.2622    
Current (lb-rhs): -0.06323790550231934
150 domains visited
Cumulative time: 1.399364948272705

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] [/input-12, 66] 
split level 1: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 48] [/input-12, 48] 
split level 2: [/input-12, 65] [/input-12, 28] [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 65] [/input-12, 48] [/input-12, 65] [/input-12, 65] [/input-12, 65] 
split level 3: [/input-12, 50] [/input-12, 10] [/input-12, 50] [/input-12, 50] [/input-12, 10] [/input-12, 50] [/input-12, 65] [/input-12, 10] [/input-12, 50] [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1354048252105713
10 lb beta sum: 1.2912728786468506, worst -0.1122329831123352
Time: prepare 0.0063    bound 0.1287    transfer 0.0008    finalize 0.0025    func 0.1410    
Accumulated time: func 0.6012    prepare 0.0419    bound 0.5448    transfer 0.0041    finalize 0.0106    
all_split False
======================Cut inference begins======================
max lb tensor(0.84556890) min lb tensor(0.00153583)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 17
#cuts 4-6: 23
#cuts >= 20: 0
BICCOS time: 0.04238605499267578 
BICCOS Cumulative time: 0.0928657054901123
Preprocessing time: 0.01170039176940918 Inference time: 0.020361900329589844 Add cuts time: 0.009188175201416016 Cut analysis time: 0.0011355876922607422
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0212    set_bounds 0.0153    solve 0.1410    add 0.0260    
Accumulated time: pickout 0.0038    decision 0.6014    set_bounds 0.0532    solve 0.5447    add 0.2882    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 66] 
split level 1: [/input-12, 7] 
split level 2: [/input-12, 51] 
split level 3: [/input-12, 28] 
split level 4: [/input-12, 48] 
split level 5: [/input-12, 65] 
split level 6: [/input-12, 10] 
split level 7: [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32259804010391235
10 lb beta sum: 0.2846442461013794, worst -0.2782246470451355
Time: prepare 0.0036    bound 0.1399    transfer 0.0010    finalize 0.0013    func 0.1476    
Accumulated time: func 0.7487    prepare 0.0459    bound 0.6847    transfer 0.0052    finalize 0.0119    
all_split False
======================Cut inference begins======================
max lb tensor(1.55203640) min lb tensor(-0.27801949)
Number of Verified Splits: 246 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6256593465805054
10 lb beta sum: 1.9371448755264282, worst -0.5813707113265991
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 15
#cuts 4-6: 23
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.4135615825653076 
BICCOS Cumulative time: 0.5064272880554199
Preprocessing time: 0.006474494934082031 Inference time: 0.39908289909362793 Add cuts time: 0.00681757926940918 Cut analysis time: 0.0011866092681884766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27802 (8), -0.23734 (8), -0.17770 (8), -0.16809 (8), -0.12607 (8), -0.11430 (8), -0.09296 (8), -0.08249 (8), -0.07782 (8), -0.03139 (8), 
Length of domains: 10
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0169    solve 0.1476    add 0.0010    
Accumulated time: pickout 0.0042    decision 0.6243    set_bounds 0.0701    solve 0.6923    add 0.2892    
Current (lb-rhs): -0.2780194878578186
160 domains visited
Cumulative time: 2.254256010055542

BaB round 2
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] 
split level 1: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] 
split level 2: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
split level 3: [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] [/input-12, 87] 
split level 4: [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] 
cut re-enabled after branching node selection
0 lb beta sum: 1.7671985626220703, worst -0.4307211637496948
10 lb beta sum: 1.8049923181533813, worst -0.1515864133834839
Time: prepare 0.0127    bound 0.1423    transfer 0.0033    finalize 0.0018    func 0.1624    
Accumulated time: func 0.9111    prepare 0.0589    bound 0.8270    transfer 0.0085    finalize 0.0137    
all_split False
======================Cut inference begins======================
max lb tensor(0.76147354) min lb tensor(-0.15141106)
Number of Verified Splits: 299 of 320
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 1.7693455219268799, worst -0.5289663076400757
10 lb beta sum: 2.0338244438171387, worst -0.2995814085006714
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 90.
#cuts 1-3: 15
#cuts 4-6: 26
#cuts 7-9: 41
#cuts 10-12: 8
#cuts >= 20: 0
BICCOS time: 0.37940025329589844 
BICCOS Cumulative time: 0.8858275413513184
Preprocessing time: 0.009639501571655273 Inference time: 0.3406212329864502 Add cuts time: 0.024724245071411133 Cut analysis time: 0.004415273666381836
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15141 (13), -0.15124 (13), -0.11132 (13), -0.10901 (13), -0.08195 (13), -0.07988 (13), -0.05265 (13), -0.04813 (13), -0.04781 (13), -0.04618 (13), -0.04588 (13), -0.04497 (13), -0.03902 (13), -0.03571 (13), -0.03500 (13), -0.02862 (13), -0.01425 (13), -0.01342 (13), -0.01069 (13), -0.00607 (13), 
Length of domains: 21
Time: pickout 0.0012    decision 0.0170    set_bounds 0.0203    solve 0.1624    add 0.0012    
Accumulated time: pickout 0.0054    decision 0.6413    set_bounds 0.0903    solve 0.8547    add 0.2903    
Current (lb-rhs): -0.1514110565185547
181 domains visited
Cumulative time: 2.838101625442505

BaB round 3
batch: 21
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 1: [/input-12, 47] [/input-8, 539] [/input-8, 539] [/input-12, 47] [/input-8, 539] [/input-8, 539] [/input-8, 539] [/input-8, 539] [/input-8, 539] [/input-12, 47] 
split level 2: [/input-8, 539] [/input-12, 47] [/input-12, 47] [/input-8, 539] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-12, 47] [/input-8, 539] 
split level 3: [/input-12, 6] [/input-12, 6] [/input-8, 1676] [/input-8, 1883] [/input-8, 1676] [/input-8, 1921] [/input-8, 1676] [/input-8, 1676] [/input-8, 1676] [/input-12, 6] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0971643328666687
10 lb beta sum: 0.2501579523086548, worst -0.08276957273483276
Time: prepare 0.0067    bound 0.1427    transfer 0.0013    finalize 0.0027    func 0.1557    
Accumulated time: func 1.0668    prepare 0.0659    bound 0.9697    transfer 0.0099    finalize 0.0164    
all_split False
======================Cut inference begins======================
max lb tensor(0.19090655) min lb tensor(-0.08262047)
Number of Verified Splits: 302 of 336
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 19
#cuts >= 20: 0
BICCOS time: 0.05162668228149414 
BICCOS Cumulative time: 0.9374542236328125
Preprocessing time: 0.010410070419311523 Inference time: 0.03510165214538574 Add cuts time: 0.005612850189208984 Cut analysis time: 0.0005021095275878906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08262 (17), -0.08247 (17), -0.07847 (17), -0.07816 (17), -0.05917 (17), -0.05822 (17), -0.05513 (17), -0.05408 (17), -0.05133 (17), -0.04852 (17), -0.04831 (17), -0.04551 (17), -0.04530 (17), -0.04204 (17), -0.04110 (17), -0.03727 (17), -0.02503 (17), -0.02236 (17), -0.02152 (17), -0.01864 (17), 
Length of domains: 34
Time: pickout 0.0014    decision 0.0179    set_bounds 0.0253    solve 0.1558    add 0.0013    
Accumulated time: pickout 0.0068    decision 0.6591    set_bounds 0.1157    solve 1.0106    add 0.2916    
Current (lb-rhs): -0.08262047171592712
215 domains visited
Cumulative time: 3.093329906463623

BaB round 4
batch: 34
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-8, 1676] [/input-12, 25] [/input-12, 6] [/input-12, 25] [/input-12, 25] [/input-12, 6] [/input-8, 1676] 
split level 1: [/input-8, 1883] [/input-8, 1883] [/input-8, 1883] [/input-12, 6] [/input-8, 1676] [/input-8, 1883] [/input-12, 6] [/input-8, 1676] [/input-8, 1883] [/input-12, 6] 
split level 2: [/input-8, 1921] [/input-8, 1921] [/input-8, 1921] [/input-8, 1883] [/input-8, 1883] [/input-8, 1921] [/input-8, 1921] [/input-8, 1883] [/input-8, 1921] [/input-8, 1883] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.058436572551727295
10 lb beta sum: 0.6084632277488708, worst -0.043677330017089844
Time: prepare 0.0055    bound 0.1247    transfer 0.0016    finalize 0.0017    func 0.1352    
Accumulated time: func 1.2020    prepare 0.0716    bound 1.0944    transfer 0.0115    finalize 0.0181    
all_split False
======================Cut inference begins======================
max lb tensor(0.32487118) min lb tensor(-0.04343241)
Number of Verified Splits: 192 of 272
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 23
#cuts >= 20: 0
BICCOS time: 0.035585641860961914 
BICCOS Cumulative time: 0.9730398654937744
Preprocessing time: 0.00803232192993164 Inference time: 0.025626659393310547 Add cuts time: 0.0014140605926513672 Cut analysis time: 0.0005125999450683594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04343 (20), -0.04336 (20), -0.04271 (20), -0.04262 (20), -0.03949 (20), -0.03925 (20), -0.03918 (20), -0.03892 (20), -0.03877 (20), -0.03851 (20), -0.03846 (20), -0.03818 (20), -0.03568 (20), -0.03527 (20), -0.03523 (20), -0.03497 (20), -0.03481 (20), -0.03459 (20), -0.03451 (20), -0.03407 (20), 
Length of domains: 80
Time: pickout 0.0015    decision 0.0162    set_bounds 0.0217    solve 0.1352    add 0.0016    
Accumulated time: pickout 0.0083    decision 0.6754    set_bounds 0.1374    solve 1.1458    add 0.2932    
Current (lb-rhs): -0.043432414531707764
295 domains visited
Cumulative time: 3.306231737136841

BaB round 5
batch: 80
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] [/input-12, 84] 
split level 1: [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] [/input-12, 25] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04335588216781616
10 lb beta sum: 0.41248345375061035, worst -0.03459042310714722
Time: prepare 0.0062    bound 0.1411    transfer 0.0006    finalize 0.0016    func 0.1518    
Accumulated time: func 1.3537    prepare 0.0780    bound 1.2355    transfer 0.0121    finalize 0.0197    
all_split False
======================Cut inference begins======================
max lb tensor(0.47746772) min lb tensor(-0.03450316)
Number of Verified Splits: 282 of 320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 23
#cuts >= 20: 0
BICCOS time: 0.05059647560119629 
BICCOS Cumulative time: 1.0236363410949707
Preprocessing time: 0.009303569793701172 Inference time: 0.0391085147857666 Add cuts time: 0.0015447139739990234 Cut analysis time: 0.0006396770477294922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03450 (22), -0.03444 (22), -0.03395 (22), -0.03385 (22), -0.03067 (22), -0.03032 (22), -0.03022 (22), -0.03012 (22), -0.03012 (22), -0.02974 (22), -0.02967 (22), -0.02953 (22), -0.02638 (22), -0.02601 (22), -0.02583 (22), -0.02542 (22), -0.01377 (22), -0.01267 (22), -0.00979 (22), -0.00955 (22), 
Length of domains: 38
Time: pickout 0.0023    decision 0.0159    set_bounds 0.0144    solve 0.1518    add 0.0017    
Accumulated time: pickout 0.0106    decision 0.6913    set_bounds 0.1518    solve 1.2976    add 0.2949    
Current (lb-rhs): -0.034503161907196045
333 domains visited
Cumulative time: 3.5444295406341553

BaB round 6
batch: 38
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1541] [/input-8, 1541] [/input-8, 1541] [/input-8, 1541] [/input-8, 1541] [/input-8, 1541] [/input-8, 1541] [/input-8, 1541] [/input-8, 1541] [/input-8, 1541] 
split level 1: [/input-8, 566] [/input-8, 566] [/input-8, 566] [/input-8, 566] [/input-8, 566] [/input-8, 566] [/input-8, 566] [/input-8, 566] [/input-8, 566] [/input-8, 566] 
split level 2: [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] 
cut re-enabled after branching node selection
0 lb beta sum: 1.2900835275650024, worst -0.018839240074157715
10 lb beta sum: 1.5282806158065796, worst -0.014190673828125
Time: prepare 0.0137    bound 0.1403    transfer 0.0023    finalize 0.0016    func 0.1599    
Accumulated time: func 1.5136    prepare 0.0920    bound 1.3758    transfer 0.0143    finalize 0.0213    
all_split False
======================Cut inference begins======================
max lb tensor(0.03988296) min lb tensor(-0.01410758)
Number of Verified Splits: 260 of 304
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.04940009117126465 
BICCOS Cumulative time: 1.0730364322662354
Preprocessing time: 0.008987665176391602 Inference time: 0.03908061981201172 Add cuts time: 0.0008251667022705078 Cut analysis time: 0.0005066394805908203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01411 (25), -0.01391 (25), -0.01357 (25), -0.01332 (25), -0.01105 (25), -0.01049 (25), -0.01046 (25), -0.01027 (25), -0.00995 (25), -0.00973 (25), -0.00961 (25), -0.00957 (25), -0.00954 (25), -0.00903 (25), -0.00902 (25), -0.00895 (25), -0.00675 (25), -0.00667 (25), -0.00665 (25), -0.00616 (25), 
Length of domains: 44
Time: pickout 0.0016    decision 0.0183    set_bounds 0.0158    solve 0.1600    add 0.0013    
Accumulated time: pickout 0.0122    decision 0.7096    set_bounds 0.1677    solve 1.4576    add 0.2962    
Current (lb-rhs): -0.014107584953308105
377 domains visited
Cumulative time: 3.792051315307617

BaB round 7
batch: 44
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 540] [/input-8, 540] [/input-8, 540] [/input-8, 540] [/input-8, 540] [/input-8, 540] [/input-8, 540] [/input-8, 540] [/input-8, 540] [/input-8, 540] 
split level 1: [/input-8, 563] [/input-8, 563] [/input-8, 563] [/input-8, 563] [/input-8, 563] [/input-8, 563] [/input-8, 563] [/input-8, 563] [/input-8, 563] [/input-8, 563] 
split level 2: [/input-8, 562] [/input-8, 562] [/input-8, 562] [/input-8, 562] [/input-8, 562] [/input-8, 562] [/input-8, 562] [/input-8, 562] [/input-8, 562] [/input-8, 562] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0016667842864990234

all verified at 1th iter
Time: prepare 0.0067    bound 0.0159    transfer 0.0011    finalize 0.0016    func 0.0277    
Accumulated time: func 1.5414    prepare 0.0989    bound 1.3917    transfer 0.0155    finalize 0.0230    
all_split False
======================Cut inference begins======================
max lb tensor(0.03415650) min lb tensor(0.00025105)
Number of Verified Splits: 352 of 352
No cut inferred: All or none verified.
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.010266304016113281 
BICCOS Cumulative time: 1.0833027362823486
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0017    decision 0.0144    set_bounds 0.0184    solve 0.0278    add 0.0004    
Accumulated time: pickout 0.0139    decision 0.7240    set_bounds 0.1861    solve 1.4855    add 0.2966    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
377 domains visited
Cumulative time: 3.8661956787109375


Properties batch 3, size 1
Remaining timeout: 194.48318123817444
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 194.4830846786499
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 194.4830584526062
Verifying property 5 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.14029711]], device='cuda:0') need to verify.
Model prediction is: tensor([-27.61507988, -30.24853897, -23.50567436, -25.65552139, -22.13437843,
        -26.01538086, -24.96912766, -28.31740570, -29.89220047, -29.66842651],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.14029711]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 566
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 269
Node /15 input 0: size torch.Size([100]) unstable 41
-----------------
# of unstable neurons: 876
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010037422180175781
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14029449224472046
10 lb beta sum: 0.0, worst -0.14031130075454712
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0585    transfer 0.0001    finalize 0.0001    func 0.0590    
Accumulated time: func 0.0590    prepare 0.0002    bound 0.0585    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 44] 
split level 1: [/input-12, 37] 
split level 2: [/input-12, 51] 
split level 3: [/input-12, 87] 
split level 4: [/input-12, 68] 
split level 5: [/input-12, 45] 
split level 6: [/input-12, 6] 
split level 7: [/input-12, 65] 
split level 8: [/input-12, 81] 
split level 9: [/input-12, 25] 
split level 10: [/input-12, 42] 
split level 11: [/input-12, 47] 
split level 12: [/input-8, 1293] 
split level 13: [/input-12, 32] 
split level 14: [/input-12, 66] 
split level 15: [/input-12, 97] 
split level 16: [/input-8, 1675] 
split level 17: [/input-8, 566] 
split level 18: [/input-12, 57] 
split level 19: [/input-8, 364] 
split level 20: [/input-8, 1674] 
split level 21: [/input-12, 28] 
split level 22: [/input-8, 1044] 
split level 23: [/input-8, 162] 
split level 24: [/input-8, 1554] 
split level 25: [/input-8, 706] 
split level 26: [/input-8, 1566] 
split level 27: [/input-8, 1929] 
split level 28: [/input-8, 1837] 
split level 29: [/input-8, 1457] 
split level 30: [/input-12, 10] 
split level 31: [/input-8, 549] 
split level 32: [/input-8, 1035] 
split level 33: [/input-8, 729] 
split level 34: [/input-8, 498] 
split level 35: [/input-8, 1698] 
split level 36: [/input-8, 1284] 
split level 37: [/input-8, 1921] 
split level 38: [/input-8, 567] 
split level 39: [/input-8, 594] 
split level 40: [/input-8, 1859] 
split level 41: [/input-8, 1363] 
split level 42: [/input-8, 1435] 
split level 43: [/input-8, 563] 
split level 44: [/input-8, 1676] 
split level 45: [/input-12, 74] 
split level 46: [/input, 1670] 
split level 47: [/input-8, 1586] 
split level 48: [/input-8, 372] 
split level 49: [/input-8, 1037] 
split level 50: [/input-8, 299] 
split level 51: [/input, 1961] 
split level 52: [/input-8, 539] 
split level 53: [/input, 1687] 
split level 54: [/input-8, 371] 
split level 55: [/input, 1976] 
split level 56: [/input, 3253] 
split level 57: [/input, 2471] 
split level 58: [/input-8, 540] 
split level 59: [/input-8, 1458] 
split level 60: [/input-8, 1989] 
split level 61: [/input-8, 819] 
split level 62: [/input, 2494] 
split level 63: [/input, 1977] 
split level 64: [/input, 2445] 
split level 65: [/input, 3977] 
split level 66: [/input, 216] 
split level 67: [/input, 3929] 
split level 68: [/input, 215] 
split level 69: [/input, 1193] 
split level 70: [/input, 653] 
split level 71: [/input-8, 164] 
split level 72: [/input-8, 1320] 
split level 73: [/input-8, 1991] 
split level 74: [/input, 932] 
split level 75: [/input, 85] 
split level 76: [/input, 171] 
split level 77: [/input, 2460] 
split level 78: [/input, 1242] 
split level 79: [/input, 102] 
split level 80: [/input, 1241] 
split level 81: [/input-8, 1883] 
split level 82: [/input-12, 89] 
split level 83: [/input, 1702] 
split level 84: [/input, 2428] 
split level 85: [/input, 2492] 
split level 86: [/input, 979] 
split level 87: [/input, 1640] 
split level 88: [/input-8, 1045] 
split level 89: [/input-8, 328] 
split level 90: [/input-8, 551] 
split level 91: [/input, 1672] 
split level 92: [/input, 113] 
split level 93: [/input-8, 171] 
split level 94: [/input, 878] 
split level 95: [/input, 2718] 
split level 96: [/input, 675] 
split level 97: [/input, 1686] 
split level 98: [/input, 1883] 
split level 99: [/input, 173] 
split level 100: [/input, 2449] 
split level 101: [/input, 2731] 
split level 102: [/input-8, 512] 
split level 103: [/input, 1671] 
split level 104: [/input, 1816] 
split level 105: [/input-8, 1928] 
split level 106: [/input, 1623] 
split level 107: [/input, 659] 
split level 108: [/input, 2485] 
split level 109: [/input, 2358] 
split level 110: [/input, 2409] 
split level 111: [/input, 2429] 
split level 112: [/input, 2458] 
split level 113: [/input, 2766] 
split level 114: [/input, 2706] 
split level 115: [/input, 2519] 
split level 116: [/input, 898] 
split level 117: [/input-8, 298] 
split level 118: [/input, 168] 
split level 119: [/input-8, 475] 
split level 120: [/input, 201] 
split level 121: [/input, 2006] 
split level 122: [/input, 2482] 
split level 123: [/input-8, 1034] 
split level 124: [/input, 1978] 
split level 125: [/input-8, 657] 
split level 126: [/input, 1238] 
split level 127: [/input-8, 516] 
split level 128: [/input, 1078] 
split level 129: [/input, 1194] 
split level 130: [/input-8, 1060] 
split level 131: [/input, 1228] 
split level 132: [/input, 1803] 
split level 133: [/input, 684] 
split level 134: [/input, 692] 
split level 135: [/input, 1975] 
split level 136: [/input-8, 562] 
split level 137: [/input-8, 1421] 
split level 138: [/input, 708] 
split level 139: [/input-8, 148] 
split level 140: [/input-8, 1453] 
split level 141: [/input, 1049] 
split level 142: [/input, 126] 
split level 143: [/input, 1111] 
split level 144: [/input, 2489] 
split level 145: [/input, 2721] 
split level 146: [/input-8, 944] 
split level 147: [/input, 2755] 
split level 148: [/input, 115] 
split level 149: [/input, 188] 
split level 150: [/input, 183] 
split level 151: [/input, 1082] 
split level 152: [/input-8, 1573] 
split level 153: [/input, 1878] 
split level 154: [/input, 626] 
split level 155: [/input-8, 1894] 
split level 156: [/input, 182] 
split level 157: [/input, 2506] 
split level 158: [/input, 2037] 
split level 159: [/input, 122] 
split level 160: [/input, 125] 
split level 161: [/input, 308] 
split level 162: [/input-8, 1429] 
split level 163: [/input, 2238] 
split level 164: [/input-8, 1699] 
split level 165: [/input, 197] 
split level 166: [/input, 1178] 
split level 167: [/input, 2417] 
split level 168: [/input, 74] 
split level 169: [/input, 194] 
split level 170: [/input, 2234] 
split level 171: [/input, 641] 
split level 172: [/input, 2463] 
split level 173: [/input, 2479] 
split level 174: [/input-8, 1283] 
split level 175: [/input, 1240] 
split level 176: [/input, 657] 
split level 177: [/input, 3914] 
split level 178: [/input, 181] 
split level 179: [/input, 4084] 
split level 180: [/input, 1077] 
split level 181: [/input, 3969] 
split level 182: [/input, 1988] 
split level 183: [/input, 177] 
split level 184: [/input, 2433] 
split level 185: [/input, 3965] 
split level 186: [/input, 3953] 
split level 187: [/input, 622] 
split level 188: [/input-8, 319] 
split level 189: [/input, 2775] 
split level 190: [/input, 4051] 
split level 191: [/input, 3970] 
split level 192: [/input-8, 432] 
split level 193: [/input, 2235] 
split level 194: [/input, 4072] 
split level 195: [/input, 2998] 
split level 196: [/input, 1110] 
split level 197: [/input, 3137] 
split level 198: [/input, 153] 
split level 199: [/input, 1397] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14024007320404053
10 lb beta sum: 0.0, worst -0.14023488759994507
Time: prepare 0.0116    bound 0.1047    transfer 0.0010    finalize 0.0029    func 0.1228    
Accumulated time: func 0.1818    prepare 0.0218    bound 0.1631    transfer 0.0011    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.53527945) min lb tensor(-0.14022571)
Number of Verified Splits: 16 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011856555938720703 
BICCOS Cumulative time: 0.011856555938720703
Preprocessing time: 0.010531187057495117 Inference time: 0.0009453296661376953 Add cuts time: 0.00019931793212890625 Cut analysis time: 0.00018072128295898438
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.5438    set_bounds 0.0092    solve 0.1229    add 0.0102    
Accumulated time: pickout 0.0004    decision 0.5438    set_bounds 0.0092    solve 0.1229    add 0.0102    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 44] 
split level 1: [/input-12, 37] 
split level 2: [/input-12, 51] 
split level 3: [/input-12, 87] 
split level 4: [/input-12, 68] 
split level 5: [/input-12, 6] 
split level 6: [/input-12, 65] 
split level 7: [/input-12, 81] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.8064001798629761

all verified at 0th iter
Time: prepare 0.0039    bound 0.0048    transfer 0.0005    finalize 0.0014    func 0.0125    
Accumulated time: func 0.1943    prepare 0.0261    bound 0.1679    transfer 0.0016    finalize 0.0045    
all_split False
======================Cut inference begins======================
max lb tensor(2.51781392) min lb tensor(0.80640018)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.00683140754699707 
BICCOS Cumulative time: 0.018687963485717773
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0179    solve 0.0125    add 0.0003    
Accumulated time: pickout 0.0008    decision 0.5669    set_bounds 0.0271    solve 0.1354    add 0.0105    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.8288328647613525


Properties batch 6, size 1
Remaining timeout: 193.46623158454895
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 193.46615433692932
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 193.46613073349
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 6.5339 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 190, vnnlib ID: 190 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.29639435, -34.82194138, -35.15301514, -35.48160553, -34.82171631,
         -37.39161682, -36.55634308, -37.47770309, -26.76552391, -33.69714737]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [931]; unstable size 931; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 312, 1, 931] with unstable size 311 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 39, 1, 931] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 931] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [311]; unstable size 311; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 39, 1, 311] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 311] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [38]; unstable size 38; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.38260245, 4.40842390, 4.16782999, 5.49357891, 3.81646514, 6.97523642,
         6.20494986, 6.17861462, 3.64883327]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0437 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 191, vnnlib ID: 191 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.51473236, -34.81326675, -27.08851433, -23.61179924, -25.47192574,
         -24.28015709, -27.09932327, -29.05410957, -33.68367004, -33.83507919]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [843]; unstable size 843; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 373, 1, 843] with unstable size 372 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 41, 1, 843] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 843] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [372]; unstable size 372; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 41, 1, 372] with unstable size 40 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 372] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [40]; unstable size 40; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 40] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.69877863,  6.29307413,  0.06107545, -0.34759969, -0.50640464,
          0.64579505,  1.89003241,  5.35251284,  5.37551928]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.51473236, -34.81326675, -27.08851433, -23.61179924, -25.47192574,
         -24.28015709, -27.09932327, -29.05410957, -33.68367004, -33.83507919]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.18it/s]100%|██████████| 1/1 [00:00<00:00,  8.17it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.29480743, -34.59758759, -26.91806984, -23.45503616, -25.39565086,
          -23.68806267, -26.98809814, -28.48414230, -33.65523529, -33.57376099],
         [-32.29480743, -34.59758759, -26.91806984, -23.45503616, -25.39565086,
          -23.68806267, -26.98809814, -28.48414230, -33.65523529, -33.57376099]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.94061470, 0.23302650]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1256 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 25.440664291381836
alpha/beta optimization time: 1.3181157112121582
initial alpha-crown bounds: tensor([[ 4.93301773,  6.60957861,  0.30552864, -0.18256778, -0.42215386,
          0.84142780,  2.12202191,  5.60949278,  5.62431812]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.42215386033058167
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.4800751209259
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.48003244400024
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.48000717163086
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.479984998703
Verifying property 3 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.18256778]], device='cuda:0') need to verify.
Model prediction is: tensor([-32.51473236, -34.81326675, -27.08851433, -23.61179924, -25.47192574,
        -24.28015709, -27.09932327, -29.05410957, -33.68367004, -33.83507919],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.18256778]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 843
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 367
Node /15 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 1247
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011086463928222656
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18256568908691406
10 lb beta sum: 0.0, worst -0.18256211280822754
Time: prepare 0.0002    bound 0.0945    transfer 0.0001    finalize 0.0001    func 0.0950    
Accumulated time: func 0.0950    prepare 0.0002    bound 0.0945    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-12, 40] 
split level 2: [/input-12, 72] 
split level 3: [/input-12, 8] 
split level 4: [/input-12, 62] 
split level 5: [/input-12, 73] 
split level 6: [/input-12, 47] 
split level 7: [/input-12, 54] 
split level 8: [/input-12, 90] 
split level 9: [/input-12, 15] 
split level 10: [/input-12, 48] 
split level 11: [/input-12, 92] 
split level 12: [/input-8, 1553] 
split level 13: [/input-8, 524] 
split level 14: [/input-12, 67] 
split level 15: [/input-8, 418] 
split level 16: [/input-12, 60] 
split level 17: [/input-8, 1259] 
split level 18: [/input-8, 1369] 
split level 19: [/input-8, 1381] 
split level 20: [/input-12, 87] 
split level 21: [/input-8, 275] 
split level 22: [/input-8, 996] 
split level 23: [/input-8, 284] 
split level 24: [/input-8, 546] 
split level 25: [/input-8, 410] 
split level 26: [/input-8, 1554] 
split level 27: [/input-8, 141] 
split level 28: [/input-8, 1699] 
split level 29: [/input-8, 933] 
split level 30: [/input-8, 10] 
split level 31: [/input-8, 1236] 
split level 32: [/input-8, 85] 
split level 33: [/input-8, 1837] 
split level 34: [/input-8, 545] 
split level 35: [/input-8, 1845] 
split level 36: [/input-8, 1517] 
split level 37: [/input-8, 2032] 
split level 38: [/input-8, 2024] 
split level 39: [/input-8, 426] 
split level 40: [/input-8, 1389] 
split level 41: [/input-8, 133] 
split level 42: [/input-8, 923] 
split level 43: [/input-8, 16] 
split level 44: [/input-8, 1883] 
split level 45: [/input, 2140] 
split level 46: [/input, 1774] 
split level 47: [/input-8, 1331] 
split level 48: [/input-8, 943] 
split level 49: [/input, 2393] 
split level 50: [/input-8, 77] 
split level 51: [/input, 2984] 
split level 52: [/input-8, 266] 
split level 53: [/input-8, 1390] 
split level 54: [/input-8, 1509] 
split level 55: [/input-8, 514] 
split level 56: [/input-8, 2027] 
split level 57: [/input-8, 668] 
split level 58: [/input-8, 33] 
split level 59: [/input, 52] 
split level 60: [/input-8, 915] 
split level 61: [/input-8, 1891] 
split level 62: [/input, 2142] 
split level 63: [/input-8, 434] 
split level 64: [/input, 1763] 
split level 65: [/input-8, 265] 
split level 66: [/input, 2983] 
split level 67: [/input-8, 427] 
split level 68: [/input-8, 2031] 
split level 69: [/input-8, 508] 
split level 70: [/input, 2669] 
split level 71: [/input, 3225] 
split level 72: [/input, 619] 
split level 73: [/input-8, 429] 
split level 74: [/input, 222] 
split level 75: [/input-8, 409] 
split level 76: [/input, 69] 
split level 77: [/input, 1761] 
split level 78: [/input, 2391] 
split level 79: [/input, 2953] 
split level 80: [/input-8, 19] 
split level 81: [/input-8, 1907] 
split level 82: [/input, 2937] 
split level 83: [/input-8, 5] 
split level 84: [/input, 1740] 
split level 85: [/input-8, 891] 
split level 86: [/input-8, 1365] 
split level 87: [/input-8, 1129] 
split level 88: [/input-8, 1314] 
split level 89: [/input-8, 1780] 
split level 90: [/input, 45] 
split level 91: [/input-8, 1315] 
split level 92: [/input, 2222] 
split level 93: [/input, 2348] 
split level 94: [/input, 1144] 
split level 95: [/input-8, 1691] 
split level 96: [/input, 37] 
split level 97: [/input-8, 700] 
split level 98: [/input-8, 1833] 
split level 99: [/input, 28] 
split level 100: [/input, 30] 
split level 101: [/input-8, 1513] 
split level 102: [/input, 2684] 
split level 103: [/input, 2952] 
split level 104: [/input, 65] 
split level 105: [/input, 2936] 
split level 106: [/input-8, 991] 
split level 107: [/input, 72] 
split level 108: [/input-8, 41] 
split level 109: [/input, 2190] 
split level 110: [/input, 3210] 
split level 111: [/input, 54] 
split level 112: [/input, 2718] 
split level 113: [/input, 2951] 
split level 114: [/input, 1728] 
split level 115: [/input-8, 1518] 
split level 116: [/input-8, 1900] 
split level 117: [/input, 2967] 
split level 118: [/input-8, 1892] 
split level 119: [/input, 2332] 
split level 120: [/input, 29] 
split level 121: [/input, 2702] 
split level 122: [/input, 747] 
split level 123: [/input-8, 1580] 
split level 124: [/input, 2187] 
split level 125: [/input, 2955] 
split level 126: [/input, 1746] 
split level 127: [/input-8, 388] 
split level 128: [/input, 1758] 
split level 129: [/input, 2350] 
split level 130: [/input, 2372] 
split level 131: [/input, 2938] 
split level 132: [/input, 2331] 
split level 133: [/input, 4072] 
split level 134: [/input, 2138] 
split level 135: [/input, 2206] 
split level 136: [/input, 20] 
split level 137: [/input, 2107] 
split level 138: [/input-8, 826] 
split level 139: [/input-8, 501] 
split level 140: [/input, 2510] 
split level 141: [/input, 1128] 
split level 142: [/input, 1929] 
split level 143: [/input, 2939] 
split level 144: [/input, 2969] 
split level 145: [/input, 105] 
split level 146: [/input, 2158] 
split level 147: [/input, 2954] 
split level 148: [/input, 1930] 
split level 149: [/input, 1753] 
split level 150: [/input, 745] 
split level 151: [/input, 4032] 
split level 152: [/input, 2540] 
split level 153: [/input, 1145] 
split level 154: [/input-8, 31] 
split level 155: [/input, 2333] 
split level 156: [/input, 3859] 
split level 157: [/input, 1050] 
split level 158: [/input, 1712] 
split level 159: [/input, 2903] 
split level 160: [/input, 1713] 
split level 161: [/input-8, 610] 
split level 162: [/input, 2888] 
split level 163: [/input, 3246] 
split level 164: [/input, 2212] 
split level 165: [/input, 61] 
split level 166: [/input, 46] 
split level 167: [/input, 27] 
split level 168: [/input, 2092] 
split level 169: [/input, 2334] 
split level 170: [/input, 1113] 
split level 171: [/input, 857] 
split level 172: [/input, 3242] 
split level 173: [/input, 1633] 
split level 174: [/input, 1566] 
split level 175: [/input, 1550] 
split level 176: [/input, 1178] 
split level 177: [/input, 2329] 
split level 178: [/input, 2968] 
split level 179: [/input, 736] 
split level 180: [/input, 1747] 
split level 181: [/input, 2636] 
split level 182: [/input, 2201] 
split level 183: [/input, 1176] 
split level 184: [/input, 2985] 
split level 185: [/input, 1195] 
split level 186: [/input, 205] 
split level 187: [/input-8, 1536] 
split level 188: [/input, 2730] 
split level 189: [/input, 1175] 
split level 190: [/input, 2956] 
split level 191: [/input, 4050] 
split level 192: [/input, 2637] 
split level 193: [/input, 2970] 
split level 194: [/input, 2499] 
split level 195: [/input, 797] 
split level 196: [/input-8, 1828] 
split level 197: [/input, 2217] 
split level 198: [/input, 1680] 
split level 199: [/input-8, 212] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.182309091091156
10 lb beta sum: 0.0, worst -0.18231123685836792
Time: prepare 0.0113    bound 0.1049    transfer 0.0021    finalize 0.0030    func 0.1240    
Accumulated time: func 0.2190    prepare 0.0216    bound 0.1994    transfer 0.0022    finalize 0.0032    
all_split False
======================Cut inference begins======================
max lb tensor(0.46689790) min lb tensor(-0.18230778)
Number of Verified Splits: 9 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.011681795120239258 
BICCOS Cumulative time: 0.011681795120239258
Preprocessing time: 0.01043558120727539 Inference time: 0.00038886070251464844 Add cuts time: 0.00013566017150878906 Cut analysis time: 0.0007216930389404297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16970 (1), -0.16953 (1), -0.16947 (1), -0.16937 (1), -0.16933 (1), -0.16919 (1), -0.16885 (1), -0.16879 (1), -0.16859 (1), -0.16859 (1), -0.16835 (1), -0.16773 (1), -0.16691 (1), -0.16629 (1), -0.16628 (1), -0.16603 (1), -0.16527 (1), -0.16252 (1), -0.16192 (1), -0.16163 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5433    set_bounds 0.0093    solve 0.1241    add 0.0743    
Accumulated time: pickout 0.0004    decision 0.5433    set_bounds 0.0093    solve 0.1241    add 0.0743    
Current (lb-rhs): -0.16970008611679077
50 domains visited
Cumulative time: 0.8637285232543945

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] 
split level 1: [/input-12, 72] [/input-12, 72] [/input-12, 62] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 2: [/input-12, 62] [/input-12, 62] [/input-12, 73] [/input-12, 62] [/input-12, 73] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] 
split level 3: [/input-12, 54] [/input-12, 73] [/input-12, 54] [/input-12, 73] [/input-12, 54] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1563934087753296

all verified at 2th iter
Time: prepare 0.0073    bound 0.0194    transfer 0.0008    finalize 0.0025    func 0.0326    
Accumulated time: func 0.2516    prepare 0.0291    bound 0.2187    transfer 0.0030    finalize 0.0057    
all_split False
======================Cut inference begins======================
max lb tensor(0.32699198) min lb tensor(0.00133222)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03532981872558594 
BICCOS Cumulative time: 0.047011613845825195
Preprocessing time: 0.011998653411865234 Inference time: 0.015617132186889648 Add cuts time: 0.007527589797973633 Cut analysis time: 0.00018644332885742188
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0205    set_bounds 0.0129    solve 0.0326    add 0.0156    
Accumulated time: pickout 0.0015    decision 0.5637    set_bounds 0.0222    solve 0.1567    add 0.0899    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 40] 
split level 1: [/input-12, 72] 
split level 2: [/input-12, 62] 
split level 3: [/input-12, 73] 
split level 4: [/input-12, 54] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 15] 
split level 7: [/input-12, 48] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.15274274349212646

all verified at 0th iter
Time: prepare 0.0036    bound 0.0042    transfer 0.0014    finalize 0.0014    func 0.0124    
Accumulated time: func 0.2639    prepare 0.0332    bound 0.2229    transfer 0.0044    finalize 0.0071    
all_split False
======================Cut inference begins======================
max lb tensor(1.04011333) min lb tensor(0.15274274)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006378650665283203 
BICCOS Cumulative time: 0.0533902645111084
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0167    solve 0.0124    add 0.0003    
Accumulated time: pickout 0.0019    decision 0.5867    set_bounds 0.0388    solve 0.1692    add 0.0901    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.0445184707641602


Properties batch 4, size 1
Remaining timeout: 197.21318888664246
Verifying property 4 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.42215386]], device='cuda:0') need to verify.
Model prediction is: tensor([-32.51473236, -34.81326675, -27.08851433, -23.61179924, -25.47192574,
        -24.28015709, -27.09932327, -29.05410957, -33.68367004, -33.83507919],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.42215386]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 843
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 367
Node /15 input 0: size torch.Size([100]) unstable 37
-----------------
# of unstable neurons: 1247
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010538101196289062
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.42215192317962646
10 lb beta sum: 0.0, worst -0.4221576750278473
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0587    transfer 0.0001    finalize 0.0001    func 0.0591    
Accumulated time: func 0.0591    prepare 0.0002    bound 0.0587    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 85] 
split level 1: [/input-12, 70] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 94] 
split level 4: [/input-12, 8] 
split level 5: [/input-12, 62] 
split level 6: [/input-12, 73] 
split level 7: [/input-12, 67] 
split level 8: [/input-12, 15] 
split level 9: [/input-12, 54] 
split level 10: [/input-12, 50] 
split level 11: [/input-12, 97] 
split level 12: [/input-8, 284] 
split level 13: [/input-12, 60] 
split level 14: [/input-8, 1293] 
split level 15: [/input-8, 1683] 
split level 16: [/input-12, 32] 
split level 17: [/input-8, 268] 
split level 18: [/input-8, 1699] 
split level 19: [/input-8, 1540] 
split level 20: [/input-8, 292] 
split level 21: [/input-8, 100] 
split level 22: [/input-8, 275] 
split level 23: [/input-8, 1285] 
split level 24: [/input-8, 1691] 
split level 25: [/input-8, 162] 
split level 26: [/input-8, 269] 
split level 27: [/input-8, 1125] 
split level 28: [/input-8, 1667] 
split level 29: [/input-8, 1302] 
split level 30: [/input-8, 1301] 
split level 31: [/input-8, 277] 
split level 32: [/input-8, 1884] 
split level 33: [/input-8, 988] 
split level 34: [/input-8, 858] 
split level 35: [/input-8, 1298] 
split level 36: [/input-8, 285] 
split level 37: [/input-8, 514] 
split level 38: [/input-8, 1772] 
split level 39: [/input, 1830] 
split level 40: [/input-8, 1325] 
split level 41: [/input-8, 293] 
split level 42: [/input-8, 923] 
split level 43: [/input-8, 307] 
split level 44: [/input-8, 915] 
split level 45: [/input-8, 1860] 
split level 46: [/input-8, 1628] 
split level 47: [/input-8, 1058] 
split level 48: [/input-12, 1] 
split level 49: [/input-8, 1908] 
split level 50: [/input-8, 1668] 
split level 51: [/input-8, 1636] 
split level 52: [/input-8, 389] 
split level 53: [/input-8, 142] 
split level 54: [/input, 2889] 
split level 55: [/input-8, 336] 
split level 56: [/input, 3125] 
split level 57: [/input-8, 1892] 
split level 58: [/input-8, 299] 
split level 59: [/input-8, 931] 
split level 60: [/input-8, 1875] 
split level 61: [/input-8, 1893] 
split level 62: [/input-8, 147] 
split level 63: [/input-8, 1715] 
split level 64: [/input-8, 1891] 
split level 65: [/input-8, 1883] 
split level 66: [/input-8, 1900] 
split level 67: [/input-8, 1305] 
split level 68: [/input-8, 994] 
split level 69: [/input-8, 1061] 
split level 70: [/input-8, 1597] 
split level 71: [/input-8, 1092] 
split level 72: [/input-8, 308] 
split level 73: [/input, 2890] 
split level 74: [/input-8, 429] 
split level 75: [/input-8, 1901] 
split level 76: [/input, 2871] 
split level 77: [/input-8, 1098] 
split level 78: [/input-8, 141] 
split level 79: [/input-8, 1333] 
split level 80: [/input, 3865] 
split level 81: [/input-8, 1070] 
split level 82: [/input-8, 1517] 
split level 83: [/input-8, 1780] 
split level 84: [/input-8, 374] 
split level 85: [/input-8, 1381] 
split level 86: [/input-8, 580] 
split level 87: [/input-8, 1509] 
split level 88: [/input-8, 388] 
split level 89: [/input-8, 1714] 
split level 90: [/input, 2854] 
split level 91: [/input-8, 1890] 
split level 92: [/input, 2906] 
split level 93: [/input-8, 403] 
split level 94: [/input-8, 1865] 
split level 95: [/input, 2888] 
split level 96: [/input, 72] 
split level 97: [/input, 4073] 
split level 98: [/input-8, 1932] 
split level 99: [/input-8, 1857] 
split level 100: [/input-8, 251] 
split level 101: [/input-8, 1042] 
split level 102: [/input, 1063] 
split level 103: [/input-8, 1050] 
split level 104: [/input-8, 305] 
split level 105: [/input-8, 1985] 
split level 106: [/input-8, 1787] 
split level 107: [/input-8, 278] 
split level 108: [/input-8, 1311] 
split level 109: [/input, 23] 
split level 110: [/input, 2904] 
split level 111: [/input-8, 1669] 
split level 112: [/input-8, 1530] 
split level 113: [/input, 2858] 
split level 114: [/input, 2855] 
split level 115: [/input-8, 1885] 
split level 116: [/input-8, 309] 
split level 117: [/input-8, 1934] 
split level 118: [/input, 3124] 
split level 119: [/input, 2886] 
split level 120: [/input, 2920] 
split level 121: [/input-8, 432] 
split level 122: [/input-8, 1129] 
split level 123: [/input, 1306] 
split level 124: [/input, 4057] 
split level 125: [/input-8, 1518] 
split level 126: [/input-8, 891] 
split level 127: [/input, 1801] 
split level 128: [/input, 2853] 
split level 129: [/input-8, 1501] 
split level 130: [/input-8, 302] 
split level 131: [/input-8, 300] 
split level 132: [/input, 2903] 
split level 133: [/input-8, 1810] 
split level 134: [/input-8, 294] 
split level 135: [/input-8, 1907] 
split level 136: [/input, 2922] 
split level 137: [/input, 1861] 
split level 138: [/input, 968] 
split level 139: [/input-8, 581] 
split level 140: [/input, 857] 
split level 141: [/input-8, 1814] 
split level 142: [/input, 2857] 
split level 143: [/input, 2891] 
split level 144: [/input, 2839] 
split level 145: [/input-8, 344] 
split level 146: [/input, 728] 
split level 147: [/input-8, 1126] 
split level 148: [/input-8, 1828] 
split level 149: [/input, 2761] 
split level 150: [/input, 2875] 
split level 151: [/input-8, 161] 
split level 152: [/input, 2938] 
split level 153: [/input-8, 1788] 
split level 154: [/input-8, 1799] 
split level 155: [/input-8, 1389] 
split level 156: [/input, 2885] 
split level 157: [/input, 2677] 
split level 158: [/input, 2837] 
split level 159: [/input-8, 387] 
split level 160: [/input, 298] 
split level 161: [/input, 552] 
split level 162: [/input, 856] 
split level 163: [/input, 3140] 
split level 164: [/input, 2937] 
split level 165: [/input, 2952] 
split level 166: [/input, 2953] 
split level 167: [/input, 2859] 
split level 168: [/input, 4072] 
split level 169: [/input, 43] 
split level 170: [/input-8, 1134] 
split level 171: [/input, 3189] 
split level 172: [/input, 2902] 
split level 173: [/input, 2936] 
split level 174: [/input, 2066] 
split level 175: [/input, 1058] 
split level 176: [/input-8, 1053] 
split level 177: [/input-8, 1909] 
split level 178: [/input, 1050] 
split level 179: [/input-8, 1021] 
split level 180: [/input, 663] 
split level 181: [/input-8, 1513] 
split level 182: [/input-8, 990] 
split level 183: [/input, 3480] 
split level 184: [/input-8, 1894] 
split level 185: [/input, 2884] 
split level 186: [/input, 2372] 
split level 187: [/input-8, 1314] 
split level 188: [/input, 2148] 
split level 189: [/input, 2115] 
split level 190: [/input-8, 921] 
split level 191: [/input-8, 143] 
split level 192: [/input, 1075] 
split level 193: [/input-8, 150] 
split level 194: [/input-8, 1236] 
split level 195: [/input, 2954] 
split level 196: [/input, 2844] 
split level 197: [/input, 952] 
split level 198: [/input, 2970] 
split level 199: [/input, 2860] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4218294620513916
10 lb beta sum: 0.0, worst -0.4218284487724304
Time: prepare 0.0114    bound 0.1060    transfer 0.0008    finalize 0.0027    func 0.1236    
Accumulated time: func 0.1827    prepare 0.0237    bound 0.1646    transfer 0.0009    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(0.10198820) min lb tensor(-0.42182437)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.012642145156860352 
BICCOS Cumulative time: 0.012642145156860352
Preprocessing time: 0.010993719100952148 Inference time: 0.00010037422180175781 Add cuts time: 7.748603820800781e-05 Cut analysis time: 0.0014705657958984375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40974 (1), -0.40944 (1), -0.40861 (1), -0.40860 (1), -0.40860 (1), -0.40830 (1), -0.40795 (1), -0.40785 (1), -0.40777 (1), -0.40747 (1), -0.40737 (1), -0.40665 (1), -0.40642 (1), -0.40563 (1), -0.40539 (1), -0.40512 (1), -0.40434 (1), -0.40390 (1), -0.40351 (1), -0.40335 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5491    set_bounds 0.0086    solve 0.1237    add 0.0798    
Accumulated time: pickout 0.0003    decision 0.5491    set_bounds 0.0086    solve 0.1237    add 0.0798    
Current (lb-rhs): -0.40973737835884094
50 domains visited
Cumulative time: 0.8382251262664795

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 94] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] 
split level 1: [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 62] [/input-12, 94] [/input-12, 62] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] 
split level 2: [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] 
split level 3: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3909972012042999
10 lb beta sum: 0.19336150586605072, worst -0.38925832509994507
Time: prepare 0.0068    bound 0.1231    transfer 0.0008    finalize 0.0026    func 0.1360    
Accumulated time: func 0.3187    prepare 0.0307    bound 0.2878    transfer 0.0017    finalize 0.0054    
all_split False
======================Cut inference begins======================
max lb tensor(0.18173283) min lb tensor(-0.38924196)
Number of Verified Splits: 4 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.013604402542114258 
BICCOS Cumulative time: 0.02624654769897461
Preprocessing time: 0.012306928634643555 Inference time: 0.00025582313537597656 Add cuts time: 0.00011754035949707031 Cut analysis time: 0.0009241104125976562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22625 (2), -0.22525 (2), -0.22478 (2), -0.22418 (2), -0.22376 (2), -0.22202 (2), -0.22166 (2), -0.21959 (2), -0.21958 (2), -0.21938 (2), -0.21814 (2), -0.21785 (2), -0.21660 (2), -0.21529 (2), -0.21453 (2), -0.21121 (2), -0.20676 (2), -0.20604 (2), -0.20538 (2), -0.20515 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0210    set_bounds 0.0140    solve 0.1360    add 0.0783    
Accumulated time: pickout 0.0015    decision 0.5701    set_bounds 0.0226    solve 0.2597    add 0.1581    
Current (lb-rhs): -0.22624847292900085
100 domains visited
Cumulative time: 1.1025853157043457

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 94] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 94] [/input-12, 90] [/input-12, 94] [/input-12, 90] 
split level 1: [/input-12, 62] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 94] 
split level 2: [/input-12, 67] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 62] 
split level 3: [/input-12, 54] [/input-12, 54] [/input-12, 67] [/input-12, 54] [/input-12, 67] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 67] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22624823451042175
10 lb beta sum: 0.2516683340072632, worst -0.22207346558570862
Time: prepare 0.0062    bound 0.1261    transfer 0.0014    finalize 0.0022    func 0.1389    
Accumulated time: func 0.4576    prepare 0.0371    bound 0.4138    transfer 0.0031    finalize 0.0076    
all_split False
======================Cut inference begins======================
max lb tensor(0.28963101) min lb tensor(-0.20795080)
Number of Verified Splits: 86 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 5
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.018501758575439453 
BICCOS Cumulative time: 0.04474830627441406
Preprocessing time: 0.01174306869506836 Inference time: 0.00403594970703125 Add cuts time: 0.002388477325439453 Cut analysis time: 0.0003342628479003906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08059 (3), -0.08049 (3), -0.08014 (3), -0.07989 (3), -0.07963 (3), -0.07897 (3), -0.07649 (3), -0.07595 (3), -0.07487 (3), -0.07454 (3), -0.07439 (3), -0.07307 (3), -0.07122 (3), -0.07080 (3), -0.07046 (3), -0.06804 (3), -0.06784 (3), -0.06781 (3), -0.06657 (3), -0.06564 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0201    set_bounds 0.0153    solve 0.1390    add 0.0870    
Accumulated time: pickout 0.0025    decision 0.5903    set_bounds 0.0379    solve 0.3987    add 0.2450    
Current (lb-rhs): -0.08059495687484741
150 domains visited
Cumulative time: 1.3837559223175049

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] 
split level 1: [/input-12, 90] [/input-12, 90] [/input-12, 94] [/input-12, 94] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 62] [/input-12, 94] [/input-12, 62] 
split level 2: [/input-12, 94] [/input-12, 94] [/input-12, 67] [/input-12, 67] [/input-12, 94] [/input-12, 94] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] 
split level 3: [/input-12, 67] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 67] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09838736057281494
10 lb beta sum: 0.4355528950691223, worst -0.18903881311416626
Time: prepare 0.0061    bound 0.1250    transfer 0.0008    finalize 0.0022    func 0.1367    
Accumulated time: func 0.5943    prepare 0.0435    bound 0.5388    transfer 0.0039    finalize 0.0098    
all_split False
======================Cut inference begins======================
max lb tensor(0.32970667) min lb tensor(-0.07490897)
Number of Verified Splits: 220 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 7
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.02799224853515625 
BICCOS Cumulative time: 0.07274055480957031
Preprocessing time: 0.011668920516967773 Inference time: 0.012023687362670898 Add cuts time: 0.0036470890045166016 Cut analysis time: 0.0006525516510009766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02567 (4), -0.02567 (4), -0.02551 (4), -0.02543 (4), -0.02533 (4), -0.02524 (4), -0.02517 (4), -0.02516 (4), -0.02483 (4), -0.02467 (4), -0.02381 (4), -0.02368 (4), -0.02267 (4), -0.02223 (4), -0.02209 (4), -0.02208 (4), -0.02152 (4), -0.02112 (4), -0.01833 (4), -0.01825 (4), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0202    set_bounds 0.0154    solve 0.1368    add 0.2725    
Accumulated time: pickout 0.0035    decision 0.6104    set_bounds 0.0533    solve 0.5355    add 0.5176    
Current (lb-rhs): -0.025674104690551758
200 domains visited
Cumulative time: 1.8580420017242432

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] 
split level 1: [/input-12, 90] [/input-12, 70] [/input-12, 90] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 70] [/input-12, 90] 
split level 2: [/input-12, 94] [/input-12, 90] [/input-12, 94] [/input-12, 90] [/input-12, 67] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 67] [/input-12, 94] 
split level 3: [/input-12, 15] [/input-12, 54] [/input-12, 15] [/input-12, 54] [/input-12, 54] [/input-12, 67] [/input-12, 67] [/input-12, 54] [/input-12, 54] [/input-12, 15] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07230424880981445
10 lb beta sum: 0.33629676699638367, worst -0.1550973355770111
Time: prepare 0.0063    bound 0.1491    transfer 0.0008    finalize 0.0022    func 0.1615    
Accumulated time: func 0.7558    prepare 0.0501    bound 0.6879    transfer 0.0046    finalize 0.0120    
all_split False
======================Cut inference begins======================
max lb tensor(0.29757953) min lb tensor(-0.02567410)
Number of Verified Splits: 319 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 8
#cuts 4-6: 16
#cuts >= 20: 0
BICCOS time: 0.039621591567993164 
BICCOS Cumulative time: 0.11236214637756348
Preprocessing time: 0.011776924133300781 Inference time: 0.01805877685546875 Add cuts time: 0.007638454437255859 Cut analysis time: 0.0021474361419677734
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0065    decision 0.0214    set_bounds 0.0158    solve 0.1616    add 0.0278    
Accumulated time: pickout 0.0100    decision 0.6318    set_bounds 0.0692    solve 0.6971    add 0.5453    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
200 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 85] 
split level 1: [/input-12, 70] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 94] 
split level 4: [/input-12, 62] 
split level 5: [/input-12, 67] 
split level 6: [/input-12, 15] 
split level 7: [/input-12, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2225363701581955
10 lb beta sum: 0.27536457777023315, worst -0.21999581158161163
Time: prepare 0.0036    bound 0.1431    transfer 0.0009    finalize 0.0015    func 0.1509    
Accumulated time: func 0.9067    prepare 0.0542    bound 0.8310    transfer 0.0056    finalize 0.0135    
all_split False
======================Cut inference begins======================
max lb tensor(1.60887337) min lb tensor(-0.21978529)
Number of Verified Splits: 216 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3189047873020172
10 lb beta sum: 0.6634398102760315, worst -0.3031918406486511
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 8
#cuts 4-6: 19
#cuts >= 20: 0
BICCOS time: 0.2590975761413574 
BICCOS Cumulative time: 0.3714597225189209
Preprocessing time: 0.006542682647705078 Inference time: 0.24703645706176758 Add cuts time: 0.004563570022583008 Cut analysis time: 0.0009548664093017578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21979 (8), -0.21278 (8), -0.21079 (8), -0.20231 (8), -0.18618 (8), -0.18046 (8), -0.17897 (8), -0.17246 (8), -0.15871 (8), -0.15526 (8), -0.15503 (8), -0.15416 (8), -0.14961 (8), -0.14211 (8), -0.13946 (8), -0.13330 (8), -0.13003 (8), -0.12746 (8), -0.12599 (8), -0.12548 (8), 
Length of domains: 40
Time: pickout 0.0005    decision 0.0235    set_bounds 0.0171    solve 0.1510    add 0.0692    
Accumulated time: pickout 0.0106    decision 0.6553    set_bounds 0.0862    solve 0.8481    add 0.6146    
Current (lb-rhs): -0.21978528797626495
240 domains visited
Cumulative time: 2.6625256538391113

BaB round 2
batch: 40
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 1: [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] 
split level 2: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17956653237342834
10 lb beta sum: 0.15211999416351318, worst -0.17713168263435364
Time: prepare 0.0047    bound 0.1409    transfer 0.0026    finalize 0.0020    func 0.1522    
Accumulated time: func 1.0590    prepare 0.0591    bound 0.9719    transfer 0.0082    finalize 0.0154    
all_split False
======================Cut inference begins======================
max lb tensor(0.24182355) min lb tensor(-0.17699066)
Number of Verified Splits: 249 of 320
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.25913992524147034
10 lb beta sum: 0.6128610968589783, worst -0.11078887432813644
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 83.
#cuts 1-3: 8
#cuts 4-6: 26
#cuts 7-9: 49
#cuts >= 20: 0
BICCOS time: 0.31972241401672363 
BICCOS Cumulative time: 0.6911821365356445
Preprocessing time: 0.009414434432983398 Inference time: 0.28891587257385254 Add cuts time: 0.017172813415527344 Cut analysis time: 0.0042192935943603516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17699 (11), -0.16923 (11), -0.16690 (11), -0.15816 (11), -0.14102 (11), -0.13502 (11), -0.13342 (11), -0.12666 (11), -0.12422 (11), -0.11282 (11), -0.11070 (11), -0.10938 (11), -0.10910 (11), -0.10704 (11), -0.10698 (11), -0.10517 (11), -0.10428 (11), -0.10245 (11), -0.09930 (11), -0.09374 (11), 
Length of domains: 71
Time: pickout 0.0073    decision 0.0147    set_bounds 0.0167    solve 0.1523    add 0.0411    
Accumulated time: pickout 0.0179    decision 0.6700    set_bounds 0.1029    solve 1.0004    add 0.6556    
Current (lb-rhs): -0.17699065804481506
311 domains visited
Cumulative time: 3.2166054248809814

BaB round 3
batch: 71
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-8, 284] [/input-12, 60] [/input-8, 284] [/input-12, 60] [/input-12, 60] 
split level 1: [/input-8, 1699] [/input-8, 1699] [/input-8, 1683] [/input-8, 1683] [/input-8, 1683] [/input-12, 60] [/input-8, 268] [/input-12, 60] [/input-8, 1683] [/input-8, 1683] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1511695683002472
10 lb beta sum: 0.1556229293346405, worst -0.14891795814037323
Time: prepare 0.0057    bound 0.1437    transfer 0.0020    finalize 0.0026    func 0.1560    
Accumulated time: func 1.2149    prepare 0.0650    bound 1.1156    transfer 0.0103    finalize 0.0181    
all_split False
======================Cut inference begins======================
max lb tensor(0.02859999) min lb tensor(-0.14886712)
Number of Verified Splits: 77 of 284
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 68.
#cuts 1-3: 11
#cuts 4-6: 33
#cuts 7-9: 24
#cuts >= 20: 0
BICCOS time: 0.025260210037231445 
BICCOS Cumulative time: 0.716442346572876
Preprocessing time: 0.008382320404052734 Inference time: 0.007765531539916992 Add cuts time: 0.006308794021606445 Cut analysis time: 0.0028035640716552734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14887 (13), -0.14859 (13), -0.14701 (13), -0.14633 (13), -0.14162 (13), -0.14032 (13), -0.14021 (13), -0.13953 (13), -0.13924 (13), -0.13901 (13), -0.13676 (13), -0.13662 (13), -0.13257 (13), -0.12962 (13), -0.12913 (13), -0.12748 (13), -0.11588 (13), -0.11411 (13), -0.10961 (13), -0.10792 (13), 
Length of domains: 207
Time: pickout 0.0022    decision 0.0156    set_bounds 0.0173    solve 0.1561    add 0.0032    
Accumulated time: pickout 0.0201    decision 0.6856    set_bounds 0.1202    solve 1.1565    add 0.6588    
Current (lb-rhs): -0.14886711537837982
518 domains visited
Cumulative time: 3.4369983673095703

BaB round 4
batch: 207
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 284] [/input-8, 284] [/input-8, 1683] [/input-8, 268] [/input-8, 284] [/input-8, 284] [/input-8, 1683] [/input-8, 284] [/input-8, 1683] [/input-8, 284] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14736402034759521
10 lb beta sum: 0.17315998673439026, worst -0.14521971344947815
Time: prepare 0.0085    bound 0.1563    transfer 0.0026    finalize 0.0031    func 0.1731    
Accumulated time: func 1.3881    prepare 0.0736    bound 1.2719    transfer 0.0128    finalize 0.0212    
all_split False
======================Cut inference begins======================
max lb tensor(0.03866221) min lb tensor(-0.14519493)
Number of Verified Splits: 80 of 414
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 48.
#cuts 1-3: 11
#cuts 4-6: 20
#cuts 7-9: 17
#cuts >= 20: 0
BICCOS time: 0.027547121047973633 
BICCOS Cumulative time: 0.7439894676208496
Preprocessing time: 0.012468338012695312 Inference time: 0.008448362350463867 Add cuts time: 0.0044994354248046875 Cut analysis time: 0.0021309852600097656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14519 (14), -0.14466 (14), -0.14319 (14), -0.14273 (14), -0.13662 (14), -0.13542 (14), -0.13491 (14), -0.13313 (14), -0.13282 (14), -0.13189 (14), -0.12895 (14), -0.12890 (14), -0.12740 (14), -0.12541 (14), -0.12476 (14), -0.12473 (14), -0.12419 (14), -0.12363 (14), -0.12261 (14), -0.12222 (14), 
Length of domains: 334
Time: pickout 0.0036    decision 0.0275    set_bounds 0.0173    solve 0.1733    add 0.0034    
Accumulated time: pickout 0.0237    decision 0.7131    set_bounds 0.1376    solve 1.3298    add 0.6622    
Current (lb-rhs): -0.14519493281841278
852 domains visited
Cumulative time: 3.690601110458374

BaB round 5
batch: 334
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 268] [/input-12, 32] [/input-12, 32] [/input-8, 1691] [/input-8, 275] [/input-8, 1699] [/input-8, 1683] [/input-8, 284] [/input-8, 1683] [/input-8, 284] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1413062959909439
10 lb beta sum: 0.19178156554698944, worst -0.13919535279273987
Time: prepare 0.0133    bound 0.1488    transfer 0.0012    finalize 0.0033    func 0.1709    
Accumulated time: func 1.5589    prepare 0.0871    bound 1.4207    transfer 0.0141    finalize 0.0245    
all_split False
======================Cut inference begins======================
max lb tensor(0.03878741) min lb tensor(-0.13917750)
Number of Verified Splits: 99 of 668
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 61.
#cuts 1-3: 11
#cuts 4-6: 29
#cuts 7-9: 21
#cuts >= 20: 0
BICCOS time: 0.038411617279052734 
BICCOS Cumulative time: 0.7824010848999023
Preprocessing time: 0.01909637451171875 Inference time: 0.010882854461669922 Add cuts time: 0.005860567092895508 Cut analysis time: 0.0025718212127685547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13918 (15), -0.13864 (15), -0.13567 (15), -0.13515 (15), -0.13165 (15), -0.13105 (15), -0.13008 (15), -0.12999 (15), -0.12966 (15), -0.12937 (15), -0.12905 (15), -0.12811 (15), -0.12564 (15), -0.12539 (15), -0.12354 (15), -0.12313 (15), -0.12213 (15), -0.12156 (15), -0.12077 (15), -0.11948 (15), 
Length of domains: 569
Time: pickout 0.0063    decision 0.0320    set_bounds 0.0286    solve 0.1711    add 0.0564    
Accumulated time: pickout 0.0300    decision 0.7451    set_bounds 0.1661    solve 1.5008    add 0.7187    
Current (lb-rhs): -0.13917750120162964
1421 domains visited
Cumulative time: 4.024879455566406

BaB round 6
batch: 569
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1699] [/input-8, 275] [/input-12, 32] [/input-8, 284] [/input-12, 32] [/input-8, 1699] [/input-12, 32] [/input-8, 268] [/input-12, 32] [/input-12, 32] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13378408551216125
10 lb beta sum: 0.1815371811389923, worst -0.1316135972738266
Time: prepare 0.0227    bound 0.1567    transfer 0.0058    finalize 0.0056    func 0.1987    
Accumulated time: func 1.7577    prepare 0.1101    bound 1.5773    transfer 0.0199    finalize 0.0300    
all_split False
======================Cut inference begins======================
max lb tensor(0.04141274) min lb tensor(-0.13159344)
Number of Verified Splits: 261 of 1138
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 82.
#cuts 1-3: 13
#cuts 4-6: 51
#cuts 7-9: 18
#cuts >= 20: 0
BICCOS time: 0.08079218864440918 
BICCOS Cumulative time: 0.8631932735443115
Preprocessing time: 0.03479194641113281 Inference time: 0.03193855285644531 Add cuts time: 0.01067495346069336 Cut analysis time: 0.0033867359161376953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13159 (16), -0.13116 (16), -0.12992 (16), -0.12938 (16), -0.12416 (16), -0.12351 (16), -0.12319 (16), -0.12258 (16), -0.12232 (16), -0.12230 (16), -0.12210 (16), -0.12167 (16), -0.12149 (16), -0.12144 (16), -0.11932 (16), -0.11931 (16), -0.11608 (16), -0.11542 (16), -0.11521 (16), -0.11435 (16), 
Length of domains: 877
Time: pickout 0.0095    decision 0.0482    set_bounds 0.0482    solve 0.1991    add 0.0316    
Accumulated time: pickout 0.0395    decision 0.7933    set_bounds 0.2143    solve 1.6999    add 0.7503    
Current (lb-rhs): -0.13159343600273132
2298 domains visited
Cumulative time: 4.446240186691284

BaB round 7
batch: 877
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 32] [/input-12, 32] [/input-8, 1699] [/input-8, 268] [/input-8, 1699] [/input-8, 292] [/input-8, 1293] [/input-8, 284] [/input-8, 1293] [/input-12, 32] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12799201905727386
10 lb beta sum: 0.17593908309936523, worst -0.1335691511631012
Time: prepare 0.0353    bound 0.1753    transfer 0.0134    finalize 0.0114    func 0.2468    
Accumulated time: func 2.0045    prepare 0.1456    bound 1.7526    transfer 0.0333    finalize 0.0414    
all_split False
======================Cut inference begins======================
max lb tensor(0.05027269) min lb tensor(-0.12575124)
Number of Verified Splits: 489 of 1754
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 76.
#cuts 1-3: 16
#cuts 4-6: 44
#cuts 7-9: 16
#cuts >= 20: 0
BICCOS time: 0.13279128074645996 
BICCOS Cumulative time: 0.9959845542907715
Preprocessing time: 0.05416297912597656 Inference time: 0.0628209114074707 Add cuts time: 0.012742996215820312 Cut analysis time: 0.003064393997192383
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12575 (17), -0.12440 (17), -0.12245 (17), -0.12077 (17), -0.12073 (17), -0.12048 (17), -0.11927 (17), -0.11878 (17), -0.11869 (17), -0.11809 (17), -0.11618 (17), -0.11612 (17), -0.11603 (17), -0.11451 (17), -0.11439 (17), -0.11402 (17), -0.11369 (17), -0.11342 (17), -0.11341 (17), -0.11336 (17), 
Length of domains: 1265
Time: pickout 0.0176    decision 0.2443    set_bounds 0.0765    solve 0.2471    add 0.0127    
Accumulated time: pickout 0.0571    decision 1.0376    set_bounds 0.2908    solve 1.9470    add 0.7629    
Current (lb-rhs): -0.12575124204158783
3563 domains visited
Cumulative time: 5.183279991149902

BaB round 8
batch: 1265
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 277] [/input-12, 32] [/input-8, 275] [/input-12, 32] [/input-8, 1540] [/input-8, 292] [/input-8, 1540] [/input-8, 1699] [/input-8, 292] [/input-8, 1699] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11921337246894836
10 lb beta sum: 0.1930672973394394, worst -0.11701540648937225
Time: prepare 0.0513    bound 0.2217    transfer 0.0182    finalize 0.0129    func 0.3215    
Accumulated time: func 2.3260    prepare 0.1972    bound 1.9743    transfer 0.0515    finalize 0.0543    
all_split False
======================Cut inference begins======================
max lb tensor(0.06228255) min lb tensor(-0.11696178)
Number of Verified Splits: 549 of 2530
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 88.
#cuts 1-3: 20
#cuts 4-6: 55
#cuts 7-9: 13
#cuts >= 20: 0
BICCOS time: 0.17194128036499023 
BICCOS Cumulative time: 1.1679258346557617
Preprocessing time: 0.07807326316833496 Inference time: 0.07550406455993652 Add cuts time: 0.014936685562133789 Cut analysis time: 0.003427267074584961
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11696 (18), -0.11613 (18), -0.11545 (18), -0.11536 (18), -0.11472 (18), -0.11463 (18), -0.11416 (18), -0.11354 (18), -0.11351 (18), -0.11313 (18), -0.11242 (18), -0.11156 (18), -0.11067 (18), -0.11056 (18), -0.11056 (18), -0.11023 (18), -0.11018 (18), -0.10930 (18), -0.10926 (18), -0.10924 (18), 
Length of domains: 1981
Time: pickout 0.0184    decision 0.0855    set_bounds 0.1070    solve 0.3220    add 0.0148    
Accumulated time: pickout 0.0755    decision 1.1232    set_bounds 0.3978    solve 2.2690    add 0.7777    
Current (lb-rhs): -0.1169617772102356
5544 domains visited
Cumulative time: 5.9103429317474365

BaB round 9
batch: 1981
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 275] [/input-8, 277] [/input-8, 1699] [/input-8, 1699] [/input-8, 292] [/input-8, 1691] [/input-8, 275] [/input-8, 1691] [/input-8, 277] [/input-8, 1691] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11598193645477295
10 lb beta sum: 0.19731289148330688, worst -0.12671078741550446
Time: prepare 0.0793    bound 0.2993    transfer 0.0184    finalize 0.0183    func 0.4416    
Accumulated time: func 2.7676    prepare 0.2768    bound 2.2736    transfer 0.0698    finalize 0.0726    
all_split False
======================Cut inference begins======================
max lb tensor(0.08214700) min lb tensor(-0.11376292)
Number of Verified Splits: 887 of 3962
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 94.
#cuts 1-3: 24
#cuts 4-6: 61
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.27784228324890137 
BICCOS Cumulative time: 1.445768117904663
Preprocessing time: 0.12412381172180176 Inference time: 0.1286008358001709 Add cuts time: 0.02155303955078125 Cut analysis time: 0.003564596176147461
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11376 (19), -0.11296 (19), -0.11223 (19), -0.11220 (19), -0.11147 (19), -0.11134 (19), -0.11093 (19), -0.11049 (19), -0.10979 (19), -0.10927 (19), -0.10836 (19), -0.10742 (19), -0.10739 (19), -0.10738 (19), -0.10685 (19), -0.10617 (19), -0.10603 (19), -0.10600 (19), -0.10579 (19), -0.10573 (19), 
Length of domains: 3075
Time: pickout 0.0340    decision 0.2933    set_bounds 0.1698    solve 0.4425    add 0.0265    
Accumulated time: pickout 0.1095    decision 1.4164    set_bounds 0.5676    solve 2.7116    add 0.8042    
Current (lb-rhs): -0.11376291513442993
8619 domains visited
Cumulative time: 7.16787314414978

BaB round 10
batch: 3075
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 285] [/input-8, 285] [/input-8, 1285] [/input-8, 275] [/input-8, 1691] [/input-8, 275] [/input-8, 1691] [/input-8, 268] [/input-8, 420] [/input-8, 275] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11034820973873138
10 lb beta sum: 0.19356420636177063, worst -0.16156497597694397
Time: prepare 0.1260    bound 0.4243    transfer 0.0431    finalize 0.0296    func 0.6621    
Accumulated time: func 3.4297    prepare 0.4031    bound 2.6979    transfer 0.1129    finalize 0.1022    
all_split False
======================Cut inference begins======================
max lb tensor(0.37701228) min lb tensor(-0.10819989)
Number of Verified Splits: 1401 of 6150
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 17
#cuts 4-6: 24
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.6362342834472656 
BICCOS Cumulative time: 2.0820024013519287
Preprocessing time: 0.1923227310180664 Inference time: 0.42076778411865234 Add cuts time: 0.021411418914794922 Cut analysis time: 0.0017323493957519531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10820 (20), -0.10787 (20), -0.10716 (20), -0.10665 (20), -0.10652 (20), -0.10606 (20), -0.10552 (20), -0.10492 (20), -0.10403 (20), -0.10382 (20), -0.10356 (20), -0.10250 (20), -0.10233 (20), -0.10230 (20), -0.10228 (20), -0.10227 (20), -0.10221 (20), -0.10172 (20), -0.10162 (20), -0.10152 (20), 
Length of domains: 4749
Time: pickout 0.0460    decision 0.3499    set_bounds 0.2765    solve 0.6641    add 0.0368    
Accumulated time: pickout 0.1555    decision 1.7664    set_bounds 0.8441    solve 3.3756    add 0.8409    
Current (lb-rhs): -0.10819989442825317
13368 domains visited
Cumulative time: 9.213187456130981

BaB round 11
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 292] [/input-8, 293] [/input-8, 275] [/input-8, 1285] [/input-8, 858] [/input-8, 275] [/input-8, 858] [/input-8, 275] [/input-8, 915] [/input-8, 858] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10666760802268982
10 lb beta sum: 0.4479852318763733, worst -0.10662537813186646
Time: prepare 0.1836    bound 0.5213    transfer 0.0528    finalize 0.3015    func 1.1150    
Accumulated time: func 4.5447    prepare 0.5870    bound 3.2192    transfer 0.1657    finalize 0.4037    
all_split False
======================Cut inference begins======================
max lb tensor(0.39084166) min lb tensor(-0.10453638)
Number of Verified Splits: 4345 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 28
#cuts 4-6: 2
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 1.044248104095459 
BICCOS Cumulative time: 3.1262505054473877
Preprocessing time: 0.2928738594055176 Inference time: 0.6899914741516113 Add cuts time: 0.060484886169433594 Cut analysis time: 0.0008978843688964844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10454 (21), -0.10420 (21), -0.10391 (21), -0.10337 (21), -0.10299 (21), -0.10289 (21), -0.10261 (21), -0.10225 (21), -0.09987 (21), -0.09958 (21), -0.09944 (21), -0.09935 (21), -0.09892 (21), -0.09883 (21), -0.09868 (21), -0.09861 (21), -0.09860 (21), -0.09853 (21), -0.09852 (21), -0.09841 (21), 
Length of domains: 4500
Time: pickout 0.0740    decision 0.2447    set_bounds 0.4118    solve 1.1193    add 0.0374    
Accumulated time: pickout 0.2295    decision 2.0110    set_bounds 1.2559    solve 4.4949    add 0.8783    
Current (lb-rhs): -0.10453638434410095
17215 domains visited
current_vram/total_varm: 10.4GB/99.9GB, batch_size increase to 8192
Cumulative time: 12.233893156051636

BaB round 12
batch: 4500
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 268] [/input-8, 1293] [/input-8, 268] [/input-8, 292] [/input-8, 1667] [/input-8, 275] [/input-8, 1285] [/input-8, 1667] [/input-8, 275] [/input-8, 1293] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1041463315486908
10 lb beta sum: 2.606015205383301, worst -0.08174216747283936
Time: prepare 0.1927    bound 0.5651    transfer 0.0821    finalize 0.3338    func 1.2378    
Accumulated time: func 5.7825    prepare 0.7801    bound 3.7843    transfer 0.2478    finalize 0.7375    
all_split False
======================Cut inference begins======================
max lb tensor(0.98302794) min lb tensor(-0.08168697)
Number of Verified Splits: 8271 of 9000
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 2.053966760635376 
BICCOS Cumulative time: 5.180217266082764
Preprocessing time: 0.3262646198272705 Inference time: 1.6367506980895996 Add cuts time: 0.09042501449584961 Cut analysis time: 0.00052642822265625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08169 (22), -0.07954 (22), -0.07950 (22), -0.07841 (22), -0.07753 (22), -0.07715 (22), -0.07703 (22), -0.07549 (22), -0.07487 (22), -0.07487 (22), -0.07463 (22), -0.07443 (22), -0.07411 (22), -0.07379 (22), -0.07359 (22), -0.07315 (22), -0.07296 (22), -0.07292 (22), -0.07202 (22), -0.07144 (22), 
Length of domains: 729
Time: pickout 0.1119    decision 0.5304    set_bounds 0.4672    solve 1.2407    add 0.0963    
Accumulated time: pickout 0.3415    decision 2.5414    set_bounds 1.7232    solve 5.7356    add 0.9747    
Current (lb-rhs): -0.08168697357177734
17944 domains visited
Cumulative time: 16.86346697807312

BaB round 13
batch: 729
splitting decisions: 
split level 0: [/input-8, 268] [/input-8, 285] [/input-8, 1285] [/input-8, 285] [/input-8, 285] [/input-8, 277] [/input-8, 285] [/input-8, 268] [/input-8, 1540] [/input-8, 1540] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09954299032688141
10 lb beta sum: 0.2622452974319458, worst -0.009588569402694702

all verified at 15th iter
Time: prepare 0.0313    bound 0.1181    transfer 0.0130    finalize 0.0085    func 0.1811    
Accumulated time: func 5.9636    prepare 0.8117    bound 3.9024    transfer 0.2608    finalize 0.7460    
all_split False
======================Cut inference begins======================
max lb tensor(0.33984095) min lb tensor(0.04236129)
Number of Verified Splits: 1458 of 1458
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.04835104942321777 
BICCOS Cumulative time: 5.2285683155059814
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0254    decision 0.0653    set_bounds 0.0715    solve 0.1814    add 0.0003    
Accumulated time: pickout 0.3668    decision 2.6067    set_bounds 1.7946    solve 5.9170    add 0.9750    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
17944 domains visited
Cumulative time: 17.265494108200073


Properties batch 5, size 1
Remaining timeout: 179.75156140327454
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 179.75144720077515
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 179.75142073631287
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 179.75139927864075
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 20.2487 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 192, vnnlib ID: 192 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.03581238, -36.50500107, -29.20253944, -34.49015045, -32.95780945,
         -35.32157516, -30.99319839, -36.15536118, -38.65440750, -38.70660782]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [718]; unstable size 718; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 375, 1, 718] with unstable size 374 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 42, 1, 718] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 718] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [374]; unstable size 374; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 42, 1, 374] with unstable size 41 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 374] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [41]; unstable size 41; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 41] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.59052944,  3.06802893,  1.88698244,  0.28190756,  1.59899032,
         -1.41983318,  1.56096137,  5.58670139,  4.53086853]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.03581238, -36.50500107, -29.20253944, -34.49015045, -32.95780945,
         -35.32157516, -30.99319839, -36.15536118, -38.65440750, -38.70660782]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.62it/s]100%|██████████| 1/1 [00:00<00:00,  7.61it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-36.32686996, -37.25120163, -30.85453606, -35.59416199, -34.10257339,
          -36.57465744, -31.39778519, -37.45621872, -39.80157089, -39.54599380]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.54324913]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1344 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 21.552915573120117
alpha/beta optimization time: 1.410381555557251
initial alpha-crown bounds: tensor([[ 2.76819992,  3.30648232,  2.05390120,  0.45166349,  1.80518448,
         -1.24816453,  1.81993699,  5.85098886,  4.74472237]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -1.2481645345687866
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.3624665737152
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.36240768432617
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.3623812198639
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.36235237121582
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.3623321056366
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.3623116016388
Verifying property 5 with 1 instances.
##### Instance 192 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.24816453]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.03581238, -36.50500107, -29.20253944, -34.49015045, -32.95780945,
        -35.32157516, -30.99319839, -36.15536118, -38.65440750, -38.70660782],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.24816453]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 718
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 368
Node /15 input 0: size torch.Size([100]) unstable 39
-----------------
# of unstable neurons: 1125
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010943412780761719
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.248157262802124
10 lb beta sum: 0.0, worst -1.2481701374053955
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0600    transfer 0.0001    finalize 0.0002    func 0.0605    
Accumulated time: func 0.0605    prepare 0.0002    bound 0.0600    transfer 0.0001    finalize 0.0002    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 44] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 80] 
split level 3: [/input-12, 6] 
split level 4: [/input-12, 53] 
split level 5: [/input-12, 9] 
split level 6: [/input-12, 81] 
split level 7: [/input-12, 0] 
split level 8: [/input-12, 78] 
split level 9: [/input-12, 45] 
split level 10: [/input-12, 54] 
split level 11: [/input-12, 43] 
split level 12: [/input-12, 51] 
split level 13: [/input-8, 1329] 
split level 14: [/input-12, 32] 
split level 15: [/input-12, 75] 
split level 16: [/input-8, 1701] 
split level 17: [/input-8, 1997] 
split level 18: [/input-8, 2026] 
split level 19: [/input-8, 1698] 
split level 20: [/input-8, 204] 
split level 21: [/input, 1987] 
split level 22: [/input-8, 2005] 
split level 23: [/input-12, 29] 
split level 24: [/input-8, 1674] 
split level 25: [/input-8, 1965] 
split level 26: [/input-8, 1338] 
split level 27: [/input-8, 1445] 
split level 28: [/input-12, 88] 
split level 29: [/input, 4034] 
split level 30: [/input-8, 172] 
split level 31: [/input-8, 1705] 
split level 32: [/input-8, 2013] 
split level 33: [/input-8, 678] 
split level 34: [/input-8, 1515] 
split level 35: [/input-8, 212] 
split level 36: [/input-8, 2020] 
split level 37: [/input-8, 1956] 
split level 38: [/input-8, 2030] 
split level 39: [/input-8, 1313] 
split level 40: [/input-8, 533] 
split level 41: [/input-8, 1035] 
split level 42: [/input, 99] 
split level 43: [/input, 937] 
split level 44: [/input, 2412] 
split level 45: [/input, 2390] 
split level 46: [/input, 89] 
split level 47: [/input-8, 303] 
split level 48: [/input-8, 1283] 
split level 49: [/input, 4017] 
split level 50: [/input, 71] 
split level 51: [/input-8, 526] 
split level 52: [/input, 2392] 
split level 53: [/input-8, 1713] 
split level 54: [/input, 1354] 
split level 55: [/input, 2122] 
split level 56: [/input-8, 1516] 
split level 57: [/input-8, 1135] 
split level 58: [/input-8, 2021] 
split level 59: [/input-8, 179] 
split level 60: [/input, 107] 
split level 61: [/input-8, 1421] 
split level 62: [/input-8, 1021] 
split level 63: [/input-8, 2014] 
split level 64: [/input, 690] 
split level 65: [/input-8, 2017] 
split level 66: [/input, 4021] 
split level 67: [/input, 922] 
split level 68: [/input, 2385] 
split level 69: [/input-8, 670] 
split level 70: [/input, 103] 
split level 71: [/input-8, 1567] 
split level 72: [/input, 105] 
split level 73: [/input, 100] 
split level 74: [/input-8, 302] 
split level 75: [/input-8, 140] 
split level 76: [/input-8, 173] 
split level 77: [/input, 4009] 
split level 78: [/input, 104] 
split level 79: [/input-8, 935] 
split level 80: [/input, 1814] 
split level 81: [/input, 2620] 
split level 82: [/input-8, 210] 
split level 83: [/input, 3974] 
split level 84: [/input-8, 1720] 
split level 85: [/input-8, 2029] 
split level 86: [/input, 118] 
split level 87: [/input, 682] 
split level 88: [/input-8, 182] 
split level 89: [/input-8, 2016] 
split level 90: [/input, 3964] 
split level 91: [/input, 938] 
split level 92: [/input-8, 311] 
split level 93: [/input, 88] 
split level 94: [/input-8, 1986] 
split level 95: [/input-8, 1846] 
split level 96: [/input, 73] 
split level 97: [/input-8, 1966] 
split level 98: [/input, 115] 
split level 99: [/input-8, 1958] 
split level 100: [/input, 1641] 
split level 101: [/input, 2401] 
split level 102: [/input, 680] 
split level 103: [/input-8, 1149] 
split level 104: [/input-8, 1582] 
split level 105: [/input, 139] 
split level 106: [/input, 796] 
split level 107: [/input-8, 920] 
split level 108: [/input, 599] 
split level 109: [/input, 140] 
split level 110: [/input-8, 2004] 
split level 111: [/input, 1860] 
split level 112: [/input, 691] 
split level 113: [/input, 646] 
split level 114: [/input, 1163] 
split level 115: [/input-8, 1974] 
split level 116: [/input, 1132] 
split level 117: [/input, 2444] 
split level 118: [/input, 2654] 
split level 119: [/input, 2409] 
split level 120: [/input, 659] 
split level 121: [/input, 1148] 
split level 122: [/input, 1110] 
split level 123: [/input-8, 1073] 
split level 124: [/input, 1112] 
split level 125: [/input, 108] 
split level 126: [/input, 583] 
split level 127: [/input, 2018] 
split level 128: [/input-8, 1987] 
split level 129: [/input-8, 1020] 
split level 130: [/input, 4049] 
split level 131: [/input-8, 1989] 
split level 132: [/input, 868] 
split level 133: [/input, 211] 
split level 134: [/input-8, 527] 
split level 135: [/input, 2136] 
split level 136: [/input-8, 178] 
split level 137: [/input-8, 656] 
split level 138: [/input, 1131] 
split level 139: [/input, 3272] 
split level 140: [/input, 612] 
split level 141: [/input-8, 1941] 
split level 142: [/input, 665] 
split level 143: [/input, 178] 
split level 144: [/input, 4010] 
split level 145: [/input, 900] 
split level 146: [/input, 883] 
split level 147: [/input-8, 313] 
split level 148: [/input, 708] 
split level 149: [/input, 2396] 
split level 150: [/input, 1109] 
split level 151: [/input-8, 1594] 
split level 152: [/input, 611] 
split level 153: [/input, 851] 
split level 154: [/input, 114] 
split level 155: [/input, 1129] 
split level 156: [/input-8, 132] 
split level 157: [/input, 1843] 
split level 158: [/input, 1657] 
split level 159: [/input-8, 468] 
split level 160: [/input-8, 310] 
split level 161: [/input, 57] 
split level 162: [/input, 171] 
split level 163: [/input, 664] 
split level 164: [/input, 3199] 
split level 165: [/input, 92] 
split level 166: [/input-8, 943] 
split level 167: [/input, 1094] 
split level 168: [/input, 309] 
split level 169: [/input, 844] 
split level 170: [/input, 913] 
split level 171: [/input, 2152] 
split level 172: [/input, 119] 
split level 173: [/input, 155] 
split level 174: [/input, 949] 
split level 175: [/input-8, 2034] 
split level 176: [/input, 131] 
split level 177: [/input-8, 1034] 
split level 178: [/input, 2400] 
split level 179: [/input, 1642] 
split level 180: [/input-8, 1326] 
split level 181: [/input-8, 785] 
split level 182: [/input, 2091] 
split level 183: [/input-8, 1836] 
split level 184: [/input, 651] 
split level 185: [/input, 53] 
split level 186: [/input-8, 301] 
split level 187: [/input, 2118] 
split level 188: [/input-8, 948] 
split level 189: [/input, 3862] 
split level 190: [/input, 862] 
split level 191: [/input, 3230] 
split level 192: [/input, 3110] 
split level 193: [/input, 637] 
split level 194: [/input, 669] 
split level 195: [/input, 2138] 
split level 196: [/input-8, 934] 
split level 197: [/input-8, 131] 
split level 198: [/input, 1930] 
split level 199: [/input-8, 891] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2479169368743896
10 lb beta sum: 0.0, worst -1.2479302883148193
Time: prepare 0.0113    bound 0.1122    transfer 0.0052    finalize 0.0043    func 0.1356    
Accumulated time: func 0.1961    prepare 0.0219    bound 0.1722    transfer 0.0053    finalize 0.0045    
all_split False
======================Cut inference begins======================
max lb tensor(-0.44973588) min lb tensor(-1.24791694)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.011806249618530273 
BICCOS Cumulative time: 0.011806249618530273
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-1.21965 (1), -1.21960 (1), -1.21884 (1), -1.21516 (1), -1.21508 (1), -1.21458 (1), -1.21379 (1), -1.21246 (1), -1.21194 (1), -1.21108 (1), -1.20882 (1), -1.20792 (1), -1.20674 (1), -1.20462 (1), -1.20446 (1), -1.20234 (1), -1.20034 (1), -1.19844 (1), -1.19580 (1), -1.19419 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5338    set_bounds 0.0101    solve 0.1357    add 0.1305    
Accumulated time: pickout 0.0004    decision 0.5338    set_bounds 0.0101    solve 0.1357    add 0.1305    
Current (lb-rhs): -1.2196474075317383
50 domains visited
Cumulative time: 0.8984949588775635

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 80] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] [/input-12, 44] 
split level 1: [/input-12, 6] [/input-12, 80] [/input-12, 80] [/input-12, 6] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
split level 2: [/input-12, 9] [/input-12, 6] [/input-12, 6] [/input-12, 9] [/input-12, 6] [/input-12, 6] [/input-12, 9] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
split level 3: [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 9] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.128455638885498
10 lb beta sum: 0.0, worst -1.1254489421844482
Time: prepare 0.0123    bound 0.1099    transfer 0.0008    finalize 0.0029    func 0.1287    
Accumulated time: func 0.3248    prepare 0.0344    bound 0.2821    transfer 0.0061    finalize 0.0074    
all_split False
======================Cut inference begins======================
max lb tensor(0.06297588) min lb tensor(-1.12543178)
Number of Verified Splits: 5 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.014414310455322266 
BICCOS Cumulative time: 0.02622056007385254
Preprocessing time: 0.012961149215698242 Inference time: 0.0002903938293457031 Add cuts time: 9.012222290039062e-05 Cut analysis time: 0.0010726451873779297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40846 (2), -0.40761 (2), -0.40662 (2), -0.40546 (2), -0.40543 (2), -0.40142 (2), -0.40112 (2), -0.40102 (2), -0.40035 (2), -0.40028 (2), -0.39966 (2), -0.39811 (2), -0.39767 (2), -0.39511 (2), -0.39208 (2), -0.39053 (2), -0.38567 (2), -0.38345 (2), -0.37991 (2), -0.37972 (2), 
Length of domains: 50
Time: pickout 0.0013    decision 0.0229    set_bounds 0.0155    solve 0.1288    add 0.0821    
Accumulated time: pickout 0.0016    decision 0.5566    set_bounds 0.0257    solve 0.2645    add 0.2126    
Current (lb-rhs): -0.40846413373947144
100 domains visited
Cumulative time: 1.1637983322143555

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 44] [/input-12, 80] [/input-12, 80] [/input-12, 44] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 44] 
split level 1: [/input-12, 80] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 9] [/input-12, 9] [/input-12, 6] [/input-12, 80] 
split level 2: [/input-12, 6] [/input-12, 9] [/input-12, 81] [/input-12, 9] [/input-12, 81] [/input-12, 9] [/input-12, 81] [/input-12, 81] [/input-12, 9] [/input-12, 9] 
split level 3: [/input-12, 9] [/input-12, 81] [/input-12, 51] [/input-12, 81] [/input-12, 51] [/input-12, 81] [/input-12, 51] [/input-12, 51] [/input-12, 81] [/input-12, 81] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.33689284324645996
10 lb beta sum: 0.2933295667171478, worst -0.571651816368103
Time: prepare 0.0068    bound 0.1287    transfer 0.0008    finalize 0.0025    func 0.1424    
Accumulated time: func 0.4672    prepare 0.0415    bound 0.4107    transfer 0.0069    finalize 0.0098    
all_split False
======================Cut inference begins======================
max lb tensor(0.48695803) min lb tensor(-0.27550614)
Number of Verified Splits: 216 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 15
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.028910398483276367 
BICCOS Cumulative time: 0.055130958557128906
Preprocessing time: 0.013576745986938477 Inference time: 0.011576175689697266 Add cuts time: 0.0031044483184814453 Cut analysis time: 0.0006530284881591797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08485 (3), -0.08391 (3), -0.08242 (3), -0.08187 (3), -0.08115 (3), -0.07985 (3), -0.07936 (3), -0.07886 (3), -0.07872 (3), -0.07862 (3), -0.07859 (3), -0.07714 (3), -0.07710 (3), -0.07442 (3), -0.07340 (3), -0.07331 (3), -0.07201 (3), -0.07134 (3), -0.07092 (3), -0.06792 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0216    set_bounds 0.0185    solve 0.1426    add 0.1093    
Accumulated time: pickout 0.0027    decision 0.5783    set_bounds 0.0442    solve 0.4071    add 0.3218    
Current (lb-rhs): -0.0848456621170044
150 domains visited
Cumulative time: 1.4861502647399902

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 44] [/input-12, 44] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
split level 1: [/input-12, 80] [/input-12, 80] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] 
split level 2: [/input-12, 9] [/input-12, 9] [/input-12, 81] [/input-12, 78] [/input-12, 78] [/input-12, 81] [/input-12, 81] [/input-12, 78] [/input-12, 78] [/input-12, 81] 
split level 3: [/input-12, 51] [/input-12, 51] [/input-12, 78] [/input-12, 51] [/input-12, 51] [/input-12, 78] [/input-12, 78] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22352290153503418
10 lb beta sum: 0.3019968271255493, worst -0.47208601236343384
Time: prepare 0.0068    bound 0.1496    transfer 0.0009    finalize 0.0024    func 0.1623    
Accumulated time: func 0.6295    prepare 0.0486    bound 0.5603    transfer 0.0078    finalize 0.0122    
all_split False
======================Cut inference begins======================
max lb tensor(0.49112153) min lb tensor(-0.01898402)
Number of Verified Splits: 397 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 5
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.04433131217956543 
BICCOS Cumulative time: 0.09946227073669434
Preprocessing time: 0.013302326202392578 Inference time: 0.021823883056640625 Add cuts time: 0.00867915153503418 Cut analysis time: 0.0005259513854980469
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0205    set_bounds 0.0179    solve 0.1624    add 0.0239    
Accumulated time: pickout 0.0037    decision 0.5988    set_bounds 0.0621    solve 0.5694    add 0.3458    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 44] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 80] 
split level 3: [/input-12, 6] 
split level 4: [/input-12, 9] 
split level 5: [/input-12, 81] 
split level 6: [/input-12, 78] 
split level 7: [/input-12, 51] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5238637924194336
10 lb beta sum: 0.07868437469005585, worst -0.522132158279419
Time: prepare 0.0037    bound 0.1278    transfer 0.0010    finalize 0.0016    func 0.1358    
Accumulated time: func 0.7652    prepare 0.0527    bound 0.6881    transfer 0.0088    finalize 0.0138    
all_split False
======================Cut inference begins======================
max lb tensor(0.95409727) min lb tensor(-0.52138305)
Number of Verified Splits: 221 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.9635149240493774
10 lb beta sum: 0.7635317444801331, worst -0.8219709396362305
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 3
#cuts 4-6: 8
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.2528409957885742 
BICCOS Cumulative time: 0.35230326652526855
Preprocessing time: 0.007120370864868164 Inference time: 0.23920130729675293 Add cuts time: 0.0054645538330078125 Cut analysis time: 0.0010547637939453125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52138 (8), -0.51841 (8), -0.43901 (8), -0.42257 (8), -0.41327 (8), -0.41266 (8), -0.34609 (8), -0.33760 (8), -0.27921 (8), -0.27798 (8), -0.27701 (8), -0.27429 (8), -0.26539 (8), -0.26295 (8), -0.24366 (8), -0.24283 (8), -0.24013 (8), -0.22296 (8), -0.20561 (8), -0.19300 (8), 
Length of domains: 35
Time: pickout 0.0005    decision 0.0235    set_bounds 0.0175    solve 0.1358    add 0.0013    
Accumulated time: pickout 0.0042    decision 0.6223    set_bounds 0.0796    solve 0.7053    add 0.3471    
Current (lb-rhs): -0.5213830471038818
185 domains visited
Cumulative time: 2.1962568759918213

BaB round 2
batch: 35
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
split level 1: [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] 
split level 2: [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.39989423751831055
10 lb beta sum: 0.0, worst -0.3982837200164795
Time: prepare 0.0044    bound 0.1304    transfer 0.0021    finalize 0.0019    func 0.1406    
Accumulated time: func 0.9059    prepare 0.0574    bound 0.8185    transfer 0.0109    finalize 0.0157    
all_split False
======================Cut inference begins======================
max lb tensor(0.55197859) min lb tensor(-0.39747071)
Number of Verified Splits: 241 of 280
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7364659309387207
10 lb beta sum: 0.5361332297325134, worst -0.3755599856376648
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 88.
#cuts 1-3: 3
#cuts 4-6: 19
#cuts 7-9: 64
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.3137080669403076 
BICCOS Cumulative time: 0.6660113334655762
Preprocessing time: 0.00962376594543457 Inference time: 0.277860164642334 Add cuts time: 0.020705461502075195 Cut analysis time: 0.005518674850463867
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39747 (11), -0.39337 (11), -0.30854 (11), -0.30104 (11), -0.29473 (11), -0.28952 (11), -0.28788 (11), -0.28074 (11), -0.21485 (11), -0.20643 (11), -0.20472 (11), -0.18184 (11), -0.17649 (11), -0.17495 (11), -0.16133 (11), -0.15939 (11), -0.14809 (11), -0.14008 (11), -0.13966 (11), -0.13855 (11), 
Length of domains: 39
Time: pickout 0.0055    decision 0.0148    set_bounds 0.1962    solve 0.1408    add 0.0425    
Accumulated time: pickout 0.0097    decision 0.6370    set_bounds 0.2758    solve 0.8460    add 0.3896    
Current (lb-rhs): -0.39747071266174316
224 domains visited
Cumulative time: 2.9138035774230957

BaB round 3
batch: 39
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 43] [/input-12, 54] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 43] [/input-12, 54] 
split level 1: [/input-12, 54] [/input-12, 43] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 54] [/input-12, 43] 
split level 2: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.26746630668640137
10 lb beta sum: 0.0, worst -0.2663459777832031
Time: prepare 0.0045    bound 0.1271    transfer 0.0022    finalize 0.0020    func 0.1380    
Accumulated time: func 1.0439    prepare 0.0621    bound 0.9456    transfer 0.0131    finalize 0.0177    
all_split False
======================Cut inference begins======================
max lb tensor(0.22571182) min lb tensor(-0.26595545)
Number of Verified Splits: 255 of 312
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.04570293426513672 
BICCOS Cumulative time: 0.7117142677307129
Preprocessing time: 0.009960651397705078 Inference time: 0.029645681381225586 Add cuts time: 0.005486488342285156 Cut analysis time: 0.0006101131439208984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26596 (14), -0.26072 (14), -0.25910 (14), -0.25574 (14), -0.17607 (14), -0.16874 (14), -0.16573 (14), -0.16365 (14), -0.15608 (14), -0.15531 (14), -0.15483 (14), -0.15348 (14), -0.14835 (14), -0.14687 (14), -0.14570 (14), -0.13501 (14), -0.12171 (14), -0.11614 (14), -0.11537 (14), -0.11029 (14), 
Length of domains: 57
Time: pickout 0.0022    decision 0.0146    set_bounds 0.0176    solve 0.1381    add 0.0017    
Accumulated time: pickout 0.0119    decision 0.6517    set_bounds 0.2934    solve 0.9841    add 0.3913    
Current (lb-rhs): -0.26595544815063477
281 domains visited
Cumulative time: 3.136044502258301

BaB round 4
batch: 57
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] [/input-12, 75] 
split level 1: [/input-8, 1965] [/input-8, 1965] [/input-8, 1701] [/input-8, 1965] [/input-8, 1965] [/input-8, 1701] [/input-8, 1965] [/input-8, 1705] [/input-8, 1956] [/input-8, 1698] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20950722694396973
10 lb beta sum: 0.028125056996941566, worst -0.20911192893981934
Time: prepare 0.0046    bound 0.1268    transfer 0.0018    finalize 0.0015    func 0.1368    
Accumulated time: func 1.1807    prepare 0.0669    bound 1.0723    transfer 0.0149    finalize 0.0192    
all_split False
======================Cut inference begins======================
max lb tensor(0.31580424) min lb tensor(-0.20903373)
Number of Verified Splits: 150 of 228
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 11
#cuts 4-6: 2
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.026972293853759766 
BICCOS Cumulative time: 0.7386865615844727
Preprocessing time: 0.007319211959838867 Inference time: 0.017554521560668945 Add cuts time: 0.0015025138854980469 Cut analysis time: 0.0005960464477539062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20903 (16), -0.20799 (16), -0.20680 (16), -0.20352 (16), -0.19510 (16), -0.19346 (16), -0.19237 (16), -0.19065 (16), -0.16783 (16), -0.15383 (16), -0.15109 (16), -0.14592 (16), -0.14525 (16), -0.13477 (16), -0.13017 (16), -0.12666 (16), -0.11932 (16), -0.11386 (16), -0.11123 (16), -0.11120 (16), 
Length of domains: 78
Time: pickout 0.0022    decision 0.0144    set_bounds 0.0142    solve 0.1368    add 0.0014    
Accumulated time: pickout 0.0141    decision 0.6661    set_bounds 0.3077    solve 1.1210    add 0.3927    
Current (lb-rhs): -0.20903372764587402
359 domains visited
Cumulative time: 3.333402633666992

BaB round 5
batch: 78
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-8, 1698] [/input-12, 29] [/input-12, 29] [/input-8, 534] [/input-8, 1701] [/input-8, 1701] 
split level 1: [/input-8, 1956] [/input-8, 1956] [/input-12, 88] [/input-12, 88] [/input-12, 29] [/input-8, 1965] [/input-12, 88] [/input-8, 1698] [/input-8, 1705] [/input-8, 1705] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19273114204406738
10 lb beta sum: 0.025953426957130432, worst -0.19230318069458008
Time: prepare 0.0067    bound 0.1443    transfer 0.0007    finalize 0.0025    func 0.1564    
Accumulated time: func 1.3370    prepare 0.0738    bound 1.2167    transfer 0.0156    finalize 0.0218    
all_split False
======================Cut inference begins======================
max lb tensor(0.10990552) min lb tensor(-0.19213700)
Number of Verified Splits: 131 of 312
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 11
#cuts 4-6: 19
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.03323984146118164 
BICCOS Cumulative time: 0.7719264030456543
Preprocessing time: 0.011264562606811523 Inference time: 0.01842665672302246 Add cuts time: 0.002362966537475586 Cut analysis time: 0.0011856555938720703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19214 (18), -0.19105 (18), -0.18401 (18), -0.18046 (18), -0.17749 (18), -0.17408 (18), -0.17261 (18), -0.16987 (18), -0.16735 (18), -0.16705 (18), -0.16116 (18), -0.16037 (18), -0.15587 (18), -0.14804 (18), -0.14771 (18), -0.14513 (18), -0.14201 (18), -0.14152 (18), -0.14021 (18), -0.13841 (18), 
Length of domains: 181
Time: pickout 0.0023    decision 0.0158    set_bounds 0.0198    solve 0.1565    add 0.0132    
Accumulated time: pickout 0.0164    decision 0.6819    set_bounds 0.3275    solve 1.2774    add 0.4060    
Current (lb-rhs): -0.1921370029449463
540 domains visited
Cumulative time: 3.576228380203247

BaB round 6
batch: 181
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1965] [/input-8, 1698] [/input-8, 534] [/input-8, 1698] [/input-8, 534] [/input-12, 29] [/input-8, 535] [/input-8, 1698] [/input-8, 1698] [/input-8, 535] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1843714714050293
10 lb beta sum: 0.018566705286502838, worst -0.18424272537231445
Time: prepare 0.0075    bound 0.1489    transfer 0.0024    finalize 0.0025    func 0.1637    
Accumulated time: func 1.5007    prepare 0.0816    bound 1.3656    transfer 0.0179    finalize 0.0243    
all_split False
======================Cut inference begins======================
max lb tensor(0.02973254) min lb tensor(-0.18414998)
Number of Verified Splits: 92 of 362
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 49.
#cuts 1-3: 11
#cuts 4-6: 35
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.030864238739013672 
BICCOS Cumulative time: 0.802790641784668
Preprocessing time: 0.011781692504882812 Inference time: 0.012683629989624023 Add cuts time: 0.004711627960205078 Cut analysis time: 0.0016872882843017578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18415 (19), -0.17854 (19), -0.17362 (19), -0.16879 (19), -0.16818 (19), -0.16534 (19), -0.16417 (19), -0.16314 (19), -0.16037 (19), -0.15930 (19), -0.15523 (19), -0.15298 (19), -0.14816 (19), -0.14661 (19), -0.14514 (19), -0.14468 (19), -0.14405 (19), -0.14075 (19), -0.14049 (19), -0.14005 (19), 
Length of domains: 270
Time: pickout 0.0041    decision 0.0205    set_bounds 0.0163    solve 0.1638    add 0.0029    
Accumulated time: pickout 0.0206    decision 0.7023    set_bounds 0.3438    solve 1.4412    add 0.4088    
Current (lb-rhs): -0.18414998054504395
810 domains visited
Cumulative time: 3.8161606788635254

BaB round 7
batch: 270
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 535] [/input-8, 534] [/input-8, 1698] [/input-8, 535] [/input-12, 88] [/input-8, 1965] [/input-8, 535] [/input-8, 535] [/input-8, 1698] [/input-8, 1698] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16932964324951172
10 lb beta sum: 0.012799318879842758, worst -0.16917634010314941
Time: prepare 0.0116    bound 0.1542    transfer 0.0028    finalize 0.0042    func 0.1763    
Accumulated time: func 1.6770    prepare 0.0934    bound 1.5197    transfer 0.0208    finalize 0.0284    
all_split False
======================Cut inference begins======================
max lb tensor(0.25179181) min lb tensor(-0.16915345)
Number of Verified Splits: 141 of 540
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 16
#cuts 4-6: 27
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.04487419128417969 
BICCOS Cumulative time: 0.8476648330688477
Preprocessing time: 0.01687788963317871 Inference time: 0.022263288497924805 Add cuts time: 0.004206418991088867 Cut analysis time: 0.0015265941619873047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16915 (20), -0.16565 (20), -0.16379 (20), -0.16208 (20), -0.15887 (20), -0.15880 (20), -0.15871 (20), -0.15821 (20), -0.15773 (20), -0.15417 (20), -0.15269 (20), -0.15117 (20), -0.14444 (20), -0.14329 (20), -0.14040 (20), -0.13913 (20), -0.13826 (20), -0.13826 (20), -0.13777 (20), -0.13771 (20), 
Length of domains: 399
Time: pickout 0.0048    decision 0.0288    set_bounds 0.0249    solve 0.1764    add 0.0048    
Accumulated time: pickout 0.0254    decision 0.7311    set_bounds 0.3687    solve 1.6177    add 0.4136    
Current (lb-rhs): -0.16915345191955566
1209 domains visited
Cumulative time: 4.102747678756714

BaB round 8
batch: 399
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1698] [/input-8, 535] [/input-8, 535] [/input-8, 1965] [/input-8, 535] [/input-8, 1965] [/input-8, 1965] [/input-8, 1965] [/input-8, 1705] [/input-8, 1965] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1603093147277832
10 lb beta sum: 0.010869140736758709, worst -0.16022586822509766
Time: prepare 0.0185    bound 0.1610    transfer 0.0048    finalize 0.0048    func 0.1945    
Accumulated time: func 1.8715    prepare 0.1121    bound 1.6808    transfer 0.0256    finalize 0.0333    
all_split False
======================Cut inference begins======================
max lb tensor(0.29692078) min lb tensor(-0.16020250)
Number of Verified Splits: 182 of 798
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 15
#cuts 4-6: 13
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.05787825584411621 
BICCOS Cumulative time: 0.9055430889129639
Preprocessing time: 0.024808168411254883 Inference time: 0.028583765029907227 Add cuts time: 0.0034482479095458984 Cut analysis time: 0.0010380744934082031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16020 (21), -0.15703 (21), -0.15454 (21), -0.15422 (21), -0.15386 (21), -0.15295 (21), -0.15109 (21), -0.14918 (21), -0.14907 (21), -0.14883 (21), -0.14710 (21), -0.14577 (21), -0.14496 (21), -0.14242 (21), -0.14111 (21), -0.14042 (21), -0.13731 (21), -0.13720 (21), -0.13621 (21), -0.13549 (21), 
Length of domains: 616
Time: pickout 0.0084    decision 0.0378    set_bounds 0.0364    solve 0.1947    add 0.0041    
Accumulated time: pickout 0.0338    decision 0.7689    set_bounds 0.4052    solve 1.8124    add 0.4178    
Current (lb-rhs): -0.1602025032043457
1825 domains visited
Cumulative time: 4.445158958435059

BaB round 9
batch: 616
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 534] [/input-8, 1965] [/input-8, 1965] [/input-8, 535] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-12, 88] [/input-8, 535] [/input-8, 535] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15571808815002441
10 lb beta sum: 0.08645071089267731, worst -0.1557164192199707
Time: prepare 0.0252    bound 0.1621    transfer 0.0102    finalize 0.0065    func 0.2130    
Accumulated time: func 2.0844    prepare 0.1375    bound 1.8429    transfer 0.0358    finalize 0.0397    
all_split False
======================Cut inference begins======================
max lb tensor(0.35001898) min lb tensor(-0.15569806)
Number of Verified Splits: 654 of 1232
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 22
#cuts >= 20: 0
BICCOS time: 0.14514422416687012 
BICCOS Cumulative time: 1.050687313079834
Preprocessing time: 0.0398409366607666 Inference time: 0.09681034088134766 Add cuts time: 0.007930994033813477 Cut analysis time: 0.0005619525909423828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15570 (22), -0.15259 (22), -0.14993 (22), -0.14938 (22), -0.14679 (22), -0.14567 (22), -0.14480 (22), -0.14181 (22), -0.14017 (22), -0.13811 (22), -0.13755 (22), -0.13589 (22), -0.13588 (22), -0.13571 (22), -0.13418 (22), -0.13417 (22), -0.13393 (22), -0.13380 (22), -0.13362 (22), -0.13252 (22), 
Length of domains: 578
Time: pickout 0.0113    decision 0.0510    set_bounds 0.0562    solve 0.2133    add 0.0053    
Accumulated time: pickout 0.0450    decision 0.8199    set_bounds 0.4614    solve 2.0257    add 0.4230    
Current (lb-rhs): -0.15569806098937988
2403 domains visited
Cumulative time: 4.9353883266448975

BaB round 10
batch: 578
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1705] [/input-8, 1705] [/input-8, 1515] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-12, 88] [/input-8, 1965] [/input-8, 1705] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14251041412353516
10 lb beta sum: 0.9010307788848877, worst -0.13899803161621094
Time: prepare 0.0249    bound 0.1636    transfer 0.0019    finalize 0.0076    func 0.2054    
Accumulated time: func 2.2899    prepare 0.1626    bound 2.0065    transfer 0.0378    finalize 0.0473    
all_split False
======================Cut inference begins======================
max lb tensor(0.69980371) min lb tensor(-0.13886118)
Number of Verified Splits: 1116 of 1156
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 24
#cuts >= 20: 0
BICCOS time: 0.22526121139526367 
BICCOS Cumulative time: 1.2759485244750977
Preprocessing time: 0.03972625732421875 Inference time: 0.17226624488830566 Add cuts time: 0.012630224227905273 Cut analysis time: 0.0006384849548339844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13886 (23), -0.12484 (23), -0.11672 (23), -0.11300 (23), -0.10395 (23), -0.10307 (23), -0.10104 (23), -0.09860 (23), -0.09113 (23), -0.09033 (23), -0.08750 (23), -0.08328 (23), -0.07820 (23), -0.07680 (23), -0.07543 (23), -0.06810 (23), -0.06378 (23), -0.06110 (23), -0.06095 (23), -0.06015 (23), 
Length of domains: 40
Time: pickout 0.0143    decision 0.0496    set_bounds 0.2032    solve 0.2058    add 0.0016    
Accumulated time: pickout 0.0593    decision 0.8695    set_bounds 0.6645    solve 2.2315    add 0.4246    
Current (lb-rhs): -0.13886117935180664
2443 domains visited
Cumulative time: 5.646579265594482

BaB round 11
batch: 40
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1515] [/input-8, 1515] [/input-8, 1515] [/input-8, 1338] [/input-8, 1338] [/input-8, 1515] [/input-8, 1705] [/input-8, 1705] [/input-8, 1705] [/input-8, 1705] 
split level 1: [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 533] [/input-8, 533] [/input-8, 1956] [/input-8, 533] [/input-8, 1956] [/input-8, 1421] [/input-8, 533] 
split level 2: [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1515] [/input-8, 1515] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 533] [/input-8, 1421] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10738277435302734
10 lb beta sum: 0.6143031120300293, worst -0.09945398569107056
Time: prepare 0.0064    bound 0.1518    transfer 0.0023    finalize 0.0024    func 0.1651    
Accumulated time: func 2.4549    prepare 0.1693    bound 2.1582    transfer 0.0401    finalize 0.0497    
all_split False
======================Cut inference begins======================
max lb tensor(0.46889889) min lb tensor(-0.09537368)
Number of Verified Splits: 159 of 320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.040163516998291016 
BICCOS Cumulative time: 1.3161120414733887
Preprocessing time: 0.01021122932434082 Inference time: 0.027925968170166016 Add cuts time: 0.0015230178833007812 Cut analysis time: 0.0005033016204833984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09537 (26), -0.09441 (26), -0.09184 (26), -0.09091 (26), -0.08890 (26), -0.08822 (26), -0.08803 (26), -0.08735 (26), -0.08657 (26), -0.08569 (26), -0.08498 (26), -0.08405 (26), -0.07820 (26), -0.07476 (26), -0.07368 (26), -0.07322 (26), -0.07227 (26), -0.07025 (26), -0.06969 (26), -0.06873 (26), 
Length of domains: 161
Time: pickout 0.0024    decision 0.0155    set_bounds 0.0185    solve 0.1651    add 0.0033    
Accumulated time: pickout 0.0617    decision 0.8850    set_bounds 0.6830    solve 2.3966    add 0.4279    
Current (lb-rhs): -0.09537367522716522
2604 domains visited
Cumulative time: 5.892683982849121

BaB round 12
batch: 161
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 212] [/input-8, 1338] [/input-8, 212] [/input-8, 212] [/input-8, 1338] [/input-8, 212] [/input-8, 1338] [/input-8, 212] [/input-8, 1338] [/input-8, 1338] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10166168212890625
10 lb beta sum: 0.7999358773231506, worst -0.0940048098564148
Time: prepare 0.0066    bound 0.1487    transfer 0.0007    finalize 0.0017    func 0.1598    
Accumulated time: func 2.6147    prepare 0.1761    bound 2.3069    transfer 0.0408    finalize 0.0514    
all_split False
======================Cut inference begins======================
max lb tensor(0.05881166) min lb tensor(-0.08989674)
Number of Verified Splits: 64 of 322
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 0.02344822883605957 
BICCOS Cumulative time: 1.3395602703094482
Preprocessing time: 0.009980916976928711 Inference time: 0.010945320129394531 Add cuts time: 0.00200653076171875 Cut analysis time: 0.0005154609680175781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08990 (27), -0.08887 (27), -0.08806 (27), -0.08716 (27), -0.08605 (27), -0.08502 (27), -0.08484 (27), -0.08393 (27), -0.08331 (27), -0.08241 (27), -0.08065 (27), -0.07969 (27), -0.07812 (27), -0.07470 (27), -0.07351 (27), -0.07011 (27), -0.06999 (27), -0.06924 (27), -0.06765 (27), -0.06684 (27), 
Length of domains: 258
Time: pickout 0.0040    decision 0.0218    set_bounds 0.0142    solve 0.1599    add 0.0062    
Accumulated time: pickout 0.0658    decision 0.9067    set_bounds 0.6972    solve 2.5565    add 0.4341    
Current (lb-rhs): -0.08989673852920532
2862 domains visited
Cumulative time: 6.123307943344116

BaB round 13
batch: 258
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 212] [/input-8, 1338] [/input-8, 1338] [/input-8, 1313] [/input-8, 1338] [/input-8, 1313] [/input-8, 1338] [/input-8, 212] [/input-8, 1313] [/input-8, 212] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09694480895996094
10 lb beta sum: 0.8209681510925293, worst -0.08987832069396973
Time: prepare 0.0106    bound 0.1484    transfer 0.0028    finalize 0.0032    func 0.1685    
Accumulated time: func 2.7832    prepare 0.1869    bound 2.4553    transfer 0.0436    finalize 0.0547    
all_split False
======================Cut inference begins======================
max lb tensor(0.01281965) min lb tensor(-0.08985472)
Number of Verified Splits: 151 of 516
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 0.04793286323547363 
BICCOS Cumulative time: 1.3874931335449219
Preprocessing time: 0.01596355438232422 Inference time: 0.029547452926635742 Add cuts time: 0.0018992424011230469 Cut analysis time: 0.000522613525390625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08985 (28), -0.08881 (28), -0.08601 (28), -0.08498 (28), -0.08328 (28), -0.08236 (28), -0.08176 (28), -0.08062 (28), -0.07967 (28), -0.07917 (28), -0.07824 (28), -0.07552 (28), -0.07270 (28), -0.07249 (28), -0.07179 (28), -0.06902 (28), -0.06872 (28), -0.06810 (28), -0.06797 (28), -0.06749 (28), 
Length of domains: 365
Time: pickout 0.0049    decision 0.0280    set_bounds 0.0230    solve 0.1686    add 0.0167    
Accumulated time: pickout 0.0707    decision 0.9347    set_bounds 0.7202    solve 2.7251    add 0.4508    
Current (lb-rhs): -0.08985471725463867
3227 domains visited
Cumulative time: 6.414308547973633

BaB round 14
batch: 365
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1313] [/input-8, 1313] [/input-8, 1313] [/input-8, 212] [/input-8, 1313] [/input-8, 212] [/input-8, 1313] [/input-8, 1313] [/input-8, 1313] [/input-8, 212] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9234103560447693, worst -0.0829925537109375
10 lb beta sum: 0.9234103560447693, worst -0.08290672302246094
Time: prepare 0.0336    bound 0.1484    transfer 0.0018    finalize 0.0043    func 0.1929    
Accumulated time: func 2.9761    prepare 0.2208    bound 2.6037    transfer 0.0454    finalize 0.0590    
all_split False
======================Cut inference begins======================
max lb tensor(0.01634943) min lb tensor(-0.08285689)
Number of Verified Splits: 231 of 730
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 0.06927824020385742 
BICCOS Cumulative time: 1.4567713737487793
Preprocessing time: 0.022054195404052734 Inference time: 0.04399466514587402 Add cuts time: 0.0026934146881103516 Cut analysis time: 0.0005359649658203125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08286 (29), -0.08217 (29), -0.07901 (29), -0.07834 (29), -0.07628 (29), -0.07568 (29), -0.07546 (29), -0.07478 (29), -0.07362 (29), -0.07302 (29), -0.07199 (29), -0.07144 (29), -0.07129 (29), -0.06940 (29), -0.06762 (29), -0.06564 (29), -0.06518 (29), -0.06484 (29), -0.06469 (29), -0.06418 (29), 
Length of domains: 499
Time: pickout 0.0079    decision 0.0291    set_bounds 0.0322    solve 0.1931    add 0.0057    
Accumulated time: pickout 0.0786    decision 0.9638    set_bounds 0.7524    solve 2.9182    add 0.4566    
Current (lb-rhs): -0.08285689353942871
3726 domains visited
Cumulative time: 6.754404544830322

BaB round 15
batch: 499
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 533] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 533] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8426297307014465, worst -0.08285880088806152
10 lb beta sum: 0.8426297307014465, worst -0.08285140991210938
Time: prepare 0.0457    bound 0.1619    transfer 0.0017    finalize 0.0056    func 0.2214    
Accumulated time: func 3.1975    prepare 0.2667    bound 2.7656    transfer 0.0470    finalize 0.0645    
all_split False
======================Cut inference begins======================
max lb tensor(0.24441111) min lb tensor(-0.08282733)
Number of Verified Splits: 462 of 998
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 28
#cuts >= 20: 0
BICCOS time: 0.123016357421875 
BICCOS Cumulative time: 1.5797877311706543
Preprocessing time: 0.03144955635070801 Inference time: 0.0857534408569336 Add cuts time: 0.00508570671081543 Cut analysis time: 0.0007276535034179688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08283 (30), -0.08214 (30), -0.07901 (30), -0.07832 (30), -0.07623 (30), -0.07565 (30), -0.07361 (30), -0.07299 (30), -0.07113 (30), -0.06841 (30), -0.06759 (30), -0.06730 (30), -0.06697 (30), -0.06462 (30), -0.06450 (30), -0.06431 (30), -0.06392 (30), -0.06380 (30), -0.06329 (30), -0.06192 (30), 
Length of domains: 536
Time: pickout 0.0096    decision 0.0441    set_bounds 0.0483    solve 0.2216    add 0.0050    
Accumulated time: pickout 0.0882    decision 1.0079    set_bounds 0.8006    solve 3.1398    add 0.4615    
Current (lb-rhs): -0.08282732963562012
4262 domains visited
Cumulative time: 7.210805654525757

BaB round 16
batch: 536
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1135] [/input-8, 1135] [/input-8, 1135] [/input-8, 1135] [/input-8, 1135] [/input-8, 1135] [/input-8, 1135] [/input-8, 1135] [/input-8, 1283] [/input-8, 1135] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07668066024780273
10 lb beta sum: 0.5197190046310425, worst -0.07656717300415039
Time: prepare 0.0218    bound 0.1516    transfer 0.0019    finalize 0.0061    func 0.1883    
Accumulated time: func 3.3858    prepare 0.2887    bound 2.9172    transfer 0.0489    finalize 0.0707    
all_split False
======================Cut inference begins======================
max lb tensor(0.31271225) min lb tensor(-0.07654309)
Number of Verified Splits: 568 of 1072
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 28
#cuts >= 20: 0
BICCOS time: 0.15148091316223145 
BICCOS Cumulative time: 1.7312686443328857
Preprocessing time: 0.034101009368896484 Inference time: 0.11096358299255371 Add cuts time: 0.005808353424072266 Cut analysis time: 0.0006079673767089844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07654 (31), -0.07584 (31), -0.07353 (31), -0.07279 (31), -0.07272 (31), -0.07201 (31), -0.06998 (31), -0.06974 (31), -0.06936 (31), -0.06899 (31), -0.06701 (31), -0.06668 (31), -0.06639 (31), -0.06461 (31), -0.06439 (31), -0.06374 (31), -0.06150 (31), -0.06086 (31), -0.05814 (31), -0.05790 (31), 
Length of domains: 504
Time: pickout 0.0143    decision 0.0436    set_bounds 0.0487    solve 0.1885    add 0.0054    
Accumulated time: pickout 0.1025    decision 1.0515    set_bounds 0.8493    solve 3.3283    add 0.4669    
Current (lb-rhs): -0.07654309272766113
4766 domains visited
Cumulative time: 7.6696388721466064

BaB round 17
batch: 504
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1283] [/input-8, 1283] [/input-8, 1283] [/input-8, 1283] [/input-8, 1283] [/input-8, 1283] [/input-8, 1283] [/input-8, 1283] [/input-8, 1283] [/input-8, 1283] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6948525905609131, worst -0.07249641418457031
10 lb beta sum: 0.6948525905609131, worst -0.0724334716796875
Time: prepare 0.0466    bound 0.1622    transfer 0.0030    finalize 0.0052    func 0.2236    
Accumulated time: func 3.6094    prepare 0.3356    bound 3.0794    transfer 0.0519    finalize 0.0759    
all_split False
======================Cut inference begins======================
max lb tensor(0.00970870) min lb tensor(-0.07239866)
Number of Verified Splits: 204 of 1008
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 28
#cuts >= 20: 0
BICCOS time: 0.0769200325012207 
BICCOS Cumulative time: 1.8081886768341064
Preprocessing time: 0.032311439514160156 Inference time: 0.04014849662780762 Add cuts time: 0.003818511962890625 Cut analysis time: 0.0006415843963623047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07240 (32), -0.07163 (32), -0.06935 (32), -0.06869 (32), -0.06856 (32), -0.06790 (32), -0.06587 (32), -0.06569 (32), -0.06563 (32), -0.06524 (32), -0.06488 (32), -0.06483 (32), -0.06288 (32), -0.06270 (32), -0.06261 (32), -0.06223 (32), -0.06182 (32), -0.06179 (32), -0.06100 (32), -0.06063 (32), 
Length of domains: 804
Time: pickout 0.0098    decision 0.2340    set_bounds 0.0460    solve 0.2238    add 0.0082    
Accumulated time: pickout 0.1123    decision 1.2856    set_bounds 0.8953    solve 3.5522    add 0.4752    
Current (lb-rhs): -0.07239866256713867
5570 domains visited
Cumulative time: 8.271788835525513

BaB round 18
batch: 804
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2017] [/input-8, 2017] [/input-8, 2017] [/input-8, 2017] [/input-8, 2017] [/input-8, 2017] [/input-8, 2017] [/input-8, 2017] [/input-8, 2017] [/input-8, 2017] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6532980799674988, worst -0.06728267669677734
10 lb beta sum: 0.6532980799674988, worst -0.0672464370727539
Time: prepare 0.0733    bound 0.1745    transfer 0.0146    finalize 0.0094    func 0.2824    
Accumulated time: func 3.8918    prepare 0.4091    bound 3.2539    transfer 0.0665    finalize 0.0853    
all_split False
======================Cut inference begins======================
max lb tensor(0.08399618) min lb tensor(-0.06722879)
Number of Verified Splits: 445 of 1608
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 28
#cuts >= 20: 0
BICCOS time: 0.14442777633666992 
BICCOS Cumulative time: 1.9526164531707764
Preprocessing time: 0.051589250564575195 Inference time: 0.08709526062011719 Add cuts time: 0.005089282989501953 Cut analysis time: 0.0006539821624755859
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06723 (33), -0.06677 (33), -0.06418 (33), -0.06369 (33), -0.06351 (33), -0.06305 (33), -0.06079 (33), -0.06048 (33), -0.06041 (33), -0.06038 (33), -0.05997 (33), -0.05985 (33), -0.05960 (33), -0.05819 (33), -0.05782 (33), -0.05781 (33), -0.05737 (33), -0.05731 (33), -0.05671 (33), -0.05658 (33), 
Length of domains: 1163
Time: pickout 0.0199    decision 0.0606    set_bounds 0.0688    solve 0.2827    add 0.0077    
Accumulated time: pickout 0.1322    decision 1.3462    set_bounds 0.9641    solve 3.8349    add 0.4829    
Current (lb-rhs): -0.06722879409790039
6733 domains visited
Cumulative time: 8.860044002532959

BaB round 19
batch: 1163
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1329] [/input-8, 1329] [/input-8, 1329] [/input-8, 1329] [/input-8, 1329] [/input-8, 1329] [/input-8, 1329] [/input-8, 1329] [/input-8, 1329] [/input-8, 1329] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6026473045349121, worst -0.06578397750854492
10 lb beta sum: 0.6026473045349121, worst -0.0657646656036377
Time: prepare 0.1065    bound 0.2037    transfer 0.0157    finalize 0.0108    func 0.4914    
Accumulated time: func 4.3832    prepare 0.5159    bound 3.4576    transfer 0.0822    finalize 0.0961    
all_split False
======================Cut inference begins======================
max lb tensor(0.09299481) min lb tensor(-0.06575680)
Number of Verified Splits: 1259 of 2326
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 30
#cuts >= 20: 0
BICCOS time: 0.3457157611846924 
BICCOS Cumulative time: 2.2983322143554688
Preprocessing time: 0.07337164878845215 Inference time: 0.2621114253997803 Add cuts time: 0.009515762329101562 Cut analysis time: 0.0007169246673583984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06576 (34), -0.06533 (34), -0.06272 (34), -0.06226 (34), -0.06203 (34), -0.06161 (34), -0.05930 (34), -0.05900 (34), -0.05893 (34), -0.05883 (34), -0.05855 (34), -0.05830 (34), -0.05799 (34), -0.05662 (34), -0.05639 (34), -0.05632 (34), -0.05590 (34), -0.05573 (34), -0.05513 (34), -0.05496 (34), 
Length of domains: 1067
Time: pickout 0.0246    decision 0.0819    set_bounds 0.1054    solve 0.4919    add 0.0135    
Accumulated time: pickout 0.1568    decision 1.4281    set_bounds 1.0695    solve 4.3268    add 0.4964    
Current (lb-rhs): -0.06575679779052734
7800 domains visited
Cumulative time: 9.9348886013031

BaB round 20
batch: 1067
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 179] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 173] [/input-8, 678] [/input-8, 179] [/input-8, 678] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05669999122619629
10 lb beta sum: 0.3914717435836792, worst -0.056606292724609375
Time: prepare 0.0464    bound 0.1916    transfer 0.0081    finalize 0.0101    func 0.2702    
Accumulated time: func 4.6534    prepare 0.5626    bound 3.6492    transfer 0.0903    finalize 0.1063    
all_split False
======================Cut inference begins======================
max lb tensor(0.08371806) min lb tensor(-0.05657268)
Number of Verified Splits: 924 of 2134
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 30
#cuts >= 20: 0
BICCOS time: 0.27315235137939453 
BICCOS Cumulative time: 2.5714845657348633
Preprocessing time: 0.0663912296295166 Inference time: 0.19639301300048828 Add cuts time: 0.009637594223022461 Cut analysis time: 0.0007305145263671875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05657 (35), -0.05648 (35), -0.05614 (35), -0.05607 (35), -0.05440 (35), -0.05407 (35), -0.05358 (35), -0.05352 (35), -0.05312 (35), -0.05310 (35), -0.05284 (35), -0.05276 (35), -0.05240 (35), -0.05234 (35), -0.05234 (35), -0.05192 (35), -0.05149 (35), -0.04984 (35), -0.04980 (35), -0.04964 (35), 
Length of domains: 1210
Time: pickout 0.0293    decision 0.0759    set_bounds 0.0921    solve 0.2715    add 0.0068    
Accumulated time: pickout 0.1861    decision 1.5040    set_bounds 1.1616    solve 4.5983    add 0.5031    
Current (lb-rhs): -0.056572675704956055
9010 domains visited
Cumulative time: 10.693113327026367

BaB round 21
batch: 1210
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 678] [/input-8, 173] [/input-8, 678] [/input-8, 179] [/input-8, 678] [/input-8, 173] [/input-8, 173] [/input-8, 179] [/input-8, 1328] [/input-8, 1328] 
cut re-enabled after branching node selection
0 lb beta sum: 0.6901947259902954, worst -0.05193781852722168
10 lb beta sum: 0.6954942941665649, worst -0.05192995071411133
Time: prepare 0.1148    bound 0.2079    transfer 0.0050    finalize 0.1515    func 0.4947    
Accumulated time: func 5.1482    prepare 0.6777    bound 3.8570    transfer 0.0952    finalize 0.2578    
all_split False
======================Cut inference begins======================
max lb tensor(0.02367425) min lb tensor(-0.05190659)
Number of Verified Splits: 1234 of 2420
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 30
#cuts >= 20: 0
BICCOS time: 0.3549942970275879 
BICCOS Cumulative time: 2.926478862762451
Preprocessing time: 0.07477068901062012 Inference time: 0.267810583114624 Add cuts time: 0.011648178100585938 Cut analysis time: 0.0007648468017578125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05191 (36), -0.05167 (36), -0.05147 (36), -0.05113 (36), -0.05010 (36), -0.04978 (36), -0.04960 (36), -0.04945 (36), -0.04914 (36), -0.04904 (36), -0.04861 (36), -0.04818 (36), -0.04776 (36), -0.04743 (36), -0.04741 (36), -0.04720 (36), -0.04703 (36), -0.04591 (36), -0.04574 (36), -0.04546 (36), 
Length of domains: 1186
Time: pickout 0.0268    decision 0.0841    set_bounds 0.1024    solve 0.4958    add 0.0071    
Accumulated time: pickout 0.2129    decision 1.5881    set_bounds 1.2641    solve 5.0941    add 0.5102    
Current (lb-rhs): -0.051906585693359375
10196 domains visited
Cumulative time: 11.775898694992065

BaB round 22
batch: 1186
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1328] [/input-8, 1328] [/input-8, 1328] [/input-8, 1328] [/input-8, 1328] [/input-8, 1328] [/input-8, 1328] [/input-8, 1328] [/input-8, 1328] [/input-8, 1328] 
cut re-enabled after branching node selection
0 lb beta sum: 0.632912278175354, worst -0.047461748123168945
10 lb beta sum: 0.6340768337249756, worst -0.047460079193115234
Time: prepare 0.1143    bound 0.2050    transfer 0.0032    finalize 0.0135    func 0.3523    
Accumulated time: func 5.5005    prepare 0.7922    bound 4.0620    transfer 0.0985    finalize 0.2713    
all_split False
======================Cut inference begins======================
max lb tensor(0.02359572) min lb tensor(-0.04743886)
Number of Verified Splits: 1255 of 2372
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 32
#cuts >= 20: 0
BICCOS time: 0.36032676696777344 
BICCOS Cumulative time: 3.2868056297302246
Preprocessing time: 0.07488584518432617 Inference time: 0.2741997241973877 Add cuts time: 0.010324478149414062 Cut analysis time: 0.0009167194366455078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04744 (37), -0.04717 (37), -0.04705 (37), -0.04683 (37), -0.04471 (37), -0.04451 (37), -0.04430 (37), -0.04413 (37), -0.04371 (37), -0.04345 (37), -0.04335 (37), -0.04312 (37), -0.04105 (37), -0.04103 (37), -0.04080 (37), -0.04079 (37), -0.04072 (37), -0.04059 (37), -0.04050 (37), -0.04045 (37), 
Length of domains: 1117
Time: pickout 0.0293    decision 0.0818    set_bounds 0.1027    solve 0.3528    add 0.0762    
Accumulated time: pickout 0.2422    decision 1.6699    set_bounds 1.3667    solve 5.4469    add 0.5864    
Current (lb-rhs): -0.047438859939575195
11313 domains visited
Cumulative time: 12.791380167007446

BaB round 23
batch: 1117
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 4049] [/input, 100] [/input, 100] [/input, 100] [/input, 100] [/input, 100] [/input-8, 173] [/input, 100] [/input, 100] [/input-8, 173] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0421140193939209
10 lb beta sum: 0.2654910087585449, worst -0.04210400581359863
Time: prepare 0.0520    bound 0.2526    transfer 0.0030    finalize 0.0130    func 0.3358    
Accumulated time: func 5.8363    prepare 0.8445    bound 4.3146    transfer 0.1014    finalize 0.2843    
all_split False
======================Cut inference begins======================
max lb tensor(0.24201564) min lb tensor(-0.04208875)
Number of Verified Splits: 970 of 2234
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 31
#cuts >= 20: 0
BICCOS time: 0.2926037311553955 
BICCOS Cumulative time: 3.57940936088562
Preprocessing time: 0.0696864128112793 Inference time: 0.21424579620361328 Add cuts time: 0.007925271987915039 Cut analysis time: 0.0007462501525878906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04209 (38), -0.04183 (38), -0.04171 (38), -0.04148 (38), -0.03917 (38), -0.03903 (38), -0.03877 (38), -0.03866 (38), -0.03843 (38), -0.03839 (38), -0.03811 (38), -0.03801 (38), -0.03777 (38), -0.03724 (38), -0.03689 (38), -0.03674 (38), -0.03625 (38), -0.03610 (38), -0.03573 (38), -0.03568 (38), 
Length of domains: 1264
Time: pickout 0.0234    decision 0.0776    set_bounds 0.2556    solve 0.3363    add 0.0080    
Accumulated time: pickout 0.2656    decision 1.7475    set_bounds 1.6223    solve 5.7832    add 0.5943    
Current (lb-rhs): -0.04208874702453613
12577 domains visited
Cumulative time: 13.796438217163086

BaB round 24
batch: 1264
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 173] [/input-8, 173] [/input-8, 173] [/input-8, 173] [/input-8, 173] [/input-8, 173] [/input-8, 173] [/input-8, 173] [/input, 100] [/input-8, 173] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.036806583404541016
10 lb beta sum: 0.21822480857372284, worst -0.03681659698486328
Time: prepare 0.0612    bound 0.2161    transfer 0.0037    finalize 0.0152    func 0.3135    
Accumulated time: func 6.1497    prepare 0.9060    bound 4.5307    transfer 0.1051    finalize 0.2995    
all_split False
======================Cut inference begins======================
max lb tensor(0.02526236) min lb tensor(-0.03679919)
Number of Verified Splits: 1228 of 2528
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 33
#cuts >= 20: 0
BICCOS time: 0.36417698860168457 
BICCOS Cumulative time: 3.9435863494873047
Preprocessing time: 0.08105850219726562 Inference time: 0.2726733684539795 Add cuts time: 0.009684324264526367 Cut analysis time: 0.0007607936859130859
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03680 (39), -0.03656 (39), -0.03642 (39), -0.03620 (39), -0.03435 (39), -0.03384 (39), -0.03375 (39), -0.03360 (39), -0.03349 (39), -0.03345 (39), -0.03337 (39), -0.03335 (39), -0.03325 (39), -0.03315 (39), -0.03286 (39), -0.03196 (39), -0.03189 (39), -0.03151 (39), -0.03114 (39), -0.03091 (39), 
Length of domains: 1300
Time: pickout 0.0313    decision 0.0867    set_bounds 0.1000    solve 0.3140    add 0.0076    
Accumulated time: pickout 0.2968    decision 1.8342    set_bounds 1.7224    solve 6.0972    add 0.6019    
Current (lb-rhs): -0.03679919242858887
13877 domains visited
Cumulative time: 14.71148157119751

BaB round 25
batch: 1300
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 105] [/input-8, 1674] [/input, 105] [/input-8, 173] [/input-8, 173] [/input-8, 173] [/input-8, 173] [/input-8, 1674] [/input-8, 173] [/input, 105] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.029736042022705078
10 lb beta sum: 0.22257821261882782, worst -0.028990983963012695
Time: prepare 0.0672    bound 0.2213    transfer 0.0039    finalize 0.0148    func 0.3253    
Accumulated time: func 6.4750    prepare 0.9734    bound 4.7520    transfer 0.1090    finalize 0.3143    
all_split False
======================Cut inference begins======================
max lb tensor(0.23370628) min lb tensor(-0.02898121)
Number of Verified Splits: 1342 of 2600
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 33
#cuts >= 20: 0
BICCOS time: 0.3935723304748535 
BICCOS Cumulative time: 4.337158679962158
Preprocessing time: 0.08386468887329102 Inference time: 0.29693603515625 Add cuts time: 0.011998891830444336 Cut analysis time: 0.0007727146148681641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02898 (40), -0.02856 (40), -0.02799 (40), -0.02797 (40), -0.02725 (40), -0.02724 (40), -0.02723 (40), -0.02686 (40), -0.02680 (40), -0.02614 (40), -0.02599 (40), -0.02593 (40), -0.02570 (40), -0.02564 (40), -0.02558 (40), -0.02552 (40), -0.02536 (40), -0.02529 (40), -0.02514 (40), -0.02494 (40), 
Length of domains: 1258
Time: pickout 0.0360    decision 0.0896    set_bounds 0.2438    solve 0.3259    add 0.0126    
Accumulated time: pickout 0.3329    decision 1.9238    set_bounds 1.9662    solve 6.4231    add 0.6145    
Current (lb-rhs): -0.02898120880126953
15135 domains visited
Cumulative time: 15.82583236694336

BaB round 26
batch: 1258
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 105] [/input-8, 1674] [/input-8, 1674] [/input, 105] [/input, 105] [/input, 105] [/input, 105] [/input, 105] [/input, 105] [/input, 105] 
cut re-enabled after branching node selection
0 lb beta sum: 0.47980135679244995, worst -0.027244091033935547
10 lb beta sum: 0.628566324710846, worst -0.02721095085144043
Time: prepare 0.1275    bound 0.2150    transfer 0.0126    finalize 0.0121    func 0.3846    
Accumulated time: func 6.8597    prepare 1.1012    bound 4.9670    transfer 0.1216    finalize 0.3263    
all_split False
======================Cut inference begins======================
max lb tensor(0.24554177) min lb tensor(-0.02718377)
Number of Verified Splits: 1219 of 2516
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 35
#cuts >= 20: 0
BICCOS time: 0.3676576614379883 
BICCOS Cumulative time: 4.7048163414001465
Preprocessing time: 0.08153748512268066 Inference time: 0.2750225067138672 Add cuts time: 0.010263204574584961 Cut analysis time: 0.0008344650268554688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02718 (41), -0.02679 (41), -0.02671 (41), -0.02612 (41), -0.02598 (41), -0.02561 (41), -0.02555 (41), -0.02436 (41), -0.02424 (41), -0.02421 (41), -0.02414 (41), -0.02387 (41), -0.02384 (41), -0.02381 (41), -0.02375 (41), -0.02369 (41), -0.02365 (41), -0.02348 (41), -0.02323 (41), -0.02320 (41), 
Length of domains: 1297
Time: pickout 0.0289    decision 0.0848    set_bounds 0.1097    solve 0.3852    add 0.0050    
Accumulated time: pickout 0.3617    decision 2.0086    set_bounds 2.0759    solve 6.8083    add 0.6195    
Current (lb-rhs): -0.02718377113342285
16432 domains visited
Cumulative time: 16.81919765472412

BaB round 27
batch: 1297
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 4021] [/input-8, 2014] [/input-8, 2013] [/input-8, 2014] [/input-8, 2014] [/input-8, 2013] [/input, 4021] [/input-8, 2013] [/input-8, 2014] [/input-8, 2013] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.021241426467895508
10 lb beta sum: 0.25506365299224854, worst -0.021207332611083984
Time: prepare 0.0676    bound 0.2819    transfer 0.0039    finalize 0.0139    func 0.5262    
Accumulated time: func 7.3858    prepare 1.1691    bound 5.2489    transfer 0.1254    finalize 0.3402    
all_split False
======================Cut inference begins======================
max lb tensor(0.23891397) min lb tensor(-0.02118063)
Number of Verified Splits: 1863 of 2594
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 0.531867265701294 
BICCOS Cumulative time: 5.23668360710144
Preprocessing time: 0.0831003189086914 Inference time: 0.4348587989807129 Add cuts time: 0.013042926788330078 Cut analysis time: 0.0008652210235595703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02118 (42), -0.02118 (42), -0.02078 (42), -0.02072 (42), -0.02047 (42), -0.02044 (42), -0.02015 (42), -0.02008 (42), -0.02003 (42), -0.02000 (42), -0.01964 (42), -0.01957 (42), -0.01951 (42), -0.01937 (42), -0.01901 (42), -0.01896 (42), -0.01838 (42), -0.01826 (42), -0.01825 (42), -0.01823 (42), 
Length of domains: 731
Time: pickout 0.0344    decision 0.0890    set_bounds 0.1132    solve 0.5267    add 0.0079    
Accumulated time: pickout 0.3961    decision 2.0976    set_bounds 2.1892    solve 7.3350    add 0.6275    
Current (lb-rhs): -0.02118062973022461
17163 domains visited
Cumulative time: 18.13919496536255

BaB round 28
batch: 731
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2013] [/input-8, 2013] [/input-8, 2013] [/input-8, 2013] [/input-8, 2013] [/input-8, 2013] [/input-8, 2013] [/input-8, 2013] [/input-8, 2013] [/input-8, 2013] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.016918182373046875
10 lb beta sum: 0.32254815101623535, worst -0.012330949306488037
Time: prepare 0.0377    bound 0.1974    transfer 0.0086    finalize 0.0085    func 0.2618    
Accumulated time: func 7.6476    prepare 1.2071    bound 5.4463    transfer 0.1340    finalize 0.3487    
all_split False
======================Cut inference begins======================
max lb tensor(0.48532617) min lb tensor(-0.01232825)
Number of Verified Splits: 1294 of 1462
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 0.35561084747314453 
BICCOS Cumulative time: 5.592294454574585
Preprocessing time: 0.046929121017456055 Inference time: 0.2993030548095703 Add cuts time: 0.008444070816040039 Cut analysis time: 0.000934600830078125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01233 (43), -0.01229 (43), -0.01190 (43), -0.01177 (43), -0.01119 (43), -0.01109 (43), -0.01066 (43), -0.01063 (43), -0.00949 (43), -0.00946 (43), -0.00946 (43), -0.00929 (43), -0.00909 (43), -0.00895 (43), -0.00891 (43), -0.00871 (43), -0.00863 (43), -0.00857 (43), -0.00836 (43), -0.00828 (43), 
Length of domains: 168
Time: pickout 0.0191    decision 0.0585    set_bounds 0.0636    solve 0.2629    add 0.0773    
Accumulated time: pickout 0.4152    decision 2.1561    set_bounds 2.2527    solve 7.5979    add 0.7047    
Current (lb-rhs): -0.01232825219631195
17331 domains visited
Cumulative time: 18.989447116851807

BaB round 29
batch: 168
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 4021] [/input, 4021] [/input, 4021] [/input, 4021] [/input, 4021] [/input-8, 2013] [/input-8, 2013] [/input-8, 2013] [/input, 4021] [/input, 4021] 
cut re-enabled after branching node selection
0 lb beta sum: 0.5344651937484741, worst -0.012328013777732849
10 lb beta sum: 0.5344651937484741, worst -0.012333258986473083
Time: prepare 0.0176    bound 0.1618    transfer 0.0008    finalize 0.0018    func 0.1842    
Accumulated time: func 7.8319    prepare 1.2249    bound 5.6081    transfer 0.1348    finalize 0.3506    
all_split False
======================Cut inference begins======================
max lb tensor(0.24731202) min lb tensor(-0.01232038)
Number of Verified Splits: 192 of 336
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 0.05806922912597656 
BICCOS Cumulative time: 5.6503636837005615
Preprocessing time: 0.010395526885986328 Inference time: 0.045387983322143555 Add cuts time: 0.0015113353729248047 Cut analysis time: 0.000774383544921875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01232 (44), -0.01229 (44), -0.01190 (44), -0.01176 (44), -0.01118 (44), -0.01109 (44), -0.01065 (44), -0.01062 (44), -0.00948 (44), -0.00946 (44), -0.00945 (44), -0.00928 (44), -0.00908 (44), -0.00895 (44), -0.00891 (44), -0.00870 (44), -0.00863 (44), -0.00857 (44), -0.00836 (44), -0.00827 (44), 
Length of domains: 144
Time: pickout 0.0163    decision 0.0208    set_bounds 0.0146    solve 0.1843    add 0.0215    
Accumulated time: pickout 0.4315    decision 2.1769    set_bounds 2.2673    solve 7.7822    add 0.7263    
Current (lb-rhs): -0.012320384383201599
17475 domains visited
Cumulative time: 19.306151866912842

BaB round 30
batch: 144
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 4021] [/input, 4021] [/input, 4021] [/input, 4021] [/input, 4021] [/input, 4021] [/input, 1814] [/input, 4021] [/input, 4021] [/input, 4021] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4932531714439392, worst -0.008534058928489685
10 lb beta sum: 0.4932531714439392, worst -0.008526906371116638
Time: prepare 0.0150    bound 0.1593    transfer 0.0017    finalize 0.0021    func 0.1799    
Accumulated time: func 8.0118    prepare 1.2401    bound 5.7674    transfer 0.1365    finalize 0.3526    
all_split False
======================Cut inference begins======================
max lb tensor(0.00779900) min lb tensor(-0.00851522)
Number of Verified Splits: 199 of 288
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 0.05896186828613281 
BICCOS Cumulative time: 5.709325551986694
Preprocessing time: 0.00870370864868164 Inference time: 0.0479435920715332 Add cuts time: 0.0015861988067626953 Cut analysis time: 0.0007283687591552734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00852 (45), -0.00828 (45), -0.00808 (45), -0.00778 (45), -0.00722 (45), -0.00713 (45), -0.00672 (45), -0.00659 (45), -0.00569 (45), -0.00558 (45), -0.00546 (45), -0.00527 (45), -0.00523 (45), -0.00504 (45), -0.00500 (45), -0.00496 (45), -0.00484 (45), -0.00466 (45), -0.00460 (45), -0.00460 (45), 
Length of domains: 89
Time: pickout 0.0043    decision 0.0203    set_bounds 0.0122    solve 0.1800    add 0.0015    
Accumulated time: pickout 0.4359    decision 2.1972    set_bounds 2.2795    solve 7.9622    add 0.7277    
Current (lb-rhs): -0.008515223860740662
17564 domains visited
Cumulative time: 19.584566831588745

BaB round 31
batch: 89
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1814] [/input-8, 1966] [/input-8, 1966] [/input-8, 1966] [/input-8, 1966] [/input-8, 1966] [/input-8, 1966] [/input-8, 1966] [/input-8, 1966] [/input-8, 1966] 
split level 1: [/input, 2409] [/input-8, 302] [/input-8, 302] [/input, 2409] [/input, 2409] [/input-8, 302] [/input, 2409] [/input-8, 302] [/input-8, 302] [/input-8, 302] 
cut re-enabled after branching node selection
0 lb beta sum: 0.39936086535453796, worst 0.0023924261331558228

all verified at 0th iter
Time: prepare 0.0181    bound 0.0071    transfer 0.0011    finalize 0.0020    func 0.0306    
Accumulated time: func 8.0424    prepare 1.2584    bound 5.7745    transfer 0.1377    finalize 0.3546    
all_split False
======================Cut inference begins======================
max lb tensor(0.01404032) min lb tensor(0.00239243)
Number of Verified Splits: 356 of 356
No cut inferred: All or none verified.
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 0.01037454605102539 
BICCOS Cumulative time: 5.71970009803772
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0031    decision 0.0228    set_bounds 0.0199    solve 0.0307    add 0.0005    
Accumulated time: pickout 0.4390    decision 2.2200    set_bounds 2.2994    solve 7.9929    add 0.7282    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
17564 domains visited
Cumulative time: 19.67330050468445


Properties batch 6, size 1
Remaining timeout: 178.4304506778717
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 178.4303274154663
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 178.43029880523682
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 21.5698 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 193, vnnlib ID: 193 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-57.25303268, -52.83674240, -56.46347809, -53.69755173, -54.26275635,
         -54.33383560, -55.88486099, -53.23726273, -56.39896011, -48.24511719]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [819]; unstable size 819; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 346, 1, 819] with unstable size 345 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 39, 1, 819] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 819] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [345]; unstable size 345; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 39, 1, 345] with unstable size 38 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 345] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [38]; unstable size 38; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 38] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.45456600, 1.46953452, 3.86481237, 1.09674358, 2.29081535, 1.38608456,
         2.66091824, 0.86579418, 4.15281010]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0733 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 194, vnnlib ID: 194 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.37574005, -38.21436691, -28.91619873, -33.44577026, -30.09071541,
         -33.74049759, -31.81043053, -35.64777374, -34.72369003, -38.52161407]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [925]; unstable size 925; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 328, 1, 925] with unstable size 327 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 46, 1, 925] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 925] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [327]; unstable size 327; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 46, 1, 327] with unstable size 45 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 327] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [45]; unstable size 45; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 45] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.52566934,  5.17635918,  1.88344157, -1.78327632,  1.65091562,
         -0.71881068,  2.31189489,  1.85895360,  5.01856804]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-31.37574005, -38.21436691, -28.91619873, -33.44577026, -30.09071541,
         -33.74049759, -31.81043053, -35.64777374, -34.72369003, -38.52161407]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.25it/s]100%|██████████| 1/1 [00:00<00:00,  8.24it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.22132683, -37.69224930, -28.97702789, -32.84001923, -29.21085930,
          -33.10477066, -31.35705566, -34.90525818, -34.39485550, -37.79327011],
         [-31.22132683, -37.69224930, -28.97702789, -32.84001923, -29.21085930,
          -33.10477066, -31.35705566, -34.90525818, -34.39485550, -37.79327011]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[2.24429893, 0.23383141, 2.38002777]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1246 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 16.673145294189453
alpha/beta optimization time: 1.3194193840026855
initial alpha-crown bounds: tensor([[-0.27432823,  5.42689466,  2.02038193, -1.61538041,  1.78813648,
         -0.54386377,  2.51569676,  2.09089828,  5.26471043]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 3 ; Worst class: (+ rhs) -1.6153804063796997
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50525665283203
Verifying property 0 with 1 instances.
##### Instance 194 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.27432823]], device='cuda:0') need to verify.
Model prediction is: tensor([-31.37574005, -38.21436691, -28.91619873, -33.44577026, -30.09071541,
        -33.74049759, -31.81043053, -35.64777374, -34.72369003, -38.52161407],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.27432823]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 925
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 1285
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010609626770019531
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 4] 
split level 1: [/input-12, 48] 
split level 2: [/input-12, 49] 
split level 3: [/input-12, 28] 
split level 4: [/input-12, 45] 
split level 5: [/input-12, 40] 
split level 6: [/input-12, 0] 
split level 7: [/input-12, 58] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.21296977996826172

all verified at 0th iter
Time: prepare 0.0019    bound 0.1395    transfer 0.0011    finalize 0.0018    func 0.1461    
Accumulated time: func 0.1461    prepare 0.0023    bound 0.1395    transfer 0.0011    finalize 0.0018    
all_split False
======================Cut inference begins======================
max lb tensor(1.47805357) min lb tensor(0.21296978)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.007023811340332031 
BICCOS Cumulative time: 0.007023811340332031
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0165    solve 0.1462    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0165    solve 0.1462    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.40198254585266113


Properties batch 1, size 1
Remaining timeout: 197.88919401168823
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 197.88911366462708
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 197.88908863067627
Verifying property 3 with 1 instances.
##### Instance 194 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.61538041]], device='cuda:0') need to verify.
Model prediction is: tensor([-31.37574005, -38.21436691, -28.91619873, -33.44577026, -30.09071541,
        -33.74049759, -31.81043053, -35.64777374, -34.72369003, -38.52161407],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.61538041]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 925
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 45
-----------------
# of unstable neurons: 1285
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.870529174804688e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 95] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 71] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 78] 
split level 5: [/input-12, 29] 
split level 6: [/input-12, 40] 
split level 7: [/input-12, 54] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7754267454147339
10 lb beta sum: 0.0, worst -0.773667573928833
Time: prepare 0.0019    bound 0.1062    transfer 0.0005    finalize 0.0014    func 0.1118    
Accumulated time: func 0.1118    prepare 0.0023    bound 0.1062    transfer 0.0005    finalize 0.0014    
all_split False
======================Cut inference begins======================
max lb tensor(0.50685155) min lb tensor(-0.77305293)
Number of Verified Splits: 128 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.6153782606124878
10 lb beta sum: 0.0, worst -1.6153900623321533
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 4-6: 13
#cuts 7-9: 19
#cuts >= 20: 0
BICCOS time: 0.1730790138244629 
BICCOS Cumulative time: 0.1730790138244629
Preprocessing time: 0.006788015365600586 Inference time: 0.16055846214294434 Add cuts time: 0.0039005279541015625 Cut analysis time: 0.0018320083618164062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.77305 (8), -0.76883 (8), -0.75911 (8), -0.75331 (8), -0.72987 (8), -0.71484 (8), -0.70888 (8), -0.70830 (8), -0.70673 (8), -0.70578 (8), -0.69686 (8), -0.68347 (8), -0.67850 (8), -0.66982 (8), -0.65809 (8), -0.65030 (8), -0.64792 (8), -0.64627 (8), -0.64025 (8), -0.62652 (8), 
Length of domains: 128
Time: pickout 0.0003    decision 0.0234    set_bounds 0.0165    solve 0.1119    add 0.0233    
Accumulated time: pickout 0.0003    decision 0.0234    set_bounds 0.0165    solve 0.1119    add 0.0233    
Current (lb-rhs): -0.7730529308319092
128 domains visited
Cumulative time: 0.3539583683013916

BaB round 2
batch: 128
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 73] [/input-12, 80] [/input-12, 73] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7508589625358582
10 lb beta sum: 0.0, worst -0.7502987384796143
Time: prepare 0.0040    bound 0.1234    transfer 0.0005    finalize 0.0012    func 0.1309    
Accumulated time: func 0.2427    prepare 0.0066    bound 0.2296    transfer 0.0011    finalize 0.0026    
all_split False
======================Cut inference begins======================
max lb tensor(0.21525908) min lb tensor(-0.75002652)
Number of Verified Splits: 53 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2095732688903809
10 lb beta sum: 0.13811922073364258, worst -0.8972835540771484
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 4-6: 13
#cuts 7-9: 29
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.1669020652770996 
BICCOS Cumulative time: 0.3399810791015625
Preprocessing time: 0.007535457611083984 Inference time: 0.15349030494689941 Add cuts time: 0.0033745765686035156 Cut analysis time: 0.0025017261505126953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.75003 (9), -0.74546 (9), -0.73518 (9), -0.72966 (9), -0.70537 (9), -0.69176 (9), -0.68565 (9), -0.68321 (9), -0.68312 (9), -0.67793 (9), -0.67307 (9), -0.65856 (9), -0.64991 (9), -0.64482 (9), -0.63257 (9), -0.62378 (9), -0.62177 (9), -0.62075 (9), -0.61354 (9), -0.60111 (9), 
Length of domains: 203
Time: pickout 0.0017    decision 0.0189    set_bounds 0.0078    solve 0.1309    add 0.0802    
Accumulated time: pickout 0.0020    decision 0.0424    set_bounds 0.0243    solve 0.2428    add 0.1035    
Current (lb-rhs): -0.750026524066925
331 domains visited
Cumulative time: 0.7667405605316162

BaB round 3
batch: 203
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 73] [/input-12, 80] [/input-12, 73] [/input-12, 80] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7236947417259216
10 lb beta sum: 0.00048597948625683784, worst -0.7233282327651978
Time: prepare 0.0064    bound 0.1462    transfer 0.0031    finalize 0.0028    func 0.1613    
Accumulated time: func 0.4040    prepare 0.0132    bound 0.3758    transfer 0.0042    finalize 0.0054    
all_split False
======================Cut inference begins======================
max lb tensor(0.32949162) min lb tensor(-0.72313917)
Number of Verified Splits: 132 of 406
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.345989465713501
10 lb beta sum: 0.09796228259801865, worst -0.7911651134490967
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 71.
#cuts 4-6: 13
#cuts 7-9: 53
#cuts 10-12: 5
#cuts >= 20: 0
BICCOS time: 0.23798847198486328 
BICCOS Cumulative time: 0.5779695510864258
Preprocessing time: 0.014488458633422852 Inference time: 0.21181368827819824 Add cuts time: 0.007624626159667969 Cut analysis time: 0.004061698913574219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.72314 (10), -0.71855 (10), -0.70749 (10), -0.70192 (10), -0.67760 (10), -0.66372 (10), -0.65664 (10), -0.65520 (10), -0.65498 (10), -0.65458 (10), -0.64444 (10), -0.62932 (10), -0.62707 (10), -0.61499 (10), -0.60403 (10), -0.59499 (10), -0.59258 (10), -0.59088 (10), -0.58282 (10), -0.57165 (10), 
Length of domains: 274
Time: pickout 0.0034    decision 0.0295    set_bounds 0.0138    solve 0.1614    add 0.1135    
Accumulated time: pickout 0.0054    decision 0.0718    set_bounds 0.0381    solve 0.4043    add 0.2170    
Current (lb-rhs): -0.7231391668319702
605 domains visited
Cumulative time: 1.3362531661987305

BaB round 4
batch: 274
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 81] [/input-12, 81] [/input-12, 94] [/input-12, 81] [/input-12, 81] [/input-12, 94] [/input-12, 81] [/input-12, 94] [/input-12, 94] [/input-12, 81] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6902362108230591
10 lb beta sum: 0.0, worst -0.6899306178092957
Time: prepare 0.0087    bound 0.1395    transfer 0.0062    finalize 0.0034    func 0.1615    
Accumulated time: func 0.5655    prepare 0.0222    bound 0.5153    transfer 0.0105    finalize 0.0088    
all_split False
======================Cut inference begins======================
max lb tensor(0.14853668) min lb tensor(-0.68983805)
Number of Verified Splits: 104 of 548
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 57.
#cuts 1-3: 1
#cuts 4-6: 32
#cuts 7-9: 23
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.042250633239746094 
BICCOS Cumulative time: 0.6202201843261719
Preprocessing time: 0.018050432205200195 Inference time: 0.012026548385620117 Add cuts time: 0.009391307830810547 Cut analysis time: 0.0027823448181152344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.68984 (11), -0.68495 (11), -0.67637 (11), -0.67398 (11), -0.67120 (11), -0.66813 (11), -0.66050 (11), -0.65553 (11), -0.64357 (11), -0.63537 (11), -0.63389 (11), -0.63150 (11), -0.62440 (11), -0.62405 (11), -0.62161 (11), -0.62075 (11), -0.61536 (11), -0.60971 (11), -0.60893 (11), -0.60509 (11), 
Length of domains: 444
Time: pickout 0.0151    decision 0.0253    set_bounds 0.0176    solve 0.1617    add 0.1124    
Accumulated time: pickout 0.0205    decision 0.0971    set_bounds 0.0557    solve 0.5660    add 0.3294    
Current (lb-rhs): -0.6898380517959595
1049 domains visited
Cumulative time: 1.7130897045135498

BaB round 5
batch: 444
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 94] [/input-12, 81] [/input-12, 94] [/input-12, 81] [/input-12, 32] [/input-12, 81] [/input-12, 81] [/input-12, 94] [/input-12, 94] [/input-12, 81] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6697109937667847
10 lb beta sum: 0.005590933840721846, worst -0.6695127487182617
Time: prepare 0.0136    bound 0.1538    transfer 0.0063    finalize 0.0062    func 0.1860    
Accumulated time: func 0.7514    prepare 0.0361    bound 0.6692    transfer 0.0168    finalize 0.0150    
all_split False
======================Cut inference begins======================
max lb tensor(0.30338049) min lb tensor(-0.66946977)
Number of Verified Splits: 154 of 888
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 57.
#cuts 1-3: 3
#cuts 4-6: 32
#cuts 7-9: 22
#cuts >= 20: 0
BICCOS time: 0.0615079402923584 
BICCOS Cumulative time: 0.6817281246185303
Preprocessing time: 0.029686450958251953 Inference time: 0.022378206253051758 Add cuts time: 0.00672149658203125 Cut analysis time: 0.0027217864990234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.66947 (12), -0.66505 (12), -0.65605 (12), -0.65311 (12), -0.65135 (12), -0.64775 (12), -0.63998 (12), -0.63513 (12), -0.62322 (12), -0.61343 (12), -0.61159 (12), -0.60397 (12), -0.60195 (12), -0.60183 (12), -0.60008 (12), -0.59538 (12), -0.59108 (12), -0.59048 (12), -0.58835 (12), -0.58698 (12), 
Length of domains: 734
Time: pickout 0.0077    decision 0.0471    set_bounds 0.0284    solve 0.1863    add 0.0096    
Accumulated time: pickout 0.0283    decision 0.1443    set_bounds 0.0841    solve 0.7522    add 0.3390    
Current (lb-rhs): -0.6694697737693787
1783 domains visited
Cumulative time: 2.05665922164917

BaB round 6
batch: 734
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-8, 1509] [/input-12, 32] [/input-12, 32] [/input-8, 1509] [/input-8, 411] [/input-8, 411] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0006466663908213377, worst -0.6553640365600586
10 lb beta sum: 0.018024886026978493, worst -0.6552969813346863
Time: prepare 0.0593    bound 0.1548    transfer 0.0163    finalize 0.2308    func 0.4711    
Accumulated time: func 1.2225    prepare 0.0956    bound 0.8239    transfer 0.0331    finalize 0.2458    
all_split False
======================Cut inference begins======================
max lb tensor(0.45910069) min lb tensor(-0.65527034)
Number of Verified Splits: 358 of 1468
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 61.
#cuts 1-3: 8
#cuts 4-6: 33
#cuts 7-9: 20
#cuts >= 20: 0
BICCOS time: 0.11943960189819336 
BICCOS Cumulative time: 0.8011677265167236
Preprocessing time: 0.058058977127075195 Inference time: 0.043732643127441406 Add cuts time: 0.014433860778808594 Cut analysis time: 0.003214120864868164
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.65527 (13), -0.65072 (13), -0.64190 (13), -0.63907 (13), -0.63738 (13), -0.63361 (13), -0.62570 (13), -0.62120 (13), -0.60957 (13), -0.59971 (13), -0.59760 (13), -0.59008 (13), -0.58825 (13), -0.58741 (13), -0.58649 (13), -0.58188 (13), -0.58125 (13), -0.57678 (13), -0.57489 (13), -0.57237 (13), 
Length of domains: 1110
Time: pickout 0.0086    decision 0.0582    set_bounds 0.0410    solve 0.4715    add 0.0076    
Accumulated time: pickout 0.0369    decision 0.2025    set_bounds 0.1251    solve 1.2238    add 0.3466    
Current (lb-rhs): -0.6552703380584717
2893 domains visited
Cumulative time: 2.7705395221710205

BaB round 7
batch: 1110
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 411] [/input-8, 411] [/input-8, 411] [/input-8, 411] [/input-8, 411] [/input-8, 411] [/input-12, 32] [/input-12, 32] [/input-8, 1509] [/input-8, 1509] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6429206728935242
10 lb beta sum: 0.13410919904708862, worst -0.6428300738334656
Time: prepare 0.0473    bound 0.2016    transfer 0.0159    finalize 0.0161    func 0.2966    
Accumulated time: func 1.5191    prepare 0.1432    bound 1.0255    transfer 0.0490    finalize 0.2619    
all_split False
======================Cut inference begins======================
max lb tensor(0.82500148) min lb tensor(-0.64281070)
Number of Verified Splits: 769 of 2220
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 51.
#cuts 1-3: 4
#cuts 4-6: 26
#cuts 7-9: 21
#cuts >= 20: 0
BICCOS time: 0.18193507194519043 
BICCOS Cumulative time: 0.9831027984619141
Preprocessing time: 0.07360553741455078 Inference time: 0.09032511711120605 Add cuts time: 0.015584468841552734 Cut analysis time: 0.0024199485778808594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.64281 (14), -0.63410 (14), -0.63234 (14), -0.63234 (14), -0.62669 (14), -0.62668 (14), -0.62457 (14), -0.62327 (14), -0.62032 (14), -0.61868 (14), -0.61793 (14), -0.61369 (14), -0.59440 (14), -0.59209 (14), -0.59115 (14), -0.58961 (14), -0.58477 (14), -0.58173 (14), -0.58150 (14), -0.58107 (14), 
Length of domains: 1451
Time: pickout 0.0187    decision 0.0796    set_bounds 0.0435    solve 0.2971    add 0.0074    
Accumulated time: pickout 0.0556    decision 0.2822    set_bounds 0.1686    solve 1.5209    add 0.3540    
Current (lb-rhs): -0.6428107023239136
4344 domains visited
Cumulative time: 3.409517526626587

BaB round 8
batch: 1451
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-8, 1516] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.628243625164032
10 lb beta sum: 0.1281808465719223, worst -0.6280327439308167
Time: prepare 0.0665    bound 0.2387    transfer 0.0156    finalize 0.0230    func 0.3629    
Accumulated time: func 1.8821    prepare 0.2099    bound 1.2642    transfer 0.0646    finalize 0.2849    
all_split False
======================Cut inference begins======================
max lb tensor(0.75359547) min lb tensor(-0.62797421)
Number of Verified Splits: 880 of 2902
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 64.
#cuts 1-3: 4
#cuts 4-6: 38
#cuts 7-9: 22
#cuts >= 20: 0
BICCOS time: 0.22261261940002441 
BICCOS Cumulative time: 1.2057154178619385
Preprocessing time: 0.09451436996459961 Inference time: 0.10853409767150879 Add cuts time: 0.016623973846435547 Cut analysis time: 0.0029401779174804688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.62797 (15), -0.62638 (15), -0.62194 (15), -0.62002 (15), -0.61986 (15), -0.61767 (15), -0.61695 (15), -0.61627 (15), -0.61531 (15), -0.61354 (15), -0.61124 (15), -0.60934 (15), -0.60802 (15), -0.60228 (15), -0.60119 (15), -0.59668 (15), -0.59580 (15), -0.59511 (15), -0.59426 (15), -0.58532 (15), 
Length of domains: 2022
Time: pickout 0.0267    decision 0.0970    set_bounds 0.2075    solve 0.3640    add 0.0159    
Accumulated time: pickout 0.0822    decision 0.3792    set_bounds 0.3761    solve 1.8849    add 0.3698    
Current (lb-rhs): -0.6279742121696472
6366 domains visited
Cumulative time: 4.355678558349609

BaB round 9
batch: 2022
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 32] [/input-12, 32] [/input-12, 67] [/input-8, 1693] [/input-12, 0] [/input-12, 0] [/input-8, 1515] [/input-12, 0] [/input-12, 67] [/input-8, 1693] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6215210556983948
10 lb beta sum: 0.06992938369512558, worst -0.6215012073516846
Time: prepare 0.0923    bound 0.3040    transfer 0.0235    finalize 0.0273    func 0.4745    
Accumulated time: func 2.3566    prepare 0.3024    bound 1.5683    transfer 0.0881    finalize 0.3121    
all_split False
======================Cut inference begins======================
max lb tensor(0.54173839) min lb tensor(-0.62148136)
Number of Verified Splits: 326 of 4044
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 71.
#cuts 1-3: 4
#cuts 4-6: 44
#cuts 7-9: 23
#cuts >= 20: 0
BICCOS time: 0.19248127937316895 
BICCOS Cumulative time: 1.3981966972351074
Preprocessing time: 0.13171148300170898 Inference time: 0.04448580741882324 Add cuts time: 0.013091564178466797 Cut analysis time: 0.003192424774169922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.62148 (16), -0.61979 (16), -0.61549 (16), -0.61352 (16), -0.60823 (16), -0.60724 (16), -0.60720 (16), -0.60626 (16), -0.60288 (16), -0.60125 (16), -0.60124 (16), -0.60010 (16), -0.59885 (16), -0.59874 (16), -0.59818 (16), -0.59350 (16), -0.59240 (16), -0.59039 (16), -0.58851 (16), -0.58831 (16), 
Length of domains: 3718
Time: pickout 0.0380    decision 0.1270    set_bounds 0.2562    solve 0.4760    add 0.0278    
Accumulated time: pickout 0.1203    decision 0.5062    set_bounds 0.6323    solve 2.3609    add 0.3977    
Current (lb-rhs): -0.6214813590049744
10084 domains visited
Cumulative time: 5.485257387161255

BaB round 10
batch: 3718
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 0] [/input-8, 1713] [/input-8, 1515] [/input-8, 220] [/input-12, 0] [/input-8, 220] [/input-12, 0] [/input-8, 1374] [/input-8, 220] [/input-8, 1509] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6125578880310059
10 lb beta sum: 0.06267013400793076, worst -0.6124953031539917
Time: prepare 0.1609    bound 0.4891    transfer 0.0434    finalize 0.0459    func 0.7901    
Accumulated time: func 3.1467    prepare 0.4638    bound 2.0573    transfer 0.1315    finalize 0.3581    
all_split False
======================Cut inference begins======================
max lb tensor(0.34890661) min lb tensor(-0.61247259)
Number of Verified Splits: 614 of 7436
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 92.
#cuts 1-3: 4
#cuts 4-6: 47
#cuts 7-9: 39
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.6462891101837158 
BICCOS Cumulative time: 2.0444858074188232
Preprocessing time: 0.26791954040527344 Inference time: 0.3490417003631592 Add cuts time: 0.025022268295288086 Cut analysis time: 0.004305601119995117
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.61247 (17), -0.61080 (17), -0.60626 (17), -0.60587 (17), -0.60448 (17), -0.60398 (17), -0.60184 (17), -0.60086 (17), -0.59968 (17), -0.59776 (17), -0.59767 (17), -0.59549 (17), -0.59396 (17), -0.59246 (17), -0.59079 (17), -0.58839 (17), -0.58838 (17), -0.58800 (17), -0.58774 (17), -0.58696 (17), 
Length of domains: 6822
Time: pickout 0.0535    decision 0.2282    set_bounds 0.4104    solve 0.7923    add 0.0381    
Accumulated time: pickout 0.1738    decision 0.7344    set_bounds 1.0427    solve 3.1532    add 0.4357    
Current (lb-rhs): -0.6124725937843323
16906 domains visited
Cumulative time: 7.673003673553467

BaB round 11
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 171] [/input-8, 1517] [/input-8, 1509] [/input-8, 1509] [/input-8, 1517] [/input-8, 1693] [/input-8, 1713] [/input-8, 1509] [/input-8, 220] [/input-8, 1509] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6037694811820984
10 lb beta sum: 0.07972396910190582, worst -0.6037163138389587
Time: prepare 0.1862    bound 0.5358    transfer 0.1345    finalize 0.2438    func 1.1549    
Accumulated time: func 4.3016    prepare 0.6503    bound 2.5932    transfer 0.2659    finalize 0.6019    
all_split False
======================Cut inference begins======================
max lb tensor(0.31371203) min lb tensor(-0.60370320)
Number of Verified Splits: 943 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 117.
#cuts 1-3: 5
#cuts 4-6: 72
#cuts 7-9: 39
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.46152663230895996 
BICCOS Cumulative time: 2.506012439727783
Preprocessing time: 0.26198554039001465 Inference time: 0.1533193588256836 Add cuts time: 0.04087948799133301 Cut analysis time: 0.005342245101928711
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.60626 (17), -0.60448 (17), -0.60370 (18), -0.60199 (18), -0.59968 (17), -0.59767 (17), -0.59708 (18), -0.59514 (18), -0.59396 (17), -0.59246 (17), -0.58938 (18), -0.58899 (18), -0.58835 (18), -0.58800 (17), -0.58673 (18), -0.58287 (18), -0.58214 (18), -0.58176 (17), -0.58153 (18), -0.58151 (17), 
Length of domains: 9975
Time: pickout 0.0619    decision 0.2394    set_bounds 0.2443    solve 1.1581    add 0.0395    
Accumulated time: pickout 0.2356    decision 0.9738    set_bounds 1.2871    solve 4.3113    add 0.4752    
Current (lb-rhs): -0.6062561273574829
24155 domains visited
current_vram/total_varm: 11.4GB/99.9GB, batch_size increase to 8192
Cumulative time: 9.900092601776123

BaB round 12
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1517] [/input-8, 850] [/input-12, 67] [/input-8, 1713] [/input-8, 1509] [/input-12, 0] [/input-12, 0] [/input-8, 1374] [/input-8, 1049] [/input-8, 221] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5975068211555481
10 lb beta sum: 0.17466992139816284, worst -0.5974432229995728
Time: prepare 0.3820    bound 1.0007    transfer 0.0760    finalize 0.1096    func 1.6804    
Accumulated time: func 5.9820    prepare 1.0327    bound 3.5938    transfer 0.3419    finalize 0.7116    
all_split False
======================Cut inference begins======================
max lb tensor(0.60103559) min lb tensor(-0.59736568)
Number of Verified Splits: 4204 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 14
#cuts 4-6: 12
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 1.590811014175415 
BICCOS Cumulative time: 4.096823453903198
Preprocessing time: 0.7707493305206299 Inference time: 0.6968131065368652 Add cuts time: 0.12159228324890137 Cut analysis time: 0.0016562938690185547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.60370 (18), -0.59737 (18), -0.59708 (18), -0.59693 (19), -0.59553 (18), -0.59081 (18), -0.58872 (18), -0.58841 (18), -0.58693 (18), -0.58513 (19), -0.58355 (19), -0.58133 (19), -0.58004 (19), -0.57934 (18), -0.57868 (19), -0.57785 (19), -0.57671 (18), -0.57629 (18), -0.57570 (19), -0.57460 (19), 
Length of domains: 13963
Time: pickout 0.1213    decision 0.6670    set_bounds 0.6752    solve 1.6841    add 0.0907    
Accumulated time: pickout 0.3569    decision 1.6408    set_bounds 1.9623    solve 5.9954    add 0.5659    
Current (lb-rhs): -0.6037032008171082
36335 domains visited
current_vram/total_varm: 19.2GB/99.9GB, batch_size increase to 16384
Cumulative time: 14.79597783088684

BaB round 13
batch: 13963
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2019] [/input-8, 2019] [/input-8, 872] [/input-8, 1515] [/input-8, 872] [/input-8, 1515] [/input-8, 2019] [/input-8, 1509] [/input-8, 1515] [/input-8, 1515] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5986155867576599
10 lb beta sum: 0.9724219441413879, worst -0.6500207185745239
Time: prepare 0.6464    bound 1.5786    transfer 0.1659    finalize 0.5155    func 3.0949    
Accumulated time: func 9.0770    prepare 1.6794    bound 5.1724    transfer 0.5078    finalize 1.2271    
all_split False
======================Cut inference begins======================
max lb tensor(1.24110591) min lb tensor(-0.59264207)
Number of Verified Splits: 22158 of 27926
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 32
#cuts >= 20: 0
BICCOS time: 5.698652982711792 
BICCOS Cumulative time: 9.79547643661499
Preprocessing time: 0.945296049118042 Inference time: 3.820251703262329 Add cuts time: 0.932157039642334 Cut analysis time: 0.0009481906890869141
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.59264 (19), -0.58622 (19), -0.58099 (19), -0.57583 (19), -0.57460 (19), -0.57058 (19), -0.56929 (19), -0.56750 (19), -0.56733 (20), -0.56632 (19), -0.56549 (20), -0.56371 (20), -0.56249 (20), -0.56245 (20), -0.56055 (20), -0.56031 (20), -0.55973 (19), -0.55935 (20), -0.55757 (20), -0.55642 (19), 
Length of domains: 5768
Time: pickout 0.2771    decision 1.0333    set_bounds 1.0964    solve 3.1002    add 0.0716    
Accumulated time: pickout 0.6340    decision 2.6741    set_bounds 3.0587    solve 9.0956    add 0.6375    
Current (lb-rhs): -0.592642068862915
42103 domains visited
Cumulative time: 26.33036708831787

BaB round 14
batch: 5768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 67] [/input-8, 1049] [/input-8, 1374] [/input-8, 1141] [/input-8, 2019] [/input-8, 411] [/input-8, 1517] [/input-8, 1509] [/input-8, 1374] [/input-8, 2019] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5882091522216797
10 lb beta sum: 3.6336374282836914, worst -0.5405529737472534
Time: prepare 0.2616    bound 0.7005    transfer 0.0652    finalize 0.0844    func 1.1874    
Accumulated time: func 10.2644    prepare 1.9414    bound 5.8729    transfer 0.5730    finalize 1.3115    
all_split False
======================Cut inference begins======================
max lb tensor(1.62232232) min lb tensor(-0.54039121)
Number of Verified Splits: 11361 of 11536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 2.545975923538208 
BICCOS Cumulative time: 12.341452360153198
Preprocessing time: 0.3972904682159424 Inference time: 1.937417984008789 Add cuts time: 0.21026277542114258 Cut analysis time: 0.0010046958923339844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.54039 (20), -0.53608 (20), -0.53382 (20), -0.52941 (20), -0.52263 (20), -0.52007 (20), -0.51820 (20), -0.51549 (20), -0.49092 (20), -0.48657 (20), -0.48438 (20), -0.47997 (20), -0.46589 (20), -0.46350 (20), -0.46172 (20), -0.45917 (20), -0.42451 (21), -0.42318 (21), -0.42223 (21), -0.41999 (21), 
Length of domains: 175
Time: pickout 0.0972    decision 0.3309    set_bounds 0.3357    solve 1.1904    add 0.0073    
Accumulated time: pickout 0.7312    decision 3.0050    set_bounds 3.3944    solve 10.2860    add 0.6448    
Current (lb-rhs): -0.540391206741333
42278 domains visited
Cumulative time: 30.95854949951172

BaB round 15
batch: 175
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1515] [/input-8, 1073] [/input-8, 1141] [/input-8, 2019] [/input-8, 1141] [/input-8, 1141] [/input-8, 1141] [/input-8, 2019] [/input, 951] [/input-8, 1138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5776046514511108
10 lb beta sum: 3.9302775859832764, worst -0.5226349830627441
Time: prepare 0.0081    bound 0.1623    transfer 0.0014    finalize 0.0028    func 0.1772    
Accumulated time: func 10.4416    prepare 1.9497    bound 6.0352    transfer 0.5744    finalize 1.3143    
all_split False
======================Cut inference begins======================
max lb tensor(0.78137064) min lb tensor(-0.52253747)
Number of Verified Splits: 69 of 350
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.028283357620239258 
BICCOS Cumulative time: 12.369735717773438
Preprocessing time: 0.011074542999267578 Inference time: 0.014681100845336914 Add cuts time: 0.0019140243530273438 Cut analysis time: 0.0006136894226074219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52254 (21), -0.51961 (21), -0.51829 (21), -0.51526 (21), -0.51491 (21), -0.51213 (21), -0.51061 (21), -0.50765 (21), -0.50651 (21), -0.50386 (21), -0.50194 (21), -0.50139 (21), -0.49864 (21), -0.49646 (21), -0.47247 (21), -0.46947 (21), -0.46825 (21), -0.46514 (21), -0.46469 (21), -0.46191 (21), 
Length of domains: 281
Time: pickout 0.0066    decision 0.0275    set_bounds 0.0100    solve 0.1773    add 0.0053    
Accumulated time: pickout 0.7378    decision 3.0325    set_bounds 3.4044    solve 10.4633    add 0.6501    
Current (lb-rhs): -0.5225374698638916
42559 domains visited
Cumulative time: 31.214519739151

BaB round 16
batch: 281
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1360] [/input-8, 336] [/input-8, 1374] [/input, 951] [/input-8, 1065] [/input-8, 1073] [/input-8, 850] [/input-8, 1360] [/input-8, 1073] [/input-8, 1360] 
cut re-enabled after branching node selection
0 lb beta sum: 4.529435634613037, worst -0.5225377082824707
10 lb beta sum: 4.59128475189209, worst -0.522437334060669
Time: prepare 0.0250    bound 0.1619    transfer 0.0026    finalize 0.0038    func 0.1969    
Accumulated time: func 10.6385    prepare 1.9749    bound 6.1971    transfer 0.5769    finalize 1.3181    
all_split False
======================Cut inference begins======================
max lb tensor(0.31391287) min lb tensor(-0.52238989)
Number of Verified Splits: 98 of 562
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.03518795967102051 
BICCOS Cumulative time: 12.404923677444458
Preprocessing time: 0.01724553108215332 Inference time: 0.01403355598449707 Add cuts time: 0.003095388412475586 Cut analysis time: 0.0008134841918945312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52239 (22), -0.51930 (22), -0.51816 (22), -0.51500 (22), -0.51486 (22), -0.51197 (22), -0.51054 (22), -0.50754 (22), -0.50644 (22), -0.50450 (22), -0.50378 (22), -0.50181 (22), -0.50138 (22), -0.49915 (22), -0.49858 (22), -0.49622 (22), -0.47199 (22), -0.46888 (22), -0.46782 (22), -0.46462 (22), 
Length of domains: 464
Time: pickout 0.0053    decision 0.0293    set_bounds 0.0148    solve 0.1970    add 0.0046    
Accumulated time: pickout 0.7431    decision 3.0618    set_bounds 3.4192    solve 10.6603    add 0.6546    
Current (lb-rhs): -0.5223898887634277
43023 domains visited
Cumulative time: 31.501742839813232

BaB round 17
batch: 464
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 0] [/input-12, 0] [/input-8, 1074] [/input-12, 0] [/input-8, 1360] [/input, 3941] [/input-8, 1374] [/input-12, 0] [/input-8, 850] [/input-8, 1065] 
cut re-enabled after branching node selection
0 lb beta sum: 4.540804386138916, worst -0.5223896503448486
10 lb beta sum: 4.579983234405518, worst -0.5223877429962158
Time: prepare 0.0411    bound 0.1599    transfer 0.0079    finalize 0.0057    func 0.2212    
Accumulated time: func 10.8597    prepare 2.0162    bound 6.3570    transfer 0.5848    finalize 1.3238    
all_split False
======================Cut inference begins======================
max lb tensor(0.32110429) min lb tensor(-0.52237248)
Number of Verified Splits: 142 of 928
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.054017066955566406 
BICCOS Cumulative time: 12.458940744400024
Preprocessing time: 0.02948141098022461 Inference time: 0.02144789695739746 Add cuts time: 0.002471923828125 Cut analysis time: 0.0006158351898193359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52237 (23), -0.51921 (23), -0.51815 (23), -0.51492 (23), -0.51484 (23), -0.51191 (23), -0.51053 (23), -0.50749 (23), -0.50640 (23), -0.50433 (23), -0.50373 (23), -0.50171 (23), -0.50133 (23), -0.50004 (23), -0.49892 (23), -0.49852 (23), -0.49695 (23), -0.49609 (23), -0.49564 (23), -0.49393 (23), 
Length of domains: 786
Time: pickout 0.0075    decision 0.0371    set_bounds 0.0237    solve 0.2213    add 0.0042    
Accumulated time: pickout 0.7506    decision 3.0989    set_bounds 3.4429    solve 10.8816    add 0.6588    
Current (lb-rhs): -0.5223724842071533
43809 domains visited
Cumulative time: 31.851202726364136

BaB round 18
batch: 786
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1138] [/input-8, 849] [/input-8, 1505] [/input-8, 1360] [/input-8, 336] [/input-8, 1360] [/input-8, 336] [/input-8, 336] [/input-8, 336] [/input-12, 0] 
cut re-enabled after branching node selection
0 lb beta sum: 4.535831928253174, worst -0.5223720073699951
10 lb beta sum: 4.572208404541016, worst -0.5223839282989502
Time: prepare 0.0696    bound 0.1666    transfer 0.0119    finalize 0.0097    func 0.2678    
Accumulated time: func 11.1275    prepare 2.0860    bound 6.5236    transfer 0.5967    finalize 1.3335    
all_split False
======================Cut inference begins======================
max lb tensor(0.33240366) min lb tensor(-0.52237082)
Number of Verified Splits: 211 of 1572
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.08865618705749512 
BICCOS Cumulative time: 12.54759693145752
Preprocessing time: 0.04971432685852051 Inference time: 0.033989906311035156 Add cuts time: 0.004312992095947266 Cut analysis time: 0.0006389617919921875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.52237 (24), -0.51917 (24), -0.51815 (24), -0.51484 (24), -0.51191 (24), -0.51053 (24), -0.50823 (24), -0.50429 (24), -0.49871 (24), -0.49846 (24), -0.49835 (24), -0.49733 (24), -0.49714 (24), -0.49573 (24), -0.49560 (24), -0.49460 (24), -0.49455 (24), -0.49334 (24), -0.49220 (24), -0.49175 (24), 
Length of domains: 1361
Time: pickout 0.0122    decision 0.1886    set_bounds 0.0431    solve 0.2681    add 0.0139    
Accumulated time: pickout 0.7628    decision 3.2875    set_bounds 3.4861    solve 11.1497    add 0.6727    
Current (lb-rhs): -0.5223708152770996
45170 domains visited
Cumulative time: 32.46848964691162

BaB round 19
batch: 1361
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1360] [/input-8, 1360] [/input, 3989] [/input-8, 345] [/input, 951] [/input, 951] [/input-8, 345] [/input-8, 1360] [/input-8, 1509] [/input-8, 1065] 
cut re-enabled after branching node selection
0 lb beta sum: 4.514880657196045, worst -0.5136430263519287
10 lb beta sum: 4.554407119750977, worst -0.5134716033935547
Time: prepare 0.1223    bound 0.2146    transfer 0.0136    finalize 0.0180    func 0.3867    
Accumulated time: func 11.5142    prepare 2.2085    bound 6.7382    transfer 0.6103    finalize 1.3515    
all_split False
======================Cut inference begins======================
max lb tensor(0.32299089) min lb tensor(-0.51346898)
Number of Verified Splits: 359 of 2722
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.1496107578277588 
BICCOS Cumulative time: 12.697207689285278
Preprocessing time: 0.08398795127868652 Inference time: 0.058326005935668945 Add cuts time: 0.006587982177734375 Cut analysis time: 0.0007088184356689453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.51347 (25), -0.51200 (25), -0.51024 (25), -0.50932 (25), -0.50877 (25), -0.50816 (25), -0.50778 (25), -0.50606 (25), -0.50453 (25), -0.50420 (25), -0.50307 (25), -0.50178 (25), -0.50154 (25), -0.50021 (25), -0.49870 (25), -0.49714 (25), -0.49328 (25), -0.49231 (25), -0.49220 (25), -0.49115 (25), 
Length of domains: 2363
Time: pickout 0.0214    decision 0.0809    set_bounds 0.0668    solve 0.3871    add 0.0168    
Accumulated time: pickout 0.7842    decision 3.3684    set_bounds 3.5529    solve 11.5368    add 0.6896    
Current (lb-rhs): -0.5134689807891846
47533 domains visited
Cumulative time: 33.19613981246948

BaB round 20
batch: 2363
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1509] [/input-8, 1393] [/input-8, 345] [/input-8, 345] [/input, 951] [/input-8, 1354] [/input-8, 221] [/input-8, 1501] [/input-8, 1393] [/input-8, 345] 
cut re-enabled after branching node selection
0 lb beta sum: 4.488576412200928, worst -0.5069618225097656
10 lb beta sum: 4.5085978507995605, worst -0.506824254989624
Time: prepare 0.2238    bound 0.3312    transfer 0.0250    finalize 0.0286    func 0.6391    
Accumulated time: func 12.1532    prepare 2.4326    bound 7.0694    transfer 0.6354    finalize 1.3801    
all_split False
======================Cut inference begins======================
max lb tensor(0.32733917) min lb tensor(-0.50676465)
Number of Verified Splits: 447 of 4726
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.2357797622680664 
BICCOS Cumulative time: 12.932987451553345
Preprocessing time: 0.14887666702270508 Inference time: 0.07883715629577637 Add cuts time: 0.0073430538177490234 Cut analysis time: 0.0007228851318359375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50676 (26), -0.50526 (26), -0.50371 (26), -0.50314 (26), -0.50247 (26), -0.50224 (26), -0.50165 (26), -0.50093 (26), -0.49992 (26), -0.49989 (26), -0.49932 (26), -0.49889 (26), -0.49845 (26), -0.49836 (26), -0.49774 (26), -0.49734 (26), -0.49617 (26), -0.49603 (26), -0.49557 (26), -0.49536 (26), 
Length of domains: 4279
Time: pickout 0.0480    decision 0.2754    set_bounds 0.1159    solve 0.6399    add 0.0124    
Accumulated time: pickout 0.8322    decision 3.6438    set_bounds 3.6688    solve 12.1767    add 0.7020    
Current (lb-rhs): -0.5067646503448486
51812 domains visited
Cumulative time: 34.532167196273804

BaB round 21
batch: 4279
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1354] [/input-8, 1138] [/input-8, 1501] [/input-8, 1393] [/input-8, 1393] [/input, 3989] [/input-8, 1374] [/input-8, 1393] [/input-8, 1501] [/input-8, 1501] 
cut re-enabled after branching node selection
0 lb beta sum: 4.4740729331970215, worst -0.5031414031982422
10 lb beta sum: 4.4828057289123535, worst -0.5031996965408325
Time: prepare 0.4079    bound 0.5395    transfer 0.0577    finalize 0.2234    func 1.2845    
Accumulated time: func 13.4377    prepare 2.8408    bound 7.6090    transfer 0.6930    finalize 1.6034    
all_split False
======================Cut inference begins======================
max lb tensor(0.30516934) min lb tensor(-0.50313973)
Number of Verified Splits: 513 of 8558
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 0.38827967643737793 
BICCOS Cumulative time: 13.321267127990723
Preprocessing time: 0.2721986770629883 Inference time: 0.10628485679626465 Add cuts time: 0.008921146392822266 Cut analysis time: 0.0008749961853027344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50314 (27), -0.50164 (27), -0.50076 (27), -0.49982 (27), -0.49925 (27), -0.49835 (27), -0.49758 (27), -0.49637 (27), -0.49611 (27), -0.49599 (27), -0.49586 (27), -0.49480 (27), -0.49448 (27), -0.49438 (27), -0.49342 (27), -0.49317 (27), -0.49302 (27), -0.49278 (27), -0.49203 (27), -0.49187 (27), 
Length of domains: 8045
Time: pickout 0.0748    decision 0.3772    set_bounds 0.2186    solve 1.2864    add 0.1712    
Accumulated time: pickout 0.9070    decision 4.0210    set_bounds 3.8874    solve 13.4632    add 0.8732    
Current (lb-rhs): -0.5031397342681885
59857 domains visited
Cumulative time: 37.073617935180664

BaB round 22
batch: 8045
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2019] [/input, 951] [/input-8, 1393] [/input-8, 1501] [/input-8, 469] [/input-8, 2019] [/input-8, 1505] [/input-8, 469] [/input-8, 469] [/input-8, 469] 
cut re-enabled after branching node selection
0 lb beta sum: 4.463720321655273, worst -0.5031399726867676
10 lb beta sum: 4.484156131744385, worst -0.5031623840332031
Time: prepare 0.8677    bound 0.9774    transfer 0.0603    finalize 0.1208    func 2.1353    
Accumulated time: func 15.5730    prepare 3.7091    bound 8.5863    transfer 0.7533    finalize 1.7242    
all_split False
======================Cut inference begins======================
max lb tensor(0.34877014) min lb tensor(-0.50313377)
Number of Verified Splits: 1714 of 16090
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 1.3989253044128418 
BICCOS Cumulative time: 14.720192432403564
Preprocessing time: 0.9563825130462646 Inference time: 0.3861398696899414 Add cuts time: 0.05534815788269043 Cut analysis time: 0.0010547637939453125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50313 (28), -0.50164 (28), -0.50071 (28), -0.49973 (28), -0.49918 (28), -0.49828 (28), -0.49752 (28), -0.49633 (28), -0.49603 (28), -0.49599 (28), -0.49574 (28), -0.49475 (28), -0.49448 (28), -0.49428 (28), -0.49342 (28), -0.49315 (28), -0.49295 (28), -0.49270 (28), -0.49203 (28), -0.49187 (28), 
Length of domains: 14376
Time: pickout 0.1696    decision 0.7995    set_bounds 0.8296    solve 2.1420    add 0.0730    
Accumulated time: pickout 1.0766    decision 4.8204    set_bounds 4.7170    solve 15.6051    add 0.9462    
Current (lb-rhs): -0.5031337738037109
74233 domains visited
Cumulative time: 42.54285430908203

BaB round 23
batch: 14376
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 469] [/input-8, 469] [/input-8, 469] [/input-8, 1505] [/input-8, 469] [/input-8, 1505] [/input, 2667] [/input-8, 1501] [/input-8, 469] [/input-8, 469] 
cut re-enabled after branching node selection
0 lb beta sum: 4.4557271003723145, worst -0.5031347274780273
10 lb beta sum: 4.472461223602295, worst -0.5031453371047974
Time: prepare 1.5340    bound 1.6248    transfer 0.1731    finalize 0.2210    func 4.0763    
Accumulated time: func 19.6493    prepare 5.2436    bound 10.2111    transfer 0.9264    finalize 1.9453    
all_split False
======================Cut inference begins======================
max lb tensor(0.32908249) min lb tensor(-0.50313377)
Number of Verified Splits: 4419 of 28752
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 2.3917348384857178 
BICCOS Cumulative time: 17.111927270889282
Preprocessing time: 1.0241570472717285 Inference time: 1.294693946838379 Add cuts time: 0.07199883460998535 Cut analysis time: 0.000885009765625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50313 (29), -0.50163 (29), -0.50068 (29), -0.49971 (29), -0.49914 (29), -0.49821 (29), -0.49751 (29), -0.49631 (29), -0.49602 (29), -0.49599 (29), -0.49574 (29), -0.49473 (29), -0.49448 (29), -0.49428 (29), -0.49342 (29), -0.49315 (29), -0.49294 (29), -0.49266 (29), -0.49203 (29), -0.49186 (29), 
Length of domains: 24333
Time: pickout 0.3553    decision 1.2569    set_bounds 1.3078    solve 4.0835    add 0.1134    
Accumulated time: pickout 1.4320    decision 6.0773    set_bounds 6.0248    solve 19.6887    add 1.0596    
Current (lb-rhs): -0.5031337738037109
98566 domains visited
Cumulative time: 52.15700340270996

BaB round 24
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1501] [/input-8, 1505] [/input-8, 1505] [/input-8, 750] [/input, 2667] [/input, 3941] [/input-8, 1505] [/input, 2667] [/input, 2667] [/input-8, 1505] 
cut re-enabled after branching node selection
0 lb beta sum: 4.454946994781494, worst -0.5031335353851318
10 lb beta sum: 4.467456817626953, worst -0.503241777420044
Time: prepare 1.6594    bound 1.8274    transfer 0.1931    finalize 0.6687    func 4.5658    
Accumulated time: func 24.2151    prepare 6.9034    bound 12.0386    transfer 1.1195    finalize 2.6140    
all_split False
======================Cut inference begins======================
max lb tensor(0.33574533) min lb tensor(-0.50313354)
Number of Verified Splits: 5966 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 2.986680030822754 
BICCOS Cumulative time: 20.098607301712036
Preprocessing time: 1.156510353088379 Inference time: 1.738546371459961 Add cuts time: 0.09074664115905762 Cut analysis time: 0.0008766651153564453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50313 (30), -0.50163 (30), -0.50065 (30), -0.49966 (30), -0.49914 (29), -0.49819 (30), -0.49751 (30), -0.49631 (29), -0.49602 (30), -0.49599 (30), -0.49574 (30), -0.49473 (29), -0.49448 (30), -0.49428 (30), -0.49342 (30), -0.49315 (30), -0.49294 (29), -0.49266 (30), -0.49203 (30), -0.49186 (30), 
Length of domains: 34751
Time: pickout 0.3256    decision 1.6746    set_bounds 1.2894    solve 4.5743    add 0.1470    
Accumulated time: pickout 1.7576    decision 7.7520    set_bounds 7.3142    solve 24.2630    add 1.2067    
Current (lb-rhs): -0.5031335353851318
125368 domains visited
current_vram/total_varm: 42.3GB/99.9GB, batch_size increase to 32768
Cumulative time: 63.27253460884094

BaB round 25
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1130] [/input-8, 1360] [/input-8, 1360] [/input-8, 1505] [/input-8, 1505] [/input-8, 1501] [/input-8, 1509] [/input-8, 1505] [/input-8, 2019] [/input-8, 1505] 
cut re-enabled after branching node selection
0 lb beta sum: 4.473355293273926, worst -0.5031337738037109
10 lb beta sum: 4.485349655151367, worst -0.5032415390014648
Time: prepare 3.3428    bound 8.7720    transfer 0.5393    finalize 1.0731    func 14.1549    
Accumulated time: func 38.3700    prepare 10.2466    bound 20.8106    transfer 1.6588    finalize 3.6871    
all_split False
======================Cut inference begins======================
max lb tensor(0.33603597) min lb tensor(-0.50313354)
Number of Verified Splits: 10292 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 37
#cuts >= 20: 0
BICCOS time: 5.48428750038147 
BICCOS Cumulative time: 25.582894802093506
Preprocessing time: 2.3229289054870605 Inference time: 2.991724729537964 Add cuts time: 0.1687021255493164 Cut analysis time: 0.0009317398071289062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50313 (31), -0.50163 (31), -0.50063 (31), -0.49966 (31), -0.49911 (30), -0.49816 (31), -0.49751 (31), -0.49630 (30), -0.49602 (31), -0.49599 (31), -0.49574 (31), -0.49472 (30), -0.49448 (31), -0.49428 (31), -0.49342 (31), -0.49315 (31), -0.49294 (30), -0.49266 (31), -0.49203 (30), -0.49186 (31), 
Length of domains: 57227
Time: pickout 0.6419    decision 3.4136    set_bounds 2.3777    solve 14.7056    add 0.2243    
Accumulated time: pickout 2.3995    decision 11.1656    set_bounds 9.6919    solve 38.9685    add 1.4309    
Current (lb-rhs): -0.5031335353851318
180612 domains visited
Cumulative time: 90.32709574699402

BaB round 26
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 914] [/input-8, 1074] [/input-8, 469] [/input-8, 1509] [/input-8, 1509] [/input-8, 1073] [/input-8, 848] [/input-8, 1509] [/input, 630] [/input-8, 1354] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5233364701271057
10 lb beta sum: 3.2901439666748047, worst -0.49912989139556885
Time: prepare 1.8081    bound 8.7911    transfer 0.5747    finalize 0.6371    func 12.2422    
Accumulated time: func 50.6122    prepare 12.0552    bound 29.6017    transfer 2.2335    finalize 4.3242    
all_split False
======================Cut inference begins======================
max lb tensor(0.61390638) min lb tensor(-0.49910218)
Number of Verified Splits: 29550 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 39
#cuts >= 20: 0
BICCOS time: 11.55436110496521 
BICCOS Cumulative time: 37.137255907058716
Preprocessing time: 3.1563024520874023 Inference time: 7.886904001235962 Add cuts time: 0.5097708702087402 Cut analysis time: 0.0013837814331054688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.50313 (31), -0.50163 (31), -0.50063 (31), -0.49966 (31), -0.49910 (31), -0.49816 (31), -0.49751 (31), -0.49629 (31), -0.49602 (31), -0.49599 (31), -0.49574 (31), -0.49472 (31), -0.49448 (31), -0.49428 (31), -0.49342 (31), -0.49315 (31), -0.49294 (31), -0.49266 (31), -0.49203 (31), -0.49186 (31), 
Length of domains: 60445
Time: pickout 0.7135    decision 3.6593    set_bounds 2.7370    solve 12.2615    add 0.5019    
Accumulated time: pickout 3.1130    decision 14.8248    set_bounds 12.4289    solve 51.2300    add 1.9329    
Current (lb-rhs): -0.5031335353851318
216598 domains visited
Cumulative time: 122.23036694526672

BaB round 27
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1509] [/input, 3989] [/input-8, 1074] [/input-8, 1073] [/input-8, 1130] [/input, 882] [/input-8, 1517] [/input-8, 1130] [/input, 951] [/input-8, 1139] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.519679069519043
10 lb beta sum: 3.59092378616333, worst -0.49876976013183594
Time: prepare 1.9620    bound 10.2379    transfer 0.5826    finalize 1.5245    func 14.7486    
Accumulated time: func 65.3608    prepare 14.0178    bound 39.8396    transfer 2.8161    finalize 5.8487    
all_split False
======================Cut inference begins======================
max lb tensor(1.05939865) min lb tensor(-0.49875367)
Number of Verified Splits: 47786 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 40
#cuts >= 20: 0
BICCOS time: 16.048405408859253 
BICCOS Cumulative time: 53.18566131591797
Preprocessing time: 2.426208019256592 Inference time: 12.617791175842285 Add cuts time: 1.0029025077819824 Cut analysis time: 0.0015037059783935547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.49910 (31), -0.49875 (32), -0.49629 (31), -0.49552 (32), -0.49472 (31), -0.49450 (32), -0.49404 (32), -0.49296 (32), -0.49294 (31), -0.49158 (31), -0.49136 (31), -0.49121 (32), -0.49076 (32), -0.49030 (31), -0.49012 (32), -0.49011 (32), -0.48928 (32), -0.48873 (31), -0.48853 (32), -0.48851 (31), 
Length of domains: 45427
Time: pickout 0.7352    decision 3.4421    set_bounds 2.8462    solve 14.7660    add 0.3379    
Accumulated time: pickout 3.8482    decision 18.2670    set_bounds 15.2751    solve 65.9960    add 2.2708    
Current (lb-rhs): -0.4991021752357483
234348 domains visited
Cumulative time: 161.76980352401733

BaB round 28
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1509] [/input, 3137] [/input, 630] [/input, 2667] [/input-8, 1505] [/input, 630] [/input, 3941] [/input-8, 1130] [/input, 630] [/input-8, 1505] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.517184853553772
10 lb beta sum: 3.7270493507385254, worst -0.48897629976272583
Time: prepare 2.0029    bound 10.2437    transfer 0.5781    finalize 1.5448    func 14.8135    
Accumulated time: func 80.1742    prepare 16.0213    bound 50.0834    transfer 3.3942    finalize 7.3935    
all_split False
======================Cut inference begins======================
max lb tensor(1.08943057) min lb tensor(-0.48894149)
Number of Verified Splits: 50359 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 40
#cuts >= 20: 0
BICCOS time: 17.67155909538269 
BICCOS Cumulative time: 70.85722041130066
Preprocessing time: 3.186711072921753 Inference time: 13.608928203582764 Add cuts time: 0.87432861328125 Cut analysis time: 0.0015912055969238281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.49875 (32), -0.49552 (32), -0.49450 (32), -0.49404 (32), -0.49296 (32), -0.49121 (32), -0.49076 (32), -0.49011 (32), -0.48928 (32), -0.48894 (32), -0.48853 (32), -0.48661 (32), -0.48640 (32), -0.48632 (32), -0.48460 (32), -0.48456 (32), -0.48298 (32), -0.48294 (32), -0.48218 (32), -0.48134 (32), 
Length of domains: 27836
Time: pickout 0.9921    decision 4.5347    set_bounds 3.2755    solve 14.8281    add 0.2709    
Accumulated time: pickout 4.8403    decision 22.8017    set_bounds 18.5506    solve 80.8241    add 2.5417    
Current (lb-rhs): -0.4987536668777466
249525 domains visited
Time out!!!!!!!!
Result: unknown in 206.7240 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 195, vnnlib ID: 195 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.43360138, -28.12733841, -22.35846519, -22.52989197, -24.42993546,
         -22.55394173, -24.21316528, -23.50464821, -30.78997040, -27.14316368]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [909]; unstable size 909; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 295, 1, 909] with unstable size 294 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 31, 1, 909] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 909] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [294]; unstable size 294; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 31, 1, 294] with unstable size 30 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 294] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [30]; unstable size 30; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 30] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.58572745,  2.11738157, -1.61616623,  0.40495694, -1.79732180,
         -0.08822262, -0.75266051,  5.35910130,  0.73249245]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.43360138, -28.12733841, -22.35846519, -22.52989197, -24.42993546,
         -22.55394173, -24.21316528, -23.50464821, -30.78997040, -27.14316368]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.92025185, -27.49793243, -22.29163742, -21.62102318, -23.88150215,
          -21.62113190, -23.66503525, -22.87121964, -30.10021782, -26.42115974],
         [-26.92025185, -27.49793243, -22.29163742, -21.62102318, -23.88150215,
          -21.62113190, -23.66503525, -22.87121964, -30.10021782, -26.42115974]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.67061424, -0.67050552,  1.37339783,  0.57958221]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0081 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0962 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 196, vnnlib ID: 196 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.20124054, -32.75820160, -28.84223366, -25.68699837, -28.14376068,
         -27.74590302, -26.15631104, -29.63101959, -30.65435600, -30.62828064]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [842]; unstable size 842; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 405, 1, 842] with unstable size 404 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 57, 1, 842] with unstable size 56 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 842] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [404]; unstable size 404; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 57, 1, 404] with unstable size 56 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 404] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [56]; unstable size 56; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 56] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.16318846,  1.07391274, -0.87398100, -0.95543289,  0.34197754,
         -3.05614185, -0.04709125, -0.50809455, -0.63711381]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.20124054, -32.75820160, -28.84223366, -25.68699837, -28.14376068,
         -27.74590302, -26.15631104, -29.63101959, -30.65435600, -30.62828064]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.67667770, -34.37366104, -29.93743324, -27.22488785, -29.38056564,
          -29.28593636, -26.61051178, -31.20794487, -32.35752487, -32.48934937],
         [-33.67667770, -34.37366104, -29.93743324, -27.22488785, -29.38056564,
          -29.28593636, -26.61051178, -31.20794487, -32.35752487, -32.48934937]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 2.71254539,  2.15567780, -0.61437607,  3.98305702,  5.13263702,
           5.26446152]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0061 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1068 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 197, vnnlib ID: 197 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.12469482, -39.97093964, -32.57508850, -36.95989990, -35.86163330,
         -37.87982178, -36.12578201, -38.47464371, -34.03616714, -39.41172028]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [883]; unstable size 883; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 204, 1, 883] with unstable size 203 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 34, 1, 883] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 883] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [203]; unstable size 203; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 34, 1, 203] with unstable size 33 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [33]; unstable size 33; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 33] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.12358999, -1.30030799,  2.89369106,  1.00351429,  3.51164627,
          1.90343714,  4.32544994, -0.57480240,  4.90797663]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051530458033085, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.12469482, -39.97093964, -32.57508850, -36.95989990, -35.86163330,
         -37.87982178, -36.12578201, -38.47464371, -34.03616714, -39.41172028]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.31739426, -40.25461197, -32.24674606, -36.94387054, -35.85467529,
          -37.79359436, -36.12594604, -38.42827225, -34.24948502, -39.71065521],
         [-32.31739426, -40.25461197, -32.24674606, -36.94387054, -35.85467529,
          -37.79359436, -36.12594604, -38.42827225, -34.24948502, -39.71065521]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.07064819,  1.93209076]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1152 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 198, vnnlib ID: 198 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.53403091, -35.86549759, -30.15495110, -31.23233604, -32.94629288,
         -31.88392830, -33.28496170, -33.82587051, -34.40430069, -35.29534149]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1349]; unstable size 1349; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 341, 1, 1349] with unstable size 340 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 44, 1, 1349] with unstable size 43 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1349] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [340]; unstable size 340; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 44, 1, 340] with unstable size 43 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 340] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [43]; unstable size 43; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 43] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.89350438, -3.20444393, -2.58415508, -1.44902897, -2.17369652,
         -0.58899498, -0.63395798,  0.19766092,  1.54971170]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.53403091, -35.86549759, -30.15495110, -31.23233604, -32.94629288,
         -31.88392830, -33.28496170, -33.82587051, -34.40430069, -35.29534149]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-30.53402901, -35.86549377, -30.15495110, -31.23233223, -32.94629288,
          -31.88392830, -33.28495407, -33.82587051, -34.40430069, -35.29534149],
         [-30.53402901, -35.86549377, -30.15495110, -31.23233223, -32.94629288,
          -31.88392830, -33.28495407, -33.82587051, -34.40430069, -35.29534149]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.37907791,  0.69830322,  2.41226387,  1.34989929,  2.75092506,
           3.29184151]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[1.26507962, 1.28095269, 1.37619078,  ..., 1.63015902,
            1.53492093, 1.43968284],
           [1.26507962, 1.31269872, 1.40793681,  ..., 1.72539711,
            1.67777801, 1.58253992],
           [1.31269872, 1.34444475, 1.40793681,  ..., 1.55079389,
            1.53492093, 1.50317490],
           ...,
           [1.69365108, 1.72539711, 1.80476213,  ..., 1.77301610,
            1.75714314, 1.70952404],
           [1.66190505, 1.67777801, 1.72539711,  ..., 1.75714314,
            1.67777801, 1.55079389],
           [1.66190505, 1.66190505, 1.72539711,  ..., 1.64603198,
            1.55079389, 1.42380977]],

          [[1.04669893, 1.07890511, 1.17552364,  ..., 1.43317258,
            1.33655429, 1.23993587],
           [1.06280196, 1.11111140, 1.20772982,  ..., 1.51368785,
            1.46537876, 1.36876035],
           [1.11111140, 1.14331758, 1.20772982,  ..., 1.33655429,
            1.32045114, 1.28824508],
           ...,
           [1.41706955, 1.46537876, 1.54589403,  ..., 1.11111140,
            1.15942061, 1.22383285],
           [1.40096653, 1.41706955, 1.46537876,  ..., 1.22383285,
            1.23993587, 1.27214205],
           [1.40096653, 1.40096653, 1.46537876,  ..., 1.40096653,
            1.36876035, 1.32045114]],

          [[0.91604215, 0.94602716, 1.03598225,  ..., 1.27586246,
            1.20089996, 1.11094475],
           [0.93103468, 0.97601217, 1.06596720,  ..., 1.44078004,
            1.39580250, 1.30584753],
           [0.97601217, 1.00599718, 1.06596720,  ..., 1.27586246,
            1.24587750, 1.21589243],
           ...,
           [1.29085493, 1.33583248, 1.41079497,  ..., 1.09595215,
            1.11094475, 1.14092970],
           [1.27586246, 1.29085493, 1.33583248,  ..., 1.15592217,
            1.14092970, 1.12593722],
           [1.27586246, 1.27586246, 1.33583248,  ..., 1.23088503,
            1.18590748, 1.11094475]]],


         [[[1.26507962, 1.28095269, 1.37619078,  ..., 1.63015902,
            1.53492093, 1.43968284],
           [1.26507962, 1.31269872, 1.40793681,  ..., 1.72539711,
            1.67777801, 1.58253992],
           [1.31269872, 1.34444475, 1.40793681,  ..., 1.55079389,
            1.53492093, 1.50317490],
           ...,
           [1.69365108, 1.72539711, 1.80476213,  ..., 1.77301610,
            1.75714314, 1.70952404],
           [1.66190505, 1.67777801, 1.72539711,  ..., 1.75714314,
            1.67777801, 1.55079389],
           [1.66190505, 1.66190505, 1.72539711,  ..., 1.64603198,
            1.55079389, 1.42380977]],

          [[1.04669893, 1.07890511, 1.17552364,  ..., 1.43317258,
            1.33655429, 1.23993587],
           [1.06280196, 1.11111140, 1.20772982,  ..., 1.51368785,
            1.46537876, 1.36876035],
           [1.11111140, 1.14331758, 1.20772982,  ..., 1.33655429,
            1.32045114, 1.28824508],
           ...,
           [1.41706955, 1.46537876, 1.54589403,  ..., 1.11111140,
            1.15942061, 1.22383285],
           [1.40096653, 1.41706955, 1.46537876,  ..., 1.22383285,
            1.23993587, 1.27214205],
           [1.40096653, 1.40096653, 1.46537876,  ..., 1.40096653,
            1.36876035, 1.32045114]],

          [[0.91604215, 0.94602716, 1.03598225,  ..., 1.27586246,
            1.20089996, 1.11094475],
           [0.93103468, 0.97601217, 1.06596720,  ..., 1.44078004,
            1.39580250, 1.30584753],
           [0.97601217, 1.00599718, 1.06596720,  ..., 1.27586246,
            1.24587750, 1.21589243],
           ...,
           [1.29085493, 1.33583248, 1.41079497,  ..., 1.09595215,
            1.11094475, 1.14092970],
           [1.27586246, 1.29085493, 1.33583248,  ..., 1.15592217,
            1.14092970, 1.12593722],
           [1.27586246, 1.27586246, 1.33583248,  ..., 1.23088503,
            1.18590748, 1.11094475]]],


         [[[1.26507962, 1.28095269, 1.37619078,  ..., 1.63015902,
            1.53492093, 1.43968284],
           [1.26507962, 1.31269872, 1.40793681,  ..., 1.72539711,
            1.67777801, 1.58253992],
           [1.31269872, 1.34444475, 1.40793681,  ..., 1.55079389,
            1.53492093, 1.50317490],
           ...,
           [1.69365108, 1.72539711, 1.80476213,  ..., 1.77301610,
            1.75714314, 1.70952404],
           [1.66190505, 1.67777801, 1.72539711,  ..., 1.75714314,
            1.67777801, 1.55079389],
           [1.66190505, 1.66190505, 1.72539711,  ..., 1.64603198,
            1.55079389, 1.42380977]],

          [[1.04669893, 1.07890511, 1.17552364,  ..., 1.43317258,
            1.33655429, 1.23993587],
           [1.06280196, 1.11111140, 1.20772982,  ..., 1.51368785,
            1.46537876, 1.36876035],
           [1.11111140, 1.14331758, 1.20772982,  ..., 1.33655429,
            1.32045114, 1.28824508],
           ...,
           [1.41706955, 1.46537876, 1.54589403,  ..., 1.11111140,
            1.15942061, 1.22383285],
           [1.40096653, 1.41706955, 1.46537876,  ..., 1.22383285,
            1.23993587, 1.27214205],
           [1.40096653, 1.40096653, 1.46537876,  ..., 1.40096653,
            1.36876035, 1.32045114]],

          [[0.91604215, 0.94602716, 1.03598225,  ..., 1.27586246,
            1.20089996, 1.11094475],
           [0.93103468, 0.97601217, 1.06596720,  ..., 1.44078004,
            1.39580250, 1.30584753],
           [0.97601217, 1.00599718, 1.06596720,  ..., 1.27586246,
            1.24587750, 1.21589243],
           ...,
           [1.29085493, 1.33583248, 1.41079497,  ..., 1.09595215,
            1.11094475, 1.14092970],
           [1.27586246, 1.29085493, 1.33583248,  ..., 1.15592217,
            1.14092970, 1.12593722],
           [1.27586246, 1.27586246, 1.33583248,  ..., 1.23088503,
            1.18590748, 1.11094475]]],


         [[[1.26507962, 1.28095269, 1.37619078,  ..., 1.63015902,
            1.53492093, 1.43968284],
           [1.26507962, 1.31269872, 1.40793681,  ..., 1.72539711,
            1.67777801, 1.58253992],
           [1.31269872, 1.34444475, 1.40793681,  ..., 1.55079389,
            1.53492093, 1.50317490],
           ...,
           [1.69365108, 1.72539711, 1.80476213,  ..., 1.77301610,
            1.75714314, 1.70952404],
           [1.66190505, 1.67777801, 1.72539711,  ..., 1.75714314,
            1.67777801, 1.55079389],
           [1.66190505, 1.66190505, 1.72539711,  ..., 1.64603198,
            1.55079389, 1.42380977]],

          [[1.04669893, 1.07890511, 1.17552364,  ..., 1.43317258,
            1.33655429, 1.23993587],
           [1.06280196, 1.11111140, 1.20772982,  ..., 1.51368785,
            1.46537876, 1.36876035],
           [1.11111140, 1.14331758, 1.20772982,  ..., 1.33655429,
            1.32045114, 1.28824508],
           ...,
           [1.41706955, 1.46537876, 1.54589403,  ..., 1.11111140,
            1.15942061, 1.22383285],
           [1.40096653, 1.41706955, 1.46537876,  ..., 1.22383285,
            1.23993587, 1.27214205],
           [1.40096653, 1.40096653, 1.46537876,  ..., 1.40096653,
            1.36876035, 1.32045114]],

          [[0.91604215, 0.94602716, 1.03598225,  ..., 1.27586246,
            1.20089996, 1.11094475],
           [0.93103468, 0.97601217, 1.06596720,  ..., 1.44078004,
            1.39580250, 1.30584753],
           [0.97601217, 1.00599718, 1.06596720,  ..., 1.27586246,
            1.24587750, 1.21589243],
           ...,
           [1.29085493, 1.33583248, 1.41079497,  ..., 1.09595215,
            1.11094475, 1.14092970],
           [1.27586246, 1.29085493, 1.33583248,  ..., 1.15592217,
            1.14092970, 1.12593722],
           [1.27586246, 1.27586246, 1.33583248,  ..., 1.23088503,
            1.18590748, 1.11094475]]],


         [[[1.26507962, 1.28095269, 1.37619078,  ..., 1.63015902,
            1.53492093, 1.43968284],
           [1.26507962, 1.31269872, 1.40793681,  ..., 1.72539711,
            1.67777801, 1.58253992],
           [1.31269872, 1.34444475, 1.40793681,  ..., 1.55079389,
            1.53492093, 1.50317490],
           ...,
           [1.69365108, 1.72539711, 1.80476213,  ..., 1.77301610,
            1.75714314, 1.70952404],
           [1.66190505, 1.67777801, 1.72539711,  ..., 1.75714314,
            1.67777801, 1.55079389],
           [1.66190505, 1.66190505, 1.72539711,  ..., 1.64603198,
            1.55079389, 1.42380977]],

          [[1.04669893, 1.07890511, 1.17552364,  ..., 1.43317258,
            1.33655429, 1.23993587],
           [1.06280196, 1.11111140, 1.20772982,  ..., 1.51368785,
            1.46537876, 1.36876035],
           [1.11111140, 1.14331758, 1.20772982,  ..., 1.33655429,
            1.32045114, 1.28824508],
           ...,
           [1.41706955, 1.46537876, 1.54589403,  ..., 1.11111140,
            1.15942061, 1.22383285],
           [1.40096653, 1.41706955, 1.46537876,  ..., 1.22383285,
            1.23993587, 1.27214205],
           [1.40096653, 1.40096653, 1.46537876,  ..., 1.40096653,
            1.36876035, 1.32045114]],

          [[0.91604215, 0.94602716, 1.03598225,  ..., 1.27586246,
            1.20089996, 1.11094475],
           [0.93103468, 0.97601217, 1.06596720,  ..., 1.44078004,
            1.39580250, 1.30584753],
           [0.97601217, 1.00599718, 1.06596720,  ..., 1.27586246,
            1.24587750, 1.21589243],
           ...,
           [1.29085493, 1.33583248, 1.41079497,  ..., 1.09595215,
            1.11094475, 1.14092970],
           [1.27586246, 1.29085493, 1.33583248,  ..., 1.15592217,
            1.14092970, 1.12593722],
           [1.27586246, 1.27586246, 1.33583248,  ..., 1.23088503,
            1.18590748, 1.11094475]]],


         [[[1.26507962, 1.28095269, 1.37619078,  ..., 1.63015902,
            1.53492093, 1.43968284],
           [1.26507962, 1.31269872, 1.40793681,  ..., 1.72539711,
            1.67777801, 1.58253992],
           [1.31269872, 1.34444475, 1.40793681,  ..., 1.55079389,
            1.53492093, 1.50317490],
           ...,
           [1.69365108, 1.72539711, 1.80476213,  ..., 1.77301610,
            1.75714314, 1.70952404],
           [1.66190505, 1.67777801, 1.72539711,  ..., 1.75714314,
            1.67777801, 1.55079389],
           [1.66190505, 1.66190505, 1.72539711,  ..., 1.64603198,
            1.55079389, 1.42380977]],

          [[1.04669893, 1.07890511, 1.17552364,  ..., 1.43317258,
            1.33655429, 1.23993587],
           [1.06280196, 1.11111140, 1.20772982,  ..., 1.51368785,
            1.46537876, 1.36876035],
           [1.11111140, 1.14331758, 1.20772982,  ..., 1.33655429,
            1.32045114, 1.28824508],
           ...,
           [1.41706955, 1.46537876, 1.54589403,  ..., 1.11111140,
            1.15942061, 1.22383285],
           [1.40096653, 1.41706955, 1.46537876,  ..., 1.22383285,
            1.23993587, 1.27214205],
           [1.40096653, 1.40096653, 1.46537876,  ..., 1.40096653,
            1.36876035, 1.32045114]],

          [[0.91604215, 0.94602716, 1.03598225,  ..., 1.27586246,
            1.20089996, 1.11094475],
           [0.93103468, 0.97601217, 1.06596720,  ..., 1.44078004,
            1.39580250, 1.30584753],
           [0.97601217, 1.00599718, 1.06596720,  ..., 1.27586246,
            1.24587750, 1.21589243],
           ...,
           [1.29085493, 1.33583248, 1.41079497,  ..., 1.09595215,
            1.11094475, 1.14092970],
           [1.27586246, 1.29085493, 1.33583248,  ..., 1.15592217,
            1.14092970, 1.12593722],
           [1.27586246, 1.27586246, 1.33583248,  ..., 1.23088503,
            1.18590748, 1.11094475]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1142 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 199, vnnlib ID: 199 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.76380539, -32.83649445, -31.00039291, -30.23607826, -30.26369667,
         -30.68313408, -28.22624588, -32.04811478, -34.35570908, -32.35347748]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [724]; unstable size 724; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 382, 1, 724] with unstable size 381 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 53, 1, 724] with unstable size 52 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 724] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [381]; unstable size 381; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 53, 1, 381] with unstable size 52 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 381] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [52]; unstable size 52; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 52] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.92639619, -2.00240993, -1.98880386, -2.19319439, -2.14087749,
         -2.20538712, -1.95193589, -0.50070226, -2.81117606]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.76380539, -32.83649445, -31.00039291, -30.23607826, -30.26369667,
         -30.68313408, -28.22624588, -32.04811478, -34.35570908, -32.35347748]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.45it/s]100%|██████████| 1/1 [00:00<00:00,  7.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-32.49275589, -32.02464676, -29.74117279, -29.15939522, -28.65639305,
          -29.55954170, -27.98874474, -30.77539444, -33.23794174, -31.45581818],
         [-32.49275589, -32.02464676, -29.74117279, -29.15939522, -28.65639305,
          -29.55954170, -27.98874474, -30.77539444, -33.23794174, -31.45581818]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[4.50401115, 4.03590202, 1.75242805, 1.17065048, 0.66764832,
          1.57079697, 2.78664970, 5.24919701, 3.46707344]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1375 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: -12.500679016113281
alpha/beta optimization time: 1.2309138774871826
initial alpha-crown bounds: tensor([[-3.84059787e-01, -1.47856307e+00, -1.52135873e+00, -1.78284955e+00,
         -1.77697706e+00, -1.80970979e+00, -1.39982533e+00,  1.53315067e-03,
         -2.34886909e+00]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 8 ; Worst class: (+ rhs) -2.3488690853118896
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.52777743339539
Verifying property 0 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.38405979]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.76380539, -32.83649445, -31.00039291, -30.23607826, -30.26369667,
        -30.68313408, -28.22624588, -32.04811478, -34.35570908, -32.35347748],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.38405979]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 724
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 376
Node /15 input 0: size torch.Size([100]) unstable 52
-----------------
# of unstable neurons: 1152
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001068115234375
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 22] 
split level 1: [/input-12, 60] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 1] 
split level 4: [/input-12, 40] 
split level 5: [/input-12, 49] 
split level 6: [/input-12, 48] 
split level 7: [/input-12, 61] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 1.5080574750900269

all verified at 0th iter
Time: prepare 0.0019    bound 0.0042    transfer 0.0011    finalize 0.0018    func 0.0108    
Accumulated time: func 0.0108    prepare 0.0023    bound 0.0042    transfer 0.0011    finalize 0.0018    
all_split False
======================Cut inference begins======================
max lb tensor(3.30053425) min lb tensor(1.50805748)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.007234096527099609 
BICCOS Cumulative time: 0.007234096527099609
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0166    solve 0.0108    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0225    set_bounds 0.0166    solve 0.0108    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06253194808959961


Properties batch 1, size 1
Remaining timeout: 198.12576842308044
Verifying property 1 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.47856307]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.76380539, -32.83649445, -31.00039291, -30.23607826, -30.26369667,
        -30.68313408, -28.22624588, -32.04811478, -34.35570908, -32.35347748],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.47856307]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 724
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 376
Node /15 input 0: size torch.Size([100]) unstable 52
-----------------
# of unstable neurons: 1152
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010156631469726562
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 25] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 2] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 22] 
split level 5: [/input-12, 1] 
split level 6: [/input-12, 6] 
split level 7: [/input-12, 48] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.3598971366882324

all verified at 0th iter
Time: prepare 0.0018    bound 0.0041    transfer 0.0013    finalize 0.0016    func 0.0106    
Accumulated time: func 0.0106    prepare 0.0022    bound 0.0041    transfer 0.0013    finalize 0.0016    
all_split False
======================Cut inference begins======================
max lb tensor(3.31449199) min lb tensor(0.35989714)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.00707697868347168 
BICCOS Cumulative time: 0.00707697868347168
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.0222    set_bounds 0.0162    solve 0.0107    add 0.0003    
Accumulated time: pickout 0.0003    decision 0.0222    set_bounds 0.0162    solve 0.0107    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0749356746673584


Properties batch 2, size 1
Remaining timeout: 197.63141179084778
Verifying property 2 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.52135873]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.76380539, -32.83649445, -31.00039291, -30.23607826, -30.26369667,
        -30.68313408, -28.22624588, -32.04811478, -34.35570908, -32.35347748],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.52135873]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 724
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 376
Node /15 input 0: size torch.Size([100]) unstable 52
-----------------
# of unstable neurons: 1152
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011515617370605469
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 57] 
split level 1: [/input-12, 7] 
split level 2: [/input-12, 92] 
split level 3: [/input-12, 62] 
split level 4: [/input-12, 66] 
split level 5: [/input-12, 61] 
split level 6: [/input-12, 48] 
split level 7: [/input-12, 49] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.021235942840576172
10 lb beta sum: 0.0, worst -0.016779661178588867
Time: prepare 0.0019    bound 0.0995    transfer 0.0009    finalize 0.0015    func 0.1056    
Accumulated time: func 0.1056    prepare 0.0023    bound 0.0995    transfer 0.0009    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(1.01882076) min lb tensor(-0.01484704)
Number of Verified Splits: 255 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.5213541984558105
10 lb beta sum: 0.0, worst -1.5213932991027832
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.21426606178283691 
BICCOS Cumulative time: 0.21426606178283691
Preprocessing time: 0.007095813751220703 Inference time: 0.20607447624206543 Add cuts time: 0.0005362033843994141 Cut analysis time: 0.0005595684051513672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01485 (8), 
Length of domains: 1
Time: pickout 0.0004    decision 0.0228    set_bounds 0.0164    solve 0.1056    add 0.0125    
Accumulated time: pickout 0.0004    decision 0.0228    set_bounds 0.0164    solve 0.1056    add 0.0125    
Current (lb-rhs): -0.014847040176391602
1 domains visited
Cumulative time: 0.38208627700805664

BaB round 2
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 22] 
split level 1: [/input-12, 40] 
split level 2: [/input-12, 50] 
split level 3: [/input-12, 95] 
split level 4: [/input-12, 46] 
split level 5: [/input-12, 1] 
split level 6: [/input-12, 31] 
split level 7: [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.5824693441390991

all verified at 0th iter
Time: prepare 0.0036    bound 0.0045    transfer 0.0009    finalize 0.0013    func 0.0120    
Accumulated time: func 0.1175    prepare 0.0063    bound 0.1041    transfer 0.0017    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(1.36898267) min lb tensor(0.58246934)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 6.
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.007478237152099609 
BICCOS Cumulative time: 0.22174429893493652
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0009    decision 0.0218    set_bounds 0.0182    solve 0.0120    add 0.0003    
Accumulated time: pickout 0.0013    decision 0.0446    set_bounds 0.0346    solve 0.1177    add 0.0128    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.4435291290283203


Properties batch 3, size 1
Remaining timeout: 196.99537539482117
Verifying property 3 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.78284955]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.76380539, -32.83649445, -31.00039291, -30.23607826, -30.26369667,
        -30.68313408, -28.22624588, -32.04811478, -34.35570908, -32.35347748],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.78284955]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 724
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 376
Node /15 input 0: size torch.Size([100]) unstable 52
-----------------
# of unstable neurons: 1152
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001266002655029297
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 89] 
split level 1: [/input-12, 82] 
split level 2: [/input-12, 35] 
split level 3: [/input-12, 65] 
split level 4: [/input-12, 19] 
split level 5: [/input-12, 1] 
split level 6: [/input-12, 46] 
split level 7: [/input-12, 49] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.7293620109558105
10 lb beta sum: 0.0, worst -0.7235525846481323
Time: prepare 0.0020    bound 0.1189    transfer 0.0007    finalize 0.0025    func 0.1264    
Accumulated time: func 0.1264    prepare 0.0024    bound 0.1189    transfer 0.0007    finalize 0.0025    
all_split False
======================Cut inference begins======================
max lb tensor(0.38470960) min lb tensor(-0.72154593)
Number of Verified Splits: 74 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.2763592004776
10 lb beta sum: 0.0, worst -1.0187784433364868
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.1948528289794922 
BICCOS Cumulative time: 0.1948528289794922
Preprocessing time: 0.00913858413696289 Inference time: 0.18463754653930664 Add cuts time: 0.0003056526184082031 Cut analysis time: 0.0007710456848144531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.72155 (8), -0.70791 (8), -0.70742 (8), -0.69187 (8), -0.67751 (8), -0.67058 (8), -0.65980 (8), -0.65349 (8), -0.65126 (8), -0.64181 (8), -0.64105 (8), -0.63931 (8), -0.63821 (8), -0.63790 (8), -0.63374 (8), -0.61030 (8), -0.60843 (8), -0.60531 (8), -0.60416 (8), -0.60263 (8), 
Length of domains: 182
Time: pickout 0.0004    decision 0.0257    set_bounds 0.0173    solve 0.1266    add 0.0525    
Accumulated time: pickout 0.0004    decision 0.0257    set_bounds 0.0173    solve 0.1266    add 0.0525    
Current (lb-rhs): -0.721545934677124
182 domains visited
Cumulative time: 0.42972517013549805

BaB round 2
batch: 182
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] [/input-12, 74] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6734914779663086
10 lb beta sum: 0.0, worst -0.6718368530273438
Time: prepare 0.0068    bound 0.1393    transfer 0.0026    finalize 0.0023    func 0.1534    
Accumulated time: func 0.2798    prepare 0.0094    bound 0.2582    transfer 0.0033    finalize 0.0048    
all_split False
======================Cut inference begins======================
max lb tensor(0.17711604) min lb tensor(-0.67111230)
Number of Verified Splits: 131 of 364
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3362371921539307
10 lb beta sum: 0.0, worst -1.0440831184387207
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 7-9: 6
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.23454880714416504 
BICCOS Cumulative time: 0.4294016361236572
Preprocessing time: 0.012850761413574219 Inference time: 0.21983623504638672 Add cuts time: 0.0010900497436523438 Cut analysis time: 0.0007717609405517578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.67111 (9), -0.65676 (9), -0.65328 (9), -0.63703 (9), -0.62380 (9), -0.61446 (9), -0.60442 (9), -0.60099 (9), -0.59666 (9), -0.58680 (9), -0.58613 (9), -0.58056 (9), -0.57958 (9), -0.57920 (9), -0.57760 (9), -0.55537 (9), -0.54943 (9), -0.54871 (9), -0.54387 (9), -0.54235 (9), 
Length of domains: 233
Time: pickout 0.0157    decision 0.0298    set_bounds 0.0132    solve 0.1536    add 0.0821    
Accumulated time: pickout 0.0161    decision 0.0555    set_bounds 0.0304    solve 0.2802    add 0.1346    
Current (lb-rhs): -0.6711122989654541
415 domains visited
Cumulative time: 0.9680936336517334

BaB round 3
batch: 233
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6159945726394653
10 lb beta sum: 0.0, worst -0.6149008274078369
Time: prepare 0.0078    bound 0.1549    transfer 0.0027    finalize 0.0033    func 0.1721    
Accumulated time: func 0.4520    prepare 0.0175    bound 0.4132    transfer 0.0061    finalize 0.0081    
all_split False
======================Cut inference begins======================
max lb tensor(0.21049321) min lb tensor(-0.61440873)
Number of Verified Splits: 222 of 466
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.3996903896331787
10 lb beta sum: 0.0016529326094314456, worst -1.1658728122711182
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 7-9: 7
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.2907416820526123 
BICCOS Cumulative time: 0.7201433181762695
Preprocessing time: 0.016346454620361328 Inference time: 0.27199363708496094 Add cuts time: 0.0015349388122558594 Cut analysis time: 0.0008666515350341797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.61441 (10), -0.59846 (10), -0.59469 (10), -0.57683 (10), -0.56663 (10), -0.55720 (10), -0.54598 (10), -0.54475 (10), -0.53934 (10), -0.52941 (10), -0.52611 (10), -0.52388 (10), -0.52331 (10), -0.52178 (10), -0.51940 (10), -0.49868 (10), -0.49279 (10), -0.48884 (10), -0.48787 (10), -0.48533 (10), 
Length of domains: 244
Time: pickout 0.0250    decision 0.0279    set_bounds 0.0180    solve 0.1724    add 0.0843    
Accumulated time: pickout 0.0411    decision 0.0834    set_bounds 0.0485    solve 0.4525    add 0.2189    
Current (lb-rhs): -0.6144087314605713
659 domains visited
Cumulative time: 1.601248025894165

BaB round 4
batch: 244
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5470337867736816
10 lb beta sum: 0.0, worst -0.5459996461868286
Time: prepare 0.0077    bound 0.1430    transfer 0.0045    finalize 0.0032    func 0.1618    
Accumulated time: func 0.6138    prepare 0.0255    bound 0.5562    transfer 0.0106    finalize 0.0113    
all_split False
======================Cut inference begins======================
max lb tensor(0.10414386) min lb tensor(-0.54576504)
Number of Verified Splits: 150 of 488
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 7
#cuts 4-6: 1
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.0485682487487793 
BICCOS Cumulative time: 0.7687115669250488
Preprocessing time: 0.016775131225585938 Inference time: 0.029608726501464844 Add cuts time: 0.0015652179718017578 Cut analysis time: 0.0006191730499267578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.54577 (11), -0.53156 (11), -0.52864 (11), -0.51148 (11), -0.50154 (11), -0.49826 (11), -0.49154 (11), -0.48242 (11), -0.47920 (11), -0.47790 (11), -0.47245 (11), -0.47043 (11), -0.46346 (11), -0.46299 (11), -0.45768 (11), -0.45741 (11), -0.45121 (11), -0.45029 (11), -0.45024 (11), -0.43991 (11), 
Length of domains: 338
Time: pickout 0.0165    decision 0.0270    set_bounds 0.0164    solve 0.1620    add 0.0971    
Accumulated time: pickout 0.0576    decision 0.1105    set_bounds 0.0649    solve 0.6145    add 0.3160    
Current (lb-rhs): -0.5457650423049927
997 domains visited
Cumulative time: 1.9821553230285645

BaB round 5
batch: 338
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4967595338821411
10 lb beta sum: 0.0034308575559407473, worst -0.4962785243988037
Time: prepare 0.0343    bound 0.1505    transfer 0.0074    finalize 0.0037    func 0.2005    
Accumulated time: func 0.8142    prepare 0.0601    bound 0.7067    transfer 0.0180    finalize 0.0151    
all_split False
======================Cut inference begins======================
max lb tensor(0.33310223) min lb tensor(-0.49608850)
Number of Verified Splits: 393 of 676
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 11
#cuts >= 20: 0
BICCOS time: 0.07191634178161621 
BICCOS Cumulative time: 0.840627908706665
Preprocessing time: 0.022130489349365234 Inference time: 0.04613804817199707 Add cuts time: 0.003149747848510742 Cut analysis time: 0.0004980564117431641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.49609 (12), -0.48128 (12), -0.48025 (12), -0.46264 (12), -0.45208 (12), -0.44850 (12), -0.44405 (12), -0.43364 (12), -0.42878 (12), -0.42836 (12), -0.42265 (12), -0.42150 (12), -0.41517 (12), -0.41363 (12), -0.40958 (12), -0.40950 (12), -0.39945 (12), -0.39910 (12), -0.39812 (12), -0.39057 (12), 
Length of domains: 283
Time: pickout 0.0247    decision 0.0390    set_bounds 0.0269    solve 0.2007    add 0.1116    
Accumulated time: pickout 0.0823    decision 0.1495    set_bounds 0.0917    solve 0.8152    add 0.4277    
Current (lb-rhs): -0.49608850479125977
1280 domains visited
Cumulative time: 2.4680469036102295

BaB round 6
batch: 283
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 24] [/input-12, 50] [/input-12, 50] [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.41321611404418945
10 lb beta sum: 0.06774403899908066, worst -0.41256606578826904
Time: prepare 0.0083    bound 0.1466    transfer 0.0039    finalize 0.0031    func 0.1657    
Accumulated time: func 0.9799    prepare 0.0686    bound 0.8533    transfer 0.0219    finalize 0.0182    
all_split False
======================Cut inference begins======================
max lb tensor(0.32443234) min lb tensor(-0.41233552)
Number of Verified Splits: 310 of 566
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.054216623306274414 
BICCOS Cumulative time: 0.8948445320129395
Preprocessing time: 0.017176151275634766 Inference time: 0.034760236740112305 Add cuts time: 0.0018804073333740234 Cut analysis time: 0.0003998279571533203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.41234 (13), -0.40083 (13), -0.39862 (13), -0.39731 (13), -0.38632 (13), -0.38209 (13), -0.38183 (13), -0.36812 (13), -0.36610 (13), -0.36384 (13), -0.36357 (13), -0.36256 (13), -0.35461 (13), -0.35231 (13), -0.35114 (13), -0.34507 (13), -0.34424 (13), -0.34032 (13), -0.34024 (13), -0.33528 (13), 
Length of domains: 256
Time: pickout 0.0110    decision 0.0320    set_bounds 0.0167    solve 0.1659    add 0.0839    
Accumulated time: pickout 0.0933    decision 0.1815    set_bounds 0.1085    solve 0.9811    add 0.5116    
Current (lb-rhs): -0.41233551502227783
1536 domains visited
Cumulative time: 2.8405776023864746

BaB round 7
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34623396396636963
10 lb beta sum: 0.12172873318195343, worst -0.3455538749694824
Time: prepare 0.0083    bound 0.1397    transfer 0.0032    finalize 0.0030    func 0.1577    
Accumulated time: func 1.1376    prepare 0.0771    bound 0.9930    transfer 0.0251    finalize 0.0212    
all_split False
======================Cut inference begins======================
max lb tensor(0.32343745) min lb tensor(-0.34536529)
Number of Verified Splits: 308 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 12
#cuts >= 20: 0
BICCOS time: 0.05619454383850098 
BICCOS Cumulative time: 0.9510390758514404
Preprocessing time: 0.01716780662536621 Inference time: 0.03647041320800781 Add cuts time: 0.002180337905883789 Cut analysis time: 0.00037598609924316406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34537 (14), -0.33345 (14), -0.33266 (14), -0.32973 (14), -0.31829 (14), -0.31695 (14), -0.31591 (14), -0.31046 (14), -0.29945 (14), -0.29913 (14), -0.29866 (14), -0.29700 (14), -0.29402 (14), -0.28642 (14), -0.28637 (14), -0.28524 (14), -0.28440 (14), -0.27885 (14), -0.27843 (14), -0.27359 (14), 
Length of domains: 204
Time: pickout 0.0149    decision 0.0334    set_bounds 0.0155    solve 0.1581    add 0.1015    
Accumulated time: pickout 0.1081    decision 0.2149    set_bounds 0.1240    solve 1.1392    add 0.6131    
Current (lb-rhs): -0.3453652858734131
1740 domains visited
Cumulative time: 3.23717999458313

BaB round 8
batch: 204
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 61] [/input-12, 29] [/input-12, 29] [/input-12, 61] [/input-12, 29] [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.31147241592407227
10 lb beta sum: 0.4657624065876007, worst -0.3111516833305359
Time: prepare 0.0071    bound 0.1330    transfer 0.0028    finalize 0.0025    func 0.1483    
Accumulated time: func 1.2860    prepare 0.0845    bound 1.1261    transfer 0.0279    finalize 0.0237    
all_split False
======================Cut inference begins======================
max lb tensor(0.93658388) min lb tensor(-0.31109786)
Number of Verified Splits: 398 of 408
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.06289362907409668 
BICCOS Cumulative time: 1.013932704925537
Preprocessing time: 0.013381719589233398 Inference time: 0.04695534706115723 Add cuts time: 0.0021758079528808594 Cut analysis time: 0.0003807544708251953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.31110 (15), -0.29800 (15), -0.24236 (15), -0.22285 (15), -0.21144 (15), -0.14617 (15), -0.12316 (15), -0.10859 (15), -0.05566 (15), -0.04171 (15), 
Length of domains: 10
Time: pickout 0.0165    decision 0.0282    set_bounds 0.1903    solve 0.1484    add 0.0163    
Accumulated time: pickout 0.1246    decision 0.2431    set_bounds 0.3142    solve 1.2877    add 0.6294    
Current (lb-rhs): -0.3110978603363037
1750 domains visited
Cumulative time: 3.703430414199829

BaB round 9
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] [/input-12, 9] 
split level 1: [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] 
split level 2: [/input-12, 61] [/input-12, 61] [/input-12, 29] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 29] [/input-12, 61] 
split level 3: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] 
split level 4: [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14835482835769653
10 lb beta sum: 0.043727096170186996, worst -0.24388793110847473
Time: prepare 0.0046    bound 0.1217    transfer 0.0029    finalize 0.0020    func 0.1335    
Accumulated time: func 1.4195    prepare 0.0894    bound 1.2478    transfer 0.0308    finalize 0.0257    
all_split False
======================Cut inference begins======================
max lb tensor(0.56437784) min lb tensor(-0.14740670)
Number of Verified Splits: 310 of 320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.05427098274230957 
BICCOS Cumulative time: 1.0682036876678467
Preprocessing time: 0.009907722473144531 Inference time: 0.043056488037109375 Add cuts time: 0.0009071826934814453 Cut analysis time: 0.00039958953857421875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14741 (20), -0.12716 (20), -0.10428 (20), -0.09967 (20), -0.07568 (20), -0.07412 (20), -0.05192 (20), -0.03780 (20), -0.02061 (20), -0.01301 (20), 
Length of domains: 10
Time: pickout 0.0019    decision 0.0166    set_bounds 0.0172    solve 0.1336    add 0.0008    
Accumulated time: pickout 0.1265    decision 0.2597    set_bounds 0.3315    solve 1.4213    add 0.6302    
Current (lb-rhs): -0.1474066972732544
1760 domains visited
Cumulative time: 3.930189609527588

BaB round 10
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2] [/input-12, 4] [/input-12, 2] [/input-12, 2] [/input-8, 1492] [/input-12, 2] [/input-12, 2] [/input-12, 4] [/input-8, 1492] [/input-12, 2] 
split level 1: [/input-12, 4] [/input-8, 1492] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-8, 329] [/input-12, 4] [/input-12, 4] 
split level 2: [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] [/input-12, 11] 
split level 3: [/input-12, 75] [/input-12, 75] [/input-12, 62] [/input-12, 75] [/input-12, 62] [/input-12, 75] [/input-12, 62] [/input-12, 75] [/input-12, 62] [/input-12, 75] 
split level 4: [/input-12, 62] [/input-12, 62] [/input-12, 75] [/input-12, 62] [/input-12, 75] [/input-12, 62] [/input-12, 75] [/input-12, 62] [/input-12, 75] [/input-12, 62] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04610276222229004
10 lb beta sum: 0.0012331729521974921, worst -0.045838892459869385
Time: prepare 0.0054    bound 0.1215    transfer 0.0066    finalize 0.0025    func 0.1382    
Accumulated time: func 1.5577    prepare 0.0951    bound 1.3693    transfer 0.0374    finalize 0.0282    
all_split False
======================Cut inference begins======================
max lb tensor(0.26170290) min lb tensor(-0.04579353)
Number of Verified Splits: 312 of 320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 20
#cuts >= 20: 0
BICCOS time: 0.060349464416503906 
BICCOS Cumulative time: 1.1285531520843506
Preprocessing time: 0.009803295135498047 Inference time: 0.049477577209472656 Add cuts time: 0.0006542205810546875 Cut analysis time: 0.0004143714904785156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04579 (25), -0.04531 (25), -0.03753 (25), -0.03729 (25), -0.02504 (25), -0.02436 (25), -0.01888 (25), -0.01885 (25), 
Length of domains: 8
Time: pickout 0.0018    decision 0.0164    set_bounds 0.0177    solve 0.1383    add 0.0010    
Accumulated time: pickout 0.1282    decision 0.2761    set_bounds 0.3491    solve 1.5596    add 0.6312    
Current (lb-rhs): -0.04579353332519531
1768 domains visited
Cumulative time: 4.16766619682312

BaB round 11
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 330] [/input-8, 1492] [/input-8, 330] [/input-8, 1492] [/input-8, 330] [/input-8, 1492] [/input-8, 329] [/input-8, 1492] 
split level 1: [/input-8, 329] [/input-8, 330] [/input-8, 329] [/input-8, 330] [/input-8, 329] [/input-12, 60] [/input-8, 330] [/input-12, 60] 
split level 2: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-8, 330] [/input-12, 60] [/input-8, 330] 
split level 3: [/input-8, 1492] [/input-8, 329] [/input-8, 1492] [/input-8, 329] [/input-8, 1492] [/input-8, 329] [/input-8, 1492] [/input-8, 329] 
split level 4: [/input-8, 1553] [/input-8, 1493] [/input-8, 1489] [/input-8, 756] [/input-8, 1553] [/input-8, 1493] [/input-8, 1489] [/input-8, 756] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.009252548217773438

all verified at 0th iter
Time: prepare 0.0052    bound 0.0057    transfer 0.0018    finalize 0.0019    func 0.0163    
Accumulated time: func 1.5741    prepare 0.1006    bound 1.3750    transfer 0.0391    finalize 0.0300    
all_split False
======================Cut inference begins======================
max lb tensor(0.13737953) min lb tensor(0.00925255)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 20.
#cuts 1-3: 20
#cuts >= 20: 0
BICCOS time: 0.007775545120239258 
BICCOS Cumulative time: 1.1363286972045898
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0014    decision 0.0163    set_bounds 0.0149    solve 0.0164    add 0.0004    
Accumulated time: pickout 0.1296    decision 0.2924    set_bounds 0.3640    solve 1.5760    add 0.6316    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1768 domains visited
Cumulative time: 4.22611403465271


Properties batch 4, size 1
Remaining timeout: 192.53082633018494
Verifying property 4 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.77697706]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.76380539, -32.83649445, -31.00039291, -30.23607826, -30.26369667,
        -30.68313408, -28.22624588, -32.04811478, -34.35570908, -32.35347748],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.77697706]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 724
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 376
Node /15 input 0: size torch.Size([100]) unstable 52
-----------------
# of unstable neurons: 1152
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.965896606445312e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 95] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 8] 
split level 3: [/input-12, 40] 
split level 4: [/input-12, 49] 
split level 5: [/input-12, 62] 
split level 6: [/input-12, 58] 
split level 7: [/input-12, 1] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5892493724822998
10 lb beta sum: 0.0, worst -0.581566572189331
Time: prepare 0.0019    bound 0.1023    transfer 0.0010    finalize 0.0016    func 0.1087    
Accumulated time: func 0.1087    prepare 0.0023    bound 0.1023    transfer 0.0010    finalize 0.0016    
all_split False
======================Cut inference begins======================
max lb tensor(0.66055536) min lb tensor(-0.57770967)
Number of Verified Splits: 185 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.7769722938537598
10 lb beta sum: 0.0, worst -1.7769875526428223
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 1
#cuts 4-6: 7
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.19267678260803223 
BICCOS Cumulative time: 0.19267678260803223
Preprocessing time: 0.0072367191314697266 Inference time: 0.1830739974975586 Add cuts time: 0.0017230510711669922 Cut analysis time: 0.0006430149078369141
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.57771 (8), -0.57434 (8), -0.54959 (8), -0.54583 (8), -0.54341 (8), -0.53612 (8), -0.51830 (8), -0.51550 (8), -0.51208 (8), -0.51072 (8), -0.49074 (8), -0.48639 (8), -0.47229 (8), -0.47047 (8), -0.46911 (8), -0.46569 (8), -0.46315 (8), -0.45929 (8), -0.42551 (8), -0.42298 (8), 
Length of domains: 71
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0169    solve 0.1088    add 0.0715    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0169    solve 0.1088    add 0.0715    
Current (lb-rhs): -0.5777096748352051
71 domains visited
Cumulative time: 0.4189016819000244

BaB round 2
batch: 71
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 1: [/input-12, 31] [/input-12, 31] [/input-12, 50] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 50] [/input-12, 31] [/input-12, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.48102331161499023
10 lb beta sum: 0.0, worst -0.4784359931945801
Time: prepare 0.0042    bound 0.1209    transfer 0.0023    finalize 0.0017    func 0.1311    
Accumulated time: func 0.2398    prepare 0.0067    bound 0.2232    transfer 0.0033    finalize 0.0034    
all_split False
======================Cut inference begins======================
max lb tensor(0.15378141) min lb tensor(-0.47736144)
Number of Verified Splits: 68 of 284
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.0662262439727783
10 lb beta sum: 0.146133154630661, worst -0.9092724323272705
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 1
#cuts 4-6: 7
#cuts 7-9: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.1779177188873291 
BICCOS Cumulative time: 0.37059450149536133
Preprocessing time: 0.009120702743530273 Inference time: 0.1674633026123047 Add cuts time: 0.0006041526794433594 Cut analysis time: 0.0007295608520507812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.47736 (10), -0.47306 (10), -0.45029 (10), -0.44509 (10), -0.44069 (10), -0.43606 (10), -0.43192 (10), -0.42180 (10), -0.41616 (10), -0.41487 (10), -0.41423 (10), -0.40974 (10), -0.40384 (10), -0.39576 (10), -0.38871 (10), -0.38870 (10), -0.38587 (10), -0.38263 (10), -0.37072 (10), -0.37070 (10), 
Length of domains: 216
Time: pickout 0.0023    decision 0.0164    set_bounds 0.0098    solve 0.1312    add 0.0980    
Accumulated time: pickout 0.0027    decision 0.0394    set_bounds 0.0267    solve 0.2400    add 0.1696    
Current (lb-rhs): -0.47736144065856934
287 domains visited
Cumulative time: 0.8631598949432373

BaB round 3
batch: 216
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4433879852294922
10 lb beta sum: 0.0, worst -0.44228267669677734
Time: prepare 0.0066    bound 0.1415    transfer 0.0034    finalize 0.0025    func 0.1570    
Accumulated time: func 0.3967    prepare 0.0135    bound 0.3647    transfer 0.0067    finalize 0.0058    
all_split False
======================Cut inference begins======================
max lb tensor(0.39975381) min lb tensor(-0.44191909)
Number of Verified Splits: 233 of 432
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 4
#cuts 4-6: 18
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.042330265045166016 
BICCOS Cumulative time: 0.41292476654052734
Preprocessing time: 0.013480663299560547 Inference time: 0.024430036544799805 Add cuts time: 0.0033855438232421875 Cut analysis time: 0.0010340213775634766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.44192 (11), -0.43846 (11), -0.41390 (11), -0.41012 (11), -0.40639 (11), -0.40100 (11), -0.39860 (11), -0.38727 (11), -0.37950 (11), -0.37870 (11), -0.37718 (11), -0.37386 (11), -0.37062 (11), -0.36101 (11), -0.35327 (11), -0.35137 (11), -0.35109 (11), -0.34890 (11), -0.33579 (11), -0.33470 (11), 
Length of domains: 199
Time: pickout 0.0154    decision 0.0301    set_bounds 0.0139    solve 0.1571    add 0.0179    
Accumulated time: pickout 0.0181    decision 0.0695    set_bounds 0.0405    solve 0.3971    add 0.1875    
Current (lb-rhs): -0.44191908836364746
486 domains visited
Cumulative time: 1.1417129039764404

BaB round 4
batch: 199
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4056820869445801
10 lb beta sum: 0.11642620712518692, worst -0.6275993585586548
Time: prepare 0.0060    bound 0.1367    transfer 0.0021    finalize 0.0020    func 0.1495    
Accumulated time: func 0.5463    prepare 0.0197    bound 0.5014    transfer 0.0088    finalize 0.0078    
all_split False
======================Cut inference begins======================
max lb tensor(0.67305279) min lb tensor(-0.40470409)
Number of Verified Splits: 223 of 398
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 6
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.04068136215209961 
BICCOS Cumulative time: 0.45360612869262695
Preprocessing time: 0.012601137161254883 Inference time: 0.024753093719482422 Add cuts time: 0.002946138381958008 Cut analysis time: 0.0003809928894042969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.40470 (12), -0.40146 (12), -0.37560 (12), -0.37114 (12), -0.36977 (12), -0.36444 (12), -0.36165 (12), -0.35053 (12), -0.34097 (12), -0.34012 (12), -0.33902 (12), -0.33632 (12), -0.33359 (12), -0.32135 (12), -0.31557 (12), -0.31553 (12), -0.31155 (12), -0.31037 (12), -0.29709 (12), -0.29688 (12), 
Length of domains: 175
Time: pickout 0.0040    decision 0.0234    set_bounds 0.0133    solve 0.1496    add 0.0399    
Accumulated time: pickout 0.0221    decision 0.0929    set_bounds 0.0538    solve 0.5467    add 0.2273    
Current (lb-rhs): -0.40470409393310547
661 domains visited
Cumulative time: 1.4140794277191162

BaB round 5
batch: 175
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3527333736419678
10 lb beta sum: 0.30588412284851074, worst -0.3521616458892822
Time: prepare 0.0051    bound 0.1308    transfer 0.0012    finalize 0.0017    func 0.1411    
Accumulated time: func 0.6874    prepare 0.0250    bound 0.6322    transfer 0.0100    finalize 0.0095    
all_split False
======================Cut inference begins======================
max lb tensor(0.60458469) min lb tensor(-0.35207319)
Number of Verified Splits: 318 of 350
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 9
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.04757356643676758 
BICCOS Cumulative time: 0.5011796951293945
Preprocessing time: 0.010483503341674805 Inference time: 0.03433585166931152 Add cuts time: 0.0023970603942871094 Cut analysis time: 0.0003571510314941406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.35207 (13), -0.34602 (13), -0.32313 (13), -0.32233 (13), -0.31784 (13), -0.31534 (13), -0.30511 (13), -0.29535 (13), -0.29176 (13), -0.29071 (13), -0.28761 (13), -0.28673 (13), -0.28126 (13), -0.26583 (13), -0.26405 (13), -0.25626 (13), -0.25183 (13), -0.24704 (13), -0.24698 (13), -0.24110 (13), 
Length of domains: 32
Time: pickout 0.0025    decision 0.0192    set_bounds 0.0099    solve 0.1412    add 0.0523    
Accumulated time: pickout 0.0246    decision 0.1121    set_bounds 0.0636    solve 0.6879    add 0.2796    
Current (lb-rhs): -0.35207319259643555
693 domains visited
Cumulative time: 1.68916654586792

BaB round 6
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 82] [/input-12, 67] [/input-12, 82] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 82] [/input-12, 67] 
split level 1: [/input-12, 67] [/input-12, 82] [/input-12, 67] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 82] [/input-12, 67] [/input-12, 82] 
split level 2: [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23668599128723145
10 lb beta sum: 0.3184513449668884, worst -0.23616600036621094
Time: prepare 0.0038    bound 0.1292    transfer 0.0012    finalize 0.0016    func 0.1376    
Accumulated time: func 0.8250    prepare 0.0290    bound 0.7614    transfer 0.0112    finalize 0.0112    
all_split False
======================Cut inference begins======================
max lb tensor(0.60772473) min lb tensor(-0.23609543)
Number of Verified Splits: 210 of 256
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 12
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.03610110282897949 
BICCOS Cumulative time: 0.537280797958374
Preprocessing time: 0.0077037811279296875 Inference time: 0.025805234909057617 Add cuts time: 0.002196073532104492 Cut analysis time: 0.0003960132598876953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23610 (16), -0.22898 (16), -0.21127 (16), -0.21054 (16), -0.20708 (16), -0.20019 (16), -0.19766 (16), -0.19750 (16), -0.19226 (16), -0.18873 (16), -0.17902 (16), -0.17568 (16), -0.16039 (16), -0.15911 (16), -0.15691 (16), -0.15543 (16), -0.11160 (16), -0.10514 (16), -0.09093 (16), -0.09047 (16), 
Length of domains: 46
Time: pickout 0.0019    decision 0.0137    set_bounds 0.0108    solve 0.1377    add 0.0620    
Accumulated time: pickout 0.0265    decision 0.1258    set_bounds 0.0744    solve 0.8256    add 0.3416    
Current (lb-rhs): -0.23609542846679688
739 domains visited
Cumulative time: 1.9589519500732422

BaB round 7
batch: 46
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] [/input-12, 94] 
split level 1: [/input-12, 60] [/input-12, 60] [/input-12, 46] [/input-12, 46] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 46] [/input-12, 46] 
split level 2: [/input-12, 46] [/input-12, 46] [/input-12, 60] [/input-12, 60] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 60] [/input-12, 60] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16310405731201172
10 lb beta sum: 0.14825628697872162, worst -0.16280651092529297
Time: prepare 0.0060    bound 0.1363    transfer 0.0027    finalize 0.0030    func 0.1505    
Accumulated time: func 0.9755    prepare 0.0352    bound 0.8977    transfer 0.0139    finalize 0.0142    
all_split False
======================Cut inference begins======================
max lb tensor(0.86951113) min lb tensor(-0.16276360)
Number of Verified Splits: 359 of 368
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 15
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.06436991691589355 
BICCOS Cumulative time: 0.6016507148742676
Preprocessing time: 0.011143684387207031 Inference time: 0.04991650581359863 Add cuts time: 0.002794027328491211 Cut analysis time: 0.0005156993865966797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16276 (19), -0.15526 (19), -0.13397 (19), -0.12380 (19), -0.03734 (19), -0.02653 (19), -0.01658 (19), -0.00742 (19), -0.00040 (19), 
Length of domains: 9
Time: pickout 0.0142    decision 0.0149    set_bounds 0.0149    solve 0.1506    add 0.0396    
Accumulated time: pickout 0.0407    decision 0.1407    set_bounds 0.0893    solve 0.9762    add 0.3812    
Current (lb-rhs): -0.1627635955810547
748 domains visited
Cumulative time: 2.2660999298095703

BaB round 8
batch: 9
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 419] [/input-8, 1553] [/input-8, 1492] [/input-8, 1553] [/input-8, 419] [/input-8, 419] [/input-8, 1492] [/input-8, 1553] [/input-8, 1492] 
split level 1: [/input-8, 1307] [/input-8, 1492] [/input-8, 419] [/input-8, 1492] [/input-8, 1492] [/input-8, 1492] [/input-8, 419] [/input-8, 1492] [/input-8, 419] 
split level 2: [/input-8, 1299] [/input-8, 1489] [/input-8, 1307] [/input-12, 92] [/input-12, 92] [/input-12, 35] [/input-12, 35] [/input-8, 1489] [/input-12, 35] 
split level 3: [/input-12, 35] [/input-8, 1560] [/input-8, 1489] [/input-12, 35] [/input-8, 1299] [/input-12, 92] [/input-8, 1489] [/input-12, 92] [/input-12, 92] 
split level 4: [/input-12, 92] [/input-12, 35] [/input-12, 35] [/input-8, 110] [/input-12, 35] [/input-8, 1299] [/input-8, 1493] [/input-12, 35] [/input-8, 1489] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10159587860107422
10 lb beta sum: 0.035695478320121765, worst -0.10116243362426758
Time: prepare 0.0058    bound 0.1330    transfer 0.0047    finalize 0.0023    func 0.1478    
Accumulated time: func 1.1233    prepare 0.0413    bound 1.0307    transfer 0.0186    finalize 0.0164    
all_split False
======================Cut inference begins======================
max lb tensor(0.12285161) min lb tensor(-0.10107160)
Number of Verified Splits: 211 of 288
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 16
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.04352617263793945 
BICCOS Cumulative time: 0.645176887512207
Preprocessing time: 0.008955955505371094 Inference time: 0.032181501388549805 Add cuts time: 0.0017833709716796875 Cut analysis time: 0.0006053447723388672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10107 (24), -0.09324 (24), -0.09149 (24), -0.08641 (24), -0.08354 (24), -0.07959 (24), -0.07813 (24), -0.07646 (24), -0.07532 (24), -0.07505 (24), -0.07303 (24), -0.07168 (24), -0.06947 (24), -0.06871 (24), -0.06692 (24), -0.06669 (24), -0.06491 (24), -0.06388 (24), -0.06355 (24), -0.06215 (24), 
Length of domains: 77
Time: pickout 0.0020    decision 0.0208    set_bounds 0.0163    solve 0.1478    add 0.0829    
Accumulated time: pickout 0.0427    decision 0.1615    set_bounds 0.1057    solve 1.1241    add 0.4640    
Current (lb-rhs): -0.10107159614562988
825 domains visited
Cumulative time: 2.587388277053833

BaB round 9
batch: 77
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1899] [/input-8, 1236] [/input-8, 1553] [/input-8, 1899] [/input-8, 1236] [/input-8, 1899] [/input-8, 1307] [/input-8, 1899] [/input-8, 1236] [/input-8, 1899] 
split level 1: [/input-8, 1489] [/input-8, 1553] [/input-8, 1524] [/input-8, 1891] [/input-8, 1553] [/input-8, 419] [/input-8, 1553] [/input-8, 1891] [/input-8, 1553] [/input-8, 419] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08790469169616699
10 lb beta sum: 0.006812866777181625, worst -0.08761835098266602
Time: prepare 0.0067    bound 0.1580    transfer 0.0033    finalize 0.0024    func 0.1725    
Accumulated time: func 1.2958    prepare 0.0482    bound 1.1886    transfer 0.0219    finalize 0.0188    
all_split False
======================Cut inference begins======================
max lb tensor(0.29458618) min lb tensor(-0.08742762)
Number of Verified Splits: 171 of 308
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 21
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.0405428409576416 
BICCOS Cumulative time: 0.6857197284698486
Preprocessing time: 0.009743928909301758 Inference time: 0.02841782569885254 Add cuts time: 0.0018267631530761719 Cut analysis time: 0.0005543231964111328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08743 (26), -0.07962 (26), -0.07038 (26), -0.06844 (26), -0.06568 (26), -0.06200 (26), -0.06095 (26), -0.05993 (26), -0.05936 (26), -0.05871 (26), -0.05831 (26), -0.05816 (26), -0.05705 (26), -0.05618 (26), -0.05537 (26), -0.05494 (26), -0.05472 (26), -0.05377 (26), -0.05354 (26), -0.05310 (26), 
Length of domains: 137
Time: pickout 0.0143    decision 0.0163    set_bounds 0.0111    solve 0.1726    add 0.0786    
Accumulated time: pickout 0.0570    decision 0.1778    set_bounds 0.1168    solve 1.2967    add 0.5427    
Current (lb-rhs): -0.08742761611938477
962 domains visited
Cumulative time: 2.9286718368530273

BaB round 10
batch: 137
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 411] [/input-8, 1907] [/input-8, 1907] [/input-8, 1307] [/input-8, 1307] [/input-8, 1307] [/input-8, 1907] [/input-8, 411] [/input-8, 1907] [/input-8, 1907] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07699036598205566
10 lb beta sum: 0.15601739287376404, worst -0.07663536071777344
Time: prepare 0.0056    bound 0.1551    transfer 0.0022    finalize 0.0019    func 0.1667    
Accumulated time: func 1.4626    prepare 0.0540    bound 1.3438    transfer 0.0242    finalize 0.0207    
all_split False
======================Cut inference begins======================
max lb tensor(0.03347182) min lb tensor(-0.07644033)
Number of Verified Splits: 131 of 274
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 22
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.03369307518005371 
BICCOS Cumulative time: 0.7194128036499023
Preprocessing time: 0.008417129516601562 Inference time: 0.022643566131591797 Add cuts time: 0.002043485641479492 Cut analysis time: 0.0005888938903808594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07644 (27), -0.07337 (27), -0.06525 (27), -0.06311 (27), -0.05521 (27), -0.05422 (27), -0.05356 (27), -0.05268 (27), -0.05086 (27), -0.04848 (27), -0.04832 (27), -0.04825 (27), -0.04719 (27), -0.04690 (27), -0.04679 (27), -0.04583 (27), -0.04573 (27), -0.04533 (27), -0.04476 (27), -0.04406 (27), 
Length of domains: 143
Time: pickout 0.0159    decision 0.0173    set_bounds 0.0076    solve 0.1668    add 0.0047    
Accumulated time: pickout 0.0729    decision 0.1951    set_bounds 0.1244    solve 1.4635    add 0.5474    
Current (lb-rhs): -0.07644033432006836
1105 domains visited
Cumulative time: 3.1757309436798096

BaB round 11
batch: 143
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1560] [/input-8, 411] [/input-8, 1907] [/input-8, 1907] [/input-8, 1560] [/input-8, 411] [/input-8, 1907] [/input-8, 1560] [/input-8, 1907] [/input-8, 1907] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07059192657470703
10 lb beta sum: 0.2574005126953125, worst -0.06494419276714325
Time: prepare 0.0057    bound 0.1531    transfer 0.0034    finalize 0.0015    func 0.1657    
Accumulated time: func 1.6282    prepare 0.0599    bound 1.4969    transfer 0.0275    finalize 0.0223    
all_split False
======================Cut inference begins======================
max lb tensor(0.03214216) min lb tensor(-0.06482965)
Number of Verified Splits: 156 of 286
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 26
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.039159536361694336 
BICCOS Cumulative time: 0.7585723400115967
Preprocessing time: 0.008796215057373047 Inference time: 0.027536630630493164 Add cuts time: 0.002265453338623047 Cut analysis time: 0.0005612373352050781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06483 (28), -0.05567 (28), -0.05318 (28), -0.04952 (28), -0.04918 (28), -0.04723 (28), -0.04394 (28), -0.04392 (28), -0.04365 (28), -0.04246 (28), -0.04215 (28), -0.04116 (28), -0.03912 (28), -0.03879 (28), -0.03867 (28), -0.03790 (28), -0.03663 (28), -0.03517 (28), -0.03493 (28), -0.03384 (28), 
Length of domains: 130
Time: pickout 0.0039    decision 0.0201    set_bounds 0.0075    solve 0.1657    add 0.0033    
Accumulated time: pickout 0.0769    decision 0.2152    set_bounds 0.1319    solve 1.6293    add 0.5507    
Current (lb-rhs): -0.06482964754104614
1235 domains visited
Cumulative time: 3.416407585144043

BaB round 12
batch: 130
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1489] [/input-8, 1900] [/input-8, 1524] [/input-8, 1898] [/input-8, 110] [/input-8, 1489] [/input-8, 1900] [/input-8, 1524] [/input-8, 110] [/input-8, 1898] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06358027458190918
10 lb beta sum: 0.5062729120254517, worst -0.042458295822143555
Time: prepare 0.0052    bound 0.1508    transfer 0.0024    finalize 0.0015    func 0.1617    
Accumulated time: func 1.7899    prepare 0.0654    bound 1.6477    transfer 0.0299    finalize 0.0237    
all_split False
======================Cut inference begins======================
max lb tensor(0.24556410) min lb tensor(-0.04240382)
Number of Verified Splits: 174 of 260
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 28
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.04257535934448242 
BICCOS Cumulative time: 0.8011476993560791
Preprocessing time: 0.008396148681640625 Inference time: 0.031048297882080078 Add cuts time: 0.002516508102416992 Cut analysis time: 0.0006144046783447266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04240 (29), -0.03269 (29), -0.03050 (29), -0.03030 (29), -0.02967 (29), -0.02864 (29), -0.02590 (29), -0.02395 (29), -0.02394 (29), -0.02383 (29), -0.02369 (29), -0.02366 (29), -0.02345 (29), -0.02337 (29), -0.02286 (29), -0.02281 (29), -0.02097 (29), -0.02011 (29), -0.01980 (29), -0.01939 (29), 
Length of domains: 86
Time: pickout 0.0034    decision 0.0164    set_bounds 0.0072    solve 0.1618    add 0.0025    
Accumulated time: pickout 0.0802    decision 0.2316    set_bounds 0.1391    solve 1.7910    add 0.5532    
Current (lb-rhs): -0.04240381717681885
1321 domains visited
Cumulative time: 3.6512813568115234

BaB round 13
batch: 86
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1132] [/input-8, 1236] [/input-8, 1900] [/input-8, 1900] [/input-8, 1553] [/input-8, 110] [/input-8, 1236] [/input-8, 1900] [/input-8, 1553] [/input-8, 1236] 
split level 1: [/input-8, 1524] [/input-8, 1489] [/input-8, 1778] [/input-8, 1778] [/input-8, 1524] [/input-8, 1493] [/input-8, 1489] [/input-8, 1778] [/input-8, 1524] [/input-8, 1489] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04444479942321777
10 lb beta sum: 0.3078043460845947, worst -0.02290654182434082
Time: prepare 0.0068    bound 0.1536    transfer 0.0008    finalize 0.0030    func 0.1665    
Accumulated time: func 1.9564    prepare 0.0723    bound 1.8013    transfer 0.0307    finalize 0.0267    
all_split False
======================Cut inference begins======================
max lb tensor(0.26060569) min lb tensor(-0.02273411)
Number of Verified Splits: 308 of 344
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 31
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.07238435745239258 
BICCOS Cumulative time: 0.8735320568084717
Preprocessing time: 0.011211156845092773 Inference time: 0.05686306953430176 Add cuts time: 0.003448963165283203 Cut analysis time: 0.0008611679077148438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02273 (31), -0.01817 (31), -0.01571 (31), -0.01563 (31), -0.01318 (31), -0.01158 (31), -0.01121 (31), -0.01079 (31), -0.01058 (31), -0.00986 (31), -0.00945 (31), -0.00931 (31), -0.00788 (31), -0.00740 (31), -0.00706 (31), -0.00659 (31), -0.00658 (31), -0.00607 (31), -0.00575 (31), -0.00560 (31), 
Length of domains: 36
Time: pickout 0.0027    decision 0.0168    set_bounds 0.0108    solve 0.1666    add 0.0755    
Accumulated time: pickout 0.0829    decision 0.2484    set_bounds 0.1499    solve 1.9576    add 0.6287    
Current (lb-rhs): -0.022734105587005615
1357 domains visited
Cumulative time: 4.004409551620483

BaB round 14
batch: 36
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1947] [/input-8, 1489] [/input-8, 1489] [/input-8, 1489] [/input-8, 1132] [/input-8, 1132] [/input-8, 1898] [/input-8, 1132] [/input-8, 1898] [/input-8, 1489] 
split level 1: [/input-8, 118] [/input-8, 1524] [/input-8, 118] [/input-8, 118] [/input-8, 1307] [/input-8, 1493] [/input-8, 118] [/input-8, 1493] [/input-8, 118] [/input-8, 1524] 
split level 2: [/input-8, 1524] [/input-8, 1493] [/input-8, 1493] [/input-8, 1493] [/input-8, 1524] [/input-8, 110] [/input-8, 1493] [/input-8, 110] [/input-8, 1493] [/input-8, 1493] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.01783609390258789

all verified at 3th iter
Time: prepare 0.0057    bound 0.0299    transfer 0.0006    finalize 0.0023    func 0.0404    
Accumulated time: func 1.9968    prepare 0.0782    bound 1.8311    transfer 0.0313    finalize 0.0290    
all_split False
======================Cut inference begins======================
max lb tensor(0.12370470) min lb tensor(0.00012255)
Number of Verified Splits: 288 of 288
No cut inferred: All or none verified.
Total number of valid cuts: 32.
#cuts 1-3: 31
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.008749008178710938 
BICCOS Cumulative time: 0.8822810649871826
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0073    decision 0.0221    set_bounds 0.0108    solve 0.0408    add 0.0004    
Accumulated time: pickout 0.0903    decision 0.2704    set_bounds 0.1607    solve 1.9985    add 0.6291    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1357 domains visited
Cumulative time: 4.095504283905029


Properties batch 5, size 1
Remaining timeout: 188.24538445472717
Verifying property 5 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.80970979]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.76380539, -32.83649445, -31.00039291, -30.23607826, -30.26369667,
        -30.68313408, -28.22624588, -32.04811478, -34.35570908, -32.35347748],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.80970979]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 724
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 376
Node /15 input 0: size torch.Size([100]) unstable 52
-----------------
# of unstable neurons: 1152
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011563301086425781
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 82] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 65] 
split level 4: [/input-12, 89] 
split level 5: [/input-12, 94] 
split level 6: [/input-12, 1] 
split level 7: [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34911078214645386
10 lb beta sum: 0.0, worst -0.34584516286849976
Time: prepare 0.0019    bound 0.1053    transfer 0.0010    finalize 0.0025    func 0.1126    
Accumulated time: func 0.1126    prepare 0.0023    bound 0.1053    transfer 0.0010    finalize 0.0025    
all_split False
======================Cut inference begins======================
max lb tensor(0.67441738) min lb tensor(-0.34455788)
Number of Verified Splits: 206 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.8097050189971924
10 lb beta sum: 0.0, worst -1.809727668762207
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 4-6: 3
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.20827698707580566 
BICCOS Cumulative time: 0.20827698707580566
Preprocessing time: 0.007521390914916992 Inference time: 0.19899463653564453 Add cuts time: 0.0008995532989501953 Cut analysis time: 0.0008614063262939453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.34456 (8), -0.33801 (8), -0.33329 (8), -0.32664 (8), -0.31650 (8), -0.31065 (8), -0.31011 (8), -0.30417 (8), -0.28472 (8), -0.28156 (8), -0.27762 (8), -0.27345 (8), -0.27282 (8), -0.27021 (8), -0.26957 (8), -0.26680 (8), -0.26540 (8), -0.26215 (8), -0.26081 (8), -0.26050 (8), 
Length of domains: 50
Time: pickout 0.0004    decision 0.0239    set_bounds 0.0168    solve 0.1127    add 0.0627    
Accumulated time: pickout 0.0004    decision 0.0239    set_bounds 0.0168    solve 0.1127    add 0.0627    
Current (lb-rhs): -0.34455788135528564
50 domains visited
Cumulative time: 0.4312305450439453

BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 19] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 19] [/input-12, 29] [/input-12, 29] 
split level 1: [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 95] [/input-12, 19] [/input-12, 29] [/input-12, 95] [/input-12, 19] 
split level 2: [/input-12, 19] [/input-12, 29] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 19] [/input-12, 95] [/input-12, 95] [/input-12, 19] [/input-12, 95] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1297956109046936
10 lb beta sum: 0.0, worst -0.12788015604019165
Time: prepare 0.0056    bound 0.1236    transfer 0.0017    finalize 0.0023    func 0.1364    
Accumulated time: func 0.2490    prepare 0.0082    bound 0.2289    transfer 0.0027    finalize 0.0048    
all_split False
======================Cut inference begins======================
max lb tensor(0.45982730) min lb tensor(-0.12678671)
Number of Verified Splits: 367 of 400
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -1.8145662546157837
10 lb beta sum: 0.0, worst -1.810665249824524
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 4-6: 3
#cuts 7-9: 16
#cuts >= 20: 0
BICCOS time: 0.3456292152404785 
BICCOS Cumulative time: 0.5539062023162842
Preprocessing time: 0.011699438095092773 Inference time: 0.33009886741638184 Add cuts time: 0.002477407455444336 Cut analysis time: 0.0013535022735595703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12679 (11), -0.12137 (11), -0.11865 (11), -0.11327 (11), -0.10549 (11), -0.10007 (11), -0.09728 (11), -0.09177 (11), -0.07927 (11), -0.07638 (11), -0.07290 (11), -0.06946 (11), -0.06683 (11), -0.06432 (11), -0.05776 (11), -0.05291 (11), -0.05215 (11), -0.05042 (11), -0.04523 (11), -0.04509 (11), 
Length of domains: 33
Time: pickout 0.0017    decision 0.0156    set_bounds 0.0157    solve 0.1365    add 0.0084    
Accumulated time: pickout 0.0021    decision 0.0394    set_bounds 0.0325    solve 0.2492    add 0.0712    
Current (lb-rhs): -0.1267867088317871
83 domains visited
Cumulative time: 0.9575767517089844

BaB round 3
batch: 33
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 67] [/input-12, 10] [/input-12, 10] [/input-12, 67] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 1: [/input-12, 67] [/input-12, 67] [/input-12, 62] [/input-12, 10] [/input-12, 67] [/input-12, 67] [/input-12, 10] [/input-12, 67] [/input-12, 67] [/input-12, 67] 
split level 2: [/input-12, 62] [/input-12, 62] [/input-12, 67] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] [/input-12, 62] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.06829440593719482

all verified at 0th iter
Time: prepare 0.0038    bound 0.0059    transfer 0.0029    finalize 0.0013    func 0.0158    
Accumulated time: func 0.2649    prepare 0.0122    bound 0.2348    transfer 0.0056    finalize 0.0061    
all_split False
======================Cut inference begins======================
max lb tensor(0.26920068) min lb tensor(0.06829441)
Number of Verified Splits: 264 of 264
No cut inferred: All or none verified.
Total number of valid cuts: 19.
#cuts 4-6: 3
#cuts 7-9: 16
#cuts >= 20: 0
BICCOS time: 0.00809478759765625 
BICCOS Cumulative time: 0.5620009899139404
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0019    decision 0.0131    set_bounds 0.0107    solve 0.0159    add 0.0003    
Accumulated time: pickout 0.0040    decision 0.0525    set_bounds 0.0431    solve 0.2651    add 0.0715    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
83 domains visited
Cumulative time: 1.0084412097930908


Properties batch 6, size 1
Remaining timeout: 186.9394931793213
Verifying property 6 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-1.39982533]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.76380539, -32.83649445, -31.00039291, -30.23607826, -30.26369667,
        -30.68313408, -28.22624588, -32.04811478, -34.35570908, -32.35347748],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-1.39982533]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 724
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 376
Node /15 input 0: size torch.Size([100]) unstable 52
-----------------
# of unstable neurons: 1152
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011205673217773438
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 14] 
split level 1: [/input-12, 29] 
split level 2: [/input-12, 54] 
split level 3: [/input-12, 67] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 50] 
split level 6: [/input-12, 40] 
split level 7: [/input-12, 61] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.4594351053237915

all verified at 0th iter
Time: prepare 0.0019    bound 0.0043    transfer 0.0015    finalize 0.0019    func 0.0114    
Accumulated time: func 0.0114    prepare 0.0023    bound 0.0043    transfer 0.0015    finalize 0.0019    
all_split False
======================Cut inference begins======================
max lb tensor(2.39499903) min lb tensor(0.45943511)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006941080093383789 
BICCOS Cumulative time: 0.006941080093383789
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0164    solve 0.0114    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0164    solve 0.0114    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06381487846374512


Properties batch 7, size 1
Remaining timeout: 186.67105889320374
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 186.67098808288574
Verifying property 8 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-2.34886909]], device='cuda:0') need to verify.
Model prediction is: tensor([-33.76380539, -32.83649445, -31.00039291, -30.23607826, -30.26369667,
        -30.68313408, -28.22624588, -32.04811478, -34.35570908, -32.35347748],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-2.34886909]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 724
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 376
Node /15 input 0: size torch.Size([100]) unstable 52
-----------------
# of unstable neurons: 1152
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011610984802246094
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 4] 
split level 1: [/input-12, 97] 
split level 2: [/input-12, 45] 
split level 3: [/input-12, 19] 
split level 4: [/input-12, 11] 
split level 5: [/input-12, 31] 
split level 6: [/input-12, 1] 
split level 7: [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16469192504882812
10 lb beta sum: 0.0, worst -0.15475082397460938
Time: prepare 0.0019    bound 0.1031    transfer 0.0006    finalize 0.0014    func 0.1089    
Accumulated time: func 0.1089    prepare 0.0023    bound 0.1031    transfer 0.0006    finalize 0.0014    
all_split False
======================Cut inference begins======================
max lb tensor(2.53836966) min lb tensor(-0.15055084)
Number of Verified Splits: 252 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -2.3488640785217285
10 lb beta sum: 0.0, worst -2.348947763442993
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 2
#cuts 4-6: 8
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.21686029434204102 
BICCOS Cumulative time: 0.21686029434204102
Preprocessing time: 0.006998777389526367 Inference time: 0.20479750633239746 Add cuts time: 0.004393100738525391 Cut analysis time: 0.0006709098815917969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15055 (8), -0.14724 (8), -0.12076 (8), -0.11851 (8), 
Length of domains: 4
Time: pickout 0.0004    decision 0.0237    set_bounds 0.0164    solve 0.1090    add 0.0359    
Accumulated time: pickout 0.0004    decision 0.0237    set_bounds 0.0164    solve 0.1090    add 0.0359    
Current (lb-rhs): -0.15055084228515625
4 domains visited
Cumulative time: 0.41249728202819824

BaB round 2
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 81] [/input-12, 81] [/input-12, 81] [/input-12, 81] 
split level 1: [/input-12, 22] [/input-12, 22] [/input-12, 22] [/input-12, 22] 
split level 2: [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
split level 3: [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] 
split level 4: [/input-12, 35] [/input-12, 35] [/input-12, 35] [/input-12, 35] 
split level 5: [/input-12, 48] [/input-12, 48] [/input-12, 48] [/input-12, 48] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.2651848793029785

all verified at 0th iter
Time: prepare 0.0037    bound 0.0072    transfer 0.0005    finalize 0.0013    func 0.0144    
Accumulated time: func 0.1233    prepare 0.0064    bound 0.1104    transfer 0.0011    finalize 0.0027    
all_split False
======================Cut inference begins======================
max lb tensor(0.68811178) min lb tensor(0.26518488)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 12.
#cuts 1-3: 2
#cuts 4-6: 8
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.0075283050537109375 
BICCOS Cumulative time: 0.22438859939575195
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0014    decision 0.0194    set_bounds 0.0165    solve 0.0145    add 0.0004    
Accumulated time: pickout 0.0018    decision 0.0431    set_bounds 0.0329    solve 0.1234    add 0.0363    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.4752035140991211

Result: safe in 14.0652 seconds
############# Summary #############
Final verified acc: 47.0% (total 200 examples)
Problem instances count: 200 , total verified (safe/unsat): 94 , total falsified (unsafe/sat): 94 , timeout: 12
mean time for ALL instances (total 200):15.848400625312207, max time: 219.6308126449585
mean time for verified SAFE instances(total 94): 6.6888704477472505, max time: 177.6754868030548
mean time for verified (SAFE + UNSAFE) instances (total 188): 3.384602892906108, max time: [7.948908090591431, 5.530361890792847, 0.06718182563781738, 2.8803465366363525, 0.08777618408203125, 0.08661437034606934, 7.065868854522705, 3.833284616470337, 0.07711958885192871, 0.08042621612548828, 0.2516608238220215, 5.690032482147217, 0.081390380859375, 0.06684207916259766, 0.06693530082702637, 0.06825828552246094, 0.0996086597442627, 5.894415378570557, 0.06372833251953125, 2.6678357124328613, 39.77757024765015, 0.05711507797241211, 4.109904050827026, 0.06651663780212402, 0.07903742790222168, 0.0759742259979248, 12.93028712272644, 8.19011402130127, 5.431145668029785, 4.579040288925171, 0.0863494873046875, 2.5496647357940674, 0.23162269592285156, 2.9115867614746094, 0.07683777809143066, 0.28966498374938965, 0.09049534797668457, 3.6125919818878174, 3.6497552394866943, 0.07401847839355469, 12.143890619277954, 0.0855565071105957, 0.06455349922180176, 15.833147764205933, 5.22335147857666, 0.07171034812927246, 2.954347848892212, 0.07302427291870117, 0.06847476959228516, 6.3597142696380615, 4.064177751541138, 0.07201552391052246, 2.5747573375701904, 0.06879568099975586, 0.03403019905090332, 0.08158206939697266, 0.03423571586608887, 0.0709683895111084, 0.07015562057495117, 2.6176302433013916, 4.562620639801025, 5.199474573135376, 0.07776880264282227, 2.9463562965393066, 2.9093151092529297, 0.06894254684448242, 0.07757306098937988, 0.0643301010131836, 16.961125135421753, 177.6754868030548, 0.0563664436340332, 0.050589561462402344, 10.85992693901062, 0.05573391914367676, 2.6521108150482178, 0.08054494857788086, 0.06514239311218262, 0.056720733642578125, 5.685738563537598, 23.79915690422058, 0.0379030704498291, 2.7759058475494385, 0.06349706649780273, 0.2812159061431885, 0.07930254936218262, 2.87791109085083, 0.06922483444213867, 122.0852677822113, 6.533921718597412, 0.043656110763549805, 20.24867343902588, 21.569762229919434, 0.07334780693054199, 14.065200567245483]
mean time for verified SAFE + TIMEOUT instances (total 106): 29.831403412908877, max time: [215.95225977897644, 211.9760959148407, 219.6308126449585, 209.40665745735168, 208.1915988922119, 212.52463722229004, 204.15154695510864, 208.19065189361572, 205.83368587493896, 216.4398899078369, 214.3531174659729, 206.72398567199707] 
mean time for verified UNSAFE instances (total 94): 0.08033533806496478, max time: 0.1293797492980957
safe (total 43), index: [0, 7, 13, 18, 19, 24, 35, 39, 40, 42, 52, 54, 55, 59, 64, 70, 75, 76, 83, 97, 102, 107, 111, 112, 115, 135, 136, 139, 142, 143, 150, 152, 160, 166, 172, 174, 178, 185, 188, 189, 191, 192, 199]
unsafe-pgd (total 94), index: [1, 3, 4, 5, 6, 9, 10, 12, 15, 16, 21, 25, 29, 32, 34, 36, 38, 43, 44, 45, 46, 48, 50, 53, 56, 57, 58, 61, 63, 65, 66, 69, 72, 77, 78, 80, 81, 82, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 105, 108, 113, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 137, 138, 141, 144, 145, 149, 151, 154, 155, 156, 158, 159, 163, 164, 165, 167, 170, 173, 175, 176, 181, 183, 184, 195, 196, 197, 198]
unknown (total 12), index: [2, 11, 26, 60, 67, 101, 103, 106, 116, 162, 187, 194]
safe-incomplete (total 51), index: [8, 14, 17, 20, 22, 23, 27, 28, 30, 31, 33, 37, 41, 47, 49, 51, 62, 68, 71, 73, 74, 79, 86, 89, 104, 109, 110, 114, 117, 118, 121, 131, 132, 133, 140, 146, 147, 148, 153, 157, 161, 168, 169, 171, 177, 179, 180, 182, 186, 190, 193]
